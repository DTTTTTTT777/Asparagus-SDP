{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                213,
                119
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                783,
                207
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1115,
                273
            ],
            "transfer(address,uint256)": [
                1014,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "getBlockNumber()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10148,
                26
            ],
            "claimTokens(address)": [
                2808,
                537
            ],
            "totalSupply()": [
                935,
                141
            ],
            "allowance(address,address)": [
                2689,
                515
            ],
            "transferFrom(address,address,uint256)": [
                978,
                163
            ],
            "approve(address,uint256)": [
                791,
                97
            ],
            "totalSupplyAt(uint256)": [
                10148,
                26
            ],
            "enableTransfers(bool)": [
                2962,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1468,
                273
            ],
            "changeController(address)": [
                6213,
                889
            ],
            "balanceOf(address)": [
                8639,
                847
            ],
            "generateTokens(address,uint256)": [
                1916,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2417,
                471
            ],
            "destroyTokens(address,uint256)": [
                2588,
                493
            ],
            "transfer(address,uint256)": [
                8896,
                996
            ]
        },
        "block_CALL_mapping": {
            "block9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8639": [
                "token.balanceOf(this)"
            ],
            "block5997": [
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )"
            ],
            "block9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump8896": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5997": [
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )",
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )"
            ],
            "block3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump8639": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )"
            ],
            "jump564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )"
            ],
            "jump564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block8896": [
                "token.transfer(controller, balance)"
            ],
            "block5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8350": [
                "controller.transfer(this.balance)"
            ],
            "jump8350": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump6213": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6213": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "FCCContribution": {
        "function_list": [
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "FCCContribution()",
            "initialize(address,address,uint256,uint256,uint256,uint256,address,address,uint256)",
            "changeRatio(uint256,uint256)",
            "fallback()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "issueTokenToAddress(address,uint256,uint256)",
            "finalize()",
            "isContract(address)",
            "time()",
            "tokensIssued()",
            "getBlockNumber()",
            "claimTokens(address)",
            "pauseContribution()",
            "resumeContribution()",
            "today()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "FCCContribution()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "initialize(address,address,uint256,uint256,uint256,uint256,address,address,uint256)": {
                "argument": {
                    "_startTimeEarlyBird": "uint256",
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_dayCycle": "uint256",
                    "_proportion": "uint256"
                },
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "changeRatio(uint256,uint256)": {
                "argument": {
                    "_day": "uint256",
                    "_ratio": "uint256"
                },
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "issueTokenToAddress(address,uint256,uint256)": {
                "argument": {
                    "_amount": "uint256",
                    "_ethAmount": "uint256"
                },
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "time()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "tokensIssued()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "pauseContribution()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "resumeContribution()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "today()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MIN_FUND": "uint256",
                    "CRAWDSALE_END_DAY": "uint256",
                    "dayCycle": "uint256",
                    "startTimeEarlyBird": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256",
                    "ratio": "uint256[]",
                    "proportion": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proxyPayment(address)": [
                2648,
                748
            ],
            "claimTokens(address)": [
                8150,
                925
            ],
            "initialize(address,address,uint256,uint256,uint256,uint256,address,address,uint256)": [
                2235,
                682
            ],
            "tokensIssued()": [
                1538,
                440
            ],
            "onApprove(address,address,uint256)": [
                2448,
                704
            ],
            "issueTokenToAddress(address,uint256,uint256)": [
                1581,
                462
            ],
            "changeOwner(address)": [
                1842,
                528
            ],
            "onTransfer(address,address,uint256)": [
                885,
                154
            ],
            "changeRatio(uint256,uint256)": [
                1064,
                220
            ],
            "today()": [
                1975,
                594
            ],
            "finalize()": [
                1041,
                198
            ],
            "pauseContribution()": [
                1018,
                176
            ],
            "resumeContribution()": [
                1952,
                572
            ],
            "time()": [
                583,
                22
            ],
            "acceptOwnership()": [
                1515,
                418
            ]
        },
        "block_CALL_mapping": {
            "jump3707": [
                "FCC.generateTokens(_account,tokenSaling)",
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "block5243": [
                "FCC.totalSupply()"
            ],
            "jump3707_0": [
                "FCC.generateTokens(_account,tokenSaling)",
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "jump3707_1": [
                "FCC.generateTokens(_account,tokenSaling)",
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "block6938": [
                "FCC.controller()"
            ],
            "jump5243": [
                "FCC.totalSupply()",
                "FCC.totalSupply()"
            ],
            "jump3340_0": [
                "destEthFoundationDev.transfer(msg.value)",
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block3340_1": [
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block8207": [
                "owner.transfer(this.balance)"
            ],
            "jump8207": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump6938": [
                "FCC.controller()",
                "FCC.controller()"
            ],
            "block7167": [
                "FCC.decimals()"
            ],
            "jump6710": [
                "FCC.totalSupply()",
                "FCC.totalSupply()"
            ],
            "jump3227_1": [
                "destEthFoundation.transfer(msg.value-toDev)",
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "block8753": [
                "token.transfer(owner, balance)"
            ],
            "jump3227": [
                "destEthFoundation.transfer(msg.value-toDev)",
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "jump3120_1": [
                "destEthFoundationDev.transfer(toDev)",
                "destEthFoundationDev.transfer(toDev)"
            ],
            "jump3120_0": [
                "destEthFoundationDev.transfer(toDev)",
                "destEthFoundationDev.transfer(toDev)"
            ],
            "jump3340": [
                "destEthFoundationDev.transfer(msg.value)",
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block3227": [
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "block3707_1": [
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "block3340": [
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block3707_0": [
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "block3340_0": [
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block6710": [
                "FCC.totalSupply()"
            ],
            "block3227_1": [
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "block3227_0": [
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "jump7874": [
                "FCC.controller()",
                "FCC.controller()"
            ],
            "jump3120": [
                "destEthFoundationDev.transfer(toDev)",
                "destEthFoundationDev.transfer(toDev)"
            ],
            "jump4615": [
                "FCC.changeController(fccController)",
                "FCC.changeController(fccController)"
            ],
            "jump8496": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block8496": [
                "token.balanceOf(this)"
            ],
            "jump3227_0": [
                "destEthFoundation.transfer(msg.value-toDev)",
                "destEthFoundation.transfer(msg.value-toDev)"
            ],
            "block3707": [
                "FCC.generateTokens(_account,tokenSaling)"
            ],
            "block8150": [
                "FCC.claimTokens(_token)"
            ],
            "block7874": [
                "FCC.controller()"
            ],
            "jump5667": [
                "FCC.generateTokens(_account, _amount)",
                "FCC.generateTokens(_account, _amount)"
            ],
            "jump7167": [
                "FCC.decimals()",
                "FCC.decimals()"
            ],
            "jump3340_1": [
                "destEthFoundationDev.transfer(msg.value)",
                "destEthFoundationDev.transfer(msg.value)"
            ],
            "block4615": [
                "FCC.changeController(fccController)"
            ],
            "block5667": [
                "FCC.generateTokens(_account, _amount)"
            ],
            "jump8753": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "block3120_1": [
                "destEthFoundationDev.transfer(toDev)"
            ],
            "block3120_0": [
                "destEthFoundationDev.transfer(toDev)"
            ],
            "block3120": [
                "destEthFoundationDev.transfer(toDev)"
            ],
            "jump8150": [
                "FCC.claimTokens(_token)",
                "FCC.claimTokens(_token)"
            ]
        }
    },
    "FCCPlaceHolder": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "FCCPlaceHolder(address,address,address)",
            "changeController(address)",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "transferable(address)",
            "getTime()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "FCCPlaceHolder(address,address,address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "transferable(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "getTime()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proxyPayment(address)": [
                1174,
                339
            ],
            "claimTokens(address)": [
                2728,
                925
            ],
            "changeController(address)": [
                1532,
                926
            ],
            "onTransfer(address,address,uint256)": [
                269,
                97
            ],
            "onApprove(address,address,uint256)": [
                974,
                295
            ],
            "changeOwner(address)": [
                777,
                229
            ],
            "acceptOwnership()": [
                576,
                163
            ]
        },
        "block_CALL_mapping": {
            "block3074": [
                "token.balanceOf(this)"
            ],
            "block3689": [
                "contribution.finalizedTime()"
            ],
            "block2728": [
                "fcc.claimTokens(_token)"
            ],
            "jump3689": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "jump3331": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "block3331": [
                "token.transfer(owner, balance)"
            ],
            "block3689_0": [
                "contribution.finalizedTime()"
            ],
            "jump2785": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump3689_0": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "jump1532": [
                "fcc.changeController(_newController)",
                "fcc.changeController(_newController)"
            ],
            "jump2452": [
                "fcc.controller()",
                "fcc.controller()"
            ],
            "block2785": [
                "owner.transfer(this.balance)"
            ],
            "block1532": [
                "fcc.changeController(_newController)"
            ],
            "jump3074": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2452": [
                "fcc.controller()"
            ],
            "jump2728": [
                "fcc.claimTokens(_token)",
                "fcc.claimTokens(_token)"
            ]
        }
    }
}