{
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                413,
                141
            ],
            "transfer(address,uint256)": [
                545,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "transferOwnership(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenVault": {
        "function_list": [
            "transferOwnership(address)",
            "withdrawTokenTo(address,address,uint256)",
            "withdrawToken(address)",
            "emtpyTo(address,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokenTo(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "withdrawToken(address)": {
                "argument": {},
                "contract": {}
            },
            "emtpyTo(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "withdrawTokenTo(address,address,uint256)": [
                103,
                75
            ],
            "withdrawToken(address)": [
                236,
                97
            ],
            "emtpyTo(address,address)": [
                327,
                119
            ],
            "transferOwnership(address)": [
                450,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump767_0": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ],
            "jump1299": [
                "Token(token).balanceOf(self)",
                "Token(token).balanceOf(self)"
            ],
            "jump767_1": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ],
            "block767_0": [
                "Token(token).transfer(to, amount)"
            ],
            "block767_1": [
                "Token(token).transfer(to, amount)"
            ],
            "block1032": [
                "Token(token).balanceOf(self)"
            ],
            "block767": [
                "Token(token).transfer(to, amount)"
            ],
            "jump767": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ],
            "jump1032": [
                "Token(token).balanceOf(self)",
                "Token(token).balanceOf(self)"
            ],
            "block1299": [
                "Token(token).balanceOf(self)"
            ]
        }
    },
    "Vault": {
        "function_list": [
            "withdrawTokenTo(address,address,uint256)",
            "withdrawToken(address)",
            "emtpyTo(address,address)",
            "transferOwnership(address)",
            "initVault()",
            "MinimumDeposit()",
            "ReleaseDate()",
            "WithdrawEnabled()",
            "fallback()",
            "deposit()",
            "setRelease(uint256)",
            "withdraw(address,uint256)",
            "lock()",
            "kill()",
            "getOwner()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "withdrawTokenTo(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "withdrawToken(address)": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "emtpyTo(address,address)": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "initVault()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "MinimumDeposit()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "ReleaseDate()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "WithdrawEnabled()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "setRelease(uint256)": {
                "argument": {
                    "newDate": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "withdraw(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "lock()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "getOwner()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "initVault()": [
                472,
                141
            ],
            "withdrawTokenTo(address,address,uint256)": [
                229,
                75
            ],
            "WithdrawEnabled()": [
                826,
                251
            ],
            "kill()": [
                449,
                119
            ],
            "deposit()": [
                961,
                317
            ],
            "getOwner()": [
                482,
                163
            ],
            "withdrawToken(address)": [
                569,
                185
            ],
            "lock()": [
                1115,
                383
            ],
            "ReleaseDate()": [
                660,
                207
            ],
            "withdraw(address,uint256)": [
                1038,
                361
            ],
            "setRelease(uint256)": [
                916,
                295
            ],
            "MinimumDeposit()": [
                873,
                273
            ],
            "emtpyTo(address,address)": [
                703,
                229
            ],
            "transferOwnership(address)": [
                971,
                339
            ]
        },
        "block_CALL_mapping": {
            "block1572_1": [
                "Token(token).transfer(to, amount)"
            ],
            "block1572": [
                "Token(token).transfer(to, amount)"
            ],
            "block2996": [
                "to.transfer(amount)"
            ],
            "jump1572_0": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ],
            "jump2203": [
                "Token(token).balanceOf(self)",
                "Token(token).balanceOf(self)"
            ],
            "block2480": [
                "Token(token).balanceOf(self)"
            ],
            "jump2996": [
                "to.transfer(amount)",
                "to.transfer(amount)"
            ],
            "block2203": [
                "Token(token).balanceOf(self)"
            ],
            "block1572_0": [
                "Token(token).transfer(to, amount)"
            ],
            "jump1572": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ],
            "jump2480": [
                "Token(token).balanceOf(self)",
                "Token(token).balanceOf(self)"
            ],
            "jump1572_1": [
                "Token(token).transfer(to, amount)",
                "Token(token).transfer(to, amount)"
            ]
        }
    }
}