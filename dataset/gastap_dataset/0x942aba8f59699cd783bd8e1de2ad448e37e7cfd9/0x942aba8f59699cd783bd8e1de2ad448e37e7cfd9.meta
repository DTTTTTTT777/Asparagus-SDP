{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                481,
                119
            ],
            "symbol()": [
                1361,
                383
            ],
            "name()": [
                337,
                97
            ],
            "totalSupply()": [
                582,
                141
            ],
            "allowance(address,address)": [
                1897,
                493
            ],
            "balanceOf(address)": [
                1140,
                317
            ],
            "transferFrom(address,address,uint256)": [
                672,
                185
            ],
            "transfer(address,uint256)": [
                1584,
                427
            ],
            "decimals()": [
                805,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ethex": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "Ethex(address,address,uint256,uint256)",
            "fallback()",
            "changeAdmin(address)",
            "changeFeeAccount(address)",
            "changeBuyFee(uint256)",
            "changeSellFee(uint256)",
            "sellOrder(address,uint256,uint256)",
            "buyOrder(address,uint256,uint256)",
            "cancelSellOrder(address,uint256)",
            "cancelBuyOrder(address,uint256)",
            "totalBuyPrice(uint256,uint256)",
            "takeBuy(address,uint256,uint256,address)",
            "totalSellPrice(uint256,uint256)",
            "takeSell(address,uint256,uint256,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "Ethex(address,address,uint256,uint256)": {
                "argument": {
                    "buyFee_": "uint256",
                    "sellFee_": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "changeFeeAccount(address)": {
                "argument": {},
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "changeBuyFee(uint256)": {
                "argument": {
                    "buyFee_": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "changeSellFee(uint256)": {
                "argument": {
                    "sellFee_": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "sellOrder(address,uint256,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "buyOrder(address,uint256,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "cancelSellOrder(address,uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "cancelBuyOrder(address,uint256)": {
                "argument": {
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "totalBuyPrice(uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "takeBuy(address,uint256,uint256,address)": {
                "argument": {
                    "amount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "totalSellPrice(uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            },
            "takeSell(address,uint256,uint256,address)": {
                "argument": {
                    "amount": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "sellFee": "uint256",
                    "buyFee": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buyOrder(address,uint256,uint256)": [
                1046,
                317
            ],
            "changeBuyFee(uint256)": [
                1262,
                383
            ],
            "changeFeeAccount(address)": [
                979,
                295
            ],
            "totalSellPrice(uint256,uint256)": [
                1187,
                361
            ],
            "cancelBuyOrder(address,uint256)": [
                902,
                273
            ],
            "changeSellFee(uint256)": [
                770,
                229
            ],
            "cancelSellOrder(address,uint256)": [
                426,
                119
            ],
            "takeBuy(address,uint256,uint256,address)": [
                1307,
                405
            ],
            "sellOrder(address,uint256,uint256)": [
                339,
                97
            ],
            "totalBuyPrice(uint256,uint256)": [
                652,
                185
            ],
            "takeSell(address,uint256,uint256,address)": [
                546,
                163
            ],
            "changeAdmin(address)": [
                1120,
                339
            ]
        },
        "block_CALL_mapping": {
            "block6467": [
                "Token(token).transferFrom(msg.sender,buyer,amount)"
            ],
            "jump3330": [
                "Token(token).transferFrom(seller,msg.sender,amount)",
                "Token(token).transferFrom(seller,msg.sender,amount)"
            ],
            "block3532": [
                "feeAccount.send(totalFee)"
            ],
            "block6182": [
                "Token(token).allowance(msg.sender,this)"
            ],
            "block1593": [
                "sha256(token, price, msg.sender)"
            ],
            "jump2073": [
                "sha256(token, price, msg.sender)",
                "sha256(token, price, msg.sender)"
            ],
            "block3437": [
                "seller.send(totalPrice)"
            ],
            "jump6717": [
                "msg.sender.send(leftOver)",
                "msg.sender.send(leftOver)"
            ],
            "jump1593": [
                "sha256(token, price, msg.sender)",
                "sha256(token, price, msg.sender)"
            ],
            "jump4786": [
                "sha256(token, price,  msg.sender)",
                "sha256(token, price,  msg.sender)"
            ],
            "jump6182": [
                "Token(token).allowance(msg.sender,this)",
                "Token(token).allowance(msg.sender,this)"
            ],
            "block5635": [
                "sha256(token, price, buyer)"
            ],
            "block2513": [
                "sha256(token, price, seller)"
            ],
            "block4311": [
                "msg.sender.call.value(remain)()"
            ],
            "block6717": [
                "msg.sender.send(leftOver)"
            ],
            "jump2513": [
                "sha256(token, price, seller)",
                "sha256(token, price, seller)"
            ],
            "jump5635": [
                "sha256(token, price, buyer)",
                "sha256(token, price, buyer)"
            ],
            "jump3532": [
                "feeAccount.send(totalFee)",
                "feeAccount.send(totalFee)"
            ],
            "block4786": [
                "sha256(token, price,  msg.sender)"
            ],
            "jump3045": [
                "Token(token).allowance(seller,this)",
                "Token(token).allowance(seller,this)"
            ],
            "jump3437": [
                "seller.send(totalPrice)",
                "seller.send(totalPrice)"
            ],
            "jump6573": [
                "feeAccount.send(totalFee)",
                "feeAccount.send(totalFee)"
            ],
            "jump4106": [
                "sha256(token, price, msg.sender)",
                "sha256(token, price, msg.sender)"
            ],
            "block4106": [
                "sha256(token, price, msg.sender)"
            ],
            "jump6467": [
                "Token(token).transferFrom(msg.sender,buyer,amount)",
                "Token(token).transferFrom(msg.sender,buyer,amount)"
            ],
            "jump4311": [
                "msg.sender.call.value(remain)()",
                "msg.sender.call.value(remain)()"
            ],
            "block2073": [
                "sha256(token, price, msg.sender)"
            ],
            "block6573": [
                "feeAccount.send(totalFee)"
            ],
            "block3330": [
                "Token(token).transferFrom(seller,msg.sender,amount)"
            ],
            "block3045": [
                "Token(token).allowance(seller,this)"
            ]
        }
    }
}