{
    "usingOraclize": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            }
        },
        "function_block_mapping": {
            "__callback(bytes32,string,bytes)": [
                200,
                97
            ],
            "__callback(bytes32,string)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "setContractOwner(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "setContractOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setContractOwner(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Cillionaire": {
        "function_list": [
            "oraclize_setNetwork(uint8)",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "owned()",
            "setContractOwner(address)",
            "Cillionaire()",
            "startRound(address)",
            "donate()",
            "__callback(bytes32,string,bytes)",
            "startNextRound()",
            "deposit()",
            "withdraw()",
            "setNextRoundMaxDonors(uint256)",
            "setNextRoundDuration(uint256)",
            "setNextRoundDonation(uint256)",
            "setNextRoundFee(uint256)",
            "setOraclizeCallbackGas(uint256)",
            "setOraclizeCallbackGasPrice(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork(uint8)": {
                "argument": {
                    "networkID": "uint8"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "_queryId": "bytes32",
                    "_result": "string",
                    "_proof": "bytes"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setContractOwner(address)": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "Cillionaire()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "startRound(address)": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "donate()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "startNextRound()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setNextRoundMaxDonors(uint256)": {
                "argument": {
                    "_nextRoundMaxDonors": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setNextRoundDuration(uint256)": {
                "argument": {
                    "_nextRoundDuration": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setNextRoundDonation(uint256)": {
                "argument": {
                    "_nextRoundDonation": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setNextRoundFee(uint256)": {
                "argument": {
                    "_nextRoundFee": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setOraclizeCallbackGas(uint256)": {
                "argument": {
                    "_oraclizeCallbackGas": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "setOraclizeCallbackGasPrice(uint256)": {
                "argument": {
                    "_oraclizeCallbackGasPrice": "uint256"
                },
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "maxFeePercentage": "uint256",
                    "retainBalance": "uint256",
                    "donors": "address[]",
                    "startTimestamp": "uint256",
                    "endTimestamp": "uint256",
                    "maxDonors": "uint256",
                    "duration": "uint256",
                    "donation": "uint256",
                    "fee": "uint256",
                    "donationSum": "uint256",
                    "nextRoundMaxDonors": "uint256",
                    "nextRoundDuration": "uint256",
                    "nextRoundDonation": "uint256",
                    "nextRoundFee": "uint256",
                    "oraclizeCallbackGas": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "startNextRound()": [
                881,
                185
            ],
            "setNextRoundDonation(uint256)": [
                1199,
                339
            ],
            "setOraclizeCallbackGas(uint256)": [
                1950,
                713
            ],
            "setNextRoundFee(uint256)": [
                1895,
                669
            ],
            "__callback(bytes32,string,bytes)": [
                692,
                163
            ],
            "setOraclizeCallbackGasPrice(uint256)": [
                914,
                229
            ],
            "setContractOwner(address)": [
                1417,
                427
            ],
            "withdraw()": [
                891,
                207
            ],
            "deposit()": [
                1670,
                537
            ],
            "setNextRoundDuration(uint256)": [
                959,
                251
            ],
            "__callback(bytes32,string)": [
                486,
                119
            ],
            "setNextRoundMaxDonors(uint256)": [
                1995,
                735
            ],
            "donate()": [
                1940,
                691
            ]
        },
        "block_CALL_mapping": {
            "block9768": [
                "OAR.getAddress()"
            ],
            "jump6996_0": [
                "sha256(sig1)",
                "sha256(sig1)"
            ],
            "block10036": [
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "jump15416_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block6996": [
                "sha256(sig1)"
            ],
            "jump5944": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump13680": [
                "sha256(tosign3)",
                "sha256(tosign3)"
            ],
            "jump5093": [
                "beneficiary.transfer(amountAfterFee)",
                "beneficiary.transfer(amountAfterFee)"
            ],
            "jump15793": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block13020_0": [
                "sha256(tosign2)"
            ],
            "jump7790_0": [
                "sha256(tosign1)",
                "sha256(tosign1)"
            ],
            "jump6450": [
                "sha256(context_name, queryId)",
                "sha256(context_name, queryId)"
            ],
            "jump6996": [
                "sha256(sig1)",
                "sha256(sig1)"
            ],
            "block6996_0": [
                "sha256(sig1)"
            ],
            "block15079": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block16268_0": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block16268": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block13020": [
                "sha256(tosign2)"
            ],
            "block6450_0": [
                "sha256(context_name, queryId)"
            ],
            "jump14078_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block7350_0": [
                "sha256(sessionPubkey)"
            ],
            "jump7350_0": [
                "sha256(sessionPubkey)",
                "sha256(sessionPubkey)"
            ],
            "block15079_3": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block15079_9": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump9768": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block15416": [
                "OAR.getAddress()"
            ],
            "jump16268": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)",
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block15079_2": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump7350": [
                "sha256(sessionPubkey)",
                "sha256(sessionPubkey)"
            ],
            "block15079_0": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block9099": [
                "sha256(args[0])"
            ],
            "block15079_6": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block15079_7": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block15079_4": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block15079_5": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block15079_8": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump10036": [
                "oraclize.setCustomGasPrice(gasPrice)",
                "oraclize.setCustomGasPrice(gasPrice)"
            ],
            "block5944": [
                "oraclize.cbAddress()"
            ],
            "jump9099": [
                "sha256(args[0])",
                "sha256(args[0])"
            ],
            "jump6450_0": [
                "sha256(context_name, queryId)",
                "sha256(context_name, queryId)"
            ],
            "block15416_0": [
                "OAR.getAddress()"
            ],
            "block15079_10": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump13020_0": [
                "sha256(tosign2)",
                "sha256(tosign2)"
            ],
            "jump5687": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block14335": [
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "jump16268_0": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)",
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "jump7790": [
                "sha256(tosign1)",
                "sha256(tosign1)"
            ],
            "block3386": [
                "owner.transfer(amount)"
            ],
            "block14667_0": [
                "OAR.getAddress()"
            ],
            "block5687_0": [
                "OAR.getAddress()"
            ],
            "jump13020": [
                "sha256(tosign2)",
                "sha256(tosign2)"
            ],
            "jump15793_0": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump3386": [
                "owner.transfer(amount)",
                "owner.transfer(amount)"
            ],
            "jump14335": [
                "oraclize.randomDS_getSessionPubKeyHash()",
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "block5093": [
                "beneficiary.transfer(amountAfterFee)"
            ],
            "block14078_0": [
                "OAR.getAddress()"
            ],
            "block14667": [
                "OAR.getAddress()"
            ],
            "jump14335_0": [
                "oraclize.randomDS_getSessionPubKeyHash()",
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "block7790": [
                "sha256(tosign1)"
            ],
            "block15079_1": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block13680": [
                "sha256(tosign3)"
            ],
            "jump15416": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block15793_0": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump14667_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block14335_0": [
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "block14078": [
                "OAR.getAddress()"
            ],
            "block13680_0": [
                "sha256(tosign3)"
            ],
            "block6450": [
                "sha256(context_name, queryId)"
            ],
            "jump14667": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump13680_0": [
                "sha256(tosign3)",
                "sha256(tosign3)"
            ],
            "jump5944_0": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump9099_0": [
                "sha256(args[0])",
                "sha256(args[0])"
            ],
            "jump14078": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block5944_0": [
                "oraclize.cbAddress()"
            ],
            "block9099_0": [
                "sha256(args[0])"
            ],
            "jump5687_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block15793": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block7350": [
                "sha256(sessionPubkey)"
            ],
            "block5687": [
                "OAR.getAddress()"
            ],
            "block7790_0": [
                "sha256(tosign1)"
            ]
        }
    }
}