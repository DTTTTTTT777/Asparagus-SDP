{
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "totalSupply()": [
                438,
                119
            ],
            "allowance(address,address)": [
                1310,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "jump3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "MiniMeToken": {
        "function_list": [
            "approveAndCall(address,uint256,bytes)",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10103,
                26
            ],
            "claimTokens(address)": [
                2810,
                537
            ],
            "totalSupply()": [
                937,
                141
            ],
            "allowance(address,address)": [
                2691,
                515
            ],
            "transferFrom(address,address,uint256)": [
                980,
                163
            ],
            "approve(address,uint256)": [
                793,
                97
            ],
            "totalSupplyAt(uint256)": [
                10103,
                26
            ],
            "enableTransfers(bool)": [
                2964,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1470,
                273
            ],
            "changeController(address)": [
                6204,
                889
            ],
            "balanceOf(address)": [
                8611,
                847
            ],
            "generateTokens(address,uint256)": [
                1918,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2419,
                471
            ],
            "destroyTokens(address,uint256)": [
                2590,
                493
            ],
            "transfer(address,uint256)": [
                8868,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump572_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block9721": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5217_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9721_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump8322": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump7186_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8611": [
                "token.balanceOf(this)"
            ],
            "jump6204": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "block7700": [
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8322": [
                "controller.transfer(this.balance)"
            ],
            "jump9721_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7700": [
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block6204": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump9721": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block572_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7186_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5988": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )"
            ],
            "jump7186_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7186_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7186_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7186_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block572": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7186": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8868": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "jump5217_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8611": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5217": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7186": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5988": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )"
            ],
            "block8868": [
                "token.transfer(controller, balance)"
            ],
            "block5217_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump572": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block5217_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "DataBrokerDaoToken": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "approveAndCall(address,uint256,bytes)",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "DataBrokerDaoToken(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {}
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "DataBrokerDaoToken(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10103,
                26
            ],
            "claimTokens(address)": [
                2810,
                537
            ],
            "totalSupply()": [
                937,
                141
            ],
            "allowance(address,address)": [
                2691,
                515
            ],
            "transferFrom(address,address,uint256)": [
                980,
                163
            ],
            "approve(address,uint256)": [
                793,
                97
            ],
            "totalSupplyAt(uint256)": [
                10103,
                26
            ],
            "enableTransfers(bool)": [
                2964,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1470,
                273
            ],
            "changeController(address)": [
                6204,
                889
            ],
            "balanceOf(address)": [
                8611,
                847
            ],
            "generateTokens(address,uint256)": [
                1918,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2419,
                471
            ],
            "destroyTokens(address,uint256)": [
                2590,
                493
            ],
            "transfer(address,uint256)": [
                8868,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump572_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block9721": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5217_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9721_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump8322": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump7186_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8611": [
                "token.balanceOf(this)"
            ],
            "jump6204": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "block7700": [
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8322": [
                "controller.transfer(this.balance)"
            ],
            "jump9721_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3791_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump7700": [
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallReceiver(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block6204": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump9721": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block572_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7186_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5988": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )"
            ],
            "jump7186_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7186_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7186_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7186_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block572": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7186": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8868": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "jump5217_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8611": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3791": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block5217": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5217": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7186": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5988": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n        )"
            ],
            "block8868": [
                "token.transfer(controller, balance)"
            ],
            "block5217_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5217_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump572": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block5217_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "EarlyTokenSale": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "EarlyTokenSale(uint256,uint256,address,address)",
            "fallback()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "doPayment(address)",
            "changeTokenController(address)",
            "isContract(address)",
            "finalizeSale()",
            "getBlockNumber()",
            "claimTokens(address)",
            "pauseContribution()",
            "resumeContribution()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "EarlyTokenSale(uint256,uint256,address,address)": {
                "argument": {
                    "_startFundingTime": "uint256",
                    "_endFundingTime": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "doPayment(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "changeTokenController(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "finalizeSale()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "pauseContribution()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "resumeContribution()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "tokensPerEther": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "totalCollected": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proxyPayment(address)": [
                1485,
                493
            ],
            "claimTokens(address)": [
                1332,
                427
            ],
            "finalizeSale()": [
                906,
                251
            ],
            "changeController(address)": [
                4210,
                926
            ],
            "onTransfer(address,address,uint256)": [
                576,
                163
            ],
            "onApprove(address,address,uint256)": [
                1199,
                405
            ],
            "resumeContribution()": [
                1066,
                339
            ],
            "pauseContribution()": [
                709,
                185
            ],
            "changeTokenController(address)": [
                1132,
                383
            ]
        },
        "block_CALL_mapping": {
            "block4210": [
                "tokenContract.changeController(_newController)"
            ],
            "jump4761": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3652": [
                "tokenContract.generateTokens(vaultAddress, reservedTokens)"
            ],
            "jump4210": [
                "tokenContract.changeController(_newController)",
                "tokenContract.changeController(_newController)"
            ],
            "jump3652": [
                "tokenContract.generateTokens(vaultAddress, reservedTokens)",
                "tokenContract.generateTokens(vaultAddress, reservedTokens)"
            ],
            "jump2667": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))",
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "block2346_0": [
                "vaultAddress.send(msg.value)"
            ],
            "block2346_1": [
                "vaultAddress.send(msg.value)"
            ],
            "jump5018": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block4761": [
                "token.balanceOf(this)"
            ],
            "block4472": [
                "controller.transfer(this.balance)"
            ],
            "block2171_0": [
                "tokenContract.controller()"
            ],
            "block2171_1": [
                "tokenContract.controller()"
            ],
            "block2346": [
                "vaultAddress.send(msg.value)"
            ],
            "jump2171_0": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump2171_1": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump2667_0": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))",
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "jump2667_1": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))",
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "jump2346_0": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "jump2346_1": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "jump2346": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "jump2171": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "block2667": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "jump4472": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block2171": [
                "tokenContract.controller()"
            ],
            "block2667_0": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "block2667_1": [
                "tokenContract.generateTokens(_owner, tokensPerEther.mul(msg.value))"
            ],
            "block5018": [
                "token.transfer(controller, balance)"
            ]
        }
    }
}