block0(g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, calldatasize, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, calldatasize, callvalue, returndatasize))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, calldatasize, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block98())

jump0(s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, calldatasize, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block13(g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, callvalue, returndatasize))

block13(g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 760867436
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block100(s(0),g(oscarGuindzbergAddress), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, calldataload, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block65(s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, callvalue, returndatasize))

jump65(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block187(s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, callvalue, returndatasize))

jump65(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block76(s(0),g(truebitAddress), g(coinfabrikAddress), l(l1), l(l0), callvalue))

block65(s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, callvalue, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1020253707
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l1), l(l0), address, balance, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(truebitAddress), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1969607403
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), l(l1), l(l0), callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	eq(s(2), s(1))
	call(block210(s(0),g(coinfabrikAddress), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	neq(s(2), s(1))
	call(block87(s(0),g(truebitAddress), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	eq(s(2), s(1))
	call(block297(s(0),g(truebitAddress), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	neq(s(2), s(1))
	call(block98_0(s(0)))

block87(s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4206197281
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(truebitAddress), l(l1), l(l0), callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block100(s(0), g(oscarGuindzbergAddress), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump100(s(2),s(1),s(0),g(oscarGuindzbergAddress), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump100(s(2), s(1), s(0), g(oscarGuindzbergAddress), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block112(s(1), s(0),g(oscarGuindzbergAddress), l(l1), l(l0)))

jump100(s(2), s(1), s(0), g(oscarGuindzbergAddress), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block108(s(1), s(0)))

block108(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block112(s(1), s(0), g(oscarGuindzbergAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 121
	nop(PUSH2)
	s(2) = 384
	nop(PUSH2)
	call(block384(s(1),s(0),g(oscarGuindzbergAddress), l(l1), l(l0)))
	nop(JUMP)

block121(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block187(s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump187(s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump187(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block199(s(1), s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize))

jump187(s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block195(s(1), s(0)))

block195(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block199(s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 208
	nop(PUSH2)
	s(2) = 421
	nop(PUSH2)
	call(block421(s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize))
	nop(JUMP)

block208(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump210(s(2), s(1), s(0), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block222(s(1), s(0),g(coinfabrikAddress), l(l1), l(l0)))

jump210(s(2), s(1), s(0), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block218(s(1), s(0)))

block210(s(0), g(coinfabrikAddress), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump210(s(2),s(1),s(0),g(coinfabrikAddress), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block218(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block222(s(1), s(0), g(coinfabrikAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 231
	nop(PUSH2)
	s(2) = 783
	nop(PUSH2)
	call(block783(s(1),s(0),g(coinfabrikAddress), l(l1), l(l0)))
	nop(JUMP)

block231(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump297(s(2), s(1), s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block309(s(1), s(0),g(truebitAddress), l(l1), l(l0)))

jump297(s(2), s(1), s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block305(s(1), s(0)))

block297(s(0), g(truebitAddress), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump297(s(2),s(1),s(0),g(truebitAddress), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block305(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block309(s(1), s(0), g(truebitAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 318
	nop(PUSH2)
	s(2) = 821
	nop(PUSH2)
	call(block821(s(1),s(0),g(truebitAddress), l(l1), l(l0)))
	nop(JUMP)

block318(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block384(s(1), s(0), g(oscarGuindzbergAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(oscarGuindzbergAddress)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block121(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block421(s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	call(jump421(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize)=>
	neq(s(6), 0)
	call(block462(s(5), s(4), s(3), s(2), s(1), s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), returndatasize))

jump421(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), address, balance, returndatasize)=>
	eq(s(6), 0)
	call(block461(s(5), s(4), s(3), s(2), s(1), s(0)))

block461(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block462(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(oscarGuindzbergAddress)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump462(s(5),s(4),s(3),s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump462(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block568(s(4), s(3), s(2), s(1), s(0),g(truebitAddress), g(coinfabrikAddress), l(l0), returndatasize))

jump462(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), g(oscarGuindzbergAddress), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block559(s(4), s(3), s(2), s(1), s(0), returndatasize))

block559(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block568(s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(coinfabrikAddress)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump568(s(5),s(4),s(3),s(2),s(1),s(0),g(truebitAddress), g(coinfabrikAddress), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump568(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block673(s(4), s(3), s(2), s(1), s(0),g(truebitAddress), l(l0), returndatasize))

jump568(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), g(coinfabrikAddress), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block664(s(4), s(3), s(2), s(1), s(0), returndatasize))

block664(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

jump673(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block778(s(4), s(3), s(2), s(1), s(0)))

jump673(s(5), s(4), s(3), s(2), s(1), s(0), g(truebitAddress), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block769(s(4), s(3), s(2), s(1), s(0), returndatasize))

block673(s(4), s(3), s(2), s(1), s(0), g(truebitAddress), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(truebitAddress)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump673(s(5),s(4),s(3),s(2),s(1),s(0),g(truebitAddress), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block769(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block778(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block208(s(0)))
	nop(JUMP)

block783(s(1), s(0), g(coinfabrikAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(coinfabrikAddress)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block231(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block821(s(1), s(0), g(truebitAddress), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(truebitAddress)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block318(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block98_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

