{
    "usingOraclize": {
        "function_list": [
            "oraclize_setNetwork()",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "oraclize_randomDS_proofVerify__returnCode(bytes32,string,bytes)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string",
                    "proof": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__returnCode(bytes32,string,bytes)": {
                "argument": {
                    "_queryId": "bytes32",
                    "_result": "string",
                    "_proof": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "day": "uint256",
                    "week": "uint256",
                    "month": "uint256",
                    "proofType_NONE": "bytes1",
                    "proofType_TLSNotary": "bytes1",
                    "proofType_Android": "bytes1",
                    "proofType_Ledger": "bytes1",
                    "proofType_Native": "bytes1",
                    "proofStorage_IPFS": "bytes1",
                    "networkID_auto": "uint8",
                    "networkID_mainnet": "uint8",
                    "networkID_testnet": "uint8",
                    "networkID_morden": "uint8",
                    "networkID_consensys": "uint8",
                    "oraclize_network_name": "string"
                }
            }
        },
        "function_block_mapping": {
            "__callback(bytes32,string,bytes)": [
                200,
                97
            ],
            "__callback(bytes32,string)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "EtherFlipGold": {
        "function_list": [
            "oraclize_setNetwork()",
            "__callback(bytes32,string)",
            "__callback(bytes32,string,bytes)",
            "oraclize_useCoupon(string)",
            "oraclize_getPrice(string)",
            "oraclize_getPrice(string,uint256)",
            "oraclize_query(string,string)",
            "oraclize_query(uint256,string,string)",
            "oraclize_query(uint256,string,string,uint256)",
            "oraclize_query(string,string,uint256)",
            "oraclize_query(string,string,string)",
            "oraclize_query(uint256,string,string,string)",
            "oraclize_query(uint256,string,string,string,uint256)",
            "oraclize_query(string,string,string,uint256)",
            "oraclize_query(string,string[])",
            "oraclize_query(uint256,string,string[])",
            "oraclize_query(uint256,string,string[],uint256)",
            "oraclize_query(string,string[],uint256)",
            "oraclize_query(string,string[1])",
            "oraclize_query(uint256,string,string[1])",
            "oraclize_query(uint256,string,string[1],uint256)",
            "oraclize_query(string,string[1],uint256)",
            "oraclize_query(string,string[2])",
            "oraclize_query(uint256,string,string[2])",
            "oraclize_query(uint256,string,string[2],uint256)",
            "oraclize_query(string,string[2],uint256)",
            "oraclize_query(string,string[3])",
            "oraclize_query(uint256,string,string[3])",
            "oraclize_query(uint256,string,string[3],uint256)",
            "oraclize_query(string,string[3],uint256)",
            "oraclize_query(string,string[4])",
            "oraclize_query(uint256,string,string[4])",
            "oraclize_query(uint256,string,string[4],uint256)",
            "oraclize_query(string,string[4],uint256)",
            "oraclize_query(string,string[5])",
            "oraclize_query(uint256,string,string[5])",
            "oraclize_query(uint256,string,string[5],uint256)",
            "oraclize_query(string,string[5],uint256)",
            "oraclize_query(string,bytes[])",
            "oraclize_query(uint256,string,bytes[])",
            "oraclize_query(uint256,string,bytes[],uint256)",
            "oraclize_query(string,bytes[],uint256)",
            "oraclize_query(string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1])",
            "oraclize_query(uint256,string,bytes[1],uint256)",
            "oraclize_query(string,bytes[1],uint256)",
            "oraclize_query(string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2])",
            "oraclize_query(uint256,string,bytes[2],uint256)",
            "oraclize_query(string,bytes[2],uint256)",
            "oraclize_query(string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3])",
            "oraclize_query(uint256,string,bytes[3],uint256)",
            "oraclize_query(string,bytes[3],uint256)",
            "oraclize_query(string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4])",
            "oraclize_query(uint256,string,bytes[4],uint256)",
            "oraclize_query(string,bytes[4],uint256)",
            "oraclize_query(string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5])",
            "oraclize_query(uint256,string,bytes[5],uint256)",
            "oraclize_query(string,bytes[5],uint256)",
            "oraclize_cbAddress()",
            "oraclize_setProof(bytes1)",
            "oraclize_setCustomGasPrice(uint256)",
            "oraclize_setConfig(bytes32)",
            "oraclize_randomDS_getSessionPubKeyHash()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "strCompare(string,string)",
            "indexOf(string,string)",
            "strConcat(string,string,string,string,string)",
            "strConcat(string,string,string,string)",
            "strConcat(string,string,string)",
            "strConcat(string,string)",
            "parseInt(string)",
            "parseInt(string,uint256)",
            "uint2str(uint256)",
            "stra2cbor(string[])",
            "ba2cbor(bytes[])",
            "oraclize_setNetworkName(string)",
            "oraclize_getNetworkName()",
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)",
            "oraclize_randomDS_setCommitment(bytes32,bytes32)",
            "verifySig(bytes32,bytes,bytes)",
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)",
            "oraclize_randomDS_proofVerify__returnCode(bytes32,string,bytes)",
            "matchBytes32Prefix(bytes32,bytes)",
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)",
            "copyBytes(bytes,uint256,uint256,bytes,uint256)",
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)",
            "ecrecovery(bytes32,bytes)",
            "EtherFlipGold()",
            "fallback()",
            "__callback(bytes32,string,bytes)",
            "updateMaxMinComparables(uint256,uint256,uint256)",
            "updateOwner(address)",
            "updateRewardToken(address,uint256)",
            "refundTransfer(address,uint256)",
            "walletSend(address,uint256,address)",
            "updateGameSpecifics(uint256,uint256)",
            "setBonusToken(address,uint256,uint256,uint256,address,uint256,uint256,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "__callback(bytes32,string,bytes)": {
                "argument": {
                    "_queryId": "bytes32",
                    "_result": "string",
                    "_proof": "bytes"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_useCoupon(string)": {
                "argument": {
                    "code": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_getPrice(string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string,string,uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string,string,uint256)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "string[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,string[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,string[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "string[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[])": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[],uint256)": {
                "argument": {
                    "datasource": "string",
                    "argN": "bytes[]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[1])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[1],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[1],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[1]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[2])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[2],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[2],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[2]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[3])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[3],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[3],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[3]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[4])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[4],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[4],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[4]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[5])": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5])": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(uint256,string,bytes[5],uint256)": {
                "argument": {
                    "timestamp": "uint256",
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_query(string,bytes[5],uint256)": {
                "argument": {
                    "datasource": "string",
                    "args": "bytes[5]",
                    "gaslimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_cbAddress()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_setProof(bytes1)": {
                "argument": {
                    "proofP": "bytes1"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_setCustomGasPrice(uint256)": {
                "argument": {
                    "gasPrice": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_setConfig(bytes32)": {
                "argument": {
                    "config": "bytes32"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_randomDS_getSessionPubKeyHash()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "strCompare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "strConcat(string,string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string",
                    "_e": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "strConcat(string,string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string",
                    "_d": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "strConcat(string,string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string",
                    "_c": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "strConcat(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "parseInt(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "parseInt(string,uint256)": {
                "argument": {
                    "_a": "string",
                    "_b": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "uint2str(uint256)": {
                "argument": {
                    "i": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "stra2cbor(string[])": {
                "argument": {
                    "arr": "string[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "ba2cbor(bytes[])": {
                "argument": {
                    "arr": "bytes[]"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_setNetworkName(string)": {
                "argument": {
                    "_network_name": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_getNetworkName()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_newRandomDSQuery(uint256,uint256,uint256)": {
                "argument": {
                    "_delay": "uint256",
                    "_nbytes": "uint256",
                    "_customGasLimit": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_randomDS_setCommitment(bytes32,bytes32)": {
                "argument": {
                    "queryId": "bytes32",
                    "commitment": "bytes32"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "verifySig(bytes32,bytes,bytes)": {
                "argument": {
                    "tosignh": "bytes32",
                    "dersig": "bytes",
                    "pubkey": "bytes"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__sessionKeyValidity(bytes,uint256)": {
                "argument": {
                    "proof": "bytes",
                    "sig2offset": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__returnCode(bytes32,string,bytes)": {
                "argument": {
                    "_queryId": "bytes32",
                    "_result": "string",
                    "_proof": "bytes"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "matchBytes32Prefix(bytes32,bytes)": {
                "argument": {
                    "content": "bytes32",
                    "prefix": "bytes"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "oraclize_randomDS_proofVerify__main(bytes,bytes32,bytes,string)": {
                "argument": {
                    "proof": "bytes",
                    "queryId": "bytes32",
                    "result": "bytes",
                    "context_name": "string"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "copyBytes(bytes,uint256,uint256,bytes,uint256)": {
                "argument": {
                    "from": "bytes",
                    "fromOffset": "uint256",
                    "length": "uint256",
                    "to": "bytes",
                    "toOffset": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "safer_ecrecover(bytes32,uint8,bytes32,bytes32)": {
                "argument": {
                    "hash": "bytes32",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "ecrecovery(bytes32,bytes)": {
                "argument": {
                    "hash": "bytes32",
                    "sig": "bytes"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "EtherFlipGold()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "updateMaxMinComparables(uint256,uint256,uint256)": {
                "argument": {
                    "updatedMaxBet": "uint256",
                    "updatedMinBet": "uint256",
                    "updatedBaseComparable": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "updateOwner(address)": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "updateRewardToken(address,uint256)": {
                "argument": {
                    "updatedRewardAmount": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "refundTransfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "walletSend(address,uint256,address)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "updateGameSpecifics(uint256,uint256)": {
                "argument": {
                    "newGas": "uint256",
                    "newMultiplier": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "setBonusToken(address,uint256,uint256,uint256,address,uint256,uint256,uint256)": {
                "argument": {
                    "newBonusAmount": "uint256",
                    "newBonusMin": "uint256",
                    "newBonusMax": "uint256",
                    "newSponsoredBonusAmount": "uint256",
                    "newSBonusMin": "uint256",
                    "newSBonusMax": "uint256"
                },
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "generatedBytes": "uint256",
                    "multiplier": "uint256",
                    "maxBet": "uint256",
                    "minBet": "uint256",
                    "rewardAmount": "uint256",
                    "bonusAmount": "uint256",
                    "sponsoredBonusAmount": "uint256",
                    "callbackGas": "uint256",
                    "baseComparable": "uint256",
                    "bonusMin": "uint256",
                    "bonusMax": "uint256",
                    "sponsoredBonusMin": "uint256",
                    "sponsoredBonusMax": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refundTransfer(address,uint256)": [
                2004,
                515
            ],
            "__callback(bytes32,string,bytes)": [
                988,
                207
            ],
            "walletSend(address,uint256,address)": [
                1732,
                427
            ],
            "setBonusToken(address,uint256,uint256,uint256,address,uint256,uint256,uint256)": [
                2319,
                625
            ],
            "updateOwner(address)": [
                1492,
                339
            ],
            "updateMaxMinComparables(uint256,uint256,uint256)": [
                2211,
                581
            ],
            "updateGameSpecifics(uint256,uint256)": [
                1220,
                251
            ],
            "__callback(bytes32,string)": [
                783,
                141
            ],
            "updateRewardToken(address,uint256)": [
                1927,
                493
            ]
        },
        "block_CALL_mapping": {
            "block13828_0": [
                "sha256(sessionPubkey)"
            ],
            "jump17592": [
                "sha256(tosign2)",
                "sha256(tosign2)"
            ],
            "jump3073": [
                "oraclize.setProofType(proofP)",
                "oraclize.setProofType(proofP)"
            ],
            "jump13828_0": [
                "sha256(sessionPubkey)",
                "sha256(sessionPubkey)"
            ],
            "block17592": [
                "sha256(tosign2)"
            ],
            "jump4303": [
                "playerAddress[_queryId].transfer(amount)",
                "playerAddress[_queryId].transfer(amount)"
            ],
            "jump11561_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block3668": [
                "sha256(args[0])"
            ],
            "jump3668": [
                "sha256(args[0])",
                "sha256(args[0])"
            ],
            "jump4303_0": [
                "playerAddress[_queryId].transfer(amount)",
                "playerAddress[_queryId].transfer(amount)"
            ],
            "jump13828": [
                "sha256(sessionPubkey)",
                "sha256(sessionPubkey)"
            ],
            "jump12928": [
                "sha256(context_name, queryId)",
                "sha256(context_name, queryId)"
            ],
            "block9737_0": [
                "OAR.getAddress()"
            ],
            "jump10640_0": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "block5445": [
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)"
            ],
            "jump9153_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump11938": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block13828": [
                "sha256(sessionPubkey)"
            ],
            "block14268": [
                "sha256(tosign1)"
            ],
            "block12928_0": [
                "sha256(context_name, queryId)"
            ],
            "block5445_0": [
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)"
            ],
            "jump2737_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump9153": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump6890": [
                "chosenToken.transfer(outboundAddress, amount)",
                "chosenToken.transfer(outboundAddress, amount)"
            ],
            "block18385_3": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump7192": [
                "outboundAddress.transfer(amount)",
                "outboundAddress.transfer(amount)"
            ],
            "block18385_1": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_0": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_7": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_6": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_5": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump13474_0": [
                "sha256(sig1)",
                "sha256(sig1)"
            ],
            "block18385_9": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_8": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block13474": [
                "sha256(sig1)"
            ],
            "jump5445_0": [
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)",
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)"
            ],
            "block11561": [
                "OAR.getAddress()"
            ],
            "jump9410": [
                "oraclize.randomDS_getSessionPubKeyHash()",
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "jump12413_0": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)",
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block6097": [
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)"
            ],
            "block3073_0": [
                "oraclize.setProofType(proofP)"
            ],
            "block9153_0": [
                "OAR.getAddress()"
            ],
            "jump5026_0": [
                "playerAddress[_queryId].transfer(amount * multiplier)",
                "playerAddress[_queryId].transfer(amount * multiplier)"
            ],
            "block9410_0": [
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "jump2737": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block13474_0": [
                "sha256(sig1)"
            ],
            "block9410": [
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "jump5026": [
                "playerAddress[_queryId].transfer(amount * multiplier)",
                "playerAddress[_queryId].transfer(amount * multiplier)"
            ],
            "block10640": [
                "oraclize.cbAddress()"
            ],
            "block5771": [
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)"
            ],
            "block12413": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block18252_0": [
                "sha256(tosign3)"
            ],
            "block7192": [
                "outboundAddress.transfer(amount)"
            ],
            "jump14268_0": [
                "sha256(tosign1)",
                "sha256(tosign1)"
            ],
            "jump11938_0": [
                "oraclize.getPrice(datasource, gaslimit)",
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block5771_0": [
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)"
            ],
            "jump10383": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump17592_0": [
                "sha256(tosign2)",
                "sha256(tosign2)"
            ],
            "block6097_0": [
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)"
            ],
            "jump9737_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block9737": [
                "OAR.getAddress()"
            ],
            "jump18252_0": [
                "sha256(tosign3)",
                "sha256(tosign3)"
            ],
            "block10383": [
                "OAR.getAddress()"
            ],
            "jump3668_0": [
                "sha256(args[0])",
                "sha256(args[0])"
            ],
            "jump5445": [
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)",
                "tokenReward.transfer(playerAddress[_queryId], rewardAmount)"
            ],
            "jump5771_0": [
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)",
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)"
            ],
            "block17592_0": [
                "sha256(tosign2)"
            ],
            "jump6097": [
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)",
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)"
            ],
            "jump9737": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump14268": [
                "sha256(tosign1)",
                "sha256(tosign1)"
            ],
            "block4303": [
                "playerAddress[_queryId].transfer(amount)"
            ],
            "block3668_0": [
                "sha256(args[0])"
            ],
            "jump11561": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block6890": [
                "chosenToken.transfer(outboundAddress, amount)"
            ],
            "block18385": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18252": [
                "sha256(tosign3)"
            ],
            "block10640_0": [
                "oraclize.cbAddress()"
            ],
            "block14268_0": [
                "sha256(tosign1)"
            ],
            "block12928": [
                "sha256(context_name, queryId)"
            ],
            "block9153": [
                "OAR.getAddress()"
            ],
            "jump18252": [
                "sha256(tosign3)",
                "sha256(tosign3)"
            ],
            "block11561_0": [
                "OAR.getAddress()"
            ],
            "block4303_0": [
                "playerAddress[_queryId].transfer(amount)"
            ],
            "block3073": [
                "oraclize.setProofType(proofP)"
            ],
            "jump5771": [
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)",
                "bonusToken.transfer(playerAddress[_queryId], bonusAmount)"
            ],
            "block2737": [
                "OAR.getAddress()"
            ],
            "block5026": [
                "playerAddress[_queryId].transfer(amount * multiplier)"
            ],
            "jump13474": [
                "sha256(sig1)",
                "sha256(sig1)"
            ],
            "jump3073_0": [
                "oraclize.setProofType(proofP)",
                "oraclize.setProofType(proofP)"
            ],
            "block18385_10": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block18385_2": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "block11938_0": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "jump9410_0": [
                "oraclize.randomDS_getSessionPubKeyHash()",
                "oraclize.randomDS_getSessionPubKeyHash()"
            ],
            "jump10383_0": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump6097_0": [
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)",
                "sponsoredBonusToken.transfer(playerAddress[_queryId], sponsoredBonusAmount)"
            ],
            "block10383_0": [
                "OAR.getAddress()"
            ],
            "jump12413": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)",
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block12413_0": [
                "oraclize.queryN_withGasLimit.value(price)(timestamp, datasource, args, gaslimit)"
            ],
            "block11938": [
                "oraclize.getPrice(datasource, gaslimit)"
            ],
            "block5026_0": [
                "playerAddress[_queryId].transfer(amount * multiplier)"
            ],
            "block2737_0": [
                "OAR.getAddress()"
            ],
            "block18385_4": [
                "call(3000, 1, 0, size, 128, size, 32)"
            ],
            "jump10640": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "jump12928_0": [
                "sha256(context_name, queryId)",
                "sha256(context_name, queryId)"
            ]
        }
    }
}