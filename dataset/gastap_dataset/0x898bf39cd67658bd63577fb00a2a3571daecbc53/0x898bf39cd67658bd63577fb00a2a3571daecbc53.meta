{
    "elixor": {
        "function_list": [
            "elixor()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "setNumRewardsAvailableForAddresses(uint256[],address[])",
            "freezeTransfers()",
            "prohibitFreeze()",
            "returnIsParentAddress(address)",
            "returnChildAddressForParent(address)",
            "setELIXAddress(address)",
            "convertToELIX(uint256,address)",
            "returnAmountOfELIXAddressCanProduce(address)",
            "lockBalanceChanges()",
            "importGenesisPairs(address[],address[])",
            "lockGenesisImports()",
            "importAmountForAddresses(uint256[],address[])",
            "removeAmountForAddresses(uint256[],address[])",
            "manuallySetNumRewardsAvailableForChildAddress(address,uint256)",
            "removeFromTotalSupply(uint256)",
            "setNumRewardsAvailableForAddress(address)"
        ],
        "initial_state": {
            "elixor()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setNumRewardsAvailableForAddresses(uint256[],address[])": {
                "argument": {
                    "numRewardsAvailableForAddresses": "uint256[]",
                    "addressesToSetFor": "address[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "freezeTransfers()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "prohibitFreeze()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "returnIsParentAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "returnChildAddressForParent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setELIXAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "convertToELIX(uint256,address)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "returnAmountOfELIXAddressCanProduce(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "lockBalanceChanges()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "importGenesisPairs(address[],address[])": {
                "argument": {
                    "parents": "address[]",
                    "children": "address[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "lockGenesisImports()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "importAmountForAddresses(uint256[],address[])": {
                "argument": {
                    "amounts": "uint256[]",
                    "addressesToAddTo": "address[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "removeAmountForAddresses(uint256[],address[])": {
                "argument": {
                    "amounts": "uint256[]",
                    "addressesToRemoveFrom": "address[]"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "manuallySetNumRewardsAvailableForChildAddress(address,uint256)": {
                "argument": {
                    "rewardsAvail": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "removeFromTotalSupply(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setNumRewardsAvailableForAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "startTime": "uint256",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "returnAmountOfELIXAddressCanProduce(address)": [
                2250,
                493
            ],
            "manuallySetNumRewardsAvailableForChildAddress(address,uint256)": [
                3303,
                801
            ],
            "returnChildAddressForParent(address)": [
                9274,
                843
            ],
            "prohibitFreeze()": [
                2935,
                669
            ],
            "transferFrom(address,address,uint256)": [
                1189,
                251
            ],
            "approve(address,uint256)": [
                789,
                163
            ],
            "setNumRewardsAvailableForAddresses(uint256[],address[])": [
                1856,
                405
            ],
            "importAmountForAddresses(uint256[],address[])": [
                890,
                185
            ],
            "freezeTransfers()": [
                444,
                75
            ],
            "removeFromTotalSupply(uint256)": [
                2746,
                625
            ],
            "removeAmountForAddresses(uint256[],address[])": [
                1322,
                273
            ],
            "balanceOf(address)": [
                2337,
                515
            ],
            "setELIXAddress(address)": [
                2958,
                691
            ],
            "returnIsParentAddress(address)": [
                1674,
                361
            ],
            "importGenesisPairs(address[],address[])": [
                2577,
                603
            ],
            "lockBalanceChanges()": [
                2554,
                581
            ],
            "lockGenesisImports()": [
                3233,
                757
            ],
            "transfer(address,uint256)": [
                3025,
                713
            ]
        },
        "block_CALL_mapping": {
            "jump5705": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)",
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)"
            ],
            "block10045": [
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)"
            ],
            "block9274": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)"
            ],
            "block10323": [
                "tmeContract.numRewardsUsed(addressToSet)"
            ],
            "jump10323": [
                "tmeContract.numRewardsUsed(addressToSet)",
                "tmeContract.numRewardsUsed(addressToSet)"
            ],
            "block5705_0": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)"
            ],
            "block9274_0": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)"
            ],
            "block10045_0": [
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)"
            ],
            "jump10045_0": [
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)",
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)"
            ],
            "jump9274_0": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)",
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)"
            ],
            "jump5705_0": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)",
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)"
            ],
            "jump9274": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)",
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).returnChildAddressForParent(parent)"
            ],
            "jump10045": [
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)",
                "elixir(ELIXAddress).createAmountFromEXORForAddress(amount,sender)"
            ],
            "block5705": [
                "tme(0xEe22430595aE400a30FFBA37883363Fbf293e24e).parentAddress(possibleParent)"
            ]
        }
    },
    "elixir": {
        "function_list": [
            "createAmountFromEXORForAddress(uint256,address)"
        ],
        "initial_state": {
            "createAmountFromEXORForAddress(uint256,address)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "createAmountFromEXORForAddress(uint256,address)": [
                458,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump2226": [
                "EXORContract.returnAmountOfELIXAddressCanProduce(addressProducing)",
                "EXORContract.returnAmountOfELIXAddressCanProduce(addressProducing)"
            ],
            "block2226": [
                "EXORContract.returnAmountOfELIXAddressCanProduce(addressProducing)"
            ]
        }
    }
}