{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "LockableChanges": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "lockChanges()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "lockChanges()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "lockChanges()": [
                103,
                75
            ],
            "transferOwnership(address)": [
                260,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "TWNSharesToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "setSaleAgent(address)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "setSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                1703,
                427
            ],
            "approve(address,uint256)": [
                448,
                119
            ],
            "increaseApproval(address,uint256)": [
                1602,
                405
            ],
            "mint(address,uint256)": [
                847,
                229
            ],
            "finishMinting()": [
                1136,
                295
            ],
            "balanceOf(address)": [
                1049,
                273
            ],
            "decreaseApproval(address,uint256)": [
                948,
                251
            ],
            "transferFrom(address,address,uint256)": [
                659,
                185
            ],
            "transferOwnership(address)": [
                1822,
                449
            ],
            "setSaleAgent(address)": [
                549,
                141
            ],
            "transfer(address,uint256)": [
                1414,
                361
            ]
        },
        "block_CALL_mapping": {}
    },
    "CommonCrowdsale": {
        "function_list": [
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setFoundersTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setFoundersTokensWallet(address)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "lockChanges()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setFoundersTokensPercent(uint256)": {
                "argument": {
                    "newFoundersTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setFoundersTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "getBonus()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PERCENT_RATE": "uint256",
                    "price": "uint256",
                    "minInvestedLimit": "uint256",
                    "hardcap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "invested": "uint256",
                    "minted": "uint256",
                    "bountyTokensPercent": "uint256",
                    "devTokensPercent": "uint256",
                    "advisorsTokensPercent": "uint256",
                    "foundersTokensPercent": "uint256",
                    "bonuses": "CommonCrowdsale.Bonus[]"
                }
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                2166,
                669
            ],
            "setBountyTokensWallet(address)": [
                2975,
                1043
            ],
            "retrieveTokens(address)": [
                2254,
                713
            ],
            "createTokens()": [
                2409,
                779
            ],
            "setBountyTokensPercent(uint256)": [
                1463,
                427
            ],
            "setFoundersTokensWallet(address)": [
                822,
                185
            ],
            "setHardcap(uint256)": [
                2703,
                933
            ],
            "setPrice(uint256)": [
                1839,
                559
            ],
            "setWallet(address)": [
                2636,
                911
            ],
            "setFoundersTokensPercent(uint256)": [
                2321,
                735
            ],
            "transferOwnership(address)": [
                2863,
                999
            ],
            "setStart(uint256)": [
                2930,
                1021
            ]
        },
        "block_CALL_mapping": {
            "jump10114_2": [
                "token.lock(to)",
                "token.lock(to)"
            ],
            "block10114": [
                "token.lock(to)"
            ],
            "block10468_2": [
                "token.balanceOf(to)"
            ],
            "block10468_1": [
                "token.balanceOf(to)"
            ],
            "block10468_0": [
                "token.balanceOf(to)"
            ],
            "block3669": [
                "token.totalSupply()"
            ],
            "block10468_4": [
                "token.balanceOf(to)"
            ],
            "block8091": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block5897": [
                "token.transfer(tokenHolder, targetValue)"
            ],
            "jump10833_4": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "block10833": [
                "token.mint(to, value)"
            ],
            "block10833_3": [
                "token.mint(to, value)"
            ],
            "jump10468": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "block10833_2": [
                "token.mint(to, value)"
            ],
            "block7899": [
                "alienToken.balanceOf(this)"
            ],
            "jump10468_4": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "jump10114_1": [
                "token.lock(to)",
                "token.lock(to)"
            ],
            "jump10114_0": [
                "token.lock(to)",
                "token.lock(to)"
            ],
            "block6872": [
                "token.transferOwnership(owner)"
            ],
            "jump3265_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block10468_3": [
                "token.balanceOf(to)"
            ],
            "block6590": [
                "token.finishMinting()"
            ],
            "jump3265_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump10468_1": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "jump6872": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "jump10833": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "jump10468_2": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "jump10114": [
                "token.lock(to)",
                "token.lock(to)"
            ],
            "jump3265": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump10468_0": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "block3265_1": [
                "wallet.transfer(msg.value)"
            ],
            "block3265_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3265": [
                "wallet.transfer(msg.value)"
            ],
            "block10833_4": [
                "token.mint(to, value)"
            ],
            "jump3669": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump10468_3": [
                "token.balanceOf(to)",
                "token.balanceOf(to)"
            ],
            "block10833_1": [
                "token.mint(to, value)"
            ],
            "block10833_0": [
                "token.mint(to, value)"
            ],
            "block10114_0": [
                "token.lock(to)"
            ],
            "jump5897": [
                "token.transfer(tokenHolder, targetValue)",
                "token.transfer(tokenHolder, targetValue)"
            ],
            "jump6590": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block5330": [
                "token.balanceOf(tokenHolder)"
            ],
            "jump10833_3": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "jump5330": [
                "token.balanceOf(tokenHolder)",
                "token.balanceOf(tokenHolder)"
            ],
            "jump10833_1": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "jump10833_0": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "jump8091": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "jump10833_2": [
                "token.mint(to, value)",
                "token.mint(to, value)"
            ],
            "jump5640": [
                "token.mint(this, targetValue)",
                "token.mint(this, targetValue)"
            ],
            "jump7899": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ],
            "jump4570": [
                "token.unlock(to)",
                "token.unlock(to)"
            ],
            "block10468": [
                "token.balanceOf(to)"
            ],
            "block4570": [
                "token.unlock(to)"
            ],
            "block10114_2": [
                "token.lock(to)"
            ],
            "block10114_1": [
                "token.lock(to)"
            ],
            "block5640": [
                "token.mint(this, targetValue)"
            ]
        }
    },
    "Presale": {
        "function_list": [
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setFoundersTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setFoundersTokensWallet(address)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "setNextSaleAgent(address)",
            "setSoftcap(uint256)",
            "setDevWallet(address)",
            "setDevLimit(uint256)",
            "refund()",
            "createTokens()",
            "widthrawDev()",
            "widthraw()",
            "finishMinting()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setFoundersTokensPercent(uint256)": {
                "argument": {
                    "newFoundersTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setFoundersTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "getBonus()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "lockChanges()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setNextSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setSoftcap(uint256)": {
                "argument": {
                    "newSoftcap": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevWallet(address)": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "setDevLimit(uint256)": {
                "argument": {
                    "newDevLimit": "uint256"
                },
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "widthrawDev()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "widthraw()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "devLimit": "uint256",
                    "softcap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                2526,
                801
            ],
            "setBountyTokensWallet(address)": [
                3722,
                1329
            ],
            "retrieveTokens(address)": [
                2666,
                867
            ],
            "setEnd(uint256)": [
                1819,
                515
            ],
            "refund()": [
                1573,
                383
            ],
            "setStart(uint256)": [
                3634,
                1285
            ],
            "getBonus()": [
                1954,
                581
            ],
            "setDevLimit(uint256)": [
                2972,
                1021
            ],
            "setBountyTokensPercent(uint256)": [
                1596,
                405
            ],
            "setFoundersTokensWallet(address)": [
                1176,
                229
            ],
            "setAdvisorsTokensWallet(address)": [
                912,
                141
            ],
            "setHardcap(uint256)": [
                3280,
                1153
            ],
            "addBonus(uint256,uint256)": [
                2778,
                911
            ],
            "setDevWallet(address)": [
                979,
                163
            ],
            "widthraw()": [
                2571,
                823
            ],
            "widthrawDev()": [
                3060,
                1065
            ],
            "setPrice(uint256)": [
                2214,
                669
            ],
            "setWallet(address)": [
                3170,
                1109
            ],
            "setToken(address)": [
                758,
                97
            ],
            "finishMinting()": [
                6214,
                21002
            ],
            "setDevTokensPercent(uint256)": [
                3589,
                1263
            ],
            "setSoftcap(uint256)": [
                713,
                75
            ],
            "setAdvisorsTokensPercent(uint256)": [
                1684,
                449
            ],
            "setDevTokensWallet(address)": [
                1729,
                471
            ],
            "bonusesCount()": [
                3237,
                1131
            ],
            "setFoundersTokensPercent(uint256)": [
                2733,
                889
            ],
            "setNextSaleAgent(address)": [
                3325,
                1175
            ],
            "createTokens()": [
                2876,
                955
            ],
            "lockChanges()": [
                1243,
                251
            ],
            "transferOwnership(address)": [
                3522,
                1241
            ]
        },
        "block_CALL_mapping": {
            "jump7845": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ],
            "block8796": [
                "devWallet.transfer(devLimit)"
            ],
            "jump5364": [
                "msg.sender.transfer(value)",
                "msg.sender.transfer(value)"
            ],
            "block8796_0": [
                "devWallet.transfer(devLimit)"
            ],
            "block5364": [
                "msg.sender.transfer(value)"
            ],
            "jump11217": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block8037": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block11217_1": [
                "token.mint(to, amount)"
            ],
            "block11217_2": [
                "token.mint(to, amount)"
            ],
            "block11217_3": [
                "token.mint(to, amount)"
            ],
            "block11217_4": [
                "token.mint(to, amount)"
            ],
            "block11217_5": [
                "token.mint(to, amount)"
            ],
            "jump7350": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump8796_0": [
                "devWallet.transfer(devLimit)",
                "devWallet.transfer(devLimit)"
            ],
            "block6510": [
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "block11217": [
                "token.mint(to, amount)"
            ],
            "jump11217_2": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump11217_3": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump11217_0": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump11217_1": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump11217_4": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump11217_5": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block7845": [
                "alienToken.balanceOf(this)"
            ],
            "jump6214": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump8796": [
                "devWallet.transfer(devLimit)",
                "devWallet.transfer(devLimit)"
            ],
            "jump6510": [
                "token.setSaleAgent(nextSaleAgent)",
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump8037": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block11217_0": [
                "token.mint(to, amount)"
            ],
            "block6214": [
                "token.finishMinting()"
            ],
            "block7350": [
                "wallet.transfer(this.balance)"
            ]
        }
    },
    "ICO": {
        "function_list": [
            "setHardcap(uint256)",
            "setStart(uint256)",
            "setBountyTokensPercent(uint256)",
            "setFoundersTokensPercent(uint256)",
            "setAdvisorsTokensPercent(uint256)",
            "setDevTokensPercent(uint256)",
            "setFoundersTokensWallet(address)",
            "setBountyTokensWallet(address)",
            "setAdvisorsTokensWallet(address)",
            "setDevTokensWallet(address)",
            "setEnd(uint256)",
            "setToken(address)",
            "setWallet(address)",
            "setPrice(uint256)",
            "setMinInvestedLimit(uint256)",
            "bonusesCount()",
            "addBonus(uint256,uint256)",
            "mintExtendedTokens()",
            "mintAndSendTokens(address,uint256)",
            "calculateAndTransferTokens()",
            "getBonus()",
            "createTokens()",
            "fallback()",
            "retrieveTokens(address)",
            "lockChanges()",
            "Ownable()",
            "transferOwnership(address)",
            "finishMinting()",
            "createTokens()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setHardcap(uint256)": {
                "argument": {
                    "newHardcap": "uint256"
                },
                "contract": {}
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {}
            },
            "setBountyTokensPercent(uint256)": {
                "argument": {
                    "newBountyTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setFoundersTokensPercent(uint256)": {
                "argument": {
                    "newFoundersTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setAdvisorsTokensPercent(uint256)": {
                "argument": {
                    "newAdvisorsTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setDevTokensPercent(uint256)": {
                "argument": {
                    "newDevTokensPercent": "uint256"
                },
                "contract": {}
            },
            "setFoundersTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setBountyTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setAdvisorsTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setDevTokensWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setEnd(uint256)": {
                "argument": {
                    "newEnd": "uint256"
                },
                "contract": {}
            },
            "setToken(address)": {
                "argument": {},
                "contract": {}
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {}
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {}
            },
            "setMinInvestedLimit(uint256)": {
                "argument": {
                    "newMinInvestedLimit": "uint256"
                },
                "contract": {}
            },
            "bonusesCount()": {
                "argument": {},
                "contract": {}
            },
            "addBonus(uint256,uint256)": {
                "argument": {
                    "limit": "uint256",
                    "bonus": "uint256"
                },
                "contract": {}
            },
            "mintExtendedTokens()": {
                "argument": {},
                "contract": {}
            },
            "mintAndSendTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "calculateAndTransferTokens()": {
                "argument": {},
                "contract": {}
            },
            "getBonus()": {
                "argument": {},
                "contract": {}
            },
            "createTokens()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "lockChanges()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMinInvestedLimit(uint256)": [
                1868,
                603
            ],
            "setBountyTokensWallet(address)": [
                2776,
                999
            ],
            "retrieveTokens(address)": [
                1985,
                647
            ],
            "setEnd(uint256)": [
                1385,
                405
            ],
            "createTokens()": [
                2195,
                735
            ],
            "setStart(uint256)": [
                2731,
                977
            ],
            "getBonus()": [
                1473,
                449
            ],
            "setBountyTokensPercent(uint256)": [
                1162,
                295
            ],
            "setFoundersTokensWallet(address)": [
                812,
                163
            ],
            "setAdvisorsTokensWallet(address)": [
                702,
                119
            ],
            "setHardcap(uint256)": [
                2444,
                867
            ],
            "addBonus(uint256,uint256)": [
                2097,
                691
            ],
            "bonusesCount()": [
                2401,
                845
            ],
            "setPrice(uint256)": [
                1603,
                493
            ],
            "setToken(address)": [
                548,
                75
            ],
            "setWallet(address)": [
                2334,
                823
            ],
            "finishMinting()": [
                4460,
                886
            ],
            "setFoundersTokensPercent(uint256)": [
                2052,
                669
            ],
            "setDevTokensPercent(uint256)": [
                2686,
                955
            ],
            "transferOwnership(address)": [
                2619,
                933
            ],
            "setAdvisorsTokensPercent(uint256)": [
                1250,
                339
            ],
            "setDevTokensWallet(address)": [
                1295,
                361
            ],
            "lockChanges()": [
                879,
                185
            ]
        },
        "block_CALL_mapping": {
            "block8167_5": [
                "token.mint(to, amount)"
            ],
            "block8167_4": [
                "token.mint(to, amount)"
            ],
            "block8167_1": [
                "token.mint(to, amount)"
            ],
            "block8167_0": [
                "token.mint(to, amount)"
            ],
            "block8167_3": [
                "token.mint(to, amount)"
            ],
            "block8167_2": [
                "token.mint(to, amount)"
            ],
            "block8167": [
                "token.mint(to, amount)"
            ],
            "jump4460": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump8167_3": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167_2": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167_1": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167_0": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167_5": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167_4": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump8167": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump5684": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))",
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ],
            "block2997": [
                "wallet.transfer(msg.value)"
            ],
            "block5492": [
                "alienToken.balanceOf(this)"
            ],
            "block2997_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2997_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump2997_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2997_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump5492": [
                "alienToken.balanceOf(this)",
                "alienToken.balanceOf(this)"
            ],
            "block4460": [
                "token.finishMinting()"
            ],
            "jump2997": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block5684": [
                "alienToken.transfer(wallet, alienToken.balanceOf(this))"
            ]
        }
    },
    "Deployer": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "deploy()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "deploy()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}