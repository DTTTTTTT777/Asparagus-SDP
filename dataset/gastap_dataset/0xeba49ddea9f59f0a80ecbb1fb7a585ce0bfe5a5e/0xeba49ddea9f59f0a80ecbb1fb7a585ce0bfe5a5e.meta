{
    "owned": {
        "function_list": [
            "owned()",
            "isOwner()",
            "transferOwnership(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "isOwner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "STE": {
        "function_list": [
            "owned()",
            "isOwner()",
            "transferOwnership(address)",
            "STE(string,string)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "calcDividendsSum(address)",
            "transferFrom(address,address,uint256)",
            "transferFromAdmin(address,address,uint256)",
            "buy()",
            "sell(uint256)",
            "setICOParams(uint256,uint32,uint32,uint256,uint256,bool)",
            "setDividends(uint32)",
            "getDividends()",
            "setPrices(uint256,uint256)",
            "setAllowTransfers(bool)",
            "stopGracePeriod()",
            "stopICO()",
            "withdrawToFounders(uint256)",
            "setBlockPerHour(uint256)",
            "setBurnAfterSoldAmount(uint256)",
            "setTransferFromWhiteList(address,bool)",
            "addPresaleInvestor(address,uint256,uint256)",
            "burn(uint256)",
            "burnContractCoins(uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "isOwner()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "STE(string,string)": {
                "argument": {
                    "_tokenName": "string",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "calcDividendsSum(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "transferFromAdmin(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setICOParams(uint256,uint32,uint32,uint256,uint256,bool)": {
                "argument": {
                    "_gracePeriodPrice": "uint256",
                    "_gracePeriodStartBlock": "uint32",
                    "_gracePeriodStopBlock": "uint32",
                    "_gracePeriodMaxTarget": "uint256",
                    "_gracePeriodMinTran": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setDividends(uint32)": {
                "argument": {
                    "_dividendsRound": "uint32"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "getDividends()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setPrices(uint256,uint256)": {
                "argument": {
                    "_buyPrice": "uint256",
                    "_sellPrice": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setAllowTransfers(bool)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "stopGracePeriod()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "stopICO()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "withdrawToFounders(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setBlockPerHour(uint256)": {
                "argument": {
                    "_blocksPerHour": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setBurnAfterSoldAmount(uint256)": {
                "argument": {
                    "_burnAfterSoldAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "setTransferFromWhiteList(address,bool)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "addPresaleInvestor(address,uint256,uint256)": {
                "argument": {
                    "_amountETH": "uint256",
                    "_amountSTE": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "burnContractCoins(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "icoRaisedETH": "uint256",
                    "soldedSupply": "uint256",
                    "blocksPerHour": "uint256",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "percentToPresalersFromICO": "uint32",
                    "weiToPresalersFromICO": "uint256",
                    "presaleAmountETH": "uint256",
                    "gracePeriodStartBlock": "uint256",
                    "gracePeriodStopBlock": "uint256",
                    "gracePeriodMinTran": "uint256",
                    "gracePeriodMaxTarget": "uint256",
                    "gracePeriodAmount": "uint256",
                    "burnAfterSoldAmount": "uint256",
                    "percentToFoundersAfterICO": "uint32",
                    "dividendsRound": "uint32",
                    "dividendsSum": "uint256",
                    "dividendsBuffer": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getDividends()": [
                4079,
                1197
            ],
            "transferFrom(address,address,uint256)": [
                1421,
                317
            ],
            "approve(address,uint256)": [
                913,
                141
            ],
            "sell(uint256)": [
                4034,
                1175
            ],
            "setDividends(uint32)": [
                1825,
                449
            ],
            "setICOParams(uint256,uint32,uint32,uint256,uint256,bool)": [
                2235,
                581
            ],
            "setPrices(uint256,uint256)": [
                669,
                75
            ],
            "stopICO()": [
                3223,
                933
            ],
            "withdrawToFounders(uint256)": [
                3989,
                1153
            ],
            "burnContractCoins(uint256)": [
                3178,
                911
            ],
            "setBlockPerHour(uint256)": [
                2565,
                669
            ],
            "setBurnAfterSoldAmount(uint256)": [
                868,
                119
            ],
            "approveAndCall(address,uint256,bytes)": [
                3246,
                955
            ],
            "addPresaleInvestor(address,uint256,uint256)": [
                3520,
                999
            ],
            "transferOwnership(address)": [
                4102,
                1219
            ],
            "setAllowTransfers(bool)": [
                3942,
                1131
            ],
            "setTransferFromWhiteList(address,bool)": [
                4212,
                1263
            ],
            "stopGracePeriod()": [
                3112,
                867
            ],
            "burn(uint256)": [
                1780,
                427
            ],
            "buy()": [
                3025,
                823
            ],
            "transfer(address,uint256)": [
                3035,
                845
            ],
            "transferFromAdmin(address,address,uint256)": [
                1014,
                163
            ]
        },
        "block_CALL_mapping": {
            "block5316_0": [
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "block5316_1": [
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "jump14443": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block9238": [
                "_from.send(divAmount_from)"
            ],
            "block7496": [
                "_to.send(divAmount_to)"
            ],
            "jump15924": [
                "foundersAddresses[i].send(amount_to_withdraw)",
                "foundersAddresses[i].send(amount_to_withdraw)"
            ],
            "jump7496": [
                "_to.send(divAmount_to)",
                "_to.send(divAmount_to)"
            ],
            "jump7422": [
                "_from.send(divAmount_from)",
                "_from.send(divAmount_from)"
            ],
            "jump5316_0": [
                "msg.sender.send(amountToPresaleInvestor)",
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "jump5316_1": [
                "msg.sender.send(amountToPresaleInvestor)",
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "jump9312": [
                "_to.send(divAmount_to)",
                "_to.send(divAmount_to)"
            ],
            "jump9238": [
                "_from.send(divAmount_from)",
                "_from.send(divAmount_from)"
            ],
            "block15924": [
                "foundersAddresses[i].send(amount_to_withdraw)"
            ],
            "jump16713": [
                "msg.sender.send(divAmount)",
                "msg.sender.send(divAmount)"
            ],
            "block12289": [
                "_to.send(divAmount_to)"
            ],
            "block16713": [
                "msg.sender.send(divAmount)"
            ],
            "block5316": [
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "block14443": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump16137": [
                "msg.sender.send(ethAmount)",
                "msg.sender.send(ethAmount)"
            ],
            "block16137": [
                "msg.sender.send(ethAmount)"
            ],
            "jump5316": [
                "msg.sender.send(amountToPresaleInvestor)",
                "msg.sender.send(amountToPresaleInvestor)"
            ],
            "block12215": [
                "msg.sender.send(divAmount_from)"
            ],
            "block9312": [
                "_to.send(divAmount_to)"
            ],
            "jump12289": [
                "_to.send(divAmount_to)",
                "_to.send(divAmount_to)"
            ],
            "jump12215": [
                "msg.sender.send(divAmount_from)",
                "msg.sender.send(divAmount_from)"
            ],
            "block7422": [
                "_from.send(divAmount_from)"
            ]
        }
    }
}