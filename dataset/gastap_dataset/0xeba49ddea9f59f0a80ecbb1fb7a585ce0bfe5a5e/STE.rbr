block0(g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	lt(s(1), s(0))
	call(block659(g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump0(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	geq(s(1), s(0))
	call(block13(g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value))

jump13(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	eq(s(2), s(1))
	call(block669(s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, callvalue, sellPrice))

jump13(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block13(g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 100597159
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, buyPrice, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, sellPrice, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block724(s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block65(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(symbol), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 146225969
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block868(s(0),g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller, callvalue))

jump76(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, burnAfterSoldAmount, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block87(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block913(s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block98(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 220665632
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1014(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump98(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block109(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 224892209
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1147(s(0),g(blocksPerHour), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump120(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1190(s(0),g(dividendsBuffer), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block120(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 286924777
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1233(s(0),g(icoRaisedETH), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block142(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 438420009
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1276(s(0),g(gracePeriodAmount), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump153(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1319(s(0),g(dividendsRound), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block153(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 486915251
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1374(s(0),g(allowTransfers), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block164(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 562397451
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1421(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump175(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump186(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1554(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump186(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block186(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 606774368
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1641(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block197(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(totalSupply), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 896411943
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1690(s(0),g(percentToFoundersAfterICO), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block219(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1095113645
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1737(s(0),g(gracePeriodStopBlock), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump230(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1780(s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller, callvalue))

jump230(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block230(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1117154408
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1135314187
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1825(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), calldatasize, caller, callvalue, dividendsRound))

jump241(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, dividendsRound, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block252(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1144713330
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1863(s(0),g(weiToPresalersFromICO), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block263(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1265959732
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1918(s(0),g(buyPrice), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump274(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block1961(s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))

jump274(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block274(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1513848386
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(name), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2105(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump285(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

jump296(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2192(s(0),g(presaleAmountETH), l(l1), l(l0), callvalue))

jump296(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))

block296(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1908475768
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2235(s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, callvalue, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount))

jump307(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block307(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2012564098
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, newOwner, number, resetAmount, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2344(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump318(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block318(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2124126382
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2250260747
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2435(s(0),g(percentToPresalersFromICO), l(l1), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

jump340(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2478(s(0),g(owner), l(l1), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block340(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2565(s(0),g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller, callvalue))

jump351(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block362(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block351(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2501740196
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, blocksPerHour, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2610(s(0),g(decimals), l(l3), l(l2), l(l1), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block373(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block362(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(decimals), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2579631156
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2754(s(0),g(percentToFoundersAfterICO), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block384(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block384(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2593483029
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2809(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump384(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block395(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block395(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2648131940
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2896(s(0),g(dividendsSum), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block406(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

jump406(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2939(s(0),g(icoFinished), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block417(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block406(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2681547140
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2693469255
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block2982(s(0),g(gracePeriodStartBlock), l(l1), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block428(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

block428(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2800922170
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block3025(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump428(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block439(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))

jump439(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	eq(s(2), s(1))
	call(block3035(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump439(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	neq(s(2), s(1))
	call(block450(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))

block439(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3040279139
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	eq(s(2), s(1))
	call(block3112(s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, callvalue, number))

jump450(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	neq(s(2), s(1))
	call(block461(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))

block461(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3142368523
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	eq(s(2), s(1))
	call(block3135(s(0),g(gracePeriodMinTran), l(l1), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	neq(s(2), s(1))
	call(block472(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))

jump472(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	eq(s(2), s(1))
	call(block3178(s(0),g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue))

jump472(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	neq(s(2), s(1))
	call(block483(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))

block472(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3249842769
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	eq(s(2), s(1))
	call(block3223(s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump483(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	neq(s(2), s(1))
	call(block494(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))

block483(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3370477992
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoFinished), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3404319313
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	eq(s(2), s(1))
	call(block3246(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))

jump494(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l2), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, from, gas, newOwner, number, returndatasize, spender, value)=>
	neq(s(2), s(1))
	call(block505(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

block505(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3419439064
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3417(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump505(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block516(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

block516(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3430933388
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3520(s(0),g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller, callvalue))

jump516(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, allow, allowTransfers, amount, amountETH, amountSTE, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block527(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

jump527(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3607(s(0),g(gracePeriodMaxTarget), l(l1), l(l0), callvalue))

jump527(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block538(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

block527(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3475998062
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3650(s(0),g(burnAfterSoldAmount), l(l1), l(l0), callvalue))

jump538(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block549(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

block538(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3478166429
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3693(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump549(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block560(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

block549(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3506211226
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3687654797
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3780(s(0),g(sellPrice), l(l1), l(l0), callvalue))

jump560(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(sellPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block571(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))

jump571(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3823(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump571(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block582(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldatasize, caller, callvalue, from, newOwner, number))

block571(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldataload, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3746607012
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3942(s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller, callvalue))

jump582(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, allowTransfers, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block593(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, balance, calldatasize, caller, callvalue, from, newOwner, number))

block593(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3816640493
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, balance, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block3989(s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller, callvalue))

jump593(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(foundersAddresses), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, balance, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block604(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, calldatasize, caller, callvalue, from, newOwner, number))

block604(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3833895730
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block4034(s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue))

jump604(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, amount, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block615(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number))

jump615(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block4079(s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller, callvalue))

jump615(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block626(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number))

block615(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3980668436
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	eq(s(2), s(1))
	call(block4102(s(0),g(super_owner), g(owner), calldatasize, caller, callvalue, newOwner))

jump626(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	neq(s(2), s(1))
	call(block637(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number))

block626(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, newOwner, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4104266473
	nop(PUSH4)
	call(jump637(s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	eq(s(2), s(1))
	call(block4169(s(0),g(soldedSupply), l(l1), l(l0), callvalue))

jump637(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	neq(s(2), s(1))
	call(block648(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number))

jump648(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	eq(s(2), s(1))
	call(block4212(s(0),g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, callvalue, from))

jump648(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	neq(s(2), s(1))
	call(block659_0(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block648(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4182604304
	nop(PUSH4)
	call(jump648(s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, allow, calldatasize, caller, callvalue, from, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block659(g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(0) = 667
	nop(PUSH2)
	s(1) = 4291
	nop(PUSH2)
	call(block4291(s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block667()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump669(s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, callvalue, sellPrice)=>
	eq(s(2), 0)
	call(block681(s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, sellPrice))

jump669(s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, callvalue, sellPrice)=>
	neq(s(2), 0)
	call(block677(s(1), s(0)))

block669(s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, callvalue, sellPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump669(s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, callvalue, sellPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block677(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block681(s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), buyPrice, calldatasize, caller, sellPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 722
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = buyPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = sellPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5555
	nop(PUSH2)
	call(block5555(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller))
	nop(JUMP)

block722(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block724(s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump724(s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump724(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block736(s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

jump724(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block732(s(1), s(0)))

block732(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block736(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 745
	nop(PUSH2)
	s(2) = 5754
	nop(PUSH2)
	call(block5754(s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block745(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block782(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block782(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump782(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump782(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block809(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump782(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block791(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block791(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 782
	nop(PUSH2)
	call(block782(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block809(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump809(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump809(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block854(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump809(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block829(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block829(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block854(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block854(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block868(s(0), g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump868(s(2),s(1),s(0),g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump868(s(2), s(1), s(0), g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block880(s(1), s(0),g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller))

jump868(s(2), s(1), s(0), g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block876(s(1), s(0)))

block876(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block880(s(1), s(0), g(icoFinished), g(super_owner), g(owner), burnAfterSoldAmount, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 911
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = burnAfterSoldAmount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5912
	nop(PUSH2)
	call(block5912(s(2),s(1),s(0),g(icoFinished), g(super_owner), g(owner), caller))
	nop(JUMP)

block911(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block913(s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump913(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump913(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block925(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, spender, value))

jump913(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block921(s(1), s(0)))

block921(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block925(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 988
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6103
	nop(PUSH2)
	call(block6103(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block988(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1014(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1026(s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1014(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1022(s(1), s(0)))

block1014(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1014(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1022(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1026(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1121
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6244
	nop(PUSH2)
	call(block6244(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block1121(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1147(s(0), g(blocksPerHour), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1147(s(2),s(1),s(0),g(blocksPerHour), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1147(s(2), s(1), s(0), g(blocksPerHour), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1159(s(1), s(0),g(blocksPerHour), l(l1), l(l0)))

jump1147(s(2), s(1), s(0), g(blocksPerHour), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1155(s(1), s(0)))

block1155(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1159(s(1), s(0), g(blocksPerHour), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1168
	nop(PUSH2)
	s(2) = 7674
	nop(PUSH2)
	call(block7674(s(1),s(0),g(blocksPerHour), l(l1), l(l0)))
	nop(JUMP)

block1168(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1190(s(0), g(dividendsBuffer), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1190(s(2),s(1),s(0),g(dividendsBuffer), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1190(s(2), s(1), s(0), g(dividendsBuffer), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1202(s(1), s(0),g(dividendsBuffer), l(l1), l(l0)))

jump1190(s(2), s(1), s(0), g(dividendsBuffer), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1198(s(1), s(0)))

block1198(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1202(s(1), s(0), g(dividendsBuffer), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1211
	nop(PUSH2)
	s(2) = 7680
	nop(PUSH2)
	call(block7680(s(1),s(0),g(dividendsBuffer), l(l1), l(l0)))
	nop(JUMP)

block1211(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1233(s(0), g(icoRaisedETH), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1233(s(2),s(1),s(0),g(icoRaisedETH), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1233(s(2), s(1), s(0), g(icoRaisedETH), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1245(s(1), s(0),g(icoRaisedETH), l(l1), l(l0)))

jump1233(s(2), s(1), s(0), g(icoRaisedETH), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1241(s(1), s(0)))

block1241(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1245(s(1), s(0), g(icoRaisedETH), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1254
	nop(PUSH2)
	s(2) = 7686
	nop(PUSH2)
	call(block7686(s(1),s(0),g(icoRaisedETH), l(l1), l(l0)))
	nop(JUMP)

block1254(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1276(s(0), g(gracePeriodAmount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1276(s(2),s(1),s(0),g(gracePeriodAmount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1276(s(2), s(1), s(0), g(gracePeriodAmount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1288(s(1), s(0),g(gracePeriodAmount), l(l1), l(l0)))

jump1276(s(2), s(1), s(0), g(gracePeriodAmount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1284(s(1), s(0)))

block1284(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1288(s(1), s(0), g(gracePeriodAmount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1297
	nop(PUSH2)
	s(2) = 7692
	nop(PUSH2)
	call(block7692(s(1),s(0),g(gracePeriodAmount), l(l1), l(l0)))
	nop(JUMP)

block1297(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1319(s(2), s(1), s(0), g(dividendsRound), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1331(s(1), s(0),g(dividendsRound), l(l1), l(l0)))

jump1319(s(2), s(1), s(0), g(dividendsRound), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1327(s(1), s(0)))

block1319(s(0), g(dividendsRound), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1319(s(2),s(1),s(0),g(dividendsRound), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1327(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1331(s(1), s(0), g(dividendsRound), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1340
	nop(PUSH2)
	s(2) = 7698
	nop(PUSH2)
	call(block7698(s(1),s(0),g(dividendsRound), l(l1), l(l0)))
	nop(JUMP)

block1340(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1374(s(0), g(allowTransfers), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1374(s(2),s(1),s(0),g(allowTransfers), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1374(s(2), s(1), s(0), g(allowTransfers), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1386(s(1), s(0),g(allowTransfers), l(l1), l(l0)))

jump1374(s(2), s(1), s(0), g(allowTransfers), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1382(s(1), s(0)))

block1382(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1386(s(1), s(0), g(allowTransfers), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1395
	nop(PUSH2)
	s(2) = 7720
	nop(PUSH2)
	call(block7720(s(1),s(0),g(allowTransfers), l(l1), l(l0)))
	nop(JUMP)

block1395(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1421(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1421(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1421(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1433(s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1421(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1429(s(1), s(0)))

block1429(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1433(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1528
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 7739
	nop(PUSH2)
	call(block7739(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block1528(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1554(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1554(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1554(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1566(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump1554(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1562(s(1), s(0)))

block1562(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1566(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1619
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9490
	nop(PUSH2)
	call(block9490(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1619(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1641(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1641(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1641(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1653(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1641(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1649(s(1), s(0)))

block1649(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1653(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1662
	nop(PUSH2)
	s(2) = 9514
	nop(PUSH2)
	call(block9514(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1662(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1690(s(2), s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1702(s(1), s(0),g(percentToFoundersAfterICO), l(l1), l(l0)))

jump1690(s(2), s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1698(s(1), s(0)))

block1690(s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1690(s(2),s(1),s(0),g(percentToFoundersAfterICO), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1698(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1702(s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1711
	nop(PUSH2)
	s(2) = 9533
	nop(PUSH2)
	call(block9533(s(1),s(0),g(percentToFoundersAfterICO), l(l1), l(l0)))
	nop(JUMP)

block1711(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1737(s(2), s(1), s(0), g(gracePeriodStopBlock), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1749(s(1), s(0),g(gracePeriodStopBlock), l(l1), l(l0)))

jump1737(s(2), s(1), s(0), g(gracePeriodStopBlock), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1745(s(1), s(0)))

block1737(s(0), g(gracePeriodStopBlock), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1737(s(2),s(1),s(0),g(gracePeriodStopBlock), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1745(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1749(s(1), s(0), g(gracePeriodStopBlock), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1758
	nop(PUSH2)
	s(2) = 9552
	nop(PUSH2)
	call(block9552(s(1),s(0),g(gracePeriodStopBlock), l(l1), l(l0)))
	nop(JUMP)

block1758(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1780(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block1792(s(1), s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller))

jump1780(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block1788(s(1), s(0)))

block1780(s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1780(s(2),s(1),s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1788(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1792(s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), amount, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1823
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9558
	nop(PUSH2)
	call(block9558(s(2),s(1),s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block1823(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1825(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), calldatasize, caller, callvalue, dividendsRound)=>
	nop(JUMPDEST)
	s(1) = 1861
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = dividendsRound
	nop(CALLDATALOAD)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9808
	nop(PUSH2)
	call(block9808(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), caller, callvalue))
	nop(JUMP)

block1861(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1863(s(2), s(1), s(0), g(weiToPresalersFromICO), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1875(s(1), s(0),g(weiToPresalersFromICO), l(l1), l(l0)))

jump1863(s(2), s(1), s(0), g(weiToPresalersFromICO), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1871(s(1), s(0)))

block1863(s(0), g(weiToPresalersFromICO), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1863(s(2),s(1),s(0),g(weiToPresalersFromICO), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1871(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1875(s(1), s(0), g(weiToPresalersFromICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1884
	nop(PUSH2)
	s(2) = 10096
	nop(PUSH2)
	call(block10096(s(1),s(0),g(weiToPresalersFromICO), l(l1), l(l0)))
	nop(JUMP)

block1884(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1918(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1930(s(1), s(0),g(buyPrice), l(l1), l(l0)))

jump1918(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1926(s(1), s(0)))

block1918(s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1918(s(2),s(1),s(0),g(buyPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1926(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1930(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1939
	nop(PUSH2)
	s(2) = 10118
	nop(PUSH2)
	call(block10118(s(1),s(0),g(buyPrice), l(l1), l(l0)))
	nop(JUMP)

block1939(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1961(s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1961(s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1961(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1973(s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

jump1961(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1969(s(1), s(0)))

block1969(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1973(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1982
	nop(PUSH2)
	s(2) = 10124
	nop(PUSH2)
	call(block10124(s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1982(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2019(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump2019(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2046(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2019(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2028(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2019(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2019(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2028(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2019
	nop(PUSH2)
	call(block2019(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block2046(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2046(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2046(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2091(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2046(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2066(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2066(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2091(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2091(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2105(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2117(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump2105(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2113(s(1), s(0)))

block2105(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2105(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2113(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2117(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2170
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10282
	nop(PUSH2)
	call(block10282(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2170(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2192(s(2), s(1), s(0), g(presaleAmountETH), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2204(s(1), s(0),g(presaleAmountETH), l(l1), l(l0)))

jump2192(s(2), s(1), s(0), g(presaleAmountETH), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2200(s(1), s(0)))

block2192(s(0), g(presaleAmountETH), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2192(s(2),s(1),s(0),g(presaleAmountETH), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2200(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2204(s(1), s(0), g(presaleAmountETH), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2213
	nop(PUSH2)
	s(2) = 10306
	nop(PUSH2)
	call(block10306(s(1),s(0),g(presaleAmountETH), l(l1), l(l0)))
	nop(JUMP)

block2213(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2235(s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, callvalue, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2235(s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, callvalue, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2235(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, callvalue, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount)=>
	eq(s(2), 0)
	call(block2247(s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount))

jump2235(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, callvalue, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount)=>
	neq(s(2), 0)
	call(block2243(s(1), s(0)))

block2243(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2247(s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), calldatasize, caller, gracePeriodMaxTarget, gracePeriodMinTran, gracePeriodPrice, gracePeriodStartBlock, gracePeriodStopBlock, resetAmount)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2342
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = gracePeriodPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = gracePeriodStartBlock
	nop(CALLDATALOAD)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = gracePeriodStopBlock
	nop(CALLDATALOAD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = gracePeriodMaxTarget
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = gracePeriodMinTran
	nop(CALLDATALOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = resetAmount
	nop(CALLDATALOAD)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 10312
	nop(PUSH2)
	call(block10312(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), caller))
	nop(JUMP)

block2342(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2344(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2344(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2344(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2356(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump2344(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2352(s(1), s(0)))

block2352(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2356(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2409
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10590
	nop(PUSH2)
	call(block10590(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2409(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2435(s(2), s(1), s(0), g(percentToPresalersFromICO), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2447(s(1), s(0),g(percentToPresalersFromICO), l(l1), l(l0)))

jump2435(s(2), s(1), s(0), g(percentToPresalersFromICO), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2443(s(1), s(0)))

block2435(s(0), g(percentToPresalersFromICO), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2435(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2443(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2447(s(1), s(0), g(percentToPresalersFromICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2456
	nop(PUSH2)
	s(2) = 10622
	nop(PUSH2)
	call(block10622(s(1),s(0),g(percentToPresalersFromICO), l(l1), l(l0)))
	nop(JUMP)

block2456(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2478(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2478(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2478(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2490(s(1), s(0),g(owner), l(l1), l(l0)))

jump2478(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2486(s(1), s(0)))

block2486(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2490(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2499
	nop(PUSH2)
	s(2) = 10628
	nop(PUSH2)
	call(block10628(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block2499(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2565(s(0), g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2565(s(2),s(1),s(0),g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2565(s(2), s(1), s(0), g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block2577(s(1), s(0),g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller))

jump2565(s(2), s(1), s(0), g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block2573(s(1), s(0)))

block2573(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2577(s(1), s(0), g(sellPrice), g(super_owner), g(owner), blocksPerHour, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2608
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = blocksPerHour
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10665
	nop(PUSH2)
	call(block10665(s(2),s(1),s(0),g(sellPrice), g(super_owner), g(owner), caller))
	nop(JUMP)

block2608(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2610(s(0), g(decimals), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2610(s(2),s(1),s(0),g(decimals), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2610(s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2622(s(1), s(0),g(decimals), l(l3), l(l2), l(l1), l(l0)))

jump2610(s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2618(s(1), s(0)))

block2618(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2622(s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2631
	nop(PUSH2)
	s(2) = 10856
	nop(PUSH2)
	call(block10856(s(1),s(0),g(decimals), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2631(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2668(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2668(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2668(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2668(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2695(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2668(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2677(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2677(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2668
	nop(PUSH2)
	call(block2668(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block2695(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2695(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2695(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2740(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2695(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2715(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2715(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2740(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2740(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2754(s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2754(s(2),s(1),s(0),g(percentToFoundersAfterICO), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2754(s(2), s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2766(s(1), s(0),g(percentToFoundersAfterICO), l(l1), l(l0)))

jump2754(s(2), s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2762(s(1), s(0)))

block2762(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2766(s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2775
	nop(PUSH2)
	s(2) = 11014
	nop(PUSH2)
	call(block11014(s(1),s(0),g(percentToFoundersAfterICO), l(l1), l(l0)))
	nop(JUMP)

block2775(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2809(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2809(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2809(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2821(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump2809(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2817(s(1), s(0)))

block2817(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2821(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2874
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11036
	nop(PUSH2)
	call(block11036(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block2874(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2896(s(0), g(dividendsSum), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2896(s(2),s(1),s(0),g(dividendsSum), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2896(s(2), s(1), s(0), g(dividendsSum), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2908(s(1), s(0),g(dividendsSum), l(l1), l(l0)))

jump2896(s(2), s(1), s(0), g(dividendsSum), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2904(s(1), s(0)))

block2904(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2908(s(1), s(0), g(dividendsSum), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2917
	nop(PUSH2)
	s(2) = 11060
	nop(PUSH2)
	call(block11060(s(1),s(0),g(dividendsSum), l(l1), l(l0)))
	nop(JUMP)

block2917(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2939(s(0), g(icoFinished), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2939(s(2),s(1),s(0),g(icoFinished), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2939(s(2), s(1), s(0), g(icoFinished), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2951(s(1), s(0),g(icoFinished), l(l1), l(l0)))

jump2939(s(2), s(1), s(0), g(icoFinished), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2947(s(1), s(0)))

block2947(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2951(s(1), s(0), g(icoFinished), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2960
	nop(PUSH2)
	s(2) = 11066
	nop(PUSH2)
	call(block11066(s(1),s(0),g(icoFinished), l(l1), l(l0)))
	nop(JUMP)

block2960(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2982(s(0), g(gracePeriodStartBlock), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2982(s(2),s(1),s(0),g(gracePeriodStartBlock), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2982(s(2), s(1), s(0), g(gracePeriodStartBlock), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2994(s(1), s(0),g(gracePeriodStartBlock), l(l1), l(l0)))

jump2982(s(2), s(1), s(0), g(gracePeriodStartBlock), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2990(s(1), s(0)))

block2990(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2994(s(1), s(0), g(gracePeriodStartBlock), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3003
	nop(PUSH2)
	s(2) = 11072
	nop(PUSH2)
	call(block11072(s(1),s(0),g(gracePeriodStartBlock), l(l1), l(l0)))
	nop(JUMP)

block3003(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3025(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = 3033
	nop(PUSH2)
	s(2) = 4291
	nop(PUSH2)
	call(block4291_0(s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block3033(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3035(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3035(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3035(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3047(s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, to, value))

jump3035(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3043(s(1), s(0)))

block3043(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3047(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3110
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 11078
	nop(PUSH2)
	call(block11078(s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block3110(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3112(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, callvalue, number)=>
	eq(s(2), 0)
	call(block3124(s(1), s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number))

jump3112(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, callvalue, number)=>
	neq(s(2), 0)
	call(block3120(s(1), s(0)))

block3112(s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3112(s(2),s(1),s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3120(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3124(s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3133
	nop(PUSH2)
	s(2) = 12460
	nop(PUSH2)
	call(block12460(s(1),s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number))
	nop(JUMP)

block3133(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3135(s(2), s(1), s(0), g(gracePeriodMinTran), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3147(s(1), s(0),g(gracePeriodMinTran), l(l1), l(l0)))

jump3135(s(2), s(1), s(0), g(gracePeriodMinTran), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3143(s(1), s(0)))

block3135(s(0), g(gracePeriodMinTran), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3135(s(2),s(1),s(0),g(gracePeriodMinTran), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3143(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3147(s(1), s(0), g(gracePeriodMinTran), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3156
	nop(PUSH2)
	s(2) = 12666
	nop(PUSH2)
	call(block12666(s(1),s(0),g(gracePeriodMinTran), l(l1), l(l0)))
	nop(JUMP)

block3156(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3178(s(2), s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3190(s(1), s(0),g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller))

jump3178(s(2), s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3186(s(1), s(0)))

block3178(s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3178(s(2),s(1),s(0),g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3186(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3190(s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3221
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12672
	nop(PUSH2)
	call(block12672(s(2),s(1),s(0),g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block3221(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3223(s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3223(s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3223(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(2), 0)
	call(block3235(s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number))

jump3223(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(2), 0)
	call(block3231(s(1), s(0)))

block3231(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3235(s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3244
	nop(PUSH2)
	s(2) = 13014
	nop(PUSH2)
	call(block13014(s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number))
	nop(JUMP)

block3244(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3246(s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3246(s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3246(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	eq(s(2), 0)
	call(block3258(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value))

jump3246(s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	neq(s(2), 0)
	call(block3254(s(1), s(0)))

block3254(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3258(s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3391
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = extraData
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(8) = extraData
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 31
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 64
	nop(PUSH1)
	l(l0) = s(11)
	nop(MSTORE)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 14098
	nop(PUSH2)
	call(block14098(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block3391(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3417(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3429(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump3417(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3425(s(1), s(0)))

block3417(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3417(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3425(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3429(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3498
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14485
	nop(PUSH2)
	call(block14485(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3498(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3520(s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3520(s(2),s(1),s(0),g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3520(s(2), s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3532(s(1), s(0),g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller))

jump3520(s(2), s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3528(s(1), s(0)))

block3528(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3532(s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), addr, address, amountETH, amountSTE, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3605
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = addr
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = amountETH
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = amountSTE
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 14522
	nop(PUSH2)
	call(block14522(s(4),s(3),s(2),s(1),s(0),g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block3605(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3607(s(2), s(1), s(0), g(gracePeriodMaxTarget), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3619(s(1), s(0),g(gracePeriodMaxTarget), l(l1), l(l0)))

jump3607(s(2), s(1), s(0), g(gracePeriodMaxTarget), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3615(s(1), s(0)))

block3607(s(0), g(gracePeriodMaxTarget), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3607(s(2),s(1),s(0),g(gracePeriodMaxTarget), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3615(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3619(s(1), s(0), g(gracePeriodMaxTarget), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3628
	nop(PUSH2)
	s(2) = 15339
	nop(PUSH2)
	call(block15339(s(1),s(0),g(gracePeriodMaxTarget), l(l1), l(l0)))
	nop(JUMP)

block3628(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3650(s(0), g(burnAfterSoldAmount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3650(s(2),s(1),s(0),g(burnAfterSoldAmount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3650(s(2), s(1), s(0), g(burnAfterSoldAmount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3662(s(1), s(0),g(burnAfterSoldAmount), l(l1), l(l0)))

jump3650(s(2), s(1), s(0), g(burnAfterSoldAmount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3658(s(1), s(0)))

block3658(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3662(s(1), s(0), g(burnAfterSoldAmount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3671
	nop(PUSH2)
	s(2) = 15345
	nop(PUSH2)
	call(block15345(s(1),s(0),g(burnAfterSoldAmount), l(l1), l(l0)))
	nop(JUMP)

block3671(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3693(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3705(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump3693(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3701(s(1), s(0)))

block3693(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3693(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3701(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3705(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3758
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15351
	nop(PUSH2)
	call(block15351(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3758(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3780(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3792(s(1), s(0),g(sellPrice), l(l1), l(l0)))

jump3780(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3788(s(1), s(0)))

block3780(s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3780(s(2),s(1),s(0),g(sellPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3788(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3792(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3801
	nop(PUSH2)
	s(2) = 15375
	nop(PUSH2)
	call(block15375(s(1),s(0),g(sellPrice), l(l1), l(l0)))
	nop(JUMP)

block3801(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3823(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3835(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize))

jump3823(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3831(s(1), s(0)))

block3823(s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3823(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3831(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3835(s(1), s(0), l(l4), l(l3), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3920
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15381
	nop(PUSH2)
	call(block15381(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block3920(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3942(s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3942(s(2),s(1),s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3942(s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block3954(s(1), s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller))

jump3942(s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3950(s(1), s(0)))

block3950(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3954(s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), allowTransfers, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3987
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = allowTransfers
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15418
	nop(PUSH2)
	call(block15418(s(2),s(1),s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), caller))
	nop(JUMP)

block3987(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3989(s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3989(s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3989(s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block4001(s(1), s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller))

jump3989(s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block3997(s(1), s(0)))

block3997(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4001(s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, amount, balance, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4032
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15628
	nop(PUSH2)
	call(block15628(s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, balance, caller))
	nop(JUMP)

block4032(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4034(s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4034(s(2),s(1),s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4034(s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block4046(s(1), s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller))

jump4034(s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block4042(s(1), s(0)))

block4042(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4046(s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, amount, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4077
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16044
	nop(PUSH2)
	call(block16044(s(2),s(1),s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block4077(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4079(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block4091(s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump4079(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block4087(s(1), s(0)))

block4079(s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4079(s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4087(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4091(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4100
	nop(PUSH2)
	s(2) = 16467
	nop(PUSH2)
	call(block16467(s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(JUMP)

block4100(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4102(s(0), g(super_owner), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4102(s(2),s(1),s(0),g(super_owner), g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4102(s(2), s(1), s(0), g(super_owner), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block4114(s(1), s(0),g(super_owner), g(owner), calldatasize, caller, newOwner))

jump4102(s(2), s(1), s(0), g(super_owner), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block4110(s(1), s(0)))

block4110(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4114(s(1), s(0), g(super_owner), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4167
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16780
	nop(PUSH2)
	call(block16780(s(2),s(1),s(0),g(super_owner), g(owner), caller))
	nop(JUMP)

block4167(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4169(s(2), s(1), s(0), g(soldedSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4181(s(1), s(0),g(soldedSupply), l(l1), l(l0)))

jump4169(s(2), s(1), s(0), g(soldedSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4177(s(1), s(0)))

block4169(s(0), g(soldedSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4169(s(2),s(1),s(0),g(soldedSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4177(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4181(s(1), s(0), g(soldedSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4190
	nop(PUSH2)
	s(2) = 16939
	nop(PUSH2)
	call(block16939(s(1),s(0),g(soldedSupply), l(l1), l(l0)))
	nop(JUMP)

block4190(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4212(s(0), g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, callvalue, from)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4212(s(2),s(1),s(0),g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, callvalue, from))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4212(s(2), s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, callvalue, from)=>
	eq(s(2), 0)
	call(block4224(s(1), s(0),g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, from))

jump4212(s(2), s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, callvalue, from)=>
	neq(s(2), 0)
	call(block4220(s(1), s(0)))

block4220(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4224(s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), allow, calldatasize, caller, from)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4289
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = allow
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16945
	nop(PUSH2)
	call(block16945(s(3),s(2),s(1),s(0),g(super_owner), g(owner), l(l4), l(l3), caller))
	nop(JUMP)

block4289(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4291(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 4302
	nop(PUSH2)
	s(4) = 17217
	nop(PUSH2)
	call(block17217(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

jump4302(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(3), 0)
	call(block4312(s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4302(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(3), 0)
	call(block4308(s(2), s(1), s(0)))

block4302(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump4302(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4308(s(2), s(1), s(0))=>
	s(3) = 5551
	nop(PUSH2)
	call(block5551(s(2),s(1),s(0)))
	nop(JUMP)

jump4312(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(5), 0)
	call(block4329(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4312(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(5), 0)
	call(block4328(s(4), s(3), s(2), s(1), s(0)))

block4312(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 14
	nop(PUSH1)
	s(3) = g(percentToPresalersFromICO)
	nop(SLOAD)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = s(3)
	nop(DUP2)
	call(jump4312(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4328(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4329(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(4), 0)
	call(block4356(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4329(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(4), 0)
	call(block4349(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block4329(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 18
	nop(PUSH1)
	s(3) = g(gracePeriodStopBlock)
	nop(SLOAD)
	s(4) = number
	nop(NUMBER)
	s(3) = lt(s(4), s(3))
	nop(LT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump4329(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4349(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(3) = 19
	nop(PUSH1)
	s(3) = g(gracePeriodMinTran)
	nop(SLOAD)
	s(4) = number
	nop(NUMBER)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block4356(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4356(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(3), 0)
	call(block4755(s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4356(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(3), 0)
	call(block4362(s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4356(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4356(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4362(s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(3) = 20
	nop(PUSH1)
	s(3) = g(gracePeriodMaxTarget)
	nop(SLOAD)
	s(4) = callvalue
	nop(CALLVALUE)
	s(3) = lt(s(4), s(3))
	nop(LT)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 4380
	nop(PUSH2)
	call(jump4362(s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(JUMPI)

jump4362(s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 1 )
	call(block4380(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4362(s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 1 )
	call(block4372(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4372(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(3) = 21
	nop(PUSH1)
	s(3) = g(gracePeriodAmount)
	nop(SLOAD)
	s(4) = 22
	nop(PUSH1)
	s(4) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block4380(s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4380(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(3), 0)
	call(block4390(s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4380(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(3), 0)
	call(block4386(s(2), s(1), s(0)))

block4380(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4380(s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4386(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block4390(s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(burnAfterSoldAmount) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(soldedSupply)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(soldedSupply) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 29
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 100
	nop(PUSH1)
	s(4) = 10
	nop(PUSH1)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump4390(s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4390(s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4514(s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4390(s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4513(s(4), s(3), s(2), s(1), s(0)))

block4513(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4514(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), 0)
	call(block4606(s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4514(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), 0)
	call(block4605(s(4), s(3), s(2), s(1), s(0)))

block4514(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 100
	nop(PUSH1)
	s(4) = 10
	nop(PUSH1)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump4514(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4605(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4606(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), 0)
	call(block4732(s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4606(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), 0)
	call(block4731(s(4), s(3), s(2), s(1), s(0)))

block4606(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(bountyAddr)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 100
	nop(PUSH1)
	s(4) = 10
	nop(PUSH1)
	s(5) = s(1)
	nop(DUP4)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump4606(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4731(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4732(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(1)
	nop(DUP3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 11
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(blocksPerHour)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(blocksPerHour) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5045
	nop(PUSH2)
	call(block5045(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block4755(s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 24
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(3)
	nop(DUP1)
	call(jump4755(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4755(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4846(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4755(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4778(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4778(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 27
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block4846(s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4846(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	call(jump4846(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4846(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4860(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4846(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4853(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4853(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 16
	nop(PUSH1)
	s(4) = g(presaleAmountETH)
	nop(SLOAD)
	s(3) = gt(s(4), s(3))
	nop(GT)
	call(block4860(s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4860(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(3), 0)
	call(block5044(s(2), s(1), s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4860(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(3), 0)
	call(block4866(s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4860(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4860(s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(8), 0)
	call(block4981(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(8), 0)
	call(block4980(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4866(s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(3) = 1000000000000
	nop(PUSH5)
	s(4) = 15
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(weiToPresalersFromICO)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 10
	nop(PUSH1)
	s(5) = g(soldedSupply)
	nop(SLOAD)
	s(6) = 17
	nop(PUSH1)
	s(6) = g(gracePeriodStartBlock)
	nop(SLOAD)
	s(7) = 100000000
	nop(PUSH4)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump4866(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4980(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4981(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4993(s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4981(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4992(s(4), s(3), s(2), s(1), s(0)))

block4981(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	nop(DUP2)
	call(jump4981(s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4992(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4993(s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = callvalue
	nop(CALLVALUE)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 16
	nop(PUSH1)
	s(3) = g(presaleAmountETH)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	call(jump4993(s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4993(s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	leq(s(4), s(3))
	call(block5026(s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4993(s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	gt(s(4), s(3))
	call(block5009(s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5009(s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(3) = 16
	nop(PUSH1)
	s(3) = g(presaleAmountETH)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 16
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(presaleAmountETH) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5043
	nop(PUSH2)
	call(block5043(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5026(s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 16
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(presaleAmountETH)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(presaleAmountETH) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block5043(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5043(s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5044(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5044(s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5045(s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5045(s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 14
	nop(PUSH1)
	s(4) = g(percentToPresalersFromICO)
	nop(SLOAD)
	call(jump5045(s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5045(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(4), s(3))
	call(block5291(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5045(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(4), s(3))
	call(block5057(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5057(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(3) = s(1)
	nop(DUP2)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump5057(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5057(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	geq(s(4), s(3))
	call(block5132(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5057(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	lt(s(4), s(3))
	call(block5128(s(2), s(1), s(0)))

block5128(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5132(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 5306
	nop(PUSH2)
	call(block5306(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5291(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump5291(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5291(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), s(3))
	call(block5305(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5291(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), s(3))
	call(block5301(s(2), s(1), s(0)))

block5301(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5305(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5306(s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5306(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump5306(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5306(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(4), s(3))
	call(block5449(s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5306(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(4), s(3))
	call(block5316(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5316(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(3), 0)
	call(block5448(s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5316(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(3), 0)
	call(block5444(s(2), s(1), s(0)))

block5316(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(3) = 0
	nop(PUSH1)
	s(4) = 27
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump5316(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5444(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5448(s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5449(s(2),s(1),s(0), l(l1), l(l0), address, caller))

block5449(s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	call(block5551(s(2),s(1),s(0)))

block5551(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block667())
	nop(JUMP)

jump5555(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller)=>
	eq(s(5), 0)
	call(block5726(s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice)))

jump5555(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller)=>
	neq(s(5), 0)
	call(block5643(s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), caller))

block5555(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump5555(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5643(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), caller)=>
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(super_owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block5726(s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice)))

block5726(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice))=>
	nop(JUMPDEST)
	call(jump5726(s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5726(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice))=>
	eq(s(4), 0)
	call(block5736(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice)))

jump5726(s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice))=>
	neq(s(4), 0)
	call(block5732(s(3), s(2), s(1), s(0)))

block5732(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5736(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 14
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(percentToPresalersFromICO) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 13
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block722(s(0)))
	nop(JUMP)

block5754(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump5754(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5754(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5904(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5754(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

block5834(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5834(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump5834(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5861(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump5834(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5904
	nop(PUSH2)
	call(block5904(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5861(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5875(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5875(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5875(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump5875(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block5875(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5875(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block5895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block5895(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5904(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5904(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block745(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump5912(s(4), s(3), s(2), s(1), s(0), g(icoFinished), g(super_owner), g(owner), caller)=>
	eq(s(4), 0)
	call(block6083(s(3), s(2), s(1), s(0),g(icoFinished)))

jump5912(s(4), s(3), s(2), s(1), s(0), g(icoFinished), g(super_owner), g(owner), caller)=>
	neq(s(4), 0)
	call(block6000(s(3), s(2), s(1), s(0),g(icoFinished), g(super_owner), caller))

block5912(s(2), s(1), s(0), g(icoFinished), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump5912(s(4),s(3),s(2),s(1),s(0),g(icoFinished), g(super_owner), g(owner), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6000(s(3), s(2), s(1), s(0), g(icoFinished), g(super_owner), caller)=>
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block6083(s(3),s(2),s(1),s(0),g(icoFinished)))

jump6083(s(3), s(2), s(1), s(0), g(icoFinished))=>
	eq(s(3), 0)
	call(block6093(s(2), s(1), s(0),g(icoFinished)))

jump6083(s(3), s(2), s(1), s(0), g(icoFinished))=>
	neq(s(3), 0)
	call(block6089(s(2), s(1), s(0)))

block6083(s(3), s(2), s(1), s(0), g(icoFinished))=>
	nop(JUMPDEST)
	call(jump6083(s(3),s(2),s(1),s(0),g(icoFinished)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6089(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6093(s(2), s(1), s(0), g(icoFinished))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 23
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(icoFinished) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block911(s(0)))
	nop(JUMP)

block6103(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 34
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block988(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6244(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump6244(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6244(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block6420(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6244(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block6337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), caller))

block6337(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(super_owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(block6420(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6420(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block6430(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6420(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block6426(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6420(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump6420(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6426(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block6430(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump6430(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6430(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block6466(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6430(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block6462(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6462(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump6466(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block6542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6466(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block6538(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6466(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump6466(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6538(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block6542(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 26
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump6542(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6542(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block6683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6542(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block6679(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6679(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump6683(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block6734(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6683(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block6727(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump6683(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6727(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 32
	nop(PUSH1)
	s(9) = g(dividendsBuffer)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block6734(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6734(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block7258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump6734(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block6740(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6734(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump6734(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6740(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = 6748
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 17409
	nop(PUSH2)
	call(block17409(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

jump6748(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block6876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6748(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block6761(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6748(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	call(jump6748(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6761(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block6876(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump6876(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block6998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump6876(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block6882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6882(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block6998(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block6998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 7007
	nop(PUSH2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 17409
	nop(PUSH2)
	call(block17409_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block7007(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	call(jump7007(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7007(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block7135(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump7007(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block7020(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block7020(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block7135(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump7135(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block7257(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0)))

jump7135(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block7141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block7135(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump7135(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7141(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block7257(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))

block7257(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block7258(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))

jump7258(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block7486(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7258(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block7422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block7258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	call(jump7258(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7422(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block7485(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7422(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block7481(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7422(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump7422(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7481(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7485(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block7486(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block7486(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump7486(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7486(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block7560(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7486(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block7496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7496(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block7559(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump7496(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block7555(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump7496(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7555(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7559(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block7560(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block7560(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1121(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7674(s(1), s(0), g(blocksPerHour), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(blocksPerHour)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1168(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7680(s(1), s(0), g(dividendsBuffer), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(2) = g(dividendsBuffer)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1211(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7686(s(1), s(0), g(icoRaisedETH), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(icoRaisedETH)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1254(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7692(s(1), s(0), g(gracePeriodAmount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(gracePeriodAmount)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1297(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7698(s(1), s(0), g(dividendsRound), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(dividendsRound)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 4294967295
	nop(PUSH4)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1340(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7720(s(1), s(0), g(allowTransfers), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(allowTransfers)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1395(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump7739(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), s(8))
	call(block7779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump7739(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), s(8))
	call(block7775(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7739(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump7739(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7775(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump7779(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(9), s(8))
	call(block7855(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump7779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(9), s(8))
	call(block7851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump7855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(9), s(8))
	call(block7996(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump7855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(9), s(8))
	call(block7992(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7855(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 26
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump7855(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7992(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7996(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 34
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	call(jump7996(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7996(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(9), s(8))
	call(block8133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump7996(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(9), s(8))
	call(block8129(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8129(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block8133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 24
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump8133(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8133(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8240(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8133(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8157(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

block8157(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(bountyAddr)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(block8240(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8240(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	call(jump8240(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8240(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8240(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8247(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8247(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 25
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(block8326(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8326(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	call(jump8326(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8326(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8351(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8326(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8333(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8333(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 24
	nop(PUSH1)
	s(9) = 5
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(allowTransfers)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(block8351(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8351(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump8351(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8351(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(8), 0)
	call(block8361(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8351(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(8), 0)
	call(block8357(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8357(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump8361(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8361(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8405(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8361(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump8361(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8405(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 32
	nop(PUSH1)
	s(9) = g(dividendsBuffer)
	nop(SLOAD)
	s(8) = gt(s(9), s(8))
	nop(GT)
	call(block8412(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(8), 0)
	call(block8936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller))

jump8412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(8), 0)
	call(block8418(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8412(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump8412(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8418(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(8) = 8426
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 17409
	nop(PUSH2)
	call(block17409_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block8426(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	call(jump8426(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8426(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8426(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8439(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8439(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block8554(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump8554(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(8), 0)
	call(block8676(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump8554(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(8), 0)
	call(block8560(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8560(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block8676(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block8676(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 8685
	nop(PUSH2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 17409
	nop(PUSH2)
	call(block17409_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

jump8685(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(9), 0)
	call(block8813(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump8685(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(9), 0)
	call(block8698(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block8685(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(9) = s(8)
	nop(DUP1)
	call(jump8685(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8698(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	call(block8813(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block8813(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump8813(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8813(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(8), 0)
	call(block8935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller))

jump8813(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(8), 0)
	call(block8819(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block8819(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 33
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block8935(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))

block8935(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block8936(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))

block8936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 26
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 34
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	call(jump8936(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8936(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(9), s(8))
	call(block9302(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump8936(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(9), s(8))
	call(block9238(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block9238(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump9238(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9238(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block9301(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump9238(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block9297(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9297(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block9301(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block9302(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

jump9302(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block9376(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump9302(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block9312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block9302(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump9302(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump9312(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9312(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block9375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump9312(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block9371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9371(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block9375(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block9376(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block9376(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1528(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9490(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 28
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1619(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9514(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(totalSupply)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1662(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9533(s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1711(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9552(s(1), s(0), g(gracePeriodStopBlock), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(2) = g(gracePeriodStopBlock)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1758(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9558(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(4), s(3))
	call(block9634(s(2), s(1), s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump9558(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(4), s(3))
	call(block9630(s(2), s(1), s(0)))

block9558(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump9558(s(4),s(3),s(2),s(1),s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9630(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9634(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(icoRaisedETH)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(icoRaisedETH) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	call(block1823(s(0)))
	nop(JUMP)

jump9808(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), caller, callvalue)=>
	eq(s(4), 0)
	call(block9979(s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))

jump9808(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), caller, callvalue)=>
	neq(s(4), 0)
	call(block9896(s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), caller, callvalue))

block9808(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump9808(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9896(s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(super_owner), caller, callvalue)=>
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block9979(s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))

block9979(s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	nop(JUMPDEST)
	call(jump9979(s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9979(s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	eq(s(3), 0)
	call(block9989(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))

jump9979(s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	neq(s(3), 0)
	call(block9985(s(2), s(1), s(0)))

block9985(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump9989(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	leq(s(4), s(3))
	call(block10043(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound)))

jump9989(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	gt(s(4), s(3))
	call(block10005(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))

block9989(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9989(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10005(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	geq(s(4), s(3))
	call(block10024(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))

jump10005(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	lt(s(4), s(3))
	call(block10020(s(2), s(1), s(0)))

block10005(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	s(3) = 1000000000000000
	nop(PUSH7)
	s(4) = callvalue
	nop(CALLVALUE)
	call(jump10005(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10020(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10024(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), callvalue)=>
	nop(JUMPDEST)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = 31
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(dividendsSum) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = 32
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(dividendsBuffer) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 10060
	nop(PUSH2)
	call(block10060(s(2),s(1),s(0),g(dividendsRound)))
	nop(JUMP)

block10043(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 31
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(dividendsSum) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(dividendsBuffer) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block10060(s(2),s(1),s(0),g(dividendsRound)))

block10060(s(2), s(1), s(0), g(dividendsRound))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 30
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(dividendsRound)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(dividendsRound) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block1861(s(0)))
	nop(JUMP)

block10096(s(1), s(0), g(weiToPresalersFromICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(weiToPresalersFromICO)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 4294967295
	nop(PUSH4)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1884(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10118(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(buyPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1939(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10124(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block10274(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10124(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block10204(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

block10124(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump10124(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10204(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block10231(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump10204(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block10212(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block10204(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump10204(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block10212(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 10274
	nop(PUSH2)
	call(block10274(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10231(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block10245(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block10245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump10245(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump10245(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block10245(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10245(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block10265(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block10265(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block10274(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block10274(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1982(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10282(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 26
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2170(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10306(s(1), s(0), g(presaleAmountETH), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(2) = g(presaleAmountETH)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2213(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10312(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), caller)=>
	eq(s(9), 0)
	call(block10483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply)))

jump10312(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), caller)=>
	neq(s(9), 0)
	call(block10400(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), caller))

block10312(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump10312(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), g(owner), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10400(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply), g(super_owner), caller)=>
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(super_owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8)= eq(s(9), s(8))
	nop(EQ)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	call(block10483(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply)))

jump10483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	eq(s(8), 0)
	call(block10493(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply)))

jump10483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	neq(s(8), 0)
	call(block10489(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10483(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	nop(JUMPDEST)
	call(jump10483(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10489(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump10493(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	eq(s(8), 0)
	call(block10582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump10493(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	neq(s(8), 0)
	call(block10574(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(soldedSupply)))

block10493(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply))=>
	nop(JUMPDEST)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 18
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(gracePeriodStopBlock) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 19
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(gracePeriodMinTran) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 21
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(gracePeriodAmount) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 20
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(gracePeriodMaxTarget) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 14
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(percentToPresalersFromICO) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 24
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(percentToFoundersAfterICO) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	call(jump10493(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(percentToPresalersFromICO), g(soldedSupply)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10574(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(soldedSupply))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 10
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(soldedSupply) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block10582(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block10582(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2342(s(0)))
	nop(JUMP)

block10590(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 25
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2409(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10622(s(1), s(0), g(percentToPresalersFromICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(2) = g(percentToPresalersFromICO)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2456(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10628(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2499(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10665(s(4), s(3), s(2), s(1), s(0), g(sellPrice), g(super_owner), g(owner), caller)=>
	eq(s(4), 0)
	call(block10836(s(3), s(2), s(1), s(0),g(sellPrice)))

jump10665(s(4), s(3), s(2), s(1), s(0), g(sellPrice), g(super_owner), g(owner), caller)=>
	neq(s(4), 0)
	call(block10753(s(3), s(2), s(1), s(0),g(sellPrice), g(super_owner), caller))

block10665(s(2), s(1), s(0), g(sellPrice), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump10665(s(4),s(3),s(2),s(1),s(0),g(sellPrice), g(super_owner), g(owner), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10753(s(3), s(2), s(1), s(0), g(sellPrice), g(super_owner), caller)=>
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block10836(s(3),s(2),s(1),s(0),g(sellPrice)))

block10836(s(3), s(2), s(1), s(0), g(sellPrice))=>
	nop(JUMPDEST)
	call(jump10836(s(3),s(2),s(1),s(0),g(sellPrice)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10836(s(3), s(2), s(1), s(0), g(sellPrice))=>
	eq(s(3), 0)
	call(block10846(s(2), s(1), s(0),g(sellPrice)))

jump10836(s(3), s(2), s(1), s(0), g(sellPrice))=>
	neq(s(3), 0)
	call(block10842(s(2), s(1), s(0)))

block10842(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10846(s(2), s(1), s(0), g(sellPrice))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 12
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(sellPrice) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2608(s(0)))
	nop(JUMP)

jump10856(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11006(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10856(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block10936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(decimals), l(l3), l(l2), l(l1), l(l0)))

block10856(s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(decimals)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(decimals)
	s(7) = g(decimals)
	call(jump10856(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(decimals), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10936(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump10936(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(decimals), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump10936(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block10963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump10936(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block10944(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(decimals), l(l2), l(l1), l(l0)))

block10944(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(decimals), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(decimals)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 11006
	nop(PUSH2)
	call(block11006(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block10977(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump10977(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block10977(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump10977(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block10997(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block10977(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump10977(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block10997(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block11006(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block11006(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2631(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11014(s(1), s(0), g(percentToFoundersAfterICO), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 4294967295
	nop(PUSH4)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2775(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11036(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 29
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2874(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11060(s(1), s(0), g(dividendsSum), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 31
	nop(PUSH1)
	s(2) = g(dividendsSum)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2917(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11066(s(1), s(0), g(icoFinished), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(icoFinished)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2960(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11072(s(1), s(0), g(gracePeriodStartBlock), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(2) = g(gracePeriodStartBlock)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3003(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11078(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block11117(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump11078(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block11113(s(5), s(4), s(3), s(2), s(1), s(0)))

block11078(s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump11078(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11113(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump11117(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block11193(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump11117(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block11189(s(5), s(4), s(3), s(2), s(1), s(0)))

block11117(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump11117(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11189(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump11193(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(7), s(6))
	call(block11334(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

jump11193(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(7), s(6))
	call(block11330(s(5), s(4), s(3), s(2), s(1), s(0)))

block11193(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 26
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump11193(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11330(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block11334(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 24
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump11334(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11334(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), 0)
	call(block11441(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11334(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(percentToFoundersAfterICO), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), 0)
	call(block11358(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller))

block11358(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(bountyAddr)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(block11441(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11441(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), 0)
	call(block11466(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11441(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), 0)
	call(block11448(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11441(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	call(jump11441(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11448(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(allowTransfers), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(6) = 24
	nop(PUSH1)
	s(7) = 5
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(allowTransfers)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(block11466(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11466(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block11476(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11466(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block11472(s(5), s(4), s(3), s(2), s(1), s(0)))

block11466(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump11466(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11472(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block11476(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 30
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(dividendsRound)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump11476(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11476(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), 0)
	call(block11527(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11476(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), 0)
	call(block11520(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11520(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 32
	nop(PUSH1)
	s(7) = g(dividendsBuffer)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block11527(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block12051(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller))

jump11527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block11533(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11527(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump11527(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11533(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(6) = 11541
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = 17409
	nop(PUSH2)
	call(block17409_3(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block11541(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	call(jump11541(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11541(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), 0)
	call(block11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11541(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), 0)
	call(block11554(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11554(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 33
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block11669(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump11669(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block11791(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump11669(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block11675(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11675(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 33
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block11791(s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block11791(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 11800
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 17409
	nop(PUSH2)
	call(block17409_4(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

jump11800(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(7), 0)
	call(block11928(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump11800(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(7), 0)
	call(block11813(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block11800(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	call(jump11800(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11813(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 33
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block11928(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump11928(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block12050(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller))

jump11928(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block11934(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block11928(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump11928(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11934(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 33
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(dividendsRound)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block12050(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))

block12050(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block12051(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))

jump12051(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block12279(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump12051(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block12215(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

block12051(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump12051(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12215(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block12278(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump12215(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block12274(s(5), s(4), s(3), s(2), s(1), s(0)))

block12215(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump12215(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12274(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12278(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block12279(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block12279(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12279(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12279(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block12353(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump12279(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block12289(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump12289(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block12352(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller))

jump12289(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block12348(s(5), s(4), s(3), s(2), s(1), s(0)))

block12289(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump12289(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12348(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12352(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block12353(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), caller))

block12353(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3110(s(0)))
	nop(JUMP)

jump12460(s(3), s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number)=>
	eq(s(3), 0)
	call(block12631(s(2), s(1), s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number))

jump12460(s(3), s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number)=>
	neq(s(3), 0)
	call(block12548(s(2), s(1), s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), caller, number))

block12460(s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump12460(s(3),s(2),s(1),s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), g(owner), caller, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12548(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), g(super_owner), caller, number)=>
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(super_owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	call(block12631(s(2),s(1),s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number))

jump12631(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number)=>
	eq(s(2), 0)
	call(block12641(s(1), s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number))

jump12631(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number)=>
	neq(s(2), 0)
	call(block12637(s(1), s(0)))

block12631(s(2), s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number)=>
	nop(JUMPDEST)
	call(jump12631(s(2),s(1),s(0),g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12637(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block12641(s(1), s(0), g(gracePeriodMinTran), g(percentToPresalersFromICO), g(buyPrice), number)=>
	nop(JUMPDEST)
	s(2) = number
	nop(NUMBER)
	s(3) = 19
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(gracePeriodMinTran) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 0
	nop(PUSH1)
	s(3) = 14
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(percentToPresalersFromICO) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 0
	nop(PUSH1)
	s(3) = 13
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(buyPrice) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block3133(s(0)))
	nop(JUMP)

block12666(s(1), s(0), g(gracePeriodMinTran), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(2) = g(gracePeriodMinTran)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3156(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12672(s(2), s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12672(s(4),s(3),s(2),s(1),s(0),g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12672(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), s(3))
	call(block12764(s(2), s(1), s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address))

jump12672(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), s(3))
	call(block12760(s(2), s(1), s(0)))

block12760(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12764(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address)=>
	geq(s(4), s(3))
	call(block12840(s(2), s(1), s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address))

jump12764(s(4), s(3), s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address)=>
	lt(s(4), s(3))
	call(block12836(s(2), s(1), s(0)))

block12764(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump12764(s(4),s(3),s(2),s(1),s(0),g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12836(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12840(s(2), s(1), s(0), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(7) = g(icoRaisedETH)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(icoRaisedETH) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	call(block3221(s(0)))
	nop(JUMP)

jump13014(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number)=>
	eq(s(5), 0)
	call(block13188(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))

jump13014(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number)=>
	neq(s(5), 0)
	call(block13105(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number))

block13014(s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump13014(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13105(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, number)=>
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(super_owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block13188(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))

block13188(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	nop(JUMPDEST)
	call(jump13188(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13188(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	eq(s(4), 0)
	call(block13198(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))

jump13188(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	neq(s(4), 0)
	call(block13194(s(3), s(2), s(1), s(0)))

block13194(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13198(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	leq(s(5), s(4))
	call(block13216(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

jump13198(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	gt(s(5), s(4))
	call(block13209(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))

block13198(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	nop(JUMPDEST)
	s(4) = number
	nop(NUMBER)
	s(5) = 19
	nop(PUSH1)
	s(5) = g(gracePeriodMinTran)
	nop(SLOAD)
	call(jump13198(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13209(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(gracePeriodMinTran), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address, number)=>
	s(4) = number
	nop(NUMBER)
	s(5) = 19
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(gracePeriodMinTran) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block13216(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

block13216(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 24
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(percentToFoundersAfterICO) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 10000
	nop(PUSH2)
	s(5) = 15
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(weiToPresalersFromICO)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 10
	nop(PUSH1)
	s(6) = g(soldedSupply)
	nop(SLOAD)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump13216(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13216(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(6), 0)
	call(block13284(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

jump13216(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(soldedSupply), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(6), 0)
	call(block13283(s(5), s(4), s(3), s(2), s(1), s(0)))

block13283(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13284(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	lt(s(5), s(4))
	call(block14078(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice)))

jump13284(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	geq(s(5), s(4))
	call(block13311(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

block13284(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 16
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(presaleAmountETH) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100000000
	nop(PUSH4)
	s(5) = 23
	nop(PUSH1)
	s(5) = g(icoFinished)
	nop(SLOAD)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 11
	nop(PUSH1)
	s(5) = g(blocksPerHour)
	nop(SLOAD)
	call(jump13284(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(icoFinished), g(presaleAmountETH), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13311(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	s(4) = 10000
	nop(PUSH2)
	s(5) = 1000000
	nop(PUSH3)
	s(6) = 11
	nop(PUSH1)
	s(6) = g(blocksPerHour)
	nop(SLOAD)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 1000000
	nop(PUSH3)
	s(5) = 24
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 10000
	nop(PUSH2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	call(jump13311(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(7), 0)
	call(block13367(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

jump13311(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(7), 0)
	call(block13366(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13366(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13367(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(6), 0)
	call(block13377(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

jump13367(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(6), 0)
	call(block13376(s(5), s(4), s(3), s(2), s(1), s(0)))

block13367(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	nop(DUP2)
	call(jump13367(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13376(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13377(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	leq(s(5), s(4))
	call(block13682(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

jump13377(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	gt(s(5), s(4))
	call(block13459(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(buyPrice), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))

block13377(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 11
	nop(PUSH1)
	s(4) = g(blocksPerHour)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump13377(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(blocksPerHour), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13459(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 26
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = 0
	nop(PUSH1)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 9
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(icoRaisedETH) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 13764
	nop(PUSH2)
	call(block13764(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address))
	nop(JUMP)

block13682(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(icoRaisedETH), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(icoRaisedETH)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(icoRaisedETH) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block13764(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address))

block13764(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice), g(owner), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(owner)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	call(block14078(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(buyPrice)))

block14078(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(buyPrice))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 14
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(percentToPresalersFromICO) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 13
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3244(s(0)))
	nop(JUMP)

block14098(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 14114
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 6103
	nop(PUSH2)
	call(block6103_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block14114(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump14114(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14114(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(7), 0)
	call(block14476(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump14114(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(7), 0)
	call(block14120(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block14120(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2404383921
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = s(3)
	nop(DUP7)
	s(11) = address
	nop(ADDRESS)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 4
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	nop(DUP2)
	s(18) = l(l1)
	nop(MLOAD)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = s(16)
	nop(DUP1)
	s(17) = l(l1)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 0
	nop(PUSH1)
	call(block14337(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))

block14337(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(22) = s(18)
	nop(DUP4)
	s(23) = s(21)
	nop(DUP2)
	call(jump14337(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14337(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	geq(s(23), s(22))
	call(block14364(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump14337(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	lt(s(23), s(22))
	call(block14346(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize))

block14346(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(22) = l(l2)
	nop(MLOAD)
	s(23) = s(21)
	nop(DUP2)
	s(24) = s(19)
	nop(DUP5)
	s(23) = s(24)+s(23)
	nop(ADD)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(23) = s(21)
	nop(DUP2)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	nop(POP)
	s(22) = 14337
	nop(PUSH2)
	call(block14337(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))
	nop(JUMP)

block14364(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 31
	nop(PUSH1)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(16)
	nop(DUP1)
	call(jump14364(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14364(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block14409(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump14364(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block14384(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

block14384(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(17)
	nop(DUP1)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 1
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = 256
	nop(PUSH2)
	s(20) = s(21)^s(20)
	nop(EXP)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	call(block14409(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))

jump14409(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block14443(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize))

jump14409(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block14439(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14409(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(9)
	s(9) = s(15)
	s(15) = s(16)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump14409(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14439(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump14443(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	eq(s(11), 0)
	call(block14463(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump14443(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	neq(s(11), 0)
	call(block14454(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block14443(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump14443(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14454(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block14463(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 14477
	nop(PUSH2)
	call(block14477(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(JUMP)

block14476(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	call(block14477(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block14477(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3391(s(1),s(0), l(l0)))
	nop(JUMP)

block14485(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 33
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3498(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14522(s(4), s(3), s(2), s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump14522(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14522(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(6), 0)
	call(block14693(s(5), s(4), s(3), s(2), s(1), s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

jump14522(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(6), 0)
	call(block14610(s(5), s(4), s(3), s(2), s(1), s(0),g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller))

block14610(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(super_owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block14693(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

block14693(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	call(jump14693(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14693(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(5), 0)
	call(block14703(s(4), s(3), s(2), s(1), s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

jump14693(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(5), 0)
	call(block14699(s(4), s(3), s(2), s(1), s(0)))

block14699(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14703(s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 28
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 26
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 26
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	call(jump14703(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14703(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	leq(s(6), s(5))
	call(block15233(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address))

jump14703(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	gt(s(6), s(5))
	call(block14944(s(4), s(3), s(2), s(1), s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

block14944(s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	s(5) = s(3)
	nop(DUP2)
	s(6) = 27
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	call(jump14944(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14944(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(7), 0)
	call(block15032(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

jump14944(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(7), 0)
	call(block15031(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15031(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15032(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 26
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	call(jump15032(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15032(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	neq(s(7), 0)
	call(block15121(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address))

jump15032(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	eq(s(7), 0)
	call(block15120(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15120(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15121(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 26
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(bountyAddr)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l4) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block15233(s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address))

block15233(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3605(s(0)))
	nop(JUMP)

block15339(s(1), s(0), g(gracePeriodMaxTarget), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(gracePeriodMaxTarget)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3628(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15345(s(1), s(0), g(burnAfterSoldAmount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(2) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3671(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15351(s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 27
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l3) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3758(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15375(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(sellPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3801(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15381(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 34
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l4) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3920(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15418(s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump15418(s(4),s(3),s(2),s(1),s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15418(s(4), s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), caller)=>
	eq(s(4), 0)
	call(block15589(s(3), s(2), s(1), s(0),g(allowTransfers), g(percentToFoundersAfterICO)))

jump15418(s(4), s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), g(owner), caller)=>
	neq(s(4), 0)
	call(block15506(s(3), s(2), s(1), s(0),g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), caller))

block15506(s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO), g(super_owner), caller)=>
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	call(block15589(s(3),s(2),s(1),s(0),g(allowTransfers), g(percentToFoundersAfterICO)))

block15589(s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO))=>
	nop(JUMPDEST)
	call(jump15589(s(3),s(2),s(1),s(0),g(allowTransfers), g(percentToFoundersAfterICO)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15589(s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO))=>
	eq(s(3), 0)
	call(block15599(s(2), s(1), s(0),g(allowTransfers), g(percentToFoundersAfterICO)))

jump15589(s(3), s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO))=>
	neq(s(3), 0)
	call(block15595(s(2), s(1), s(0)))

block15595(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15599(s(2), s(1), s(0), g(allowTransfers), g(percentToFoundersAfterICO))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 24
	nop(PUSH1)
	s(5) = 5
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(allowTransfers) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3987(s(0)))
	nop(JUMP)

block15628(s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump15628(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block15804(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance))

jump15628(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), g(owner), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block15721(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(foundersAddresses), g(super_owner), l(l0), address, balance, caller))

block15721(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), g(super_owner), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(super_owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(block15804(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance))

block15804(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump15804(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15804(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block15814(s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance))

jump15804(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block15810(s(5), s(4), s(3), s(2), s(1), s(0)))

block15810(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump15814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	geq(s(7), s(6))
	call(block15866(s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

jump15814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	lt(s(7), s(6))
	call(block15862(s(5), s(4), s(3), s(2), s(1), s(0)))

block15814(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 1000000000000000
	nop(PUSH7)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 16
	nop(PUSH1)
	s(7) = g(presaleAmountETH)
	nop(SLOAD)
	s(8) = address
	nop(ADDRESS)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(7) = s(8)-s(7)
	nop(SUB)
	call(jump15814(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(foundersAddresses), l(l0), address, balance))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15862(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block15866(s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	call(jump15866(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	neq(s(8), 0)
	call(block15878(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

jump15866(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	eq(s(8), 0)
	call(block15877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15877(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15878(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block15894(s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))

block15894(s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump15894(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15894(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	geq(s(7), s(6))
	call(block16038(s(5), s(4), s(3), s(2), s(1), s(0)))

jump15894(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	lt(s(7), s(6))
	call(block15907(s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

block15907(s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	s(6) = 3
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump15907(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	lt(s(9), s(8))
	call(block15924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

jump15907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	geq(s(9), s(8))
	call(block15923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15924(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	neq(s(6), 0)
	call(block16025(s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

jump15924(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	eq(s(6), 0)
	call(block16017(s(5), s(4), s(3), s(2), s(1), s(0),g(foundersAddresses), l(l0)))

block15924(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(foundersAddresses)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump15924(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16017(s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16025(s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))

block16025(s(5), s(4), s(3), s(2), s(1), s(0), g(foundersAddresses), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = 15894
	nop(PUSH2)
	call(block15894(s(5),s(4),s(3),s(2),s(1),s(0),g(foundersAddresses), l(l0)))
	nop(JUMP)

block16038(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4032(s(0)))
	nop(JUMP)

block16044(s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 13
	nop(PUSH1)
	s(5) = g(buyPrice)
	nop(SLOAD)
	call(jump16044(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16044(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), s(4))
	call(block16061(s(3), s(2), s(1), s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))

jump16044(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), s(4))
	call(block16057(s(3), s(2), s(1), s(0)))

block16057(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump16061(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	geq(s(5), s(4))
	call(block16137(s(3), s(2), s(1), s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))

jump16061(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	lt(s(5), s(4))
	call(block16133(s(3), s(2), s(1), s(0)))

block16061(s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump16061(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16133(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16137(s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 13
	nop(PUSH1)
	s(4) = g(buyPrice)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump16137(s(4),s(3),s(2),s(1),s(0),g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16137(s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block16362(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump16137(s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block16358(s(3), s(2), s(1), s(0)))

block16358(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16362(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block4077(s(0)))
	nop(JUMP)

jump16467(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block16484(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump16467(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block16480(s(2), s(1), s(0)))

block16467(s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 32
	nop(PUSH1)
	s(4) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump16467(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16480(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16484(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 26
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump16484(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16484(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block16561(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump16484(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block16557(s(2), s(1), s(0)))

block16557(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16561(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = 30
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(dividendsRound)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump16561(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16561(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block16686(s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump16561(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block16682(s(2), s(1), s(0)))

block16682(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16686(s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 16695
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = 17409
	nop(PUSH2)
	call(block17409_5(s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(JUMP)

block16695(s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 100000000000000
	nop(PUSH6)
	s(4) = s(2)
	nop(DUP2)
	call(jump16695(s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16695(s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	lt(s(4), s(3))
	call(block16777(s(2), s(1), s(0)))

jump16695(s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	geq(s(4), s(3))
	call(block16713(s(2), s(1), s(0), l(l0), caller))

block16713(s(2), s(1), s(0), l(l0), caller)=>
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump16713(s(3),s(2),s(1),s(0), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16713(s(3), s(2), s(1), s(0), l(l0), caller)=>
	neq(s(3), 0)
	call(block16776(s(2), s(1), s(0)))

jump16713(s(3), s(2), s(1), s(0), l(l0), caller)=>
	eq(s(3), 0)
	call(block16772(s(2), s(1), s(0)))

block16772(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16776(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block16777(s(2),s(1),s(0)))

block16777(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block4100(s(0)))
	nop(JUMP)

block16780(s(2), s(1), s(0), g(super_owner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(super_owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump16780(s(4),s(3),s(2),s(1),s(0),g(super_owner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16780(s(4), s(3), s(2), s(1), s(0), g(super_owner), g(owner), caller)=>
	eq(s(4), s(3))
	call(block16872(s(2), s(1), s(0),g(owner)))

jump16780(s(4), s(3), s(2), s(1), s(0), g(super_owner), g(owner), caller)=>
	neq(s(4), s(3))
	call(block16868(s(2), s(1), s(0)))

block16868(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16872(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4167(s(0)))
	nop(JUMP)

block16939(s(1), s(0), g(soldedSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(soldedSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4190(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16945(s(3), s(2), s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump16945(s(5),s(4),s(3),s(2),s(1),s(0),g(super_owner), g(owner), l(l4), l(l3), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16945(s(5), s(4), s(3), s(2), s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), caller)=>
	eq(s(5), 0)
	call(block17116(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3)))

jump16945(s(5), s(4), s(3), s(2), s(1), s(0), g(super_owner), g(owner), l(l4), l(l3), caller)=>
	neq(s(5), 0)
	call(block17033(s(4), s(3), s(2), s(1), s(0),g(super_owner), l(l4), l(l3), caller))

block17033(s(4), s(3), s(2), s(1), s(0), g(super_owner), l(l4), l(l3), caller)=>
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(super_owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4)= eq(s(5), s(4))
	nop(EQ)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block17116(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3)))

jump17116(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3))=>
	eq(s(4), 0)
	call(block17126(s(3), s(2), s(1), s(0), l(l4), l(l3)))

jump17116(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3))=>
	neq(s(4), 0)
	call(block17122(s(3), s(2), s(1), s(0)))

block17116(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3))=>
	nop(JUMPDEST)
	call(jump17116(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17122(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block17126(s(3), s(2), s(1), s(0), l(l4), l(l3))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 25
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4289(s(0)))
	nop(JUMP)

block17217(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 17387
	nop(PUSH2)
	call(jump17217(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMPI)

jump17217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(6), 1 )
	call(block17387(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(6), 1 )
	call(block17305(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17305(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(super_owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block17387(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17387(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump17387(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17387(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(5), 0)
	call(block17401(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17387(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(5), 0)
	call(block17393(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17393(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 17406
	nop(PUSH2)
	call(block17406(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17401(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block17406(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17406(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block4302(s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17409(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump17409(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17454(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17409(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17446_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17446(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17454(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(13) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17454(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17474(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17454(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17466_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17466(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

jump17474(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17555(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17474(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17547_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17474(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17474(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17547(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

jump17555(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17684(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17555(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17676_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17555(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17555(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17676(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17684(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 9
	nop(PUSH1)
	s(13) = g(icoRaisedETH)
	nop(SLOAD)
	s(14) = 10000000000000000
	nop(PUSH7)
	s(15) = 26
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l3) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17684(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17684(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(15), 0)
	call(block17781(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17684(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(15), 0)
	call(block17780_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17780(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17781(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 31
	nop(PUSH1)
	s(14) = g(dividendsSum)
	nop(SLOAD)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17781(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(14), 0)
	call(block17795(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17781(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(14), 0)
	call(block17794_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17794(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17795(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 100000000000000
	nop(PUSH6)
	s(13) = s(11)
	nop(DUP2)
	call(jump17795(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(13), s(12))
	call(block17937(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17795(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(13), s(12))
	call(block17813_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17813(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17937(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	call(jump17937(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17937(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block17965(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17937(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block17948_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17948(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17982
	nop(PUSH2)
	call(block17982_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17965(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(dividendsBuffer)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block17982(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block17982(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

block18110(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block6748(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

jump17217_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(7), 1 )
	call(block17387_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17217_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(7), 1 )
	call(block17305_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17217_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 17387
	nop(PUSH2)
	call(jump17217_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMPI)

jump17217_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(7), 1 )
	call(block17387_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17217_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(7), 1 )
	call(block17305_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17217_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 17387
	nop(PUSH2)
	call(jump17217_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMPI)

block17305_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(super_owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block17387_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17305_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(super_owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block17387_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17387_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(6), 0)
	call(block17401_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17387_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(6), 0)
	call(block17393_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17387_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump17387_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17387_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(6), 0)
	call(block17401_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump17387_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(6), 0)
	call(block17393_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17387_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump17387_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17393_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 17406
	nop(PUSH2)
	call(block17406_0(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17393_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 17406
	nop(PUSH2)
	call(block17406_1(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17401_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block17406_0(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17401_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	call(block17406_1(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block17406_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block4302_0(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17406_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block4302_1(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block17409_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump17409_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17454_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17409_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17446(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17409_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump17409_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17454_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17409_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17446_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17409_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump17409_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17454_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17409_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17446_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17409_3(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump17409_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17454_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17409_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17446_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17409_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(dividendsRound)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump17409_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17454_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17409_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17446_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17409_5(s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 30
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(dividendsRound)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump17409_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17409_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(8), s(7))
	call(block17454_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump17409_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(8), s(7))
	call(block17446_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

block17446_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17446_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17446_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17446_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17446_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17446_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 18110
	nop(PUSH2)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

jump17454_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17474_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17454_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17466(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17454_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(13) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17454_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17474_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17454_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17466_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17454_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(13) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17454_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(13) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17454_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17474_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17454_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17466_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17454_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17474_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17454_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17466_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17454_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(11) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17454_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17474_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17454_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17466_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17454_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(11) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17454_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(8), s(7))
	call(block17474_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump17454_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(8), s(7))
	call(block17466_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

block17454_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 32
	nop(PUSH1)
	s(8) = g(dividendsBuffer)
	nop(SLOAD)
	call(jump17454_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17466_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17466_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17466_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17466_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17466_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17466_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 18110
	nop(PUSH2)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block17474_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17474_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17555_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17474_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17547(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17474_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17474_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17555_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17474_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17547_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17474_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17474_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17555_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17474_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17547_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17474_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 26
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump17474_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17555_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17474_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17547_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17474_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 26
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump17474_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17555_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17474_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17547_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17474_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 26
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump17474_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17474_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(8), s(7))
	call(block17555_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump17474_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(8), s(7))
	call(block17547_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

block17547_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17547_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17547_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17547_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17547_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17547_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 18110
	nop(PUSH2)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

jump17555_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(13), s(12))
	call(block17684_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))

jump17555_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(13), s(12))
	call(block17676(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17555_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17555_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17555_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17684_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17555_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17676_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17555_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17555_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17555_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), s(12))
	call(block17684_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17555_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), s(12))
	call(block17676_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17555_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	call(jump17555_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17555_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17684_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17555_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17676_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17555_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump17555_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17555_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block17684_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17555_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block17676_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17555_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump17555_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17555_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(8), s(7))
	call(block17684_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))

jump17555_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(8), s(7))
	call(block17676_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

block17555_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 33
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 30
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(dividendsRound)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump17555_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17676_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17676_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17676_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17676_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17676_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17676_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 18110
	nop(PUSH2)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block17684_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 9
	nop(PUSH1)
	s(13) = g(icoRaisedETH)
	nop(SLOAD)
	s(14) = 10000000000000000
	nop(PUSH7)
	s(15) = 26
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l3) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17684_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17684_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(15), 0)
	call(block17781_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump17684_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(15), 0)
	call(block17780(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17684_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 9
	nop(PUSH1)
	s(13) = g(icoRaisedETH)
	nop(SLOAD)
	s(14) = 10000000000000000
	nop(PUSH7)
	s(15) = 26
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l3) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17684_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17684_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(15), 0)
	call(block17781_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17684_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(15), 0)
	call(block17780_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump17684_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(15), 0)
	call(block17781_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17684_2(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(15), 0)
	call(block17780_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17684_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 9
	nop(PUSH1)
	s(13) = g(icoRaisedETH)
	nop(SLOAD)
	s(14) = 10000000000000000
	nop(PUSH7)
	s(15) = 26
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l3) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump17684_2(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17684_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), 0)
	call(block17781_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17684_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), 0)
	call(block17780_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17684_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 10000000000000000
	nop(PUSH7)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(icoRaisedETH)
	nop(SLOAD)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump17684_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17684_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 10000000000000000
	nop(PUSH7)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(icoRaisedETH)
	nop(SLOAD)
	s(12) = 10000000000000000
	nop(PUSH7)
	s(13) = 26
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump17684_4(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17684_4(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(13), 0)
	call(block17781_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17684_4(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(13), 0)
	call(block17780_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump17684_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	neq(s(10), 0)
	call(block17781_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l0), caller))

jump17684_5(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	eq(s(10), 0)
	call(block17780_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17684_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 10000000000000000
	nop(PUSH7)
	s(8) = 9
	nop(PUSH1)
	s(8) = g(icoRaisedETH)
	nop(SLOAD)
	s(9) = 10000000000000000
	nop(PUSH7)
	s(10) = 26
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l4) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump17684_5(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17780_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17780_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17780_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17780_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17780_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17780_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17781_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 31
	nop(PUSH1)
	s(14) = g(dividendsSum)
	nop(SLOAD)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17781_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	neq(s(14), 0)
	call(block17795_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump17781_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	eq(s(14), 0)
	call(block17794(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17781_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 31
	nop(PUSH1)
	s(14) = g(dividendsSum)
	nop(SLOAD)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17781_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(14), 0)
	call(block17795_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17781_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(14), 0)
	call(block17794_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17781_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 31
	nop(PUSH1)
	s(14) = g(dividendsSum)
	nop(SLOAD)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump17781_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(14), 0)
	call(block17795_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17781_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(14), 0)
	call(block17794_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17781_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 31
	nop(PUSH1)
	s(12) = g(dividendsSum)
	nop(SLOAD)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump17781_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(12), 0)
	call(block17795_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17781_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(12), 0)
	call(block17794_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17781_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 31
	nop(PUSH1)
	s(12) = g(dividendsSum)
	nop(SLOAD)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump17781_4(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	neq(s(12), 0)
	call(block17795_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17781_4(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	eq(s(12), 0)
	call(block17794_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17781_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 31
	nop(PUSH1)
	s(9) = g(dividendsSum)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump17781_5(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17781_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	neq(s(9), 0)
	call(block17795_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))

jump17781_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	eq(s(9), 0)
	call(block17794_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17794_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17794_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17794_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17794_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17794_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17794_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17795_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 100000000000000
	nop(PUSH6)
	s(13) = s(11)
	nop(DUP2)
	call(jump17795_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	geq(s(13), s(12))
	call(block17937_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump17795_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	lt(s(13), s(12))
	call(block17813(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17795_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 100000000000000
	nop(PUSH6)
	s(13) = s(11)
	nop(DUP2)
	call(jump17795_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(13), s(12))
	call(block17937_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17795_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(13), s(12))
	call(block17813_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17795_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 100000000000000
	nop(PUSH6)
	s(13) = s(11)
	nop(DUP2)
	call(jump17795_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(13), s(12))
	call(block17937_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17795_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(13), s(12))
	call(block17813_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17795_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 100000000000000
	nop(PUSH6)
	s(11) = s(9)
	nop(DUP2)
	call(jump17795_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block17937_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17795_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block17813_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17795_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block17937_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17795_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block17813_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17795_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 100000000000000
	nop(PUSH6)
	s(11) = s(9)
	nop(DUP2)
	call(jump17795_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17795_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 100000000000000
	nop(PUSH6)
	s(8) = s(6)
	nop(DUP2)
	call(jump17795_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17795_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	geq(s(8), s(7))
	call(block17937_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))

jump17795_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	lt(s(8), s(7))
	call(block17813_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsRound), l(l4), l(l3), l(l0), caller))

block17813_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17813_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17813_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 18110
	nop(PUSH2)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17813_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 1
	nop(PUSH1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17813_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 1
	nop(PUSH1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	s(10) = 18110
	nop(PUSH2)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17813_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 33
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 30
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(dividendsRound)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 18110
	nop(PUSH2)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block17937_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	call(jump17937_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17937_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	leq(s(13), s(12))
	call(block17965_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump17937_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	gt(s(13), s(12))
	call(block17948(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

jump17937_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(13), s(12))
	call(block17965_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17937_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(13), s(12))
	call(block17948_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17937_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	call(jump17937_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17937_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(13), s(12))
	call(block17965_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17937_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(13), s(12))
	call(block17948_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17937_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	call(jump17937_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17937_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block17965_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

jump17937_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block17948_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17937_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(10) = g(dividendsBuffer)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	call(jump17937_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17937_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(10) = g(dividendsBuffer)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	call(jump17937_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17937_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block17965_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17937_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block17948_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

jump17937_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	leq(s(8), s(7))
	call(block17965_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))

jump17937_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	gt(s(8), s(7))
	call(block17948_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))

block17937_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 32
	nop(PUSH1)
	s(7) = g(dividendsBuffer)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump17937_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17948_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0))=>
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17982
	nop(PUSH2)
	call(block17982(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block17948_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17982
	nop(PUSH2)
	call(block17982_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17948_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(12) = 32
	nop(PUSH1)
	s(12) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 17982
	nop(PUSH2)
	call(block17982_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17948_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 32
	nop(PUSH1)
	s(10) = g(dividendsBuffer)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(dividendsBuffer) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 17982
	nop(PUSH2)
	call(block17982_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17948_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	s(10) = 32
	nop(PUSH1)
	s(10) = g(dividendsBuffer)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(dividendsBuffer) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 17982
	nop(PUSH2)
	call(block17982_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block17948_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	s(7) = 32
	nop(PUSH1)
	s(7) = g(dividendsBuffer)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(dividendsBuffer) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 17982
	nop(PUSH2)
	call(block17982_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l0), caller))
	nop(JUMP)

block17965_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(dividendsBuffer)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block17982_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17965_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(dividendsBuffer)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block17982_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17965_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(dividendsBuffer)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(dividendsBuffer) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block17982_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17965_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(dividendsBuffer) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block17982_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17965_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(dividendsBuffer)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(dividendsBuffer) = s(11)
	nop(SSTORE)
	nop(POP)
	call(block17982_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17965_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(dividendsBuffer)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(dividendsBuffer) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block17982_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l0), caller))

block17982_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block18110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))

block17982_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block18110_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17982_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = 30
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(dividendsRound)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l3) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block18110_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17982_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	call(block18110_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))

block17982_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 33
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = 30
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(dividendsRound)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l3) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	call(block18110_4(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))

block17982_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 33
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = 30
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(dividendsRound)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block18110_5(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))

block18110_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block7007(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0)))
	nop(JUMP)

block18110_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block8426(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block18110_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block8685(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block18110_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block11541(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsBuffer), g(dividendsSum), g(dividendsRound), g(icoRaisedETH), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block18110_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block11800(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(dividendsRound), l(l4), l(l3), l(l1), l(l0), caller))
	nop(JUMP)

block18110_5(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block16695(s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block4291_0(s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4302
	nop(PUSH2)
	s(5) = 17217
	nop(PUSH2)
	call(block17217_0(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block4291_1(s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4302
	nop(PUSH2)
	s(5) = 17217
	nop(PUSH2)
	call(block17217_1(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

jump4302_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(4), 0)
	call(block4312_0(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4302_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(4), 0)
	call(block4308_0(s(3), s(2), s(1), s(0)))

block4302_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump4302_0(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4302_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	call(jump4302_1(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4302_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(4), 0)
	call(block4312_1(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4302_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(4), 0)
	call(block4308_1(s(3), s(2), s(1), s(0)))

block4308_0(s(3), s(2), s(1), s(0))=>
	s(4) = 5551
	nop(PUSH2)
	call(block5551_0(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block4308_1(s(3), s(2), s(1), s(0))=>
	s(4) = 5551
	nop(PUSH2)
	call(block5551_1(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block4312_0(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 14
	nop(PUSH1)
	s(4) = g(percentToPresalersFromICO)
	nop(SLOAD)
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = s(4)
	nop(DUP2)
	call(jump4312_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4312_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(6), 0)
	call(block4329_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4312_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(6), 0)
	call(block4328_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block4312_1(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 14
	nop(PUSH1)
	s(4) = g(percentToPresalersFromICO)
	nop(SLOAD)
	s(5) = callvalue
	nop(CALLVALUE)
	s(6) = s(4)
	nop(DUP2)
	call(jump4312_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4312_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(6), 0)
	call(block4329_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4312_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(6), 0)
	call(block4328_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block4328_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4328_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4329_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 18
	nop(PUSH1)
	s(4) = g(gracePeriodStopBlock)
	nop(SLOAD)
	s(5) = number
	nop(NUMBER)
	s(4) = lt(s(5), s(4))
	nop(LT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump4329_0(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4329_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(5), 0)
	call(block4356_0(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4329_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(5), 0)
	call(block4349_0(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

jump4329_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	eq(s(5), 0)
	call(block4356_1(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4329_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	neq(s(5), 0)
	call(block4349_1(s(4), s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))

block4329_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 18
	nop(PUSH1)
	s(4) = g(gracePeriodStopBlock)
	nop(SLOAD)
	s(5) = number
	nop(NUMBER)
	s(4) = lt(s(5), s(4))
	nop(LT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump4329_1(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4349_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(4) = 19
	nop(PUSH1)
	s(4) = g(gracePeriodMinTran)
	nop(SLOAD)
	s(5) = number
	nop(NUMBER)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block4356_0(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4349_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(POP)
	s(4) = 19
	nop(PUSH1)
	s(4) = g(gracePeriodMinTran)
	nop(SLOAD)
	s(5) = number
	nop(NUMBER)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	call(block4356_1(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4356_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4755_0(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4356_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4362_0(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4356_0(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4356_0(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4356_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4755_1(s(3), s(2), s(1), s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4356_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4362_1(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4356_1(s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4356_1(s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4362_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 1 )
	call(block4380_0(s(4), s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4362_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 1 )
	call(block4372_0(s(4), s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4362_0(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(4) = 20
	nop(PUSH1)
	s(4) = g(gracePeriodMaxTarget)
	nop(SLOAD)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = lt(s(5), s(4))
	nop(LT)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4380
	nop(PUSH2)
	call(jump4362_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(JUMPI)

block4362_1(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(4) = 20
	nop(PUSH1)
	s(4) = g(gracePeriodMaxTarget)
	nop(SLOAD)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = lt(s(5), s(4))
	nop(LT)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4380
	nop(PUSH2)
	call(jump4362_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(JUMPI)

jump4362_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 1 )
	call(block4380_1(s(4), s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4362_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 1 )
	call(block4372_1(s(4), s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4372_0(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(gracePeriodAmount)
	nop(SLOAD)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4380_0(s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4372_1(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(gracePeriodAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 21
	nop(PUSH1)
	s(4) = g(gracePeriodAmount)
	nop(SLOAD)
	s(5) = 22
	nop(PUSH1)
	s(5) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4380_1(s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4380_0(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4380_0(s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4380_0(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4390_0(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4380_0(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4386_0(s(3), s(2), s(1), s(0)))

jump4380_1(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block4390_1(s(3), s(2), s(1), s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4380_1(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4386_1(s(3), s(2), s(1), s(0)))

block4380_1(s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4380_1(s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4386_0(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block4386_1(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump4390_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(6), 0)
	call(block4514_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4390_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(6), 0)
	call(block4513_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block4390_0(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(burnAfterSoldAmount) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(soldedSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(soldedSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4390_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4390_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(6), 0)
	call(block4514_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4390_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(6), 0)
	call(block4513_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block4390_1(s(3), s(2), s(1), s(0), g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(burnAfterSoldAmount)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(burnAfterSoldAmount) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(soldedSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(soldedSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 29
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4390_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(burnAfterSoldAmount), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4513_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4513_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4514_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(6), 0)
	call(block4606_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4514_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(6), 0)
	call(block4605_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block4514_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4514_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4514_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4514_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4514_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(6), 0)
	call(block4606_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4514_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(6), 0)
	call(block4605_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block4605_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4605_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4606_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(bountyAddr)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4606_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4606_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(6), 0)
	call(block4732_0(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4606_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(6), 0)
	call(block4731_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block4606_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(bountyAddr)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 100
	nop(PUSH1)
	s(5) = 10
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4606_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4606_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(6), 0)
	call(block4732_1(s(5), s(4), s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4606_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), g(bountyAddr), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(6), 0)
	call(block4731_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block4731_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4731_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4732_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(blocksPerHour)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(blocksPerHour) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5045
	nop(PUSH2)
	call(block5045_0(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block4732_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), g(blocksPerHour), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(2)
	nop(DUP3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 11
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(blocksPerHour)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(blocksPerHour) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5045
	nop(PUSH2)
	call(block5045_1(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block4755_0(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(4)
	nop(DUP1)
	call(jump4755_0(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4755_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4846_0(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4755_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4778_0(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4755_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4846_1(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4755_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4778_1(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4755_1(s(3), s(2), s(1), s(0), g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = 24
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(percentToFoundersAfterICO)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(4)
	nop(DUP1)
	call(jump4755_1(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToFoundersAfterICO), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4778_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4846_0(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4778_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4846_1(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4846_0(s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4860_0(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4846_0(s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4853_0(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4846_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	call(jump4846_0(s(5),s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4846_1(s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block4860_1(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4846_1(s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block4853_1(s(4), s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4846_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	call(jump4846_1(s(5),s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4853_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 16
	nop(PUSH1)
	s(5) = g(presaleAmountETH)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4860_0(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4853_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 16
	nop(PUSH1)
	s(5) = g(presaleAmountETH)
	nop(SLOAD)
	s(4) = gt(s(5), s(4))
	nop(GT)
	call(block4860_1(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4860_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block5044_0(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4860_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4866_0(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4860_0(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4860_0(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4860_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 0)
	call(block5044_1(s(3), s(2), s(1), s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4860_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 0)
	call(block4866_1(s(3), s(2), s(1), s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

block4860_1(s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4860_1(s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4866_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(9), 0)
	call(block4981_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4866_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(9), 0)
	call(block4980_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4866_0(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(4) = 1000000000000
	nop(PUSH5)
	s(5) = 15
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(weiToPresalersFromICO)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 10
	nop(PUSH1)
	s(6) = g(soldedSupply)
	nop(SLOAD)
	s(7) = 17
	nop(PUSH1)
	s(7) = g(gracePeriodStartBlock)
	nop(SLOAD)
	s(8) = 100000000
	nop(PUSH4)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump4866_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4866_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(9), 0)
	call(block4981_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4866_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(9), 0)
	call(block4980_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4866_1(s(3), s(2), s(1), s(0), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	s(4) = 1000000000000
	nop(PUSH5)
	s(5) = 15
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(weiToPresalersFromICO)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 10
	nop(PUSH1)
	s(6) = g(soldedSupply)
	nop(SLOAD)
	s(7) = 17
	nop(PUSH1)
	s(7) = g(gracePeriodStartBlock)
	nop(SLOAD)
	s(8) = 100000000
	nop(PUSH4)
	s(9) = 27
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump4866_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(soldedSupply), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4980_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4980_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4981_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4981_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4981_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(6), 0)
	call(block4993_0(s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4981_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(6), 0)
	call(block4992_0(s(5), s(4), s(3), s(2), s(1), s(0)))

jump4981_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(6), 0)
	call(block4993_1(s(5), s(4), s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))

jump4981_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(6), 0)
	call(block4992_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block4981_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump4981_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4992_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4992_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4993_0(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	leq(s(5), s(4))
	call(block5026_0(s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4993_0(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	gt(s(5), s(4))
	call(block5009_0(s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block4993_0(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 16
	nop(PUSH1)
	s(4) = g(presaleAmountETH)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	call(jump4993_0(s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4993_1(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	leq(s(5), s(4))
	call(block5026_1(s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

jump4993_1(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	gt(s(5), s(4))
	call(block5009_1(s(3), s(2), s(1), s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block4993_1(s(5), s(4), s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = callvalue
	nop(CALLVALUE)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 16
	nop(PUSH1)
	s(4) = g(presaleAmountETH)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	call(jump4993_1(s(5),s(4),s(3),s(2),s(1),s(0),g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5009_0(s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = 16
	nop(PUSH1)
	s(4) = g(presaleAmountETH)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 16
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(presaleAmountETH) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5043
	nop(PUSH2)
	call(block5043_0(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5009_1(s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = 16
	nop(PUSH1)
	s(4) = g(presaleAmountETH)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 16
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(presaleAmountETH) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5043
	nop(PUSH2)
	call(block5043_1(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5026_0(s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 16
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(presaleAmountETH)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(presaleAmountETH) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block5043_0(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5026_1(s(3), s(2), s(1), s(0), g(presaleAmountETH), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 16
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(presaleAmountETH)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(presaleAmountETH) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block5043_1(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5043_0(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5044_0(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5043_1(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5044_1(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5044_0(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5045_0(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5044_1(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5045_1(s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))

block5045_0(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 14
	nop(PUSH1)
	s(5) = g(percentToPresalersFromICO)
	nop(SLOAD)
	call(jump5045_0(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5045_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(5), s(4))
	call(block5291_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5045_0(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(5), s(4))
	call(block5057_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5045_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(5), s(4))
	call(block5291_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5045_1(s(5), s(4), s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(5), s(4))
	call(block5057_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5045_1(s(3), s(2), s(1), s(0), g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 14
	nop(PUSH1)
	s(5) = g(percentToPresalersFromICO)
	nop(SLOAD)
	call(jump5045_1(s(5),s(4),s(3),s(2),s(1),s(0),g(percentToPresalersFromICO), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5057_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump5057_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5057_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	geq(s(5), s(4))
	call(block5132_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5057_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	lt(s(5), s(4))
	call(block5128_0(s(3), s(2), s(1), s(0)))

block5057_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump5057_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5057_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	geq(s(5), s(4))
	call(block5132_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5057_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	lt(s(5), s(4))
	call(block5128_1(s(3), s(2), s(1), s(0)))

block5128_0(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5128_1(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5132_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5306
	nop(PUSH2)
	call(block5306_0(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5132_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 26
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 5306
	nop(PUSH2)
	call(block5306_1(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(JUMP)

block5291_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5291_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5291_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), s(4))
	call(block5305_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5291_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), s(4))
	call(block5301_0(s(3), s(2), s(1), s(0)))

block5291_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5291_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5291_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(5), s(4))
	call(block5305_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5291_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(5), s(4))
	call(block5301_1(s(3), s(2), s(1), s(0)))

block5301_0(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5301_1(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5305_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5306_0(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5305_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5306_1(s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5306_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5306_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5306_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(5), s(4))
	call(block5449_0(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5306_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(5), s(4))
	call(block5316_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

jump5306_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	leq(s(5), s(4))
	call(block5449_1(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5306_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	gt(s(5), s(4))
	call(block5316_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller))

block5306_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump5306_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5316_0(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block5448_0(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5316_0(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block5444_0(s(3), s(2), s(1), s(0)))

block5316_0(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = 0
	nop(PUSH1)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump5316_0(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5316_1(s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	s(4) = 0
	nop(PUSH1)
	s(5) = 27
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump5316_1(s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l1), l(l0), address, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5316_1(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	neq(s(4), 0)
	call(block5448_1(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller))

jump5316_1(s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l1), l(l0), address, caller)=>
	eq(s(4), 0)
	call(block5444_1(s(3), s(2), s(1), s(0)))

block5444_0(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5444_1(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5448_0(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5449_0(s(3),s(2),s(1),s(0), l(l1), l(l0), address, caller))

block5448_1(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	call(block5449_1(s(3),s(2),s(1),s(0), l(l1), l(l0), address, caller))

block5449_0(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	call(block5551_0(s(3),s(2),s(1),s(0)))

block5449_1(s(3), s(2), s(1), s(0), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	call(block5551_1(s(3),s(2),s(1),s(0)))

block5551_0(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block3033(s(0)))
	nop(JUMP)

block5551_1(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block667_0(s(0)))
	nop(JUMP)

block6103_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 34
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = caller
	nop(CALLER)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block14114(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block659_0(s(0), g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = 667
	nop(PUSH2)
	s(2) = 4291
	nop(PUSH2)
	call(block4291_1(s(1),s(0),g(percentToFoundersAfterICO), g(burnAfterSoldAmount), g(gracePeriodAmount), g(gracePeriodMaxTarget), g(gracePeriodMinTran), g(gracePeriodStopBlock), g(gracePeriodStartBlock), g(presaleAmountETH), g(weiToPresalersFromICO), g(percentToPresalersFromICO), g(blocksPerHour), g(soldedSupply), g(bountyAddr), g(super_owner), g(owner), l(l4), l(l3), l(l1), l(l0), address, caller, callvalue, number))
	nop(JUMP)

block667_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

