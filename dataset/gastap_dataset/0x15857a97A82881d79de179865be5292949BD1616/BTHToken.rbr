block0(g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	lt(s(1), s(0))
	call(block615())

jump0(s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	geq(s(1), s(0))
	call(block13(g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

jump13(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block617(s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, callvalue, crossForkFund, developerFund))

jump13(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block13(g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 91660376
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, bthFund, calldataload, calldatasize, caller, callvalue, crossForkDistribution, crossForkFund, developerFund, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block748(s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))

jump65(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block65(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 100597159
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newBuyPrice, newModerator, newOwner, newSellPrice, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 116824193
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block803(s(0),g(crossForkFundDeposit), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block87(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block890(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block98(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1034(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump98(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block109(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 252841923
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1135(s(0),g(trading), g(moderators), g(owner), l(l6), caller, callvalue))

jump109(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

jump120(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1158(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block120(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 483878040
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1201(s(0),g(crossForkFund), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(crossForkFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

block142(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1244(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump142(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))

jump153(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1377(s(0),g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp))

jump153(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block153(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 604306519
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1516(s(0),g(bthFundDeposit), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block164(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 691566551
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1603(s(0), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

jump186(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1646(s(0),g(userPoolFund), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block186(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 852156584
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(userPoolFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1689(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, id))

jump197(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block197(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 979470566
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, id, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1117154408
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1930(s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value))

jump208(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block219(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1265959732
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1999(s(0),g(sellPrice), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

jump230(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2042(s(0),g(referBenefitRate), l(l1), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block230(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1417789951
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1425886544
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2085(s(0),g(version), l(l6), l(l4), l(l1), l(l0), callvalue))

jump241(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(version), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block252(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1651463498
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2229(s(0),g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, receiver, referCode))

jump252(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, receiver, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))

block263(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1654003167
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2366(s(0),g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, referCodeHash, requestId))

jump263(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, referCodeHash, requestId, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

jump274(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2445(s(0),g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue))

jump274(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block274(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1767076419
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1812241289
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2550(s(0),g(crossForking), g(moderators), g(owner), l(l6), caller, callvalue))

jump285(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

jump296(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2573(s(0),g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, newModerator))

jump296(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block296(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1820458349
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newModerator, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2640(s(0),g(crossForkDistribution), g(owner), calldatasize, caller, callvalue, crossForkDistribution))

jump307(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block307(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1879532035
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, crossForkDistribution, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2707(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump318(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block318(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2043438992
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2794(s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value))

jump329(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(totalSupply), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

jump340(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2895(s(0),g(developerFundDeposit), l(l1), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block340(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2055932059
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(developerFundDeposit), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2982(s(0),g(crossForking), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block362(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block351(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2173817615
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(crossForking), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3029(s(0),g(buyPrice), l(l1), l(l0), callvalue))

jump362(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block373(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block362(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2250260747
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3072(s(0),g(owner), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block384(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block373(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block384(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2404376130
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3159(s(0),g(crossForkCount), l(l1), l(l0), callvalue))

jump384(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(crossForkCount), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block395(s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block395(s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2444375065
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3222(s(0),g(developerFund), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(developerFund), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block406(s(0),g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

jump406(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3265(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block417(s(0),g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block406(s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2800922170
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3409(s(0),g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

jump417(s(2), s(1), s(0), g(trading), g(buyPrice), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block428(s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))

block428(s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block3419(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump428(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block439(s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))

jump439(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3496(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump439(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block450(s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))

block439(s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3021264054
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3059225878
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3587(s(0),g(crossForkDistribution), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(crossForkDistribution), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block461(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))

block461(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3093127797
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3674(s(0),g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, oldModerator))

jump461(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, oldModerator, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block472(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))

jump472(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3741(s(0),g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump472(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block483(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))

block472(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3179555345
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3850(s(0),g(owner), caller, callvalue))

jump483(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block494(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))

block483(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3190190908
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3301142923
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3873(s(0), l(l1), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block505(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))

block505(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3404319313
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block3916(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))

jump505(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, rate, referCode, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block516(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))

block516(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3679859006
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	eq(s(2), s(1))
	call(block4087(s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize, callvalue))

jump516(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, btcAddress, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	neq(s(2), s(1))
	call(block527(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))

jump527(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	eq(s(2), s(1))
	call(block4232(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump527(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	neq(s(2), s(1))
	call(block538(s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))

block527(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	eq(s(2), s(1))
	call(block4351(s(0),g(referBenefitRate), g(owner), calldatasize, caller, callvalue, rate))

jump538(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	neq(s(2), s(1))
	call(block549(s(0),g(trading), g(sellPrice), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, referCode, returndatasize, target))

block538(s(0), g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3831183795
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(referBenefitRate), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, rate, referCode, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, referCode, returndatasize, target)=>
	eq(s(2), s(1))
	call(block4396(s(0),g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))

jump549(s(2), s(1), s(0), g(trading), g(sellPrice), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, referCode, returndatasize, target)=>
	neq(s(2), s(1))
	call(block560(s(0),g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, referCode, target))

block549(s(0), g(trading), g(sellPrice), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, referCode, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3833895730
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(trading), g(sellPrice), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, referCode, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, referCode, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3877917340
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, referCode, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, referCode, target)=>
	eq(s(2), s(1))
	call(block4441(s(0),g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))

jump560(s(2), s(1), s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, referCode, target)=>
	neq(s(2), s(1))
	call(block571(s(0),g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode))

jump571(s(2), s(1), s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	eq(s(2), s(1))
	call(block4520(s(0),g(trading), l(l1), l(l0), callvalue))

jump571(s(2), s(1), s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	neq(s(2), s(1))
	call(block582(s(0),g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode))

block571(s(0), g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3963923698
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(trading), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4001175965
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	eq(s(2), s(1))
	call(block4567(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, referCode))

jump582(s(2), s(1), s(0), g(marketingFund), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, newOwner, referCode)=>
	neq(s(2), s(1))
	call(block593(s(0),g(marketingFund), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner))

block593(s(0), g(marketingFund), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4065767728
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(marketingFund), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(marketingFund), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block4692(s(0),g(marketingFund), l(l1), l(l0), callvalue))

jump593(s(2), s(1), s(0), g(marketingFund), g(owner), l(l1), l(l0), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block604(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

block604(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4068815506
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block4735(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump604(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block615_0(s(0)))

block615()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump617(s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, callvalue, crossForkFund, developerFund)=>
	eq(s(2), 0)
	call(block629(s(1), s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, crossForkFund, developerFund))

jump617(s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, callvalue, crossForkFund, developerFund)=>
	neq(s(2), 0)
	call(block625(s(1), s(0)))

block617(s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, callvalue, crossForkFund, developerFund)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump617(s(2),s(1),s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, callvalue, crossForkFund, developerFund))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block625(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block629(s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), bthFund, calldatasize, caller, crossForkFund, developerFund)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 746
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crossForkFund
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = bthFund
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = developerFund
	nop(CALLDATALOAD)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 4802
	nop(PUSH2)
	call(block4802(s(4),s(3),s(2),s(1),s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), caller))
	nop(JUMP)

block746(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump748(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	eq(s(2), 0)
	call(block760(s(1), s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice))

jump748(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	neq(s(2), 0)
	call(block756(s(1), s(0)))

block748(s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump748(s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block756(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block760(s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 801
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newSellPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = newBuyPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5093
	nop(PUSH2)
	call(block5093(s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(JUMP)

block801(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block803(s(0), g(crossForkFundDeposit), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump803(s(2),s(1),s(0),g(crossForkFundDeposit), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump803(s(2), s(1), s(0), g(crossForkFundDeposit), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block815(s(1), s(0),g(crossForkFundDeposit), l(l1), l(l0)))

jump803(s(2), s(1), s(0), g(crossForkFundDeposit), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block811(s(1), s(0)))

block811(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block815(s(1), s(0), g(crossForkFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 824
	nop(PUSH2)
	s(2) = 5202
	nop(PUSH2)
	call(block5202(s(1),s(0),g(crossForkFundDeposit), l(l1), l(l0)))
	nop(JUMP)

block824(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump890(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block902(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump890(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block898(s(1), s(0)))

block890(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump890(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block898(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block902(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 911
	nop(PUSH2)
	s(2) = 5240
	nop(PUSH2)
	call(block5240(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block911(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block948(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

jump948(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block975(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump948(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block957(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block948(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump948(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block957(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 948
	nop(PUSH2)
	call(block948(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

jump975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block1020(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump975(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block995(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block975(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump975(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block995(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1020(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1020(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1034(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1046(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value))

jump1034(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1042(s(1), s(0)))

block1034(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1034(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1042(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1046(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1109
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5297
	nop(PUSH2)
	call(block5297(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1109(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1135(s(2), s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller, callvalue)=>
	eq(s(2), 0)
	call(block1147(s(1), s(0),g(trading), g(moderators), g(owner), l(l6), caller))

jump1135(s(2), s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller, callvalue)=>
	neq(s(2), 0)
	call(block1143(s(1), s(0)))

block1135(s(0), g(trading), g(moderators), g(owner), l(l6), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1135(s(2),s(1),s(0),g(trading), g(moderators), g(owner), l(l6), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1143(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1147(s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1156
	nop(PUSH2)
	s(2) = 5438
	nop(PUSH2)
	call(block5438(s(1),s(0),g(trading), g(moderators), g(owner), l(l6), caller))
	nop(JUMP)

block1156(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1158(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1170(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1158(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1166(s(1), s(0)))

block1158(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1158(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1166(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1170(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1179
	nop(PUSH2)
	s(2) = 5739
	nop(PUSH2)
	call(block5739(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1179(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1201(s(0), g(crossForkFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1201(s(2),s(1),s(0),g(crossForkFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1201(s(2), s(1), s(0), g(crossForkFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1213(s(1), s(0),g(crossForkFund), l(l1), l(l0)))

jump1201(s(2), s(1), s(0), g(crossForkFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1209(s(1), s(0)))

block1209(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1213(s(1), s(0), g(crossForkFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1222
	nop(PUSH2)
	s(2) = 5745
	nop(PUSH2)
	call(block5745(s(1),s(0),g(crossForkFund), l(l1), l(l0)))
	nop(JUMP)

block1222(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1244(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1244(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1244(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1256(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1244(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1252(s(1), s(0)))

block1252(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1256(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1351
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 5751
	nop(PUSH2)
	call(block5751(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1351(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1377(s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1377(s(2),s(1),s(0),g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1377(s(2), s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block1389(s(1), s(0),g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, extcodesize, gas, returndatasize, timestamp))

jump1377(s(2), s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block1385(s(1), s(0)))

block1385(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1389(s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1480
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = btcAddress
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = btcAddress
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6052
	nop(PUSH2)
	call(block6052(s(2),s(1),s(0),g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

jump1480(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(6), s(5))
	call(block1496(s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1480(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(6), s(5))
	call(block1495(s(4), s(3), s(2), s(1), s(0)))

block1480(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 7
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump1480(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1495(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1496(s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1516(s(2), s(1), s(0), g(bthFundDeposit), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1528(s(1), s(0),g(bthFundDeposit), l(l1), l(l0)))

jump1516(s(2), s(1), s(0), g(bthFundDeposit), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1524(s(1), s(0)))

block1516(s(0), g(bthFundDeposit), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1516(s(2),s(1),s(0),g(bthFundDeposit), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1524(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1528(s(1), s(0), g(bthFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1537
	nop(PUSH2)
	s(2) = 7562
	nop(PUSH2)
	call(block7562(s(1),s(0),g(bthFundDeposit), l(l1), l(l0)))
	nop(JUMP)

block1537(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1603(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1615(s(1), s(0), l(l1), l(l0)))

jump1603(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1611(s(1), s(0)))

block1603(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1603(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1611(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1615(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1624
	nop(PUSH2)
	s(2) = 7600
	nop(PUSH2)
	call(block7600(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1624(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1646(s(2), s(1), s(0), g(userPoolFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1658(s(1), s(0),g(userPoolFund), l(l1), l(l0)))

jump1646(s(2), s(1), s(0), g(userPoolFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1654(s(1), s(0)))

block1646(s(0), g(userPoolFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1646(s(2),s(1),s(0),g(userPoolFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1654(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1658(s(1), s(0), g(userPoolFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1667
	nop(PUSH2)
	s(2) = 7605
	nop(PUSH2)
	call(block7605(s(1),s(0),g(userPoolFund), l(l1), l(l0)))
	nop(JUMP)

block1667(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1689(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, id)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1689(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, id))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1689(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, id)=>
	eq(s(2), 0)
	call(block1701(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, id))

jump1689(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, id)=>
	neq(s(2), 0)
	call(block1697(s(1), s(0)))

block1697(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1701(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, id)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1742
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = id
	nop(CALLDATALOAD)
	s(6) = 18446744073709551615
	nop(PUSH8)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7611
	nop(PUSH2)
	call(block7611(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block1742(s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	nop(DUP3)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = s(1)
	nop(DUP7)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	s(10) = l(l1)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l1)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 0
	nop(PUSH1)
	call(block1841(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block1841(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(13)
	nop(DUP2)
	call(jump1841(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1841(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(15), s(14))
	call(block1868(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1841(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(15), s(14))
	call(block1850(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block1850(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(14) = l(l4)
	nop(MLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 1841
	nop(PUSH2)
	call(block1841(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump1868(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(9), 0)
	call(block1913(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1868(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(9), 0)
	call(block1888(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1868(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(8)
	nop(DUP1)
	call(jump1868(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1888(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(9)
	nop(DUP1)
	ll = s(10)
	s(10) = fresh(0)
	nop(MLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	call(block1913(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1913(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1930(s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1930(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1930(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	eq(s(2), 0)
	call(block1942(s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, value))

jump1930(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	neq(s(2), 0)
	call(block1938(s(1), s(0)))

block1938(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1942(s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1973
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7883
	nop(PUSH2)
	call(block7883(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1973(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1999(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2011(s(1), s(0),g(sellPrice), l(l1), l(l0)))

jump1999(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2007(s(1), s(0)))

block1999(s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1999(s(2),s(1),s(0),g(sellPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2007(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2011(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2020
	nop(PUSH2)
	s(2) = 8143
	nop(PUSH2)
	call(block8143(s(1),s(0),g(sellPrice), l(l1), l(l0)))
	nop(JUMP)

block2020(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2042(s(0), g(referBenefitRate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2042(s(2),s(1),s(0),g(referBenefitRate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2042(s(2), s(1), s(0), g(referBenefitRate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2054(s(1), s(0),g(referBenefitRate), l(l1), l(l0)))

jump2042(s(2), s(1), s(0), g(referBenefitRate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2050(s(1), s(0)))

block2050(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2054(s(1), s(0), g(referBenefitRate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2063
	nop(PUSH2)
	s(2) = 8149
	nop(PUSH2)
	call(block8149(s(1),s(0),g(referBenefitRate), l(l1), l(l0)))
	nop(JUMP)

block2063(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2085(s(0), g(version), l(l6), l(l4), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2085(s(2),s(1),s(0),g(version), l(l6), l(l4), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2085(s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2097(s(1), s(0),g(version), l(l6), l(l4), l(l1), l(l0)))

jump2085(s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2093(s(1), s(0)))

block2093(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2097(s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2106
	nop(PUSH2)
	s(2) = 8155
	nop(PUSH2)
	call(block8155(s(1),s(0),g(version), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block2106(s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2143(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block2143(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2143(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2143(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block2170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2143(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block2152(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block2152(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2143
	nop(PUSH2)
	call(block2143(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block2170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2170(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2170(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2215(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2170(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2190(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2215(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2215(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2229(s(2), s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, receiver, referCode)=>
	eq(s(2), 0)
	call(block2241(s(1), s(0),g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, receiver, referCode))

jump2229(s(2), s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, receiver, referCode)=>
	neq(s(2), 0)
	call(block2237(s(1), s(0)))

block2229(s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, receiver, referCode)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2229(s(2),s(1),s(0),g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, receiver, referCode))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2237(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2241(s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, receiver, referCode)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2364
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = referCode
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = referCode
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = receiver
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 8313
	nop(PUSH2)
	call(block8313(s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block2364(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2366(s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, referCodeHash, requestId)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2366(s(2),s(1),s(0),g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, referCodeHash, requestId))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2366(s(2), s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, referCodeHash, requestId)=>
	eq(s(2), 0)
	call(block2378(s(1), s(0),g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, referCodeHash, requestId))

jump2366(s(2), s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, referCodeHash, requestId)=>
	neq(s(2), 0)
	call(block2374(s(1), s(0)))

block2374(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2378(s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), amount, calldatasize, caller, referCodeHash, requestId)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2443
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = requestId
	nop(CALLDATALOAD)
	s(6) = 18446744073709551615
	nop(PUSH8)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = amount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = referCodeHash
	nop(CALLDATALOAD)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 9462
	nop(PUSH2)
	call(block9462(s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2443(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2445(s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2445(s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2445(s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block2457(s(1), s(0),g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller))

jump2445(s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block2453(s(1), s(0)))

block2453(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2457(s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), btcAddress, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2548
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = btcAddress
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = btcAddress
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11289
	nop(PUSH2)
	call(block11289(s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block2548(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2550(s(0), g(crossForking), g(moderators), g(owner), l(l6), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2550(s(2),s(1),s(0),g(crossForking), g(moderators), g(owner), l(l6), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2550(s(2), s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller, callvalue)=>
	eq(s(2), 0)
	call(block2562(s(1), s(0),g(crossForking), g(moderators), g(owner), l(l6), caller))

jump2550(s(2), s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller, callvalue)=>
	neq(s(2), 0)
	call(block2558(s(1), s(0)))

block2558(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2562(s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2571
	nop(PUSH2)
	s(2) = 12983
	nop(PUSH2)
	call(block12983(s(1),s(0),g(crossForking), g(moderators), g(owner), l(l6), caller))
	nop(JUMP)

block2571(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2573(s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, newModerator)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2573(s(2),s(1),s(0),g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, newModerator))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2573(s(2), s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, newModerator)=>
	eq(s(2), 0)
	call(block2585(s(1), s(0),g(moderators), g(owner), l(l6), calldatasize, caller, newModerator))

jump2573(s(2), s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, newModerator)=>
	neq(s(2), 0)
	call(block2581(s(1), s(0)))

block2581(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2585(s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, newModerator)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2638
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newModerator
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13284
	nop(PUSH2)
	call(block13284(s(2),s(1),s(0),g(moderators), g(owner), l(l6), caller))
	nop(JUMP)

block2638(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2640(s(0), g(crossForkDistribution), g(owner), calldatasize, caller, callvalue, crossForkDistribution)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2640(s(2),s(1),s(0),g(crossForkDistribution), g(owner), calldatasize, caller, callvalue, crossForkDistribution))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2640(s(2), s(1), s(0), g(crossForkDistribution), g(owner), calldatasize, caller, callvalue, crossForkDistribution)=>
	eq(s(2), 0)
	call(block2652(s(1), s(0),g(crossForkDistribution), g(owner), calldatasize, caller, crossForkDistribution))

jump2640(s(2), s(1), s(0), g(crossForkDistribution), g(owner), calldatasize, caller, callvalue, crossForkDistribution)=>
	neq(s(2), 0)
	call(block2648(s(1), s(0)))

block2648(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2652(s(1), s(0), g(crossForkDistribution), g(owner), calldatasize, caller, crossForkDistribution)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2705
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = crossForkDistribution
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13684
	nop(PUSH2)
	call(block13684(s(2),s(1),s(0),g(crossForkDistribution), g(owner), caller))
	nop(JUMP)

block2705(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2707(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2719(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump2707(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2715(s(1), s(0)))

block2707(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2707(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2715(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2719(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2772
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13843
	nop(PUSH2)
	call(block13843(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2772(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2794(s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2794(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2794(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	eq(s(2), 0)
	call(block2806(s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, value))

jump2794(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	neq(s(2), 0)
	call(block2802(s(1), s(0)))

block2802(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2806(s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2869
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 13867
	nop(PUSH2)
	call(block13867(s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block2869(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2895(s(0), g(developerFundDeposit), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2895(s(2),s(1),s(0),g(developerFundDeposit), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2895(s(2), s(1), s(0), g(developerFundDeposit), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2907(s(1), s(0),g(developerFundDeposit), l(l1), l(l0)))

jump2895(s(2), s(1), s(0), g(developerFundDeposit), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2903(s(1), s(0)))

block2903(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2907(s(1), s(0), g(developerFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2916
	nop(PUSH2)
	s(2) = 14405
	nop(PUSH2)
	call(block14405(s(1),s(0),g(developerFundDeposit), l(l1), l(l0)))
	nop(JUMP)

block2916(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2982(s(0), g(crossForking), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2982(s(2),s(1),s(0),g(crossForking), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2982(s(2), s(1), s(0), g(crossForking), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2994(s(1), s(0),g(crossForking), l(l1), l(l0)))

jump2982(s(2), s(1), s(0), g(crossForking), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2990(s(1), s(0)))

block2990(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2994(s(1), s(0), g(crossForking), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3003
	nop(PUSH2)
	s(2) = 14443
	nop(PUSH2)
	call(block14443(s(1),s(0),g(crossForking), l(l1), l(l0)))
	nop(JUMP)

block3003(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3029(s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3029(s(2),s(1),s(0),g(buyPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3029(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3041(s(1), s(0),g(buyPrice), l(l1), l(l0)))

jump3029(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3037(s(1), s(0)))

block3037(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3041(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3050
	nop(PUSH2)
	s(2) = 14462
	nop(PUSH2)
	call(block14462(s(1),s(0),g(buyPrice), l(l1), l(l0)))
	nop(JUMP)

block3050(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3072(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3084(s(1), s(0),g(owner), l(l1), l(l0)))

jump3072(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3080(s(1), s(0)))

block3072(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3072(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3080(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3084(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3093
	nop(PUSH2)
	s(2) = 14468
	nop(PUSH2)
	call(block14468(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3093(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3159(s(0), g(crossForkCount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3159(s(2),s(1),s(0),g(crossForkCount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3159(s(2), s(1), s(0), g(crossForkCount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3171(s(1), s(0),g(crossForkCount), l(l1), l(l0)))

jump3159(s(2), s(1), s(0), g(crossForkCount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3167(s(1), s(0)))

block3167(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3171(s(1), s(0), g(crossForkCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3180
	nop(PUSH2)
	s(2) = 14505
	nop(PUSH2)
	call(block14505(s(1),s(0),g(crossForkCount), l(l1), l(l0)))
	nop(JUMP)

block3180(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 18446744073709551615
	nop(PUSH8)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 18446744073709551615
	nop(PUSH8)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3222(s(0), g(developerFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3222(s(2),s(1),s(0),g(developerFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3222(s(2), s(1), s(0), g(developerFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3234(s(1), s(0),g(developerFund), l(l1), l(l0)))

jump3222(s(2), s(1), s(0), g(developerFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3230(s(1), s(0)))

block3230(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3234(s(1), s(0), g(developerFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3243
	nop(PUSH2)
	s(2) = 14531
	nop(PUSH2)
	call(block14531(s(1),s(0),g(developerFund), l(l1), l(l0)))
	nop(JUMP)

block3243(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3265(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3265(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3265(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3277(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump3265(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3273(s(1), s(0)))

block3273(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3277(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3286
	nop(PUSH2)
	s(2) = 14537
	nop(PUSH2)
	call(block14537(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3286(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3323(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

jump3323(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block3350(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump3323(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block3332(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block3323(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3323(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3332(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3323
	nop(PUSH2)
	call(block3323(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

jump3350(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block3395(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3350(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block3370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block3350(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3350(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3370(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3395(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3395(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3409(s(0), g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = 3417
	nop(PUSH2)
	s(2) = 14594
	nop(PUSH2)
	call(block14594(s(1),s(0),g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(JUMP)

block3417(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3419(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3431(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value))

jump3419(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3427(s(1), s(0)))

block3419(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3419(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3427(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3431(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3494
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 14747
	nop(PUSH2)
	call(block14747(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block3494(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3496(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3508(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump3496(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3504(s(1), s(0)))

block3496(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3496(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3504(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3508(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3561
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14762
	nop(PUSH2)
	call(block14762(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3561(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3587(s(0), g(crossForkDistribution), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3587(s(2),s(1),s(0),g(crossForkDistribution), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3587(s(2), s(1), s(0), g(crossForkDistribution), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3599(s(1), s(0),g(crossForkDistribution), l(l1), l(l0)))

jump3587(s(2), s(1), s(0), g(crossForkDistribution), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3595(s(1), s(0)))

block3595(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3599(s(1), s(0), g(crossForkDistribution), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3608
	nop(PUSH2)
	s(2) = 14794
	nop(PUSH2)
	call(block14794(s(1),s(0),g(crossForkDistribution), l(l1), l(l0)))
	nop(JUMP)

block3608(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3674(s(2), s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, oldModerator)=>
	eq(s(2), 0)
	call(block3686(s(1), s(0),g(moderators), g(owner), l(l6), calldatasize, caller, oldModerator))

jump3674(s(2), s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, oldModerator)=>
	neq(s(2), 0)
	call(block3682(s(1), s(0)))

block3674(s(0), g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, oldModerator)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3674(s(2),s(1),s(0),g(moderators), g(owner), l(l6), calldatasize, caller, callvalue, oldModerator))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3682(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3686(s(1), s(0), g(moderators), g(owner), l(l6), calldatasize, caller, oldModerator)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3739
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = oldModerator
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14832
	nop(PUSH2)
	call(block14832(s(2),s(1),s(0),g(moderators), g(owner), l(l6), caller))
	nop(JUMP)

block3739(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3741(s(2), s(1), s(0), g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3753(s(1), s(0),g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump3741(s(2), s(1), s(0), g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3749(s(1), s(0)))

block3741(s(0), g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3741(s(2),s(1),s(0),g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3749(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3753(s(1), s(0), g(moderators), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3784
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15327
	nop(PUSH2)
	call(block15327(s(2),s(1),s(0),g(moderators), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3784(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3850(s(2), s(1), s(0), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block3862(s(1), s(0),g(owner), caller))

jump3850(s(2), s(1), s(0), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block3858(s(1), s(0)))

block3850(s(0), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3850(s(2),s(1),s(0),g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3858(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3862(s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3871
	nop(PUSH2)
	s(2) = 15389
	nop(PUSH2)
	call(block15389(s(1),s(0),g(owner), caller))
	nop(JUMP)

block3873(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3873(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3873(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3885(s(1), s(0), l(l1), l(l0)))

jump3873(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3881(s(1), s(0)))

block3881(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3885(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3894
	nop(PUSH2)
	s(2) = 15538
	nop(PUSH2)
	call(block15538(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3894(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3916(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	eq(s(2), 0)
	call(block3928(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value))

jump3916(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	neq(s(2), 0)
	call(block3924(s(1), s(0)))

block3916(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3916(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3924(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3928(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4061
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = extraData
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(8) = extraData
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 31
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 64
	nop(PUSH1)
	l(l0) = s(11)
	nop(MSTORE)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 15547
	nop(PUSH2)
	call(block15547(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block4061(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4087(s(2), s(1), s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4099(s(1), s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize))

jump4087(s(2), s(1), s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4095(s(1), s(0)))

block4087(s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4087(s(2),s(1),s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4095(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4099(s(1), s(0), l(l4), l(l1), l(l0), btcAddress, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4190
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = btcAddress
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = btcAddress
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15934
	nop(PUSH2)
	call(block15934(s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4190(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 18446744073709551615
	nop(PUSH8)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 18446744073709551615
	nop(PUSH8)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4232(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4244(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump4232(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4240(s(1), s(0)))

block4232(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4232(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4240(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4244(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4329
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16071
	nop(PUSH2)
	call(block16071(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4329(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4351(s(2), s(1), s(0), g(referBenefitRate), g(owner), calldatasize, caller, callvalue, rate)=>
	eq(s(2), 0)
	call(block4363(s(1), s(0),g(referBenefitRate), g(owner), calldatasize, caller, rate))

jump4351(s(2), s(1), s(0), g(referBenefitRate), g(owner), calldatasize, caller, callvalue, rate)=>
	neq(s(2), 0)
	call(block4359(s(1), s(0)))

block4351(s(0), g(referBenefitRate), g(owner), calldatasize, caller, callvalue, rate)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4351(s(2),s(1),s(0),g(referBenefitRate), g(owner), calldatasize, caller, callvalue, rate))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4359(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4363(s(1), s(0), g(referBenefitRate), g(owner), calldatasize, caller, rate)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4394
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = rate
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16108
	nop(PUSH2)
	call(block16108(s(2),s(1),s(0),g(referBenefitRate), g(owner), caller))
	nop(JUMP)

block4394(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4396(s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4396(s(2),s(1),s(0),g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4396(s(2), s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block4408(s(1), s(0),g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize))

jump4396(s(2), s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block4404(s(1), s(0)))

block4404(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4408(s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4439
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16209
	nop(PUSH2)
	call(block16209(s(2),s(1),s(0),g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block4439(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4441(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	eq(s(2), 0)
	call(block4453(s(1), s(0),g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, freeze, target))

jump4441(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	neq(s(2), 0)
	call(block4449(s(1), s(0)))

block4441(s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4441(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4449(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4453(s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, freeze, target)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4518
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = target
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = freeze
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16461
	nop(PUSH2)
	call(block16461(s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block4518(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4520(s(2), s(1), s(0), g(trading), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4532(s(1), s(0),g(trading), l(l1), l(l0)))

jump4520(s(2), s(1), s(0), g(trading), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4528(s(1), s(0)))

block4520(s(0), g(trading), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4520(s(2),s(1),s(0),g(trading), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4528(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4532(s(1), s(0), g(trading), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4541
	nop(PUSH2)
	s(2) = 16754
	nop(PUSH2)
	call(block16754(s(1),s(0),g(trading), l(l1), l(l0)))
	nop(JUMP)

block4541(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4567(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, referCode)=>
	eq(s(2), 0)
	call(block4579(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, referCode))

jump4567(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, referCode)=>
	neq(s(2), 0)
	call(block4575(s(1), s(0)))

block4567(s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, referCode)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4567(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, callvalue, referCode))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4575(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4579(s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, referCode)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4670
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = referCode
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = referCode
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16773
	nop(PUSH2)
	call(block16773(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block4670(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4692(s(0), g(marketingFund), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4692(s(2),s(1),s(0),g(marketingFund), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4692(s(2), s(1), s(0), g(marketingFund), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4704(s(1), s(0),g(marketingFund), l(l1), l(l0)))

jump4692(s(2), s(1), s(0), g(marketingFund), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4700(s(1), s(0)))

block4700(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4704(s(1), s(0), g(marketingFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4713
	nop(PUSH2)
	s(2) = 16908
	nop(PUSH2)
	call(block16908(s(1),s(0),g(marketingFund), l(l1), l(l0)))
	nop(JUMP)

block4713(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4735(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block4747(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump4735(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block4743(s(1), s(0)))

block4735(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4735(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4743(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4747(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4800
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16914
	nop(PUSH2)
	call(block16914(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block4800(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4802(s(4), s(3), s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4802(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4802(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), caller)=>
	eq(s(6), s(5))
	call(block4893(s(4), s(3), s(2), s(1), s(0),g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit)))

jump4802(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit), g(owner), caller)=>
	neq(s(6), s(5))
	call(block4889(s(4), s(3), s(2), s(1), s(0)))

block4889(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block4893(s(4), s(3), s(2), s(1), s(0), g(developerFundDeposit), g(bthFundDeposit), g(crossForkFundDeposit))=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 13
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(crossForkFundDeposit)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(crossForkFundDeposit) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 14
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(bthFundDeposit)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(bthFundDeposit) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 15
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(developerFundDeposit)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(developerFundDeposit) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block746(s(0)))
	nop(JUMP)

jump5093(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	eq(s(5), s(4))
	call(block5184(s(3), s(2), s(1), s(0),g(buyPrice), g(sellPrice)))

jump5093(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	neq(s(5), s(4))
	call(block5180(s(3), s(2), s(1), s(0)))

block5093(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump5093(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5180(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5184(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(sellPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 21
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block801(s(0)))
	nop(JUMP)

block5202(s(1), s(0), g(crossForkFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crossForkFundDeposit)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block824(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5240(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 8
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 30067239839123779192507988269344749533275057804342974628934654884594543755264
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block911(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5297(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1109(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump5438(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller)=>
	eq(s(5), s(4))
	call(block5693(s(3), s(2), s(1), s(0),g(trading)))

jump5438(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller)=>
	neq(s(5), s(4))
	call(block5528(s(3), s(2), s(1), s(0),g(trading), g(moderators), l(l6), caller))

block5438(s(1), s(0), g(trading), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump5438(s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(moderators), g(owner), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5528(s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block5536(s(3),s(2),s(1),s(0),g(trading), g(moderators), l(l6), caller))

block5536(s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump5536(s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(moderators), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5536(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	geq(s(5), s(4))
	call(block5680(s(3), s(2), s(1), s(0),g(trading)))

jump5536(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	lt(s(5), s(4))
	call(block5550(s(3), s(2), s(1), s(0),g(trading), g(moderators), l(l6), caller))

jump5550(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	lt(s(8), s(7))
	call(block5587(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(trading), g(moderators), l(l6), caller))

jump5550(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	geq(s(8), s(7))
	call(block5586(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5550(s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump5550(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(moderators), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5586(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5587(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump5587(s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(moderators), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5587(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	neq(s(5), s(4))
	call(block5667(s(3), s(2), s(1), s(0),g(trading), g(moderators), l(l6), caller))

jump5587(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	eq(s(5), s(4))
	call(block5659(s(3), s(2), s(1), s(0),g(trading)))

block5659(s(3), s(2), s(1), s(0), g(trading))=>
	s(4) = 1
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 5680
	nop(PUSH2)
	call(block5680(s(3),s(2),s(1),s(0),g(trading)))
	nop(JUMP)

block5667(s(3), s(2), s(1), s(0), g(trading), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 5536
	nop(PUSH2)
	call(block5536(s(3),s(2),s(1),s(0),g(trading), g(moderators), l(l6), caller))
	nop(JUMP)

block5680(s(3), s(2), s(1), s(0), g(trading))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	call(jump5680(s(4),s(3),s(2),s(1),s(0),g(trading)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5680(s(4), s(3), s(2), s(1), s(0), g(trading))=>
	neq(s(4), 0)
	call(block5692(s(3), s(2), s(1), s(0),g(trading)))

jump5680(s(4), s(3), s(2), s(1), s(0), g(trading))=>
	eq(s(4), 0)
	call(block5688(s(3), s(2), s(1), s(0)))

block5688(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block5692(s(3), s(2), s(1), s(0), g(trading))=>
	nop(JUMPDEST)
	call(block5693(s(3),s(2),s(1),s(0),g(trading)))

block5693(s(3), s(2), s(1), s(0), g(trading))=>
	nop(JUMPDEST)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(trading)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(trading)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(trading) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1156(s(0)))
	nop(JUMP)

block5739(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1179(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5745(s(1), s(0), g(crossForkFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(2) = g(crossForkFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1222(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5751(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump5751(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block5892(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5751(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block5888(s(5), s(4), s(3), s(2), s(1), s(0)))

block5888(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block5892(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 6041
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 17127
	nop(PUSH2)
	call(block17127(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block6041(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1351(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6052(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(8), 1 )
	call(block6168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6052(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(8), 1 )
	call(block6087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block6052(s(2), s(1), s(0), g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(crossForking)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 6168
	nop(PUSH2)
	call(jump6052(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForking), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMPI)

block6087(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(owner)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block6168(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block6168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump6168(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block6179(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6168(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block6175(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6175(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6179(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(crossForkDistribution)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump6179(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6179(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(8), s(7))
	call(block6251(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6179(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(8), s(7))
	call(block6247(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6247(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block6251(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(10)
	nop(DUP1)
	s(11) = l(l1)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(10)
	nop(DUP4)
	call(block6268(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6268(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block6305(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6268(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block6279(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block6268(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	call(jump6268(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6279(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(15) = s(14)
	nop(DUP1)
	s(15) = l(l4)
	nop(MLOAD)
	s(16) = s(13)
	nop(DUP3)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	s(15) = 6268
	nop(PUSH2)
	call(block6268(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block6305(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(15)
	nop(DUP1)
	s(16) = not(s(16))
	nop(NOT)
	s(17) = s(14)
	nop(DUP3)
	s(17) = l(l4)
	nop(MLOAD)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(13)
	nop(DUP5)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	s(18) = or(s(19), s(18))
	nop(OR)
	s(19) = s(13)
	nop(DUP6)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(12)
	nop(DUP1)
	s(13) = l(l1)
	nop(MLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(12)
	nop(DUP4)
	call(block6373(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block6373(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(14)
	nop(DUP4)
	call(jump6373(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6373(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block6410(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6373(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block6384(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block6384(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(17) = s(16)
	nop(DUP1)
	s(17) = l(l4)
	nop(MLOAD)
	s(18) = s(15)
	nop(DUP3)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(14)
	nop(DUP4)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	nop(POP)
	s(17) = 6373
	nop(PUSH2)
	call(block6373(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

jump6410(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block6720(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump6410(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block6499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

block6410(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(19) = 256
	nop(PUSH2)
	s(18) = s(19)^s(18)
	nop(EXP)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(17)
	nop(DUP1)
	s(18) = not(s(18))
	nop(NOT)
	s(19) = s(16)
	nop(DUP3)
	s(19) = l(l4)
	nop(MLOAD)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = s(15)
	nop(DUP5)
	ll = s(20)
	s(20) = fresh(0)
	nop(MLOAD)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = or(s(21), s(20))
	nop(OR)
	s(21) = s(15)
	nop(DUP6)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 18446744073709551615
	nop(PUSH8)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 18446744073709551615
	nop(PUSH8)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump6410(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6499(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	s(7) = 10
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l1)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	call(block6517(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

jump6517(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(17), s(16))
	call(block6554(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

jump6517(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(17), s(16))
	call(block6528(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block6517(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	call(jump6517(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6528(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(16) = s(15)
	nop(DUP1)
	s(16) = l(l4)
	nop(MLOAD)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	s(16) = 6517
	nop(PUSH2)
	call(block6517(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump6554(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	leq(s(15), s(14))
	call(block6692(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump6554(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	gt(s(15), s(14))
	call(block6691(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6554(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(16)
	nop(DUP1)
	s(17) = not(s(17))
	nop(NOT)
	s(18) = s(15)
	nop(DUP3)
	s(18) = l(l4)
	nop(MLOAD)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = or(s(20), s(19))
	nop(OR)
	s(20) = s(14)
	nop(DUP6)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 110783316096430219111085804672383858733180159471019743886000000987487533747007
	nop(PUSH32)
	s(10) = 2
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump6554(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6691(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6692(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	s(7) = 2
	nop(PUSH1)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 7554
	nop(PUSH2)
	call(block7554(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(JUMP)

block6720(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l7), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 1
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(crossForkCount)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(crossForkCount) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 6
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(crossForkCount)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 18446744073709551615
	nop(PUSH8)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 18446744073709551615
	nop(PUSH8)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 18446744073709551615
	nop(PUSH8)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l1)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 6874
	nop(PUSH2)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 17822
	nop(PUSH2)
	call(block17822(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block6874(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(crossForkDistribution)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2545823562
	nop(PUSH4)
	s(9) = 6
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(crossForkCount)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 18446744073709551615
	nop(PUSH8)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(2)
	nop(DUP8)
	s(11) = caller
	nop(CALLER)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 18446744073709551615
	nop(PUSH8)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 18446744073709551615
	nop(PUSH8)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(13)
	nop(DUP3)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(15)
	nop(DUP2)
	s(17) = l(l1)
	nop(MLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	s(16) = s(15)
	nop(DUP1)
	s(16) = l(l1)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 0
	nop(PUSH1)
	call(block7207(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7207(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	geq(s(22), s(21))
	call(block7234(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7207(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	lt(s(22), s(21))
	call(block7216(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

block7207(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(21) = s(17)
	nop(DUP4)
	s(22) = s(20)
	nop(DUP2)
	call(jump7207(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7216(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(21) = l(l4)
	nop(MLOAD)
	s(22) = s(20)
	nop(DUP2)
	s(23) = s(18)
	nop(DUP5)
	s(22) = s(23)+s(22)
	nop(ADD)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	nop(POP)
	s(21) = 7207
	nop(PUSH2)
	call(block7207(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(JUMP)

jump7234(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(16), 0)
	call(block7279(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7234(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(16), 0)
	call(block7254(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

block7234(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 31
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(15)
	nop(DUP1)
	call(jump7234(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7254(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(16)
	nop(DUP1)
	ll = s(17)
	s(17) = fresh(0)
	nop(MLOAD)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = 256
	nop(PUSH2)
	s(19) = s(20)^s(19)
	nop(EXP)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(18) = not(s(18))
	nop(NOT)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	call(block7279(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7279(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block7312(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), gas, returndatasize))

jump7279(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block7308(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7279(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(15) = s(9)
	s(9) = s(14)
	s(14) = s(15)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump7279(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7308(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

block7312(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump7312(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7312(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), gas, returndatasize)=>
	eq(s(11), 0)
	call(block7332(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump7312(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), gas, returndatasize)=>
	neq(s(11), 0)
	call(block7323(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block7323(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block7332(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 10
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l1)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	call(block7355(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block7355(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	call(jump7355(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7355(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(17), s(16))
	call(block7392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

jump7355(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(17), s(16))
	call(block7366(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block7366(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(16) = s(15)
	nop(DUP1)
	s(16) = l(l4)
	nop(MLOAD)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	s(16) = 7355
	nop(PUSH2)
	call(block7355(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

jump7392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	leq(s(15), s(14))
	call(block7530(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump7392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	gt(s(15), s(14))
	call(block7529(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(16)
	nop(DUP1)
	s(17) = not(s(17))
	nop(NOT)
	s(18) = s(15)
	nop(DUP3)
	s(18) = l(l4)
	nop(MLOAD)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = or(s(20), s(19))
	nop(OR)
	s(20) = s(14)
	nop(DUP6)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 110783316096430219111085804672383858733180159471019743886000000987487533747007
	nop(PUSH32)
	s(10) = 1
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump7392(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7529(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7530(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	call(block7554(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block7554(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1480(s(1),s(0), l(l0)))
	nop(JUMP)

block7562(s(1), s(0), g(bthFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(bthFundDeposit)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1537(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7600(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1624(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7605(s(1), s(0), g(userPoolFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(2) = g(userPoolFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1667(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7611(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 96
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 18446744073709551615
	nop(PUSH8)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 18446744073709551615
	nop(PUSH8)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 4
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(12)
	nop(DUP1)
	gl = s(13)
	s(13) = fresh(3)
	nop(SLOAD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 31
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 64
	nop(PUSH1)
	l(l0) = s(15)
	nop(MSTORE)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(16)
	nop(DUP1)
	gl = s(17)
	s(17) = fresh(4)
	nop(SLOAD)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(19)= eq(s(19), 0)
	nop(ISZERO)
	s(20) = 256
	nop(PUSH2)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 2
	nop(PUSH1)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(18) = s(17)
	nop(DUP1)
	call(jump7611(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7611(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	eq(s(18), 0)
	call(block7860(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump7611(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	neq(s(18), 0)
	call(block7790(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0)))

jump7790(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(19), s(18))
	call(block7817(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0)))

jump7790(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(19), s(18))
	call(block7798(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

block7790(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0))=>
	s(18) = s(17)
	nop(DUP1)
	s(19) = 31
	nop(PUSH1)
	call(jump7790(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block7798(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	s(18) = 256
	nop(PUSH2)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(16)
	nop(DUP4)
	gl = s(20)
	s(20) = fresh(0)
	nop(SLOAD)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(15)
	nop(DUP4)
	l(l4) = s(18)
	nop(MSTORE)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = 7860
	nop(PUSH2)
	call(block7860(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(JUMP)

block7817(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 0
	nop(PUSH1)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = 0
	nop(PUSH1)
	s(17) = sha3(s(18), s(17))
	nop(SHA3)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	call(block7831(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))

block7831(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(18) = s(16)
	nop(DUP2)
	gl = s(18)
	s(18) = fresh(0)
	nop(SLOAD)
	s(19) = s(17)
	nop(DUP2)
	l(l4) = s(18)
	nop(MSTORE)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	call(jump7831(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump7831(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	gt(s(19), s(18))
	call(block7831(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump7831(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	leq(s(19), s(18))
	call(block7851(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

block7851(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = 31
	nop(PUSH1)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	call(block7860(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))

block7860(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = s(6)
	s(6) = s(11)
	s(11) = s(12)
	nop(SWAP5)
	nop(POP)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	nop(POP)
	s(10) = s(4)
	s(4) = s(9)
	s(9) = s(10)
	nop(SWAP5)
	nop(POP)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	call(block1742(s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(JUMP)

jump7883(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block7963(s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump7883(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block7959(s(3), s(2), s(1), s(0)))

block7883(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump7883(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7959(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block7963(s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1973(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8143(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(sellPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2020(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8149(s(1), s(0), g(referBenefitRate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(referBenefitRate)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2063(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump8155(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block8305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump8155(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block8235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(version), l(l6), l(l4), l(l1), l(l0)))

block8155(s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(version)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(version)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(version)
	s(7) = g(version)
	call(jump8155(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(version), l(l6), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block8262(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0)))

jump8235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block8243(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(version), l(l4), l(l1), l(l0)))

block8235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l6), l(l4), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump8235(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(version), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block8243(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(version), l(l4), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(version)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 8305
	nop(PUSH2)
	call(block8305(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(JUMP)

block8262(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block8276(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))

jump8276(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block8276(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

jump8276(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block8296(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0)))

block8276(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump8276(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block8296(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block8305(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0)))

block8305(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2106(s(2),s(1),s(0), l(l4), l(l1), l(l0)))
	nop(JUMP)

block8313(s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump8313(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8313(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(9), s(8))
	call(block8571(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump8313(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(9), s(8))
	call(block8406(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

block8406(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block8414(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump8414(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	geq(s(9), s(8))
	call(block8558(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump8414(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	lt(s(9), s(8))
	call(block8428(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

block8414(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = g(moderators)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	call(jump8414(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8428(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(moderators)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	call(jump8428(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8428(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	lt(s(12), s(11))
	call(block8465(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump8428(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	geq(s(12), s(11))
	call(block8464(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8464(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8465(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 0
	nop(PUSH1)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump8465(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8465(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(9), s(8))
	call(block8545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump8465(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(9), s(8))
	call(block8537(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block8537(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 8558
	nop(PUSH2)
	call(block8558(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block8545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 8414
	nop(PUSH2)
	call(block8414(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block8558(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	call(jump8558(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8558(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block8570(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump8558(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block8566(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8566(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block8570(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block8571(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block8571(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l1)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(11)
	nop(DUP4)
	call(block8588(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))

jump8588(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	lt(s(17), s(16))
	call(block8625(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))

jump8588(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	geq(s(17), s(16))
	call(block8599(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))

block8588(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	call(jump8588(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8599(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	s(16) = s(15)
	nop(DUP1)
	s(16) = l(l4)
	nop(MLOAD)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = 32
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	s(16) = 8588
	nop(PUSH2)
	call(block8588(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))
	nop(JUMP)

jump8625(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	neq(s(9), s(8))
	call(block8851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l0)))

jump8625(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	eq(s(9), s(8))
	call(block8712(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block8625(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(16)
	nop(DUP1)
	s(17) = not(s(17))
	nop(NOT)
	s(18) = s(15)
	nop(DUP3)
	s(18) = l(l4)
	nop(MLOAD)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(14)
	nop(DUP5)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = or(s(20), s(19))
	nop(OR)
	s(20) = s(14)
	nop(DUP6)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	call(jump8625(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l4), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8712(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(17), s(16))
	call(block8825(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump8712(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(17), s(16))
	call(block8824(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8712(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 113656548419250591604902447866647704064400072110016842192298131822421068284144
	nop(PUSH32)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump8712(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8824(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8825(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	s(10) = s(14)
	s(14) = s(15)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG2)
	s(8) = 9454
	nop(PUSH2)
	call(block9454(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block8851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(bthFundDeposit)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump8851(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8851(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	geq(s(9), s(8))
	call(block9097(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bthFundDeposit), l(l7), l(l6), l(l0)))

jump8851(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	lt(s(9), s(8))
	call(block8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump8957(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(17), s(16))
	call(block9071(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump8957(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(17), s(16))
	call(block9070(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8957(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 113656548419250591604902447866647704064400072110016842192298131822421068284144
	nop(PUSH32)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 0
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump8957(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9070(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9071(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	s(10) = s(14)
	s(14) = s(15)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG2)
	s(8) = 9454
	nop(PUSH2)
	call(block9454(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump9097(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	leq(s(17), s(16))
	call(block9432(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump9097(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	gt(s(17), s(16))
	call(block9431(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9097(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bthFundDeposit), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 11
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 0
	nop(PUSH1)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 0
	nop(PUSH1)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 14
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(bthFundDeposit)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 113656548419250591604902447866647704064400072110016842192298131822421068284144
	nop(PUSH32)
	s(10) = s(3)
	nop(DUP7)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump9097(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bthFundDeposit), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9431(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9432(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	s(10) = s(14)
	s(14) = s(15)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG2)
	call(block9454(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block9454(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2364(s(0)))
	nop(JUMP)

jump9462(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	eq(s(7), 1 )
	call(block9557(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9462(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	neq(s(7), 1 )
	call(block9552(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block9462(s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 12
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(crossForkDistribution)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 9557
	nop(PUSH2)
	call(jump9462(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(crossForkDistribution), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(JUMPI)

block9552(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block9557(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9557(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block9687(s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9557(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block9563(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

block9557(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump9557(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9563(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block9661(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump9563(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block9660(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9563(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 18446744073709551615
	nop(PUSH8)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3773054588384182864604035101636803573960238660781457559454934264895553627363
	nop(PUSH32)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 4
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump9563(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9660(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9661(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	s(6) = 11283
	nop(PUSH2)
	call(block11283(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump9687(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(7), s(6))
	call(block9978(s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9687(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(7), s(6))
	call(block9796(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

block9687(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 18446744073709551615
	nop(PUSH8)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 18446744073709551615
	nop(PUSH8)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump9687(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9796(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 18446744073709551615
	nop(PUSH8)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3773054588384182864604035101636803573960238660781457559454934264895553627363
	nop(PUSH32)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 0
	nop(PUSH1)
	s(10) = 5
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump9796(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9796(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block9952(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump9796(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block9951(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9951(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9952(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	s(6) = 11283
	nop(PUSH2)
	call(block11283(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump9978(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block10077(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9978(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block10017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block9978(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 10
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(12)
	nop(DUP1)
	call(jump9978(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	s(13) = s(12)
	nop(DUP1)
	s(14) = 31
	nop(PUSH1)
	call(jump10017(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump10017(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(14), s(13))
	call(block10043(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10017(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(14), s(13))
	call(block10025(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block10025(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	s(13) = 256
	nop(PUSH2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(10)
	nop(DUP4)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = 10077
	nop(PUSH2)
	call(block10077(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10043(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block10057(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block10057(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	call(jump10057(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump10057(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block10057(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10057(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block10077(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10077(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(7), s(6))
	call(block10320(s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10077(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(7), s(6))
	call(block10135(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

block10077(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 18446744073709551615
	nop(PUSH8)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump10077(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10135(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block10294(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump10135(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block10293(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10135(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 18446744073709551615
	nop(PUSH8)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3773054588384182864604035101636803573960238660781457559454934264895553627363
	nop(PUSH32)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = 2
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump10135(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10293(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10294(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	s(6) = 11283
	nop(PUSH2)
	call(block11283(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block10320(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 10
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(12)
	nop(DUP1)
	call(jump10320(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10320(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block10418(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10320(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block10358(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10358(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(14), s(13))
	call(block10384(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10358(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(14), s(13))
	call(block10366(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block10358(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	s(13) = s(12)
	nop(DUP1)
	s(14) = 31
	nop(PUSH1)
	call(jump10358(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block10366(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	s(13) = 256
	nop(PUSH2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(10)
	nop(DUP4)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = 10418
	nop(PUSH2)
	call(block10418(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10384(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block10398(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block10398(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	call(jump10398(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump10398(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(14), s(13))
	call(block10398(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10398(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(14), s(13))
	call(block10418(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10418(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(7), s(6))
	call(block10786(s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump10418(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(7), s(6))
	call(block10601(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

block10418(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 18446744073709551615
	nop(PUSH8)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 18446744073709551615
	nop(PUSH8)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 10000000000
	nop(PUSH5)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(crossForkFundDeposit)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(2)
	nop(SLOAD)
	call(jump10418(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10601(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block10760(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump10601(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block10759(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10601(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 18446744073709551615
	nop(PUSH8)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3773054588384182864604035101636803573960238660781457559454934264895553627363
	nop(PUSH32)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = 6
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump10601(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10759(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10760(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	s(6) = 11283
	nop(PUSH2)
	call(block11283(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump10786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block11101(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0)))

jump10786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block11030(s(5), s(4), s(3), s(2), s(1), s(0),g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

block10786(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 13
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(crossForkFundDeposit)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(2)
	nop(SLOAD)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(4)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(referBenefitRate)
	nop(SLOAD)
	call(jump10786(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11030(s(5), s(4), s(3), s(2), s(1), s(0), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(referBenefitRate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump11030(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11030(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block11059(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump11030(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(referBenefitRate), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11058(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11058(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11059(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 11
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block11101(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))

jump11101(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block11261(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump11101(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block11260(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11101(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 18446744073709551615
	nop(PUSH8)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 3773054588384182864604035101636803573960238660781457559454934264895553627363
	nop(PUSH32)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l4) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 7
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump11101(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11260(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11261(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	call(block11283(s(5),s(4),s(3),s(2),s(1),s(0)))

block11283(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2443(s(0)))
	nop(JUMP)

block11289(s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(owner)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = caller
	nop(CALLER)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump11289(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11289(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(12), s(11))
	call(block11553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11289(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(12), s(11))
	call(block11388(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

block11388(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	call(block11396(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump11396(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	geq(s(12), s(11))
	call(block11540(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11396(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	lt(s(12), s(11))
	call(block11410(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

block11396(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(12) = g(moderators)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	call(jump11396(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11410(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	lt(s(15), s(14))
	call(block11447(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump11410(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	geq(s(15), s(14))
	call(block11446(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11410(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(moderators)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump11410(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11446(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(12), s(11))
	call(block11527(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))

jump11447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(12), s(11))
	call(block11519(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block11447(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump11447(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11519(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	s(11) = 1
	nop(PUSH1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 11540
	nop(PUSH2)
	call(block11540(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block11527(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 11396
	nop(PUSH2)
	call(block11396(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), g(moderators), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

jump11540(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	neq(s(11), 0)
	call(block11552(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11540(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	eq(s(11), 0)
	call(block11548(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11540(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	call(jump11540(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11548(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block11552(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block11553(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block11553(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(14)
	nop(DUP1)
	s(15) = l(l1)
	nop(MLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(14)
	nop(DUP4)
	call(block11570(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11570(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(20), s(19))
	call(block11607(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11570(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(20), s(19))
	call(block11581(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block11570(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(19) = 32
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	call(jump11570(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11581(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	s(19) = s(18)
	nop(DUP1)
	s(19) = l(l4)
	nop(MLOAD)
	s(20) = s(17)
	nop(DUP3)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	s(19) = 32
	nop(PUSH1)
	s(20) = s(18)
	nop(DUP2)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = 32
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	nop(POP)
	s(19) = 11570
	nop(PUSH2)
	call(block11570(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block11607(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(19) = 1
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = 256
	nop(PUSH2)
	s(20) = s(21)^s(20)
	nop(EXP)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(19)
	nop(DUP1)
	s(20) = not(s(20))
	nop(NOT)
	s(21) = s(18)
	nop(DUP3)
	s(21) = l(l4)
	nop(MLOAD)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	s(22) = s(17)
	nop(DUP5)
	ll = s(22)
	s(22) = fresh(0)
	nop(MLOAD)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = or(s(23), s(22))
	nop(OR)
	s(23) = s(17)
	nop(DUP6)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(3)
	s(3) = s(11)
	s(11) = s(12)
	nop(SWAP8)
	nop(POP)
	s(11) = 10
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	s(16) = l(l1)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = s(15)
	nop(DUP4)
	call(block11673(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11673(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(21), s(20))
	call(block11710(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11673(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(21), s(20))
	call(block11684(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

block11673(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	call(jump11673(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11684(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	s(20) = s(19)
	nop(DUP1)
	s(20) = l(l4)
	nop(MLOAD)
	s(21) = s(18)
	nop(DUP3)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	s(20) = 11673
	nop(PUSH2)
	call(block11673(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block11710(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(20) = 1
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)-s(21)
	nop(SUB)
	s(22) = 256
	nop(PUSH2)
	s(21) = s(22)^s(21)
	nop(EXP)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(20)
	nop(DUP1)
	s(21) = not(s(21))
	nop(NOT)
	s(22) = s(19)
	nop(DUP3)
	s(22) = l(l4)
	nop(MLOAD)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	s(23) = s(18)
	nop(DUP5)
	ll = s(23)
	s(23) = fresh(0)
	nop(MLOAD)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = s(22)
	nop(DUP1)
	s(24) = s(21)
	nop(DUP3)
	s(23) = or(s(24), s(23))
	nop(OR)
	s(24) = s(18)
	nop(DUP6)
	ls(1) = s(23)
	ls(2) = s(24)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(4)
	s(4) = s(11)
	s(11) = s(12)
	nop(SWAP7)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 18446744073709551615
	nop(PUSH8)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump11710(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11710(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	neq(s(12), s(11))
	call(block11895(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11710(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	eq(s(12), s(11))
	call(block11804(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump11804(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(21), s(20))
	call(block11870(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump11804(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(21), s(20))
	call(block11869(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11804(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 86436000277921192898955644401997479019770897077495881223987633705827171222574
	nop(PUSH32)
	s(15) = 0
	nop(PUSH1)
	s(16) = 7
	nop(PUSH1)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = 7
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump11804(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11869(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11870(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG4)
	s(11) = 12972
	nop(PUSH2)
	call(block12972(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block11895(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 9
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 18446744073709551615
	nop(PUSH8)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 18446744073709551615
	nop(PUSH8)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(5)
	s(5) = s(11)
	s(11) = s(12)
	nop(SWAP6)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(6)
	s(6) = s(11)
	s(11) = s(12)
	nop(SWAP5)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(3)
	nop(SLOAD)
	call(jump11895(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11895(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(12), s(11))
	call(block12179(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump11895(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(12), s(11))
	call(block12058(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump12058(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(21), s(20))
	call(block12154(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump12058(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(21), s(20))
	call(block12153(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12058(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(11) = s(4)
	nop(DUP7)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 86436000277921192898955644401997479019770897077495881223987633705827171222574
	nop(PUSH32)
	s(15) = s(6)
	nop(DUP9)
	s(16) = 6
	nop(PUSH1)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = 7
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump12058(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12153(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12154(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG4)
	s(11) = 12972
	nop(PUSH2)
	call(block12972(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block12179(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkFundDeposit), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(2)
	nop(SLOAD)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(3)
	nop(SLOAD)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = 13
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(15) = g(crossForkFundDeposit)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(4)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = 10
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(16)
	nop(DUP1)
	s(17) = l(l1)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(16)
	nop(DUP4)
	call(block12432(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))

block12432(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(18)
	nop(DUP4)
	call(jump12432(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12432(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	lt(s(22), s(21))
	call(block12469(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0)))

jump12432(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	geq(s(22), s(21))
	call(block12443(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0)))

block12443(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	s(21) = s(20)
	nop(DUP1)
	s(21) = l(l4)
	nop(MLOAD)
	s(22) = s(19)
	nop(DUP3)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	nop(POP)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(18)
	nop(DUP4)
	s(21) = s(22)-s(21)
	nop(SUB)
	s(22) = s(18)
	s(18) = s(21)
	s(21) = s(22)
	nop(SWAP3)
	nop(POP)
	s(21) = 12432
	nop(PUSH2)
	call(block12432(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))
	nop(JUMP)

block12469(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(21) = 1
	nop(PUSH1)
	s(22) = s(18)
	nop(DUP4)
	s(23) = 32
	nop(PUSH1)
	s(22) = s(23)-s(22)
	nop(SUB)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(21) = s(22)-s(21)
	nop(SUB)
	s(22) = s(21)
	nop(DUP1)
	s(22) = not(s(22))
	nop(NOT)
	s(23) = s(20)
	nop(DUP3)
	s(23) = l(l4)
	nop(MLOAD)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = s(21)
	nop(DUP2)
	s(24) = s(19)
	nop(DUP5)
	ll = s(24)
	s(24) = fresh(0)
	nop(MLOAD)
	s(23) = and(s(24), s(23))
	nop(AND)
	s(24) = s(23)
	nop(DUP1)
	s(25) = s(22)
	nop(DUP3)
	s(24) = or(s(25), s(24))
	nop(OR)
	s(25) = s(19)
	nop(DUP6)
	ls(1) = s(24)
	ls(2) = s(25)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 18446744073709551615
	nop(PUSH8)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 18446744073709551615
	nop(PUSH8)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 32
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 64
	nop(PUSH1)
	l(l0) = s(12)
	nop(MSTORE)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(2)
	nop(MLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 12598
	nop(PUSH2)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 17822
	nop(PUSH2)
	call(block17822_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

jump12598(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	leq(s(12), s(11))
	call(block12854(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump12598(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	gt(s(12), s(11))
	call(block12728(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block12598(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	nop(DUP2)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 2
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 0
	nop(PUSH1)
	s(12) = 11
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 3
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	call(jump12598(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12728(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(11) = s(5)
	nop(DUP6)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 11
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 3
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	call(jump12728(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12728(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	geq(s(12), s(11))
	call(block12808(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump12728(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	lt(s(12), s(11))
	call(block12774(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block12774(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(11) = 11
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(5)
	nop(DUP8)
	s(14) = 3
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	call(block12808(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block12808(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 11
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(5)
	nop(DUP9)
	s(15) = 3
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 0
	nop(PUSH1)
	s(15) = not(s(15))
	nop(NOT)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	call(block12854(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

jump12854(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	leq(s(21), s(20))
	call(block12951(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump12854(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	gt(s(21), s(20))
	call(block12950(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12854(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 18446744073709551615
	nop(PUSH8)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 86436000277921192898955644401997479019770897077495881223987633705827171222574
	nop(PUSH32)
	s(15) = s(6)
	nop(DUP9)
	s(16) = 0
	nop(PUSH1)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = 7
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump12854(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12950(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12951(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	ls(1) = s(19)
	ls(2) = s(20)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG4)
	call(block12972(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block12972(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2548(s(0)))
	nop(JUMP)

block12983(s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump12983(s(5),s(4),s(3),s(2),s(1),s(0),g(crossForking), g(moderators), g(owner), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12983(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller)=>
	eq(s(5), s(4))
	call(block13238(s(3), s(2), s(1), s(0),g(crossForking)))

jump12983(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), g(owner), l(l6), caller)=>
	neq(s(5), s(4))
	call(block13073(s(3), s(2), s(1), s(0),g(crossForking), g(moderators), l(l6), caller))

block13073(s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block13081(s(3),s(2),s(1),s(0),g(crossForking), g(moderators), l(l6), caller))

jump13081(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	geq(s(5), s(4))
	call(block13225(s(3), s(2), s(1), s(0),g(crossForking)))

jump13081(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	lt(s(5), s(4))
	call(block13095(s(3), s(2), s(1), s(0),g(crossForking), g(moderators), l(l6), caller))

block13081(s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump13081(s(5),s(4),s(3),s(2),s(1),s(0),g(crossForking), g(moderators), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13095(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	lt(s(8), s(7))
	call(block13132(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForking), g(moderators), l(l6), caller))

jump13095(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	geq(s(8), s(7))
	call(block13131(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13095(s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump13095(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForking), g(moderators), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13131(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13132(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13132(s(5),s(4),s(3),s(2),s(1),s(0),g(crossForking), g(moderators), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13132(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	neq(s(5), s(4))
	call(block13212(s(3), s(2), s(1), s(0),g(crossForking), g(moderators), l(l6), caller))

jump13132(s(5), s(4), s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	eq(s(5), s(4))
	call(block13204(s(3), s(2), s(1), s(0),g(crossForking)))

block13204(s(3), s(2), s(1), s(0), g(crossForking))=>
	s(4) = 1
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 13225
	nop(PUSH2)
	call(block13225(s(3),s(2),s(1),s(0),g(crossForking)))
	nop(JUMP)

block13212(s(3), s(2), s(1), s(0), g(crossForking), g(moderators), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 13081
	nop(PUSH2)
	call(block13081(s(3),s(2),s(1),s(0),g(crossForking), g(moderators), l(l6), caller))
	nop(JUMP)

jump13225(s(4), s(3), s(2), s(1), s(0), g(crossForking))=>
	neq(s(4), 0)
	call(block13237(s(3), s(2), s(1), s(0),g(crossForking)))

jump13225(s(4), s(3), s(2), s(1), s(0), g(crossForking))=>
	eq(s(4), 0)
	call(block13233(s(3), s(2), s(1), s(0)))

block13225(s(3), s(2), s(1), s(0), g(crossForking))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	call(jump13225(s(4),s(3),s(2),s(1),s(0),g(crossForking)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13233(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13237(s(3), s(2), s(1), s(0), g(crossForking))=>
	nop(JUMPDEST)
	call(block13238(s(3),s(2),s(1),s(0),g(crossForking)))

block13238(s(3), s(2), s(1), s(0), g(crossForking))=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(crossForking)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(crossForking)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(crossForking) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2571(s(0)))
	nop(JUMP)

jump13284(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	eq(s(5), s(4))
	call(block13377(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump13284(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	neq(s(5), s(4))
	call(block13373(s(3), s(2), s(1), s(0)))

block13284(s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13284(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), g(owner), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13373(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump13377(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	eq(s(5), s(4))
	call(block13679(s(3), s(2), s(1), s(0)))

jump13377(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	neq(s(5), s(4))
	call(block13432(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

block13377(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13377(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13432(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block13436(s(3),s(2),s(1),s(0),g(moderators), l(l6)))

jump13436(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(5), s(4))
	call(block13576(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump13436(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(5), s(4))
	call(block13450(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

block13436(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump13436(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13450(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump13450(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13450(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(8), s(7))
	call(block13487(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump13450(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(8), s(7))
	call(block13486(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13486(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13487(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13487(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13487(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	neq(s(5), s(4))
	call(block13563(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump13487(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	eq(s(5), s(4))
	call(block13559(s(3), s(2), s(1), s(0)))

block13559(s(3), s(2), s(1), s(0))=>
	s(4) = 13680
	nop(PUSH2)
	call(block13680(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block13563(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 13436
	nop(PUSH2)
	call(block13436(s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(JUMP)

block13576(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(moderators)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	g(moderators) = s(8)
	nop(SSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block13679(s(3),s(2),s(1),s(0)))

block13679(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block13680(s(3),s(2),s(1),s(0)))

block13680(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2638(s(0)))
	nop(JUMP)

jump13684(s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(owner), caller)=>
	eq(s(4), s(3))
	call(block13775(s(2), s(1), s(0),g(crossForkDistribution)))

jump13684(s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(owner), caller)=>
	neq(s(4), s(3))
	call(block13771(s(2), s(1), s(0)))

block13684(s(2), s(1), s(0), g(crossForkDistribution), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump13684(s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13771(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block13775(s(2), s(1), s(0), g(crossForkDistribution))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 12
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(crossForkDistribution)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(crossForkDistribution) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2705(s(0)))
	nop(JUMP)

block13843(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2772(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block13867(s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump13867(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13867(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block13947(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump13867(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block13943(s(4), s(3), s(2), s(1), s(0)))

block13943(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump13947(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block14086(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump13947(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block14082(s(4), s(3), s(2), s(1), s(0)))

block13947(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	call(jump13947(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14082(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block14086(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG2)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2869(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14405(s(1), s(0), g(developerFundDeposit), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 15
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(developerFundDeposit)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2916(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14443(s(1), s(0), g(crossForking), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crossForking)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3003(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14462(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(2) = g(buyPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3050(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14468(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3093(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14505(s(1), s(0), g(crossForkCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crossForkCount)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 18446744073709551615
	nop(PUSH8)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3180(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14531(s(1), s(0), g(developerFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(2) = g(developerFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3243(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14537(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 30001560085673934836917086865036840344583253048794006176736844999692797345792
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3286(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump14594(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(4), 1 )
	call(block14706(s(3), s(2), s(1), s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

jump14594(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(4), 1 )
	call(block14625(s(3), s(2), s(1), s(0),g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

block14594(s(1), s(0), g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(trading)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 14706
	nop(PUSH2)
	call(jump14594(s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(JUMPI)

block14625(s(3), s(2), s(1), s(0), g(buyPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block14706(s(3),s(2),s(1),s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

block14706(s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	call(jump14706(s(3),s(2),s(1),s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14706(s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(3), 0)
	call(block14717(s(2), s(1), s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

jump14706(s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(3), 0)
	call(block14713(s(2), s(1), s(0)))

block14713(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump14717(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block14730(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), address, caller))

jump14717(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block14729(s(4), s(3), s(2), s(1), s(0)))

block14717(s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 21
	nop(PUSH1)
	s(3) = g(buyPrice)
	nop(SLOAD)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = s(3)
	nop(DUP2)
	call(jump14717(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14729(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14730(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 14744
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 17127
	nop(PUSH2)
	call(block17127_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block14744(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block3417(s(0)))
	nop(JUMP)

block14747(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 14758
	nop(PUSH2)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 17127
	nop(PUSH2)
	call(block17127_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block14758(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block3494(s(0)))
	nop(JUMP)

block14762(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 23
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3561(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block14794(s(1), s(0), g(crossForkDistribution), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(crossForkDistribution)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3608(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump14832(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	eq(s(5), s(4))
	call(block14925(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump14832(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	neq(s(5), s(4))
	call(block14921(s(3), s(2), s(1), s(0)))

block14832(s(2), s(1), s(0), g(moderators), g(owner), l(l6), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump14832(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), g(owner), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14921(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14925(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	call(block14930(s(3),s(2),s(1),s(0),g(moderators), l(l6)))

jump14930(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(5), s(4))
	call(block15070(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump14930(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(5), s(4))
	call(block14944(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

block14930(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump14930(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14944(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump14944(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14944(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(8), s(7))
	call(block14981(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump14944(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(8), s(7))
	call(block14980(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14980(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14981(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump14981(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14981(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	neq(s(5), s(4))
	call(block15057(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump14981(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	eq(s(5), s(4))
	call(block15053(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

block15053(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	s(4) = 15070
	nop(PUSH2)
	call(block15070(s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(JUMP)

block15057(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = 14930
	nop(PUSH2)
	call(block14930(s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(JUMP)

block15070(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	call(jump15070(s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15070(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(5), s(4))
	call(block15323(s(3), s(2), s(1), s(0)))

jump15070(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(5), s(4))
	call(block15084(s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump15084(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(7), s(6))
	call(block15104(s(5), s(4), s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump15084(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(7), s(6))
	call(block15103(s(5), s(4), s(3), s(2), s(1), s(0)))

block15084(s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(moderators)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump15084(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15103(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15104(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(8), s(7))
	call(block15162(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump15104(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(8), s(7))
	call(block15161(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15104(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l6) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump15104(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15161(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15162(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(moderators)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(moderators)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump15162(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15162(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	lt(s(7), s(6))
	call(block15255(s(5), s(4), s(3), s(2), s(1), s(0),g(moderators), l(l6)))

jump15162(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	geq(s(7), s(6))
	call(block15254(s(5), s(4), s(3), s(2), s(1), s(0)))

block15254(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15255(s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 0
	nop(PUSH1)
	l(l6) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 15321
	nop(PUSH2)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 17950
	nop(PUSH2)
	call(block17950(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(JUMP)

block15321(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block15323(s(3),s(2),s(1),s(0)))

block15323(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block3739(s(0)))
	nop(JUMP)

jump15327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block15342(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump15327(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block15341(s(4), s(3), s(2), s(1), s(0)))

block15327(s(2), s(1), s(0), g(moderators), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(moderators)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump15327(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15341(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15342(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3784(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15389(s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump15389(s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15389(s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(3), s(2))
	call(block15480(s(1), s(0),g(owner)))

jump15389(s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(3), s(2))
	call(block15476(s(1), s(0)))

block15476(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block15480(s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	nop(SUICIDE)

block15538(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10000000000
	nop(PUSH5)
	s(3) = s(1)
	nop(DUP2)
	call(block3894(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15547(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 15563
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 5297
	nop(PUSH2)
	call(block5297_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

jump15563(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(7), 0)
	call(block15925(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump15563(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(7), 0)
	call(block15569(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block15563(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump15563(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15569(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2404383921
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = s(3)
	nop(DUP7)
	s(11) = address
	nop(ADDRESS)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 4
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	nop(DUP2)
	s(18) = l(l1)
	nop(MLOAD)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = s(16)
	nop(DUP1)
	s(17) = l(l1)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 0
	nop(PUSH1)
	call(block15786(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0), extcodesize, gas, returndatasize))

jump15786(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0), extcodesize, gas, returndatasize)=>
	geq(s(23), s(22))
	call(block15813(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump15786(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0), extcodesize, gas, returndatasize)=>
	lt(s(23), s(22))
	call(block15795(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0), extcodesize, gas, returndatasize))

block15786(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(22) = s(18)
	nop(DUP4)
	s(23) = s(21)
	nop(DUP2)
	call(jump15786(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0), extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15795(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0), extcodesize, gas, returndatasize)=>
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(22) = l(l4)
	nop(MLOAD)
	s(23) = s(21)
	nop(DUP2)
	s(24) = s(19)
	nop(DUP5)
	s(23) = s(24)+s(23)
	nop(ADD)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(23) = s(21)
	nop(DUP2)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	nop(POP)
	s(22) = 15786
	nop(PUSH2)
	call(block15786(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0), extcodesize, gas, returndatasize))
	nop(JUMP)

block15813(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 31
	nop(PUSH1)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(16)
	nop(DUP1)
	call(jump15813(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15813(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block15858(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump15813(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block15833(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

block15833(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(17)
	nop(DUP1)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 1
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = 256
	nop(PUSH2)
	s(20) = s(21)^s(20)
	nop(EXP)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	call(block15858(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))

jump15858(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block15892(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize))

jump15858(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block15888(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15858(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(9)
	s(9) = s(15)
	s(15) = s(16)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump15858(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15888(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump15892(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	eq(s(11), 0)
	call(block15912(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump15892(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	neq(s(11), 0)
	call(block15903(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block15892(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump15892(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15903(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block15912(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 15926
	nop(PUSH2)
	call(block15926(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(JUMP)

block15925(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	call(block15926(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block15926(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4061(s(1),s(0), l(l0)))
	nop(JUMP)

block15934(s(2), s(1), s(0), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 10
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l1)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(8)
	nop(DUP4)
	call(block15955(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block15955(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(10)
	nop(DUP4)
	call(jump15955(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15955(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(14), s(13))
	call(block15992(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

jump15955(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(14), s(13))
	call(block15966(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block15966(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(13) = s(12)
	nop(DUP1)
	s(13) = l(l4)
	nop(MLOAD)
	s(14) = s(11)
	nop(DUP3)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	s(13) = 15955
	nop(PUSH2)
	call(block15955(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block15992(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(13)
	nop(DUP1)
	s(14) = not(s(14))
	nop(NOT)
	s(15) = s(12)
	nop(DUP3)
	s(15) = l(l4)
	nop(MLOAD)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	ll = s(16)
	s(16) = fresh(0)
	nop(MLOAD)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = or(s(17), s(16))
	nop(OR)
	s(17) = s(11)
	nop(DUP6)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	ls(1) = s(5)
	ls(2) = s(6)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 18446744073709551615
	nop(PUSH8)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4190(s(1),s(0), l(l0)))
	nop(JUMP)

block16071(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4329(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16108(s(2), s(1), s(0), g(referBenefitRate), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump16108(s(4),s(3),s(2),s(1),s(0),g(referBenefitRate), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16108(s(4), s(3), s(2), s(1), s(0), g(referBenefitRate), g(owner), caller)=>
	eq(s(4), s(3))
	call(block16199(s(2), s(1), s(0),g(referBenefitRate)))

jump16108(s(4), s(3), s(2), s(1), s(0), g(referBenefitRate), g(owner), caller)=>
	neq(s(4), s(3))
	call(block16195(s(2), s(1), s(0)))

block16195(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16199(s(2), s(1), s(0), g(referBenefitRate))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 7
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(referBenefitRate) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4394(s(0)))
	nop(JUMP)

block16209(s(2), s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(trading)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 16319
	nop(PUSH2)
	call(jump16209(s(5),s(4),s(3),s(2),s(1),s(0),g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMPI)

jump16209(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), 1 )
	call(block16319(s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump16209(s(5), s(4), s(3), s(2), s(1), s(0), g(trading), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), 1 )
	call(block16238(s(3), s(2), s(1), s(0),g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

block16238(s(3), s(2), s(1), s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	call(block16319(s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump16319(s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), 0)
	call(block16330(s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump16319(s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), 0)
	call(block16326(s(2), s(1), s(0)))

block16319(s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	call(jump16319(s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16326(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16330(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 20
	nop(PUSH1)
	s(3) = g(sellPrice)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	call(jump16330(s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16330(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(4), s(3))
	call(block16372(s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize))

jump16330(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(4), s(3))
	call(block16368(s(2), s(1), s(0)))

block16368(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16372(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 16383
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = address
	nop(ADDRESS)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 17127
	nop(PUSH2)
	call(block17127_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

jump16383(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block16457(s(3), s(2), s(1), s(0)))

jump16383(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block16448(s(3), s(2), s(1), s(0), returndatasize))

block16383(s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 20
	nop(PUSH1)
	s(5) = g(sellPrice)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump16383(s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16448(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block16457(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block4439(s(0)))
	nop(JUMP)

jump16461(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block16552(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump16461(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block16548(s(3), s(2), s(1), s(0)))

block16461(s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump16461(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16548(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block16552(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 23
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 32657201770267406270387051459252782163643370607803865882362308449687686480805
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block4518(s(0)))
	nop(JUMP)

block16754(s(1), s(0), g(trading), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 22
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(trading)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4541(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16773(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 11
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l1)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(9)
	nop(DUP4)
	call(block16796(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))

block16796(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	call(jump16796(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16796(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	lt(s(15), s(14))
	call(block16833(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0)))

jump16796(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	geq(s(15), s(14))
	call(block16807(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0)))

block16807(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	s(14) = s(13)
	nop(DUP1)
	s(14) = l(l4)
	nop(MLOAD)
	s(15) = s(12)
	nop(DUP3)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	s(14) = 16796
	nop(PUSH2)
	call(block16796(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l0)))
	nop(JUMP)

block16833(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(14)
	nop(DUP1)
	s(15) = not(s(15))
	nop(NOT)
	s(16) = s(13)
	nop(DUP3)
	s(16) = l(l4)
	nop(MLOAD)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(12)
	nop(DUP5)
	ll = s(17)
	s(17) = fresh(0)
	nop(MLOAD)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(12)
	nop(DUP6)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 0
	nop(PUSH1)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4670(s(1),s(0), l(l0)))
	nop(JUMP)

block16908(s(1), s(0), g(marketingFund), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(2) = g(marketingFund)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4713(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump16914(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block17005(s(2), s(1), s(0),g(owner)))

jump16914(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block17001(s(2), s(1), s(0)))

block16914(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump16914(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17001(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump17005(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block17124(s(2), s(1), s(0)))

jump17005(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block17060(s(2), s(1), s(0),g(owner)))

block17005(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump17005(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17060(s(2), s(1), s(0), g(owner))=>
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block17124(s(2),s(1),s(0)))

block17124(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block4800(s(0)))
	nop(JUMP)

jump17127(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(11), s(10))
	call(block17165(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17127(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(11), s(10))
	call(block17161(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17127(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump17127(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17161(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block17165(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump17165(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17165(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block17242(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17165(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block17238(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17238(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block17242(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump17242(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17242(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block17384(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17242(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block17380(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17380(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block17384(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 23
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump17384(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17384(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block17473(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17384(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block17469(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17469(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump17473(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block17562(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17473(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block17558(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17473(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 23
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump17473(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17558(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block17562(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block6041(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump17822(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block17887(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump17822(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block17871(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block17822(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(11)
	nop(DUP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 1
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 31
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 32
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 31
	nop(PUSH1)
	call(jump17822(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l6), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block17871(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(13) = s(12)
	nop(DUP1)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = 255
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(14)
	nop(DUP1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(13) = or(s(14), s(13))
	nop(OR)
	s(14) = s(8)
	nop(DUP6)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = 17933
	nop(PUSH2)
	call(block17933(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

jump17887(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block17933(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump17887(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block17902(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block17887(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(13)
	nop(DUP1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(8)
	nop(DUP6)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = s(10)
	nop(DUP3)
	call(jump17887(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17902(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	call(block17905(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump17905(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(14), s(13))
	call(block17932(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump17905(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(14), s(13))
	call(block17914(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block17905(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	call(jump17905(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17914(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(13) = s(10)
	nop(DUP3)
	ll = s(13)
	s(13) = fresh(0)
	nop(MLOAD)
	s(14) = s(11)
	nop(DUP3)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 17905
	nop(PUSH2)
	call(block17905(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block17932(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block17933(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block17933(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 17946
	nop(PUSH2)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 17994
	nop(PUSH2)
	call(block17994(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block17946(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block6874(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block17950(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(moderators)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(6)
	nop(DUP4)
	g(moderators) = s(9)
	nop(SSTORE)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	call(jump17950(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(moderators), l(l6)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17950(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	leq(s(10), s(9))
	call(block17989(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump17950(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(moderators), l(l6))=>
	gt(s(10), s(9))
	call(block17964(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6)))

block17964(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6))=>
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 17988
	nop(PUSH2)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 17994
	nop(PUSH2)
	call(block17994_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block17988(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block17989(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block17989(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block15321(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block17994(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 18028
	nop(PUSH2)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block18000(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump18000(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	leq(s(14), s(13))
	call(block18024(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

jump18000(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	gt(s(14), s(13))
	call(block18009(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))

block18000(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	call(jump18000(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18009(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 18000
	nop(PUSH2)
	call(block18000(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block18024(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block18028(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

block18028(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block17946(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(crossForkDistribution), g(crossForkCount), l(l4), l(l1), l(l0), caller, extcodesize, gas, returndatasize, timestamp))
	nop(JUMP)

jump17127_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block17165_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17127_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block17161_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17127_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump17127_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17127_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block17165_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17127_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block17161_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17127_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump17127_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17127_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump17127_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17127_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), s(7))
	call(block17165_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump17127_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), s(7))
	call(block17161_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17161_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17161_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block17161_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump17165_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block17242_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17165_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block17238_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17165_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump17165_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17165_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block17242_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17165_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block17238_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17165_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump17165_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17165_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	gt(s(8), s(7))
	call(block17242_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump17165_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	leq(s(8), s(7))
	call(block17238_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17165_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump17165_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17238_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17238_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block17238_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump17242_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block17384_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17242_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block17380_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17242_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump17242_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17242_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block17384_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17242_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block17380_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17242_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump17242_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17242_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	gt(s(8), s(7))
	call(block17384_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump17242_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	leq(s(8), s(7))
	call(block17380_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17242_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump17242_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17380_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17380_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block17380_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump17384_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block17473_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17384_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block17469_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17384_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 23
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump17384_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17384_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block17473_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17384_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block17469_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17384_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump17384_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17384_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(7), 0)
	call(block17473_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump17384_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(7), 0)
	call(block17469_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17384_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 23
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump17384_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17469_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17469_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block17469_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump17473_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block17562_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17473_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block17558_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17473_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 23
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump17473_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17473_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block17562_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump17473_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block17558_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17473_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 23
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump17473_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17473_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(7), 0)
	call(block17562_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump17473_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(7), 0)
	call(block17558_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17473_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 23
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump17473_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17558_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17558_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block17558_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block17562_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block14744(s(2),s(1),s(0)))
	nop(JUMP)

block17562_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block14758(s(3),s(2),s(1),s(0)))
	nop(JUMP)

block17562_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 3
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block16383(s(2),s(1),s(0),g(sellPrice), l(l0), caller, returndatasize))
	nop(JUMP)

block17822_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 1
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(18)= eq(s(18), 0)
	nop(ISZERO)
	s(19) = 256
	nop(PUSH2)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 2
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 0
	nop(PUSH1)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 31
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 32
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	nop(DUP3)
	s(18) = 31
	nop(PUSH1)
	call(jump17822_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump17822_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	lt(s(18), s(17))
	call(block17887_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump17822_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	geq(s(18), s(17))
	call(block17871_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block17871_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(17) = s(16)
	nop(DUP1)
	ll = s(17)
	s(17) = fresh(0)
	nop(MLOAD)
	s(18) = 255
	nop(PUSH1)
	s(18) = not(s(18))
	nop(NOT)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(14)
	nop(DUP4)
	s(19) = s(18)
	nop(DUP1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(12)
	nop(DUP6)
	gs(1) = s(18)
	gs(2) = s(17)
	nop(SSTORE)
	s(17) = 17933
	nop(PUSH2)
	call(block17933_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

jump17887_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	eq(s(17), 0)
	call(block17933_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump17887_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	neq(s(17), 0)
	call(block17902_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block17887_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(17)
	nop(DUP1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 1
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(12)
	nop(DUP6)
	gs(1) = s(18)
	gs(2) = s(17)
	nop(SSTORE)
	s(17) = s(14)
	nop(DUP3)
	call(jump17887_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17902_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)+s(16)
	nop(ADD)
	call(block17905_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block17905_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump17905_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17905_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	leq(s(18), s(17))
	call(block17932_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump17905_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	gt(s(18), s(17))
	call(block17914_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block17914_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(17) = s(14)
	nop(DUP3)
	ll = s(17)
	s(17) = fresh(0)
	nop(MLOAD)
	s(18) = s(15)
	nop(DUP3)
	gs(1) = s(18)
	gs(2) = s(17)
	nop(SSTORE)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 17905
	nop(PUSH2)
	call(block17905_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block17932_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	call(block17933_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block17933_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 17946
	nop(PUSH2)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 17994
	nop(PUSH2)
	call(block17994_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block17946_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block12598(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block17994_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(16) = 18028
	nop(PUSH2)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	call(block18000_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block17994_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(11) = 18028
	nop(PUSH2)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block18000_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

jump18000_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	leq(s(18), s(17))
	call(block18024_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump18000_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	gt(s(18), s(17))
	call(block18009_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block18000_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	call(jump18000_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18000_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	call(jump18000_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18000_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	leq(s(13), s(12))
	call(block18024_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18000_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	gt(s(13), s(12))
	call(block18009_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18009_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	gs(1) = s(19)
	gs(2) = s(18)
	nop(SSTORE)
	nop(POP)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 18000
	nop(PUSH2)
	call(block18000_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block18009_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 18000
	nop(PUSH2)
	call(block18000_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block18024_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	call(block18028_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block18024_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block18028_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block18028_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block17946_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block18028_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block17988(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5297_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 4
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = caller
	nop(CALLER)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block15563(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block615_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

