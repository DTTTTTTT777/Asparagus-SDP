jump0(s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	lt(s(1), s(0))
	call(block175(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

jump0(s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	geq(s(1), s(0))
	call(block13(g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

block0(g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13(g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block490(s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(name), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block65(s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

jump65(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block634(s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, spender))

jump65(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block76(s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

block65(s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 192846916
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block735(s(0),g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to))

jump76(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(owner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block87(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

jump87(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block802(s(0), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block98(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

block87(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 273799988
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block849(s(0),g(_totalSupply), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(_totalSupply), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block109(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))

block109(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block892(s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, callvalue, from, to))

jump109(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, from, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block120(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))

block120(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump120(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block1025(s(0),g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner))

jump120(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block131(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))

block131(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block1112(s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), g(symbol), l(l3), l(l2), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block142(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))

jump142(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block1256(s(0),g(tokenOwner), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block153(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))

block142(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2749789712
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump153(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	eq(s(2), s(1))
	call(block1343(s(0),g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, to))

jump153(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	neq(s(2), s(1))
	call(block164(s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), calldatasize, caller, callvalue, owner, returndatasize, spender))

block153(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), amount, calldatasize, caller, callvalue, owner, returndatasize, spender, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), calldatasize, caller, callvalue, owner, returndatasize, spender)=>
	eq(s(2), s(1))
	call(block1444(s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump164(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), calldatasize, caller, callvalue, owner, returndatasize, spender)=>
	neq(s(2), s(1))
	call(block175_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

block164(s(0), g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), calldatasize, caller, callvalue, owner, returndatasize, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), calldatasize, caller, callvalue, owner, returndatasize, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(1), s(0))
	call(block265(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

jump175(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(1), s(0))
	call(block264())

block175(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(0) = caller
	nop(CALLER)
	s(1) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = 7
	nop(PUSH1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(2) = g(tokenOwner)
	nop(SLOAD)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(3) = 256
	nop(PUSH2)
	s(2) = s(3)^s(2)
	nop(EXP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(1) = s(2)/s(1)
	nop(DIV)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	call(jump175(s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block264()=>
	nop(ASSERTFAIL)

block265(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 4
	nop(PUSH1)
	s(0) = g(sellingPrice)
	nop(SLOAD)
	s(1) = callvalue
	nop(CALLVALUE)
	call(jump265(s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump265(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block279(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

jump265(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block278())

block278()=>
	nop(ASSERTFAIL)

jump279(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(1), s(0))
	call(block365(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump279(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(1), s(0))
	call(block290(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

block279(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 4
	nop(PUSH1)
	s(0) = g(sellingPrice)
	nop(SLOAD)
	s(1) = callvalue
	nop(CALLVALUE)
	call(jump279(s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block290(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(0) = caller
	nop(CALLER)
	s(1) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = 2300
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(sellingPrice)
	nop(SLOAD)
	s(3) = callvalue
	nop(CALLVALUE)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(3) = s(1)
	nop(DUP2)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(2) = s(3)*s(2)
	nop(MUL)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = 0
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(0)
	nop(DUP9)
	s(10) = s(1)
	nop(DUP9)
	s(4) = 1
	nop(CALL)
	s(5) = s(0)
	s(0) = s(4)
	s(4) = s(5)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(0)= eq(s(0), 0)
	nop(ISZERO)
	s(1) = s(0)
	nop(DUP1)
	call(jump290(s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump290(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(1), 0)
	call(block363(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump290(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(1), 0)
	call(block354(s(0), returndatasize))

block354(s(0), returndatasize)=>
	s(1) = returndatasize
	nop(RETURNDATASIZE)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(2) = returndatasize
	nop(RETURNDATASIZE)
	s(3) = 0
	nop(PUSH1)
	nop(REVERT)

block363(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	call(block365(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump365(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	lt(s(1), s(0))
	call(block416(g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump365(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	geq(s(1), s(0))
	call(block388(g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

block365(g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 4
	nop(PUSH1)
	s(0) = g(sellingPrice)
	nop(SLOAD)
	s(1) = 3
	nop(PUSH1)
	s(2) = s(0)
	nop(DUP2)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	g(currentPrice) = s(1)
	nop(SSTORE)
	nop(POP)
	s(0) = 5
	nop(PUSH1)
	s(0) = g(stepLimit)
	nop(SLOAD)
	s(1) = 3
	nop(PUSH1)
	s(1) = g(currentPrice)
	nop(SLOAD)
	call(jump365(s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump388(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	neq(s(2), 0)
	call(block404(s(1), s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump388(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	eq(s(2), 0)
	call(block403(s(1), s(0)))

block388(g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	s(0) = 94
	nop(PUSH1)
	s(1) = 120
	nop(PUSH1)
	s(2) = 3
	nop(PUSH1)
	s(2) = g(currentPrice)
	nop(SLOAD)
	s(1) = s(2)*s(1)
	nop(MUL)
	s(2) = s(0)
	nop(DUP2)
	call(jump388(s(2),s(1),s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block403(s(1), s(0))=>
	nop(ASSERTFAIL)

block404(s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4
	nop(PUSH1)
	s(2) = s(0)
	nop(DUP2)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	g(sellingPrice) = s(1)
	nop(SSTORE)
	nop(POP)
	s(0) = 444
	nop(PUSH2)
	call(block444(g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

jump416(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	neq(s(2), 0)
	call(block436(s(1), s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump416(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	eq(s(2), 0)
	call(block435(s(1), s(0)))

block416(g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 94
	nop(PUSH1)
	s(1) = 100
	nop(PUSH1)
	s(2) = 2
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(3) = g(currentPrice)
	nop(SLOAD)
	s(2) = s(3)*s(2)
	nop(MUL)
	s(1) = s(2)*s(1)
	nop(MUL)
	s(2) = s(0)
	nop(DUP2)
	call(jump416(s(2),s(1),s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block435(s(1), s(0))=>
	nop(ASSERTFAIL)

block436(s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4
	nop(PUSH1)
	s(2) = s(0)
	nop(DUP2)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	g(sellingPrice) = s(1)
	nop(SSTORE)
	nop(POP)
	call(block444(g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize))

block444(g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(0) = 488
	nop(PUSH2)
	s(1) = 7
	nop(PUSH1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(2) = g(tokenOwner)
	nop(SLOAD)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(3) = 256
	nop(PUSH2)
	s(2) = s(3)^s(2)
	nop(EXP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	s(1) = s(2)/s(1)
	nop(DIV)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = caller
	nop(CALLER)
	s(3) = 1563
	nop(PUSH2)
	call(block1563(s(2),s(1),s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize))
	nop(JUMP)

block488()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump490(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block502(s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

jump490(s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block498(s(1), s(0)))

block490(s(0), g(name), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump490(s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block498(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block502(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 511
	nop(PUSH2)
	s(2) = 1822
	nop(PUSH2)
	call(block1822(s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block511(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block548(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block548(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump548(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump548(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block575(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump548(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block557(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block557(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 548
	nop(PUSH2)
	call(block548(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block620(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump575(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block595(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block575(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump575(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block595(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block620(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block620(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block634(s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump634(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump634(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, spender)=>
	eq(s(2), 0)
	call(block646(s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, spender))

jump634(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, spender)=>
	neq(s(2), 0)
	call(block642(s(1), s(0)))

block642(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block646(s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 709
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = amount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 1980
	nop(PUSH2)
	call(block1980(s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), caller))
	nop(JUMP)

block709(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block735(s(0), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump735(s(2),s(1),s(0),g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump735(s(2), s(1), s(0), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to)=>
	eq(s(2), 0)
	call(block747(s(1), s(0),g(owner), l(l0), address, balance, calldatasize, caller, returndatasize, to))

jump735(s(2), s(1), s(0), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to)=>
	neq(s(2), 0)
	call(block743(s(1), s(0)))

block743(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block747(s(1), s(0), g(owner), l(l0), address, balance, calldatasize, caller, returndatasize, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 800
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2267
	nop(PUSH2)
	call(block2267(s(2),s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block800(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump802(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block814(s(1), s(0), l(l1), l(l0)))

jump802(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block810(s(1), s(0)))

block802(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump802(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block810(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block814(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 823
	nop(PUSH2)
	s(2) = 2703
	nop(PUSH2)
	call(block2703(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block823(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump849(s(2), s(1), s(0), g(_totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block861(s(1), s(0),g(_totalSupply), l(l1), l(l0)))

jump849(s(2), s(1), s(0), g(_totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block857(s(1), s(0)))

block849(s(0), g(_totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump849(s(2),s(1),s(0),g(_totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block857(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block861(s(1), s(0), g(_totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 870
	nop(PUSH2)
	s(2) = 2712
	nop(PUSH2)
	call(block2712(s(1),s(0),g(_totalSupply), l(l1), l(l0)))
	nop(JUMP)

block870(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block892(s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, callvalue, from, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump892(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, callvalue, from, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump892(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, callvalue, from, to)=>
	eq(s(2), 0)
	call(block904(s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, from, to))

jump892(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, callvalue, from, to)=>
	neq(s(2), 0)
	call(block900(s(1), s(0)))

block900(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block904(s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), amount, calldatasize, from, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 999
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = amount
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 2722
	nop(PUSH2)
	call(block2722(s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block999(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1025(s(0), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1025(s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1025(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner)=>
	eq(s(2), 0)
	call(block1037(s(1), s(0),g(tokenOwner), l(l1), l(l0), calldatasize, owner))

jump1025(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner)=>
	neq(s(2), 0)
	call(block1033(s(1), s(0)))

block1033(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1037(s(1), s(0), g(tokenOwner), l(l1), l(l0), calldatasize, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1090
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3030
	nop(PUSH2)
	call(block3030_0(s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block1090(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1112(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1124(s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

jump1112(s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1120(s(1), s(0)))

block1112(s(0), g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1112(s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1120(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1124(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1133
	nop(PUSH2)
	s(2) = 3137
	nop(PUSH2)
	call(block3137(s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1133(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1170(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block1170(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1170(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1170(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1170(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block1179(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1170
	nop(PUSH2)
	call(block1170(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

jump1197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1242(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1197(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1217(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1197(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1197(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1217(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1242(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1242(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1256(s(0), g(tokenOwner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1256(s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1256(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1268(s(1), s(0),g(tokenOwner), l(l1), l(l0)))

jump1256(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1264(s(1), s(0)))

block1264(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1268(s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1277
	nop(PUSH2)
	s(2) = 3295
	nop(PUSH2)
	call(block3295(s(1),s(0),g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block1277(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1343(s(0), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1343(s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1343(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	eq(s(2), 0)
	call(block1355(s(1), s(0),g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, to))

jump1343(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	neq(s(2), 0)
	call(block1351(s(1), s(0)))

block1351(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1355(s(1), s(0), g(tokenOwner), l(l1), l(l0), amount, calldatasize, caller, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1418
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = amount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3333
	nop(PUSH2)
	call(block3333(s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(JUMP)

block1418(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1444(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block1456(s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, owner, spender))

jump1444(s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block1452(s(1), s(0)))

block1444(s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1444(s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1452(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1456(s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1541
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3555
	nop(PUSH2)
	call(block3555(s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block1541(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1563(s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(1)
	nop(DUP2)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 100
	nop(PUSH1)
	s(6) = 94
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(7) = g(currentPrice)
	nop(SLOAD)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump1563(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1563(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block1606(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), returndatasize))

jump1563(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block1605(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1605(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1606(s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	eq(s(4), 0)
	call(block1650(s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0)))

jump1606(s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	neq(s(4), 0)
	call(block1641(s(3), s(2), s(1), s(0), returndatasize))

block1606(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1606(s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1641(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block1650(s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(tokenOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(tokenOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(6) = 1
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block488())
	nop(JUMP)

block1822(s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump1822(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1822(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block1972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump1822(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block1902(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l3), l(l2), l(l1), l(l0)))

jump1902(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block1929(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump1902(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block1910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block1902(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump1902(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block1910(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 1972
	nop(PUSH2)
	call(block1972(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1929(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block1943(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump1943(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block1943(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump1943(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block1963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block1943(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump1943(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block1963(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block1972(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block1972(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block511(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump1980(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block1998(s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), caller))

jump1980(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block1994(s(5), s(4), s(3), s(2), s(1), s(0)))

block1980(s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump1980(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1994(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block2090(s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), l(l1), l(l0), caller))

jump1998(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block2086(s(5), s(4), s(3), s(2), s(1), s(0)))

block1998(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(tokenOwner)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump1998(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2086(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block2090(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(allowedTo)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(allowedTo) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block709(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump2267(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), s(3))
	call(block2359(s(2), s(1), s(0),g(owner), l(l0), address, balance, returndatasize))

jump2267(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), s(3))
	call(block2355(s(2), s(1), s(0)))

block2267(s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 6
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump2267(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2355(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump2359(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	leq(s(4), s(3))
	call(block2700(s(2), s(1), s(0)))

jump2359(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	gt(s(4), s(3))
	call(block2399(s(2), s(1), s(0),g(owner), l(l0), address, balance, returndatasize))

block2359(s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 1000000000000000000
	nop(PUSH8)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	call(jump2359(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2399(s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump2399(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2399(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	neq(s(4), s(3))
	call(block2594(s(2), s(1), s(0), l(l0), address, balance, returndatasize))

jump2399(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	eq(s(4), s(3))
	call(block2452(s(2), s(1), s(0),g(owner), l(l0), address, balance, returndatasize))

jump2452(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	eq(s(4), 0)
	call(block2588(s(3), s(2), s(1), s(0)))

jump2452(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	neq(s(4), 0)
	call(block2579(s(3), s(2), s(1), s(0), returndatasize))

block2452(s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	s(3) = 6
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump2452(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2579(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block2588(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 2699
	nop(PUSH2)
	call(block2699(s(2),s(1),s(0)))
	nop(JUMP)

jump2594(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, returndatasize)=>
	eq(s(4), 0)
	call(block2697(s(3), s(2), s(1), s(0)))

jump2594(s(4), s(3), s(2), s(1), s(0), l(l0), address, balance, returndatasize)=>
	neq(s(4), 0)
	call(block2688(s(3), s(2), s(1), s(0), returndatasize))

block2594(s(2), s(1), s(0), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = address
	nop(ADDRESS)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump2594(s(4),s(3),s(2),s(1),s(0), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2688(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block2697(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2699(s(2),s(1),s(0)))

block2699(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block2700(s(2),s(1),s(0)))

block2700(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block800(s(0)))
	nop(JUMP)

block2703(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block823(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2712(s(1), s(0), g(_totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(3) = g(_totalSupply)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block870(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block2722(s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump2722(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2722(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block2740(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))

jump2722(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block2736(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2736(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block2740(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 2751
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 3030
	nop(PUSH2)
	call(block3030(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

jump2751(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block2841(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0)))

jump2751(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block2759(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))

block2751(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(8) = s(7)
	nop(DUP1)
	call(jump2751(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2759(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(POP)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(allowedTo)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7)= eq(s(8), s(7))
	nop(EQ)
	call(block2841(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0)))

jump2841(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block2852(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0)))

jump2841(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block2848(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2841(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump2841(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2848(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block2852(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 7
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(tokenOwner)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(tokenOwner) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block999(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3030(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	eq(s(12), s(11))
	call(block3124(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))

jump3030(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	neq(s(12), s(11))
	call(block3118(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))

block3030(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 7
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(tokenOwner)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump3030(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block3118(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = 3127
	nop(PUSH2)
	call(block3127(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block3124(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 1
	nop(PUSH1)
	call(block3127(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))

block3127(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block2751(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(JUMP)

block3137(s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump3137(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3137(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block3287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3137(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block3217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))

jump3217(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block3244(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0)))

jump3217(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block3225(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block3217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l3), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump3217(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l3), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block3225(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 3287
	nop(PUSH2)
	call(block3287(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3244(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3258(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block3258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump3258(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump3258(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block3258(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3258(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block3278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block3278(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block3287(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block3287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1133(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3295(s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(tokenOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1277(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3333(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block3351(s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), caller))

jump3333(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block3347(s(5), s(4), s(3), s(2), s(1), s(0)))

block3333(s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump3333(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3347(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block3351(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 3362
	nop(PUSH2)
	s(8) = caller
	nop(CALLER)
	s(9) = 3030
	nop(PUSH2)
	call(block3030_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(JUMP)

block3362(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump3362(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3362(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block3543(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3362(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block3369(s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), caller))

block3369(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(tokenOwner)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(tokenOwner) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 3548
	nop(PUSH2)
	call(block3548(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3543(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block3548(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block3548(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1418(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3555(s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 7
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(tokenOwner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump3555(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(allowedTo), g(tokenOwner), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3555(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block3727(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3555(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), g(tokenOwner), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block3645(s(5), s(4), s(3), s(2), s(1), s(0),g(allowedTo), l(l1), l(l0)))

block3645(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedTo), l(l1), l(l0))=>
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(allowedTo)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	call(block3727(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

jump3727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(5), 1 )
	call(block3738(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3727(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(5), 1 )
	call(block3732(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

block3727(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 3738
	nop(PUSH2)
	call(jump3727(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMPI)

block3732(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = 3741
	nop(PUSH2)
	call(block3741(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3738(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	call(block3741(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block3741(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1541(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump1563_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	neq(s(8), 0)
	call(block1606_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), returndatasize))

jump1563_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	eq(s(8), 0)
	call(block1605_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1563_0(s(3), s(2), s(1), s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 100
	nop(PUSH1)
	s(7) = 94
	nop(PUSH1)
	s(8) = 3
	nop(PUSH1)
	s(8) = g(currentPrice)
	nop(SLOAD)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump1563_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1605_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1606_0(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block1650_0(s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0)))

jump1606_0(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block1641_0(s(4), s(3), s(2), s(1), s(0), returndatasize))

block1606_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump1606_0(s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1641_0(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block1650_0(s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(tokenOwner)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(tokenOwner) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = 1
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block488_0(s(0)))
	nop(JUMP)

block175_0(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = caller
	nop(CALLER)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = 7
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(tokenOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	call(jump175_0(s(2),s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump175_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block265_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

jump175_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block264_0(s(0)))

block264_0(s(0))=>
	nop(ASSERTFAIL)

block265_0(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 4
	nop(PUSH1)
	s(1) = g(sellingPrice)
	nop(SLOAD)
	s(2) = callvalue
	nop(CALLVALUE)
	call(jump265_0(s(2),s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump265_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(2), s(1))
	call(block279_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

jump265_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(2), s(1))
	call(block278_0(s(0)))

block278_0(s(0))=>
	nop(ASSERTFAIL)

jump279_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(2), s(1))
	call(block365_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump279_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(2), s(1))
	call(block290_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))

block279_0(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 4
	nop(PUSH1)
	s(1) = g(sellingPrice)
	nop(SLOAD)
	s(2) = callvalue
	nop(CALLVALUE)
	call(jump279_0(s(2),s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block290_0(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(1) = caller
	nop(CALLER)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = 2300
	nop(PUSH2)
	s(3) = 4
	nop(PUSH1)
	s(3) = g(sellingPrice)
	nop(SLOAD)
	s(4) = callvalue
	nop(CALLVALUE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(1)
	nop(DUP9)
	s(11) = s(2)
	nop(DUP9)
	s(5) = 1
	nop(CALL)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(1)= eq(s(1), 0)
	nop(ISZERO)
	s(2) = s(1)
	nop(DUP1)
	call(jump290_0(s(2),s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump290_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block363_0(s(1), s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump290_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block354_0(s(1), s(0), returndatasize))

block3030_0(s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 7
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(tokenOwner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump3030_0(s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0)))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump3030_0(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	eq(s(5), s(4))
	call(block3124_0(s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump3030_0(s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0))=>
	neq(s(5), s(4))
	call(block3118_0(s(3), s(2), s(1), s(0), l(l1), l(l0)))

block3030_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 7
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(tokenOwner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump3030_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump3030_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block3124_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), caller))

jump3030_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block3118_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(tokenOwner), l(l1), l(l0), caller))

block3118_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = 3127
	nop(PUSH2)
	call(block3127_0(s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3118_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	s(10) = 0
	nop(PUSH1)
	s(11) = 3127
	nop(PUSH2)
	call(block3127_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(JUMP)

block3124_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	call(block3127_0(s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block3124_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = 1
	nop(PUSH1)
	call(block3127_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))

block3127_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1090(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3127_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(tokenOwner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block3362(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(tokenOwner), l(l1), l(l0), caller))
	nop(JUMP)

block354_0(s(1), s(0), returndatasize)=>
	s(2) = returndatasize
	nop(RETURNDATASIZE)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	nop(REVERT)

block363_0(s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	call(block365_0(s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

block365_0(s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 4
	nop(PUSH1)
	s(1) = g(sellingPrice)
	nop(SLOAD)
	s(2) = 3
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(currentPrice) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = 5
	nop(PUSH1)
	s(1) = g(stepLimit)
	nop(SLOAD)
	s(2) = 3
	nop(PUSH1)
	s(2) = g(currentPrice)
	nop(SLOAD)
	call(jump365_0(s(2),s(1),s(0),g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump365_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	lt(s(2), s(1))
	call(block416_0(s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump365_0(s(2), s(1), s(0), g(tokenOwner), g(stepLimit), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	geq(s(2), s(1))
	call(block388_0(s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump388_0(s(3), s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block404_0(s(2), s(1), s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump388_0(s(3), s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block403_0(s(2), s(1), s(0)))

block388_0(s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	s(1) = 94
	nop(PUSH1)
	s(2) = 120
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(3) = g(currentPrice)
	nop(SLOAD)
	s(2) = s(3)*s(2)
	nop(MUL)
	s(3) = s(1)
	nop(DUP2)
	call(jump388_0(s(3),s(2),s(1),s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block403_0(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block404_0(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = s(2)/s(1)
	nop(DIV)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(sellingPrice) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = 444
	nop(PUSH2)
	call(block444_0(s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block416_0(s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 94
	nop(PUSH1)
	s(2) = 100
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(4) = g(currentPrice)
	nop(SLOAD)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(2) = s(3)*s(2)
	nop(MUL)
	s(3) = s(1)
	nop(DUP2)
	call(jump416_0(s(3),s(2),s(1),s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump416_0(s(3), s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	neq(s(3), 0)
	call(block436_0(s(2), s(1), s(0),g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize))

jump416_0(s(3), s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	eq(s(3), 0)
	call(block435_0(s(2), s(1), s(0)))

block435_0(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block436_0(s(2), s(1), s(0), g(tokenOwner), g(sellingPrice), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = s(2)/s(1)
	nop(DIV)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(sellingPrice) = s(2)
	nop(SSTORE)
	nop(POP)
	call(block444_0(s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize))

block444_0(s(0), g(tokenOwner), g(currentPrice), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 488
	nop(PUSH2)
	s(2) = 7
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(tokenOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1563
	nop(PUSH2)
	call(block1563_0(s(3),s(2),s(1),s(0),g(tokenOwner), g(currentPrice), l(l1), l(l0), returndatasize))
	nop(JUMP)

block488_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

