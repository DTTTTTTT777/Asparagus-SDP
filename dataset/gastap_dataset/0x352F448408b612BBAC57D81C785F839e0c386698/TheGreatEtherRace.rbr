jump0(s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	lt(s(1), s(0))
	call(block241(g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number))

jump0(s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	geq(s(1), s(0))
	call(block13(g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block0(g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13(g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 408515438
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block621(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump13(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block65(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

jump65(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block708(s(0),g(race_start_block), l(l3), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block76(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block65(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 825617686
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 847990091
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block751(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump76(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block87(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

jump87(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block860(s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, callvalue, number))

jump87(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block98(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block87(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1022154521
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1315558752
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block883(s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block109(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block109(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1469244002
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1027(s(0),g(registration_fee), l(l3), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block120(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block120(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2009675362
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump120(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1070(s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), g(sponsor), l(l5), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block131(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block131(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2208401016
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1214(s(0),g(total_racers), l(l3), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block142(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

jump142(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1257(s(0),g(additional_price_money), l(l3), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block153(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))

block142(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2301811321
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump153(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1300(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump153(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block164(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))

block153(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2351069529
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1387(s(0),g(eventStatus), l(l3), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block175(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))

block164(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2555510170
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1444(s(0),g(additional_price_money), callvalue))

jump175(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block186(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))

block175(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2616956695
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(additional_price_money), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block186(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2710442814
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump186(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1454(s(0),g(registered_racers), l(l3), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block197(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))

jump197(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1497(s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, callvalue, number))

jump197(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block208(s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))

block197(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2772795634
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3260034356
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1520(s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance, callvalue))

jump208(s(2), s(1), s(0), g(eventStatus), g(creator), g(developer_address), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block219(s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

jump219(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1543(s(0),g(eventStatus), g(creator), g(race_start_block), callvalue, number))

jump219(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block230(s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))

block219(s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3564947927
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block230(s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3753857966
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump230(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	eq(s(2), s(1))
	call(block1566(s(0),g(winner), l(l3), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number)=>
	neq(s(2), s(1))
	call(block241_0(s(0),g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number))

jump241(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	geq(s(2), s(1))
	call(block258(s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump241(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	lt(s(2), s(1))
	call(block254(s(0)))

block241(g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = 6
	nop(PUSH1)
	s(1) = g(registration_fee)
	nop(SLOAD)
	s(2) = callvalue
	nop(CALLVALUE)
	call(jump241(s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block254(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump258(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(2), s(1))
	call(block335(s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump258(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(2), s(1))
	call(block331(s(0)))

block258(s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = 32
	nop(PUSH1)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH1)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	call(jump258(s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block331(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block335(s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = 3
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(jump335(s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump335(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(3), s(2))
	call(block348(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump335(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(3), s(2))
	call(block347(s(1), s(0)))

block347(s(1), s(0))=>
	nop(ASSERTFAIL)

block348(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(eventStatus)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump348(s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump348(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(4), s(3))
	call(block375(s(2), s(1), s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump348(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(4), s(3))
	call(block374(s(2), s(1), s(0)))

block374(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump375(s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	eq(s(2), s(1))
	call(block387(s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump375(s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	neq(s(2), s(1))
	call(block383(s(0)))

block375(s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	call(jump375(s(2),s(1),s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block383(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block387(s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(1) = 5
	nop(PUSH1)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	s(3) = g(registered_racers)
	nop(SLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	g(registered_racers) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = 5
	nop(PUSH1)
	s(1) = g(registered_racers)
	nop(SLOAD)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = 32
	nop(PUSH1)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH1)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	gs(1) = s(3)
	gs(2) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = caller
	nop(CALLER)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(registered_racers)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = 32
	nop(PUSH1)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH1)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	s(3) = 0
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(1)
	nop(DUP4)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(3) = or(s(4), s(3))
	nop(OR)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	gs(1) = s(3)
	gs(2) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = 4
	nop(PUSH1)
	s(1) = g(total_racers)
	nop(SLOAD)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(registered_racers)
	nop(SLOAD)
	call(jump387(s(2),s(1),s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump387(s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	lt(s(2), s(1))
	call(block618(s(0)))

jump387(s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	geq(s(2), s(1))
	call(block572(s(0),g(creator), g(race_start_block), number))

jump572(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	leq(s(7), s(6))
	call(block602(s(5), s(4), s(3), s(2), s(1), s(0),g(creator), g(race_start_block), number))

jump572(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	gt(s(7), s(6))
	call(block601(s(5), s(4), s(3), s(2), s(1), s(0)))

block572(s(0), g(creator), g(race_start_block), number)=>
	s(1) = 1
	nop(PUSH1)
	s(2) = 11
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(creator)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 255
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(1)
	nop(DUP4)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump572(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block601(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block602(s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(3) = or(s(4), s(3))
	nop(OR)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(creator) = s(2)
	nop(SSTORE)
	nop(POP)
	s(1) = 42
	nop(PUSH1)
	s(2) = number
	nop(NUMBER)
	s(1) = s(2)+s(1)
	nop(ADD)
	s(2) = 8
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	g(race_start_block) = s(2)
	nop(SSTORE)
	nop(POP)
	call(block618(s(0)))

block618(s(0))=>
	nop(JUMPDEST)
	nop(POP)
	skip
	nop(STOP)

block621(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump621(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump621(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block633(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump621(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block629(s(1), s(0)))

block629(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block633(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 686
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1653
	nop(PUSH2)
	call(block1653(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block686(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump708(s(2), s(1), s(0), g(race_start_block), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block720(s(1), s(0),g(race_start_block), l(l3), l(l0)))

jump708(s(2), s(1), s(0), g(race_start_block), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block716(s(1), s(0)))

block708(s(0), g(race_start_block), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump708(s(2),s(1),s(0),g(race_start_block), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block716(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block720(s(1), s(0), g(race_start_block), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 729
	nop(PUSH2)
	s(2) = 1677
	nop(PUSH2)
	call(block1677(s(1),s(0),g(race_start_block), l(l3), l(l0)))
	nop(JUMP)

block729(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block751(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump751(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump751(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block763(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump751(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block759(s(1), s(0)))

block759(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block763(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 794
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1683
	nop(PUSH2)
	call(block1683(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block794(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block860(s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump860(s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump860(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, callvalue, number)=>
	eq(s(2), 0)
	call(block872(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number))

jump860(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, callvalue, number)=>
	neq(s(2), 0)
	call(block868(s(1), s(0)))

block868(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block872(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 881
	nop(PUSH2)
	s(2) = 1734
	nop(PUSH2)
	call(block1734(s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number))
	nop(JUMP)

jump883(s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block895(s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump883(s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block891(s(1), s(0)))

block883(s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump883(s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block891(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block895(s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 904
	nop(PUSH2)
	s(2) = 1965
	nop(PUSH2)
	call(block1965(s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

block904(s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	nop(DUP3)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(7) = l(l4)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l5) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l4)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	call(block941(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l3), l(l0)))

jump941(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l3), l(l0))=>
	geq(s(12), s(11))
	call(block968(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump941(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l3), l(l0))=>
	lt(s(12), s(11))
	call(block950(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l3), l(l0)))

block941(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump941(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block950(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l3), l(l0))=>
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(11) = l(l3)
	nop(MLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 941
	nop(PUSH2)
	call(block941(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l3), l(l0)))
	nop(JUMP)

jump968(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(6), 0)
	call(block1013(s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump968(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(6), 0)
	call(block988(s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block968(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 31
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(5)
	nop(DUP1)
	call(jump968(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block988(s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(6)
	nop(DUP1)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block1013(s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1013(s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1027(s(0), g(registration_fee), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1027(s(2),s(1),s(0),g(registration_fee), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1027(s(2), s(1), s(0), g(registration_fee), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1039(s(1), s(0),g(registration_fee), l(l3), l(l0)))

jump1027(s(2), s(1), s(0), g(registration_fee), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1035(s(1), s(0)))

block1035(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1039(s(1), s(0), g(registration_fee), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1048
	nop(PUSH2)
	s(2) = 2398
	nop(PUSH2)
	call(block2398(s(1),s(0),g(registration_fee), l(l3), l(l0)))
	nop(JUMP)

block1048(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1070(s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1082(s(1), s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0)))

jump1070(s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1078(s(1), s(0)))

block1070(s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1070(s(2),s(1),s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1078(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1082(s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1091
	nop(PUSH2)
	s(2) = 2404
	nop(PUSH2)
	call(block2404(s(1),s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0)))
	nop(JUMP)

block1091(s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1128(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))

jump1128(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	geq(s(13), s(12))
	call(block1155(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1128(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	lt(s(13), s(12))
	call(block1137(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block1128(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1128(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1137(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l5)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1128
	nop(PUSH2)
	call(block1128(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(JUMP)

jump1155(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block1200(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1155(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block1175(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block1155(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1155(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1175(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1200(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1200(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1214(s(2), s(1), s(0), g(total_racers), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1226(s(1), s(0),g(total_racers), l(l3), l(l0)))

jump1214(s(2), s(1), s(0), g(total_racers), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1222(s(1), s(0)))

block1214(s(0), g(total_racers), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1214(s(2),s(1),s(0),g(total_racers), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1222(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1226(s(1), s(0), g(total_racers), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1235
	nop(PUSH2)
	s(2) = 2562
	nop(PUSH2)
	call(block2562(s(1),s(0),g(total_racers), l(l3), l(l0)))
	nop(JUMP)

block1235(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1257(s(0), g(additional_price_money), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1257(s(2),s(1),s(0),g(additional_price_money), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1257(s(2), s(1), s(0), g(additional_price_money), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1269(s(1), s(0),g(additional_price_money), l(l3), l(l0)))

jump1257(s(2), s(1), s(0), g(additional_price_money), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1265(s(1), s(0)))

block1265(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1269(s(1), s(0), g(additional_price_money), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1278
	nop(PUSH2)
	s(2) = 2568
	nop(PUSH2)
	call(block2568(s(1),s(0),g(additional_price_money), l(l3), l(l0)))
	nop(JUMP)

block1278(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1300(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1300(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1300(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1312(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump1300(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1308(s(1), s(0)))

block1308(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1312(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1365
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2574
	nop(PUSH2)
	call(block2574(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1365(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1387(s(0), g(eventStatus), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1387(s(2),s(1),s(0),g(eventStatus), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1387(s(2), s(1), s(0), g(eventStatus), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1399(s(1), s(0),g(eventStatus), l(l3), l(l0)))

jump1387(s(2), s(1), s(0), g(eventStatus), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1395(s(1), s(0)))

block1395(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1399(s(1), s(0), g(eventStatus), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1408
	nop(PUSH2)
	s(2) = 2598
	nop(PUSH2)
	call(block2598(s(1),s(0),g(eventStatus), l(l3), l(l0)))
	nop(JUMP)

block1408(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump1408(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1408(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	leq(s(7), s(6))
	call(block1424(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump1408(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	gt(s(7), s(6))
	call(block1423(s(5), s(4), s(3), s(2), s(1), s(0)))

block1423(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1424(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1444(s(0), g(additional_price_money), callvalue)=>
	nop(JUMPDEST)
	s(1) = 1452
	nop(PUSH2)
	s(2) = 2617
	nop(PUSH2)
	call(block2617(s(1),s(0),g(additional_price_money), callvalue))
	nop(JUMP)

block1452(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1454(s(2), s(1), s(0), g(registered_racers), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1466(s(1), s(0),g(registered_racers), l(l3), l(l0)))

jump1454(s(2), s(1), s(0), g(registered_racers), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1462(s(1), s(0)))

block1454(s(0), g(registered_racers), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1454(s(2),s(1),s(0),g(registered_racers), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1462(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1466(s(1), s(0), g(registered_racers), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1475
	nop(PUSH2)
	s(2) = 2635
	nop(PUSH2)
	call(block2635(s(1),s(0),g(registered_racers), l(l3), l(l0)))
	nop(JUMP)

block1475(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1497(s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1497(s(2),s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1497(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, callvalue, number)=>
	eq(s(2), 0)
	call(block1509(s(1), s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))

jump1497(s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, callvalue, number)=>
	neq(s(2), 0)
	call(block1505(s(1), s(0)))

block1505(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1509(s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1518
	nop(PUSH2)
	s(2) = 2641
	nop(PUSH2)
	call(block2641(s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))
	nop(JUMP)

block1518(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1520(s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block1532(s(1), s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance))

jump1520(s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block1528(s(1), s(0)))

block1520(s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1520(s(2),s(1),s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1528(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1532(s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1541
	nop(PUSH2)
	s(2) = 3311
	nop(PUSH2)
	call(block3311(s(1),s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance))
	nop(JUMP)

block1541(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1543(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), callvalue, number)=>
	eq(s(2), 0)
	call(block1555(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), number))

jump1543(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), callvalue, number)=>
	neq(s(2), 0)
	call(block1551(s(1), s(0)))

block1543(s(0), g(eventStatus), g(creator), g(race_start_block), callvalue, number)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1543(s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), callvalue, number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1551(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1555(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1564
	nop(PUSH2)
	s(2) = 3602
	nop(PUSH2)
	call(block3602(s(1),s(0),g(eventStatus), g(creator), g(race_start_block), number))
	nop(JUMP)

block1564(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1566(s(0), g(winner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1566(s(2),s(1),s(0),g(winner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1566(s(2), s(1), s(0), g(winner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1578(s(1), s(0),g(winner), l(l3), l(l0)))

jump1566(s(2), s(1), s(0), g(winner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1574(s(1), s(0)))

block1574(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1578(s(1), s(0), g(winner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1587
	nop(PUSH2)
	s(2) = 3707
	nop(PUSH2)
	call(block3707(s(1),s(0),g(winner), l(l3), l(l0)))
	nop(JUMP)

block1587(s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1653(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block686(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block1677(s(1), s(0), g(race_start_block), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(race_start_block)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block729(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block1683(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block794(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block1734(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number)=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creator)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump1734(s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1734(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number)=>
	eq(s(3), s(2))
	call(block1826(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), number))

jump1734(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), caller, number)=>
	neq(s(3), s(2))
	call(block1822(s(1), s(0)))

block1822(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1826(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(registered_racers)
	nop(SLOAD)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1896
	nop(PUSH2)
	call(jump1826(s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), number))
	nop(JUMPI)

jump1826(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), number)=>
	eq(s(3), 1 )
	call(block1896(s(2), s(1), s(0),g(creator)))

jump1826(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), number)=>
	neq(s(3), 1 )
	call(block1838(s(2), s(1), s(0),g(eventStatus), g(creator), g(race_start_block), number))

jump1838(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	leq(s(4), s(3))
	call(block1850(s(2), s(1), s(0),g(eventStatus), g(creator), g(race_start_block), number))

jump1838(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	gt(s(4), s(3))
	call(block1849(s(2), s(1), s(0)))

block1838(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	nop(POP)
	s(2) = 3
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	nop(DUP2)
	call(jump1838(s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1849(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1850(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	leq(s(5), s(4))
	call(block1877(s(3), s(2), s(1), s(0),g(creator), g(race_start_block), number))

jump1850(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	gt(s(5), s(4))
	call(block1876(s(3), s(2), s(1), s(0)))

block1850(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(eventStatus)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump1850(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1876(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1877(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	eq(s(3), 0)
	call(block1895(s(2), s(1), s(0),g(creator)))

jump1877(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	neq(s(3), 0)
	call(block1885(s(2), s(1), s(0),g(creator), g(race_start_block), number))

block1877(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(2)= eq(s(3), s(2))
	nop(EQ)
	s(3) = s(2)
	nop(DUP1)
	call(jump1877(s(3),s(2),s(1),s(0),g(creator), g(race_start_block), number))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1885(s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(POP)
	s(2) = 18514
	nop(PUSH2)
	s(3) = 8
	nop(PUSH1)
	s(3) = g(race_start_block)
	nop(SLOAD)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = number
	nop(NUMBER)
	s(2) = gt(s(3), s(2))
	nop(GT)
	call(block1895(s(2),s(1),s(0),g(creator)))

block1895(s(2), s(1), s(0), g(creator))=>
	nop(JUMPDEST)
	call(block1896(s(2),s(1),s(0),g(creator)))

block1896(s(2), s(1), s(0), g(creator))=>
	nop(JUMPDEST)
	call(jump1896(s(2),s(1),s(0),g(creator)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1896(s(2), s(1), s(0), g(creator))=>
	eq(s(2), 0)
	call(block1960(s(1), s(0)))

jump1896(s(2), s(1), s(0), g(creator))=>
	neq(s(2), 0)
	call(block1902(s(1), s(0),g(creator)))

block1902(s(1), s(0), g(creator))=>
	s(2) = 11
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(creator)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	nop(SUICIDE)

block1960(s(1), s(0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1965(s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 96
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump1965(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1965(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block1980(s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump1965(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block1979(s(3), s(2), s(1), s(0)))

block1979(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1980(s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump1980(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1980(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(6), s(5))
	call(block2007(s(4), s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump1980(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(6), s(5))
	call(block2006(s(4), s(3), s(2), s(1), s(0)))

block2006(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2007(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump2007(s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2007(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	neq(s(4), s(3))
	call(block2074(s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2007(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	eq(s(4), s(3))
	call(block2014(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

block2014(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	s(3) = 64
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 37728199228678312323664989365092384664468832775540711355333226570383682961408
	nop(PUSH32)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 2395
	nop(PUSH2)
	call(block2395(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump2074(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block2087(s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2074(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block2086(s(3), s(2), s(1), s(0)))

block2074(s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump2074(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2086(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2087(s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2087(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2087(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(6), s(5))
	call(block2114(s(4), s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2087(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(6), s(5))
	call(block2113(s(4), s(3), s(2), s(1), s(0)))

block2113(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2114(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	neq(s(4), s(3))
	call(block2181(s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2114(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	eq(s(4), s(3))
	call(block2121(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

block2114(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump2114(s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2121(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	s(3) = 64
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 12
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 37268777315538287845227021823600517054274064553766981144199242234022007406592
	nop(PUSH32)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 2395
	nop(PUSH2)
	call(block2395(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

block2181(s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump2181(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2181(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block2194(s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2181(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block2193(s(3), s(2), s(1), s(0)))

block2193(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2194(s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2194(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2194(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(6), s(5))
	call(block2221(s(4), s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2194(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(6), s(5))
	call(block2220(s(4), s(3), s(2), s(1), s(0)))

block2220(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2221(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	neq(s(4), s(3))
	call(block2288(s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2221(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	eq(s(4), s(3))
	call(block2228(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

block2221(s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump2221(s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2228(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	s(3) = 64
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 7
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 37747593247012897074507305577780530343219727890558385485801431571409961746432
	nop(PUSH32)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 2395
	nop(PUSH2)
	call(block2395(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

jump2288(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(5), s(4))
	call(block2300(s(3), s(2), s(1), s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2288(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(5), s(4))
	call(block2299(s(3), s(2), s(1), s(0)))

block2288(s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump2288(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2299(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2300(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	leq(s(6), s(5))
	call(block2327(s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2300(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	gt(s(6), s(5))
	call(block2326(s(4), s(3), s(2), s(1), s(0)))

block2300(s(3), s(2), s(1), s(0), g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2300(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2326(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2327(s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	neq(s(4), s(3))
	call(block2394(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

jump2327(s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	eq(s(4), s(3))
	call(block2334(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

block2327(s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump2327(s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2334(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	s(3) = 64
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 8
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 31848180377676784142399805238115049361770247203062118285730667551015808532480
	nop(PUSH32)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 2395
	nop(PUSH2)
	call(block2395(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

block2394(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(block2395(s(2),s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))

block2395(s(2), s(1), s(0), l(l6), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block904(s(1),s(0), l(l6), l(l5), l(l4), l(l3), l(l0)))
	nop(JUMP)

block2398(s(1), s(0), g(registration_fee), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(registration_fee)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1048(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2404(s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(sponsor)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(sponsor)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l3) = g(sponsor)
	s(7) = g(sponsor)
	call(jump2404(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2404(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block2554(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump2404(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block2484(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0)))

block2484(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump2484(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sponsor), l(l5), l(l3), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump2484(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block2511(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0)))

jump2484(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block2492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sponsor), l(l5), l(l3), l(l0)))

block2492(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sponsor), l(l5), l(l3), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(sponsor)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 2554
	nop(PUSH2)
	call(block2554(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block2511(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block2525(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block2525(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump2525(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump2525(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	gt(s(9), s(8))
	call(block2525(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

jump2525(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	leq(s(9), s(8))
	call(block2545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0)))

block2545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block2554(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l3), l(l0)))

block2554(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1091(s(2),s(1),s(0), l(l5), l(l3), l(l0)))
	nop(JUMP)

block2562(s(1), s(0), g(total_racers), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(total_racers)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1235(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2568(s(1), s(0), g(additional_price_money), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(additional_price_money)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1278(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2574(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l2) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l1) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1365(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2598(s(1), s(0), g(eventStatus), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(eventStatus)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1408(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2617(s(1), s(0), g(additional_price_money), callvalue)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = 7
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(additional_price_money)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(additional_price_money) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block1452(s(0)))
	nop(JUMP)

block2635(s(1), s(0), g(registered_racers), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(registered_racers)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1475(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block2641(s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump2641(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2641(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	leq(s(5), s(4))
	call(block2656(s(3), s(2), s(1), s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))

jump2641(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	gt(s(5), s(4))
	call(block2655(s(3), s(2), s(1), s(0)))

block2655(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2656(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2656(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	leq(s(6), s(5))
	call(block2683(s(4), s(3), s(2), s(1), s(0),g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))

jump2656(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	gt(s(6), s(5))
	call(block2682(s(4), s(3), s(2), s(1), s(0)))

block2682(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2683(s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	eq(s(4), s(3))
	call(block2695(s(2), s(1), s(0),g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))

jump2683(s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	neq(s(4), s(3))
	call(block2691(s(2), s(1), s(0)))

block2683(s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	call(jump2683(s(4),s(3),s(2),s(1),s(0),g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2691(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump2695(s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	leq(s(4), s(3))
	call(block3228(s(2), s(1), s(0), l(l2), l(l1), caller))

jump2695(s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	gt(s(4), s(3))
	call(block2709(s(2), s(1), s(0),g(creator), g(winner), g(registered_racers), l(l2), l(l1)))

block2695(s(2), s(1), s(0), g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(3) = 126
	nop(PUSH1)
	s(4) = 8
	nop(PUSH1)
	s(4) = g(race_start_block)
	nop(SLOAD)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = number
	nop(NUMBER)
	call(jump2695(s(4),s(3),s(2),s(1),s(0),g(creator), g(winner), g(race_start_block), g(registered_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2709(s(2), s(1), s(0), g(creator), g(winner), g(registered_racers), l(l2), l(l1))=>
	s(3) = 3
	nop(PUSH1)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(creator)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 3
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump2709(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creator), g(winner), g(registered_racers), l(l2), l(l1)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2709(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(registered_racers), l(l2), l(l1))=>
	leq(s(9), s(8))
	call(block2739(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creator), g(winner), g(registered_racers), l(l2), l(l1)))

jump2709(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(registered_racers), l(l2), l(l1))=>
	gt(s(9), s(8))
	call(block2738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2738(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2739(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(winner), g(registered_racers), l(l2), l(l1))=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(creator) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(winner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(winner) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 2
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2865(s(2),s(1),s(0),g(winner), g(registered_racers), l(l2), l(l1)))

block2865(s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(registered_racers)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	call(jump2865(s(4),s(3),s(2),s(1),s(0),g(winner), g(registered_racers), l(l2), l(l1)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2865(s(4), s(3), s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	gt(s(4), s(3))
	call(block3223(s(2), s(1), s(0)))

jump2865(s(4), s(3), s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	leq(s(4), s(3))
	call(block2877(s(2), s(1), s(0),g(winner), g(registered_racers), l(l2), l(l1)))

block2877(s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(winner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(2)
	nop(SLOAD)
	call(jump2877(s(4),s(3),s(2),s(1),s(0),g(winner), g(registered_racers), l(l2), l(l1)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2877(s(4), s(3), s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	leq(s(4), s(3))
	call(block3210(s(2), s(1), s(0),g(winner), g(registered_racers), l(l2), l(l1)))

jump2877(s(4), s(3), s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	gt(s(4), s(3))
	call(block3095(s(2), s(1), s(0),g(winner), g(registered_racers), l(l2), l(l1)))

block3095(s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(winner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(winner) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block3210(s(2),s(1),s(0),g(winner), g(registered_racers), l(l2), l(l1)))

block3210(s(2), s(1), s(0), g(winner), g(registered_racers), l(l2), l(l1))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 2865
	nop(PUSH2)
	call(block2865(s(2),s(1),s(0),g(winner), g(registered_racers), l(l2), l(l1)))
	nop(JUMP)

block3223(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(3) = 3308
	nop(PUSH2)
	call(block3308(s(2),s(1),s(0)))
	nop(JUMP)

block3228(s(2), s(1), s(0), l(l2), l(l1), caller)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block3308(s(2),s(1),s(0)))

block3308(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1518(s(0)))
	nop(JUMP)

block3311(s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	call(jump3311(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3311(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	leq(s(5), s(4))
	call(block3325(s(3), s(2), s(1), s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance))

jump3311(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	gt(s(5), s(4))
	call(block3324(s(3), s(2), s(1), s(0)))

block3324(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3325(s(3), s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(4) = 11
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(eventStatus)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 3
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump3325(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(developer_address), g(winner), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	leq(s(6), s(5))
	call(block3352(s(4), s(3), s(2), s(1), s(0),g(developer_address), g(winner), l(l0), address, balance))

jump3325(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(developer_address), g(winner), l(l0), address, balance)=>
	gt(s(6), s(5))
	call(block3351(s(4), s(3), s(2), s(1), s(0)))

block3351(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3352(s(4), s(3), s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	nop(JUMPDEST)
	call(jump3352(s(4),s(3),s(2),s(1),s(0),g(developer_address), g(winner), l(l0), address, balance))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3352(s(4), s(3), s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	neq(s(4), s(3))
	call(block3599(s(2), s(1), s(0)))

jump3352(s(4), s(3), s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	eq(s(4), s(3))
	call(block3359(s(2), s(1), s(0),g(developer_address), g(winner), l(l0), address, balance))

jump3359(s(3), s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	neq(s(3), 0)
	call(block3492(s(2), s(1), s(0),g(developer_address), l(l0)))

jump3359(s(3), s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	eq(s(3), 0)
	call(block3488(s(2), s(1), s(0)))

block3359(s(2), s(1), s(0), g(developer_address), g(winner), l(l0), address, balance)=>
	s(3) = 5000000000000000000
	nop(PUSH8)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(winner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump3359(s(3),s(2),s(1),s(0),g(developer_address), g(winner), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3488(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block3492(s(2), s(1), s(0), g(developer_address), l(l0))=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(developer_address)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 5000000000000000000
	nop(PUSH8)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump3492(s(3),s(2),s(1),s(0),g(developer_address), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3492(s(3), s(2), s(1), s(0), g(developer_address), l(l0))=>
	neq(s(3), 0)
	call(block3598(s(2), s(1), s(0)))

jump3492(s(3), s(2), s(1), s(0), g(developer_address), l(l0))=>
	eq(s(3), 0)
	call(block3594(s(2), s(1), s(0)))

block3594(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block3598(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block3599(s(2),s(1),s(0)))

block3599(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1541(s(0)))
	nop(JUMP)

block3602(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump3602(s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3602(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	leq(s(4), s(3))
	call(block3615(s(2), s(1), s(0),g(eventStatus), g(creator), g(race_start_block), number))

jump3602(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	gt(s(4), s(3))
	call(block3614(s(2), s(1), s(0)))

block3614(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3615(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(eventStatus)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump3615(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3615(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	leq(s(5), s(4))
	call(block3642(s(3), s(2), s(1), s(0),g(creator), g(race_start_block), number))

jump3615(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), number)=>
	gt(s(5), s(4))
	call(block3641(s(3), s(2), s(1), s(0)))

block3641(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3642(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	eq(s(3), s(2))
	call(block3654(s(1), s(0),g(creator), g(race_start_block), number))

jump3642(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	neq(s(3), s(2))
	call(block3650(s(1), s(0)))

block3642(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	call(jump3642(s(3),s(2),s(1),s(0),g(creator), g(race_start_block), number))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3650(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3654(s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(race_start_block)
	nop(SLOAD)
	s(3) = number
	nop(NUMBER)
	call(jump3654(s(3),s(2),s(1),s(0),g(creator), g(race_start_block), number))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3654(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	geq(s(3), s(2))
	call(block3669(s(1), s(0),g(creator)))

jump3654(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	lt(s(3), s(2))
	call(block3665(s(1), s(0)))

block3665(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump3669(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator))=>
	leq(s(8), s(7))
	call(block3700(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creator)))

jump3669(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator))=>
	gt(s(8), s(7))
	call(block3699(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3669(s(1), s(0), g(creator))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 11
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creator)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump3669(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creator)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3699(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3700(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator))=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(creator) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block1564(s(0)))
	nop(JUMP)

block3707(s(1), s(0), g(winner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(winner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1587(s(2),s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block241_0(s(0), g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(registration_fee)
	nop(SLOAD)
	s(3) = callvalue
	nop(CALLVALUE)
	call(jump241_0(s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump241_0(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	geq(s(3), s(2))
	call(block258_0(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump241_0(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registration_fee), g(registered_racers), g(total_racers), l(l2), l(l1), caller, callvalue, number)=>
	lt(s(3), s(2))
	call(block254_0(s(1), s(0)))

block254_0(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block258_0(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	call(jump258_0(s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump258_0(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(3), s(2))
	call(block335_0(s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump258_0(s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(3), s(2))
	call(block331_0(s(1), s(0)))

block331_0(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump335_0(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(4), s(3))
	call(block348_0(s(2), s(1), s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump335_0(s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(4), s(3))
	call(block347_0(s(2), s(1), s(0)))

block335_0(s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump335_0(s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block347_0(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block348_0(s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(3) = 11
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(eventStatus)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump348_0(s(5),s(4),s(3),s(2),s(1),s(0),g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump348_0(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	leq(s(5), s(4))
	call(block375_0(s(3), s(2), s(1), s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump348_0(s(5), s(4), s(3), s(2), s(1), s(0), g(eventStatus), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	gt(s(5), s(4))
	call(block374_0(s(3), s(2), s(1), s(0)))

block374_0(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump375_0(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	eq(s(3), s(2))
	call(block387_0(s(1), s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))

jump375_0(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	neq(s(3), s(2))
	call(block383_0(s(1), s(0)))

block375_0(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	call(jump375_0(s(3),s(2),s(1),s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block383_0(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block387_0(s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(4) = g(registered_racers)
	nop(SLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	g(registered_racers) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(registered_racers)
	nop(SLOAD)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gs(1) = s(4)
	gs(2) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = caller
	nop(CALLER)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(registered_racers)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gs(1) = s(4)
	gs(2) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(total_racers)
	nop(SLOAD)
	s(3) = 5
	nop(PUSH1)
	s(3) = g(registered_racers)
	nop(SLOAD)
	call(jump387_0(s(3),s(2),s(1),s(0),g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump387_0(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	lt(s(3), s(2))
	call(block618_0(s(1), s(0)))

jump387_0(s(3), s(2), s(1), s(0), g(creator), g(race_start_block), g(registered_racers), g(total_racers), l(l2), l(l1), caller, number)=>
	geq(s(3), s(2))
	call(block572_0(s(1), s(0),g(creator), g(race_start_block), number))

block572_0(s(1), s(0), g(creator), g(race_start_block), number)=>
	s(2) = 1
	nop(PUSH1)
	s(3) = 11
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(creator)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 3
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump572_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(creator), g(race_start_block), number))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump572_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	leq(s(8), s(7))
	call(block602_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(creator), g(race_start_block), number))

jump572_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	gt(s(8), s(7))
	call(block601_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block601_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block602_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(creator), g(race_start_block), number)=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(creator) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 42
	nop(PUSH1)
	s(3) = number
	nop(NUMBER)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 8
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(race_start_block) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block618_0(s(1),s(0)))

block618_0(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	skip
	nop(STOP)

