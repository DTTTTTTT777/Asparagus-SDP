{
    "SafeMathLib": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1286,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                512,
                141
            ],
            "approve(address,uint256)": [
                235,
                75
            ],
            "setUpgradeAgent(address)": [
                1268,
                361
            ],
            "increaseApproval(address,uint256)": [
                1167,
                339
            ],
            "balanceOf(address)": [
                832,
                229
            ],
            "canUpgrade()": [
                976,
                273
            ],
            "allowance(address,address)": [
                1335,
                383
            ],
            "decreaseApproval(address,uint256)": [
                731,
                207
            ],
            "transferFrom(address,address,uint256)": [
                379,
                119
            ],
            "transfer(address,uint256)": [
                1023,
                295
            ],
            "setUpgradeMaster(address)": [
                1454,
                405
            ],
            "getUpgradeState()": [
                919,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump5925": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block3195": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump5718": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block5718": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump3195": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block5925": [
                "upgradeAgent.originalSupply()"
            ]
        }
    },
    "ReleasableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                394,
                119
            ],
            "setTransferAgent(address,bool)": [
                268,
                75
            ],
            "releaseTokenTransfer()": [
                839,
                229
            ],
            "transfer(address,uint256)": [
                1322,
                383
            ],
            "balanceOf(address)": [
                963,
                273
            ],
            "transferFrom(address,address,uint256)": [
                538,
                163
            ],
            "setReleaseAgent(address)": [
                671,
                185
            ],
            "allowance(address,address)": [
                1611,
                449
            ],
            "transferOwnership(address)": [
                1730,
                471
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                751,
                207
            ],
            "approve(address,uint256)": [
                282,
                97
            ],
            "increaseApproval(address,uint256)": [
                1316,
                361
            ],
            "mint(address,uint256)": [
                559,
                163
            ],
            "balanceOf(address)": [
                931,
                251
            ],
            "allowance(address,address)": [
                1417,
                383
            ],
            "decreaseApproval(address,uint256)": [
                830,
                229
            ],
            "transferFrom(address,address,uint256)": [
                426,
                141
            ],
            "transferOwnership(address)": [
                1536,
                405
            ],
            "transfer(address,uint256)": [
                1128,
                317
            ],
            "acceptOwnership()": [
                1018,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Allocatable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setAllocateAgent(address,bool)": [
                125,
                75
            ],
            "acceptOwnership()": [
                295,
                119
            ],
            "transferOwnership(address)": [
                492,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdsaleToken": {
        "function_list": [
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "CrowdsaleToken(string,string,uint256,uint8,bool)",
            "releaseTokenTransfer()",
            "canUpgrade()",
            "setTokenInformation(string,string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "CrowdsaleToken(string,string,uint256,uint8,bool)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_initialSupply": "uint256",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setTokenInformation(string,string)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                1288,
                295
            ],
            "upgrade(uint256)": [
                1367,
                317
            ],
            "setTransferAgent(address,bool)": [
                433,
                75
            ],
            "setTokenInformation(string,string)": [
                1412,
                339
            ],
            "allowance(address,address)": [
                2954,
                757
            ],
            "decreaseApproval(address,uint256)": [
                1784,
                427
            ],
            "transferFrom(address,address,uint256)": [
                847,
                185
            ],
            "approve(address,uint256)": [
                703,
                141
            ],
            "getUpgradeState()": [
                1995,
                493
            ],
            "balanceOf(address)": [
                1885,
                449
            ],
            "setUpgradeAgent(address)": [
                2887,
                735
            ],
            "setReleaseAgent(address)": [
                980,
                207
            ],
            "setUpgradeMaster(address)": [
                3140,
                801
            ],
            "transferOwnership(address)": [
                3073,
                779
            ],
            "releaseTokenTransfer()": [
                1674,
                383
            ],
            "mint(address,uint256)": [
                1096,
                251
            ],
            "canUpgrade()": [
                2421,
                603
            ],
            "transfer(address,uint256)": [
                2468,
                625
            ],
            "increaseApproval(address,uint256)": [
                2786,
                713
            ],
            "acceptOwnership()": [
                1972,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump5469": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump9102": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block5469": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block8895": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump8895": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block9102": [
                "upgradeAgent.originalSupply()"
            ]
        }
    },
    "PricingStrategy": {
        "function_list": [
            "isPricingStrategy()",
            "isSane(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {}
            },
            "isSane(address)": {
                "argument": {},
                "contract": {}
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "isPricingStrategy()": [
                190,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "halt()": [
                136,
                75
            ],
            "unhalt()": [
                316,
                163
            ],
            "acceptOwnership()": [
                159,
                97
            ],
            "transferOwnership(address)": [
                426,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)",
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)",
            "fallback()",
            "investInternal(address,string)",
            "allocate(address,uint256,uint256,string,uint256)",
            "investWithCustomerId(address,string)",
            "invest(address)",
            "buyWithCustomerId(string)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investInternal(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "allocate(address,uint256,uint256,string,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiPrice": "uint256",
                    "customerId": "string",
                    "lockedTokenAmount": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithCustomerId(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithCustomerId(string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump931": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1364_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1364_0": [
                "wallet.transfer(msg.value)"
            ],
            "jump931_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump931_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1364": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1364": [
                "wallet.transfer(msg.value)"
            ],
            "jump1364_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block931_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block931_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block931": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1364_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "BonusFinalizeAgent": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "isFinalizeAgent()",
            "isSane()",
            "finalizeCrowdsale()",
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])",
            "isSane()",
            "finalizeCrowdsale()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isFinalizeAgent()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isSane()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])": {
                "argument": {
                    "_bonusBasePoints": "uint256[]",
                    "_teamAddresses": "address[]"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "finalizeCrowdsale()": [
                147,
                75
            ],
            "isSane()": [
                412,
                185
            ],
            "isFinalizeAgent()": [
                279,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump1342": [
                "token.mint(teamAddresses[i], allocatedBonus)",
                "token.mint(teamAddresses[i], allocatedBonus)"
            ],
            "jump1853": [
                "token.mintAgents(address(this))",
                "token.mintAgents(address(this))"
            ],
            "block2078": [
                "token.releaseAgent()"
            ],
            "jump2078": [
                "token.releaseAgent()",
                "token.releaseAgent()"
            ],
            "block1853": [
                "token.mintAgents(address(this))"
            ],
            "block1548": [
                "token.releaseTokenTransfer()"
            ],
            "jump1548": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "jump862": [
                "crowdsale.tokensSold()",
                "crowdsale.tokensSold()"
            ],
            "block1342": [
                "token.mint(teamAddresses[i], allocatedBonus)"
            ],
            "block862": [
                "crowdsale.tokensSold()"
            ]
        }
    },
    "MintedEthCappedCrowdsale": {
        "function_list": [
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)",
            "fallback()",
            "investInternal(address,string)",
            "allocate(address,uint256,uint256,string,uint256)",
            "investWithCustomerId(address,string)",
            "invest(address)",
            "buyWithCustomerId(string)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)",
            "MintedEthCappedCrowdsale(address,PricingStrategy,address,uint256,uint256,uint256,uint256,address)",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "investInternal(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "allocate(address,uint256,uint256,string,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiPrice": "uint256",
                    "customerId": "string",
                    "lockedTokenAmount": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "investWithCustomerId(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "buyWithCustomerId(string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "MintedEthCappedCrowdsale(address,PricingStrategy,address,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256",
                    "_weiCap": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setAllocateAgent(address,bool)": [
                1238,
                295
            ],
            "refund()": [
                1631,
                449
            ],
            "buy()": [
                2767,
                867
            ],
            "setMultisig(address)": [
                3624,
                1197
            ],
            "isMinimumGoalReached()": [
                2048,
                647
            ],
            "invest(address)": [
                753,
                119
            ],
            "setRequireCustomerId(bool)": [
                2095,
                669
            ],
            "isFinalizerSane()": [
                2777,
                889
            ],
            "isBreakingCap(uint256,uint256,uint256,uint256)": [
                2668,
                845
            ],
            "allocate(address,uint256,uint256,string,uint256)": [
                2195,
                735
            ],
            "setEndsAt(uint256)": [
                1850,
                559
            ],
            "isCrowdsaleFull()": [
                3388,
                1109
            ],
            "investWithCustomerId(address,string)": [
                3778,
                1241
            ],
            "loadRefund()": [
                2185,
                713
            ],
            "finalize()": [
                1498,
                383
            ],
            "isPricingSane()": [
                807,
                141
            ],
            "halt()": [
                1784,
                515
            ],
            "setEarlyParicipantWhitelist(address,bool)": [
                3478,
                1153
            ],
            "isCrowdsale()": [
                1451,
                361
            ],
            "setOwnerTestValue(uint256)": [
                2362,
                757
            ],
            "getState()": [
                940,
                207
            ],
            "unhalt()": [
                3231,
                1043
            ],
            "buyWithCustomerId(string)": [
                3048,
                999
            ],
            "transferOwnership(address)": [
                3557,
                1175
            ],
            "acceptOwnership()": [
                2025,
                625
            ]
        },
        "block_CALL_mapping": {
            "jump9874": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "block6497": [
                "pricingStrategy.isPricingStrategy()"
            ],
            "jump4782": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump6497": [
                "pricingStrategy.isPricingStrategy()",
                "pricingStrategy.isPricingStrategy()"
            ],
            "jump5285": [
                "finalizeAgent.isFinalizeAgent()",
                "finalizeAgent.isFinalizeAgent()"
            ],
            "block12748": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block5285": [
                "finalizeAgent.isFinalizeAgent()"
            ],
            "jump11450": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block4782_0": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block12188_2": [
                "multisigWallet.send(weiAmount)"
            ],
            "block4782_9": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump12748_0": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump12748_1": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block6786": [
                "msg.sender.send(weiValue)"
            ],
            "jump11666_2": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump11666_0": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump11666_1": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump6786": [
                "msg.sender.send(weiValue)",
                "msg.sender.send(weiValue)"
            ],
            "block11450": [
                "token.decimals()"
            ],
            "jump8950": [
                "tokenVesting.isVestingSet(receiver)",
                "tokenVesting.isVestingSet(receiver)"
            ],
            "jump12188": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump4519_0": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_1": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_2": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_3": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_4": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_5": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_6": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_7": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_8": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4519_9": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "block4519_2": [
                "finalizeAgent.isSane()"
            ],
            "block4519_3": [
                "finalizeAgent.isSane()"
            ],
            "block4519_0": [
                "finalizeAgent.isSane()"
            ],
            "block4519_1": [
                "finalizeAgent.isSane()"
            ],
            "block4519_6": [
                "finalizeAgent.isSane()"
            ],
            "block4519_7": [
                "finalizeAgent.isSane()"
            ],
            "block4519_4": [
                "finalizeAgent.isSane()"
            ],
            "block4519_5": [
                "finalizeAgent.isSane()"
            ],
            "block4519_8": [
                "finalizeAgent.isSane()"
            ],
            "block4519_9": [
                "finalizeAgent.isSane()"
            ],
            "block6152": [
                "finalizeAgent.finalizeCrowdsale()"
            ],
            "block4782_1": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_2": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_3": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_4": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_5": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_6": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_7": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4782_8": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump11450_2": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump11450_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump11450_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block12748_4": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block12748_0": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block12748_1": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block12748_2": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block12748_3": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block11450_1": [
                "token.decimals()"
            ],
            "block11450_0": [
                "token.decimals()"
            ],
            "jump4519": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "block8353": [
                "token.decimals()"
            ],
            "block4519": [
                "finalizeAgent.isSane()"
            ],
            "block4203": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_2": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_3": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_0": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_1": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_6": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_7": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_4": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_5": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_8": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4782_9": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "block9228": [
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)"
            ],
            "jump4782_10": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump12748": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump11666": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block4782": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4203": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump6152": [
                "finalizeAgent.finalizeCrowdsale()",
                "finalizeAgent.finalizeCrowdsale()"
            ],
            "jump8353": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block4782_10": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block11666": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block9874": [
                "finalizeAgent.isSane()"
            ],
            "jump9228": [
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)",
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)"
            ],
            "block11666_0": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block11666_1": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block11666_2": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump12188_0": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12188_1": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12188_2": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12748_2": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump12748_3": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block12188_0": [
                "multisigWallet.send(weiAmount)"
            ],
            "block12188_1": [
                "multisigWallet.send(weiAmount)"
            ],
            "jump12748_4": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block8950": [
                "tokenVesting.isVestingSet(receiver)"
            ],
            "block4519_10": [
                "finalizeAgent.isSane()"
            ],
            "block12188": [
                "multisigWallet.send(weiAmount)"
            ],
            "block11450_2": [
                "token.decimals()"
            ],
            "jump4519_10": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ]
        }
    },
    "EthTranchePricing": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "isPricingStrategy()",
            "isSane(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)",
            "EthTranchePricing(uint256[])",
            "setPreicoAddress(address,uint256)",
            "getTranche(uint256)",
            "getFirstTranche()",
            "getLastTranche()",
            "getPricingStartsAt()",
            "getPricingEndsAt()",
            "isSane(address)",
            "getCurrentTranche(uint256)",
            "getCurrentPrice(uint256)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "isPricingStrategy()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "isSane(address)": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "EthTranchePricing(uint256[])": {
                "argument": {
                    "_tranches": "uint256[]"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "setPreicoAddress(address,uint256)": {
                "argument": {
                    "pricePerToken": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getTranche(uint256)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getFirstTranche()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getLastTranche()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getPricingStartsAt()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getPricingEndsAt()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getCurrentTranche(uint256)": {
                "argument": {
                    "weiRaised": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getCurrentPrice(uint256)": {
                "argument": {
                    "weiRaised": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setPreicoAddress(address,uint256)": [
                1078,
                361
            ],
            "isPricingStrategy()": [
                235,
                75
            ],
            "isSane(address)": [
                763,
                273
            ],
            "getPricingEndsAt()": [
                567,
                185
            ],
            "calculatePrice(uint256,uint256,uint256,address,uint256)": [
                282,
                97
            ],
            "transferOwnership(address)": [
                1242,
                405
            ],
            "getTranche(uint256)": [
                1006,
                339
            ],
            "getPricingStartsAt()": [
                481,
                141
            ],
            "acceptOwnership()": [
                610,
                207
            ],
            "getCurrentPrice(uint256)": [
                854,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenVesting": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "setAllocateAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "TokenVesting(address)",
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)",
            "setVestingWithDefaultSchedule(address,uint256)",
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)",
            "isVestingSet(address)",
            "freezeChangesToVesting(address)",
            "releaseMyVestedTokens()",
            "releaseVestedTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "TokenVesting(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)": {
                "argument": {
                    "_startAt": "uint256",
                    "_cliff": "uint256",
                    "_duration": "uint256",
                    "_step": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setVestingWithDefaultSchedule(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)": {
                "argument": {
                    "_startAt": "uint256",
                    "_cliff": "uint256",
                    "_duration": "uint256",
                    "_step": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "isVestingSet(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "freezeChangesToVesting(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "releaseMyVestedTokens()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "releaseVestedTokens(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setVestingWithDefaultSchedule(address,uint256)": [
                492,
                141
            ],
            "releaseVestedTokens(address)": [
                941,
                251
            ],
            "isVestingSet(address)": [
                1008,
                273
            ],
            "setAllocateAgent(address,bool)": [
                235,
                75
            ],
            "freezeChangesToVesting(address)": [
                1186,
                317
            ],
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)": [
                812,
                229
            ],
            "releaseMyVestedTokens()": [
                1450,
                405
            ],
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)": [
                1253,
                339
            ],
            "transferOwnership(address)": [
                1383,
                383
            ],
            "acceptOwnership()": [
                702,
                185
            ]
        },
        "block_CALL_mapping": {
            "block3118_0": [
                "LALAToken.balanceOf(this)"
            ],
            "block3834": [
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "block3118": [
                "LALAToken.balanceOf(this)"
            ],
            "block3834_0": [
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "jump3118_0": [
                "LALAToken.balanceOf(this)",
                "LALAToken.balanceOf(this)"
            ],
            "jump3834_0": [
                "LALAToken.transfer(_adr, amountToRelease)",
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "jump3834": [
                "LALAToken.transfer(_adr, amountToRelease)",
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "jump3118": [
                "LALAToken.balanceOf(this)",
                "LALAToken.balanceOf(this)"
            ]
        }
    }
}