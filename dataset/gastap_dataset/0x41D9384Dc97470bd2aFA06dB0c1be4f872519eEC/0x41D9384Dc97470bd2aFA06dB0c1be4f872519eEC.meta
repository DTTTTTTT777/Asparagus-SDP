{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "FollowCoin": {
        "function_list": [
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "disableLockDown()",
            "FollowCoin(address,uint256,string,uint8,string)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "allowAccount(address,bool)",
            "mint(uint256)",
            "burn(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "disableLockDown()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "FollowCoin(address,uint256,string,uint8,string)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "allowAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "mint(uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "holders": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                514,
                119
            ],
            "transfer(address,uint256)": [
                1538,
                405
            ],
            "mint(uint256)": [
                1493,
                383
            ],
            "allowance(address,address)": [
                1730,
                449
            ],
            "burn(uint256)": [
                1036,
                251
            ],
            "balanceOf(address)": [
                1175,
                317
            ],
            "transferFrom(address,address,uint256)": [
                658,
                163
            ],
            "allowAccount(address,bool)": [
                1849,
                471
            ],
            "disableLockDown()": [
                1105,
                273
            ],
            "transferOwnership(address)": [
                1952,
                493
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "FollowCoinTokenSale": {
        "function_list": [
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "FollowCoinTokenSale(address,uint256,uint256,uint256,uint256,uint256,uint256,address)",
            "changeMultisigWallet(address)",
            "changeTokenReward(address)",
            "balanceOf(address)",
            "fallback()",
            "buyTokens()",
            "setSold(uint256)",
            "sendTokensBackToWallet()",
            "getTokenBalance(address)",
            "calculateTokenAmount(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "FollowCoinTokenSale(address,uint256,uint256,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "icoTokensLimitPerWallet": "uint256",
                    "icoHardCap": "uint256",
                    "icoStartTimestamp": "uint256",
                    "durationInDays": "uint256",
                    "icoTotalTokens": "uint256",
                    "icoTokensPerEther": "uint256"
                },
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "changeMultisigWallet(address)": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "changeTokenReward(address)": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "setSold(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "sendTokensBackToWallet()": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "getTokenBalance(address)": {
                "argument": {},
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            },
            "calculateTokenAmount(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "tokenLimitPerWallet": "uint256",
                    "hardCap": "uint256",
                    "amountRaised": "uint256",
                    "totalTokens": "uint256",
                    "tokensSold": "uint256",
                    "investorCount": "uint256",
                    "startTimestamp": "uint256",
                    "deadline": "uint256",
                    "tokensPerEther": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getTokenBalance(address)": [
                692,
                163
            ],
            "balanceOf(address)": [
                2449,
                20939
            ],
            "changeMultisigWallet(address)": [
                1578,
                537
            ],
            "calculateTokenAmount(uint256)": [
                1347,
                405
            ],
            "changeTokenReward(address)": [
                538,
                119
            ],
            "transferOwnership(address)": [
                1688,
                581
            ],
            "setSold(uint256)": [
                866,
                207
            ],
            "sendTokensBackToWallet()": [
                954,
                251
            ],
            "halt()": [
                977,
                273
            ],
            "unhalt()": [
                1502,
                471
            ],
            "buyTokens()": [
                1525,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump2772_1": [
                "multisig.transfer(amount)",
                "multisig.transfer(amount)"
            ],
            "jump2772_0": [
                "multisig.transfer(amount)",
                "multisig.transfer(amount)"
            ],
            "block3399": [
                "tokenReward.owner()"
            ],
            "block3754": [
                "tokenReward.balanceOf(_from)"
            ],
            "jump3399": [
                "tokenReward.owner()",
                "tokenReward.owner()"
            ],
            "jump2730_1": [
                "tokenReward.transfer(msg.sender, tokens)",
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "jump2730_0": [
                "tokenReward.transfer(msg.sender, tokens)",
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "block2772": [
                "multisig.transfer(amount)"
            ],
            "jump4370": [
                "tokenReward.balanceOf(address(this))",
                "tokenReward.balanceOf(address(this))"
            ],
            "block2730": [
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "jump4562": [
                "tokenReward.transfer(multisig, tokenReward.balanceOf(address(this)))",
                "tokenReward.transfer(multisig, tokenReward.balanceOf(address(this)))"
            ],
            "block4370": [
                "tokenReward.balanceOf(address(this))"
            ],
            "block4562": [
                "tokenReward.transfer(multisig, tokenReward.balanceOf(address(this)))"
            ],
            "jump3754": [
                "tokenReward.balanceOf(_from)",
                "tokenReward.balanceOf(_from)"
            ],
            "block2772_1": [
                "multisig.transfer(amount)"
            ],
            "jump2730": [
                "tokenReward.transfer(msg.sender, tokens)",
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "block2449_0": [
                "tokenReward.balanceOf(msg.sender)"
            ],
            "block2449_1": [
                "tokenReward.balanceOf(msg.sender)"
            ],
            "jump2772": [
                "multisig.transfer(amount)",
                "multisig.transfer(amount)"
            ],
            "block2772_0": [
                "multisig.transfer(amount)"
            ],
            "block2730_1": [
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "block2730_0": [
                "tokenReward.transfer(msg.sender, tokens)"
            ],
            "jump2449_0": [
                "tokenReward.balanceOf(msg.sender)",
                "tokenReward.balanceOf(msg.sender)"
            ],
            "jump2449_1": [
                "tokenReward.balanceOf(msg.sender)",
                "tokenReward.balanceOf(msg.sender)"
            ],
            "block2449": [
                "tokenReward.balanceOf(msg.sender)"
            ],
            "jump2449": [
                "tokenReward.balanceOf(msg.sender)",
                "tokenReward.balanceOf(msg.sender)"
            ]
        }
    }
}