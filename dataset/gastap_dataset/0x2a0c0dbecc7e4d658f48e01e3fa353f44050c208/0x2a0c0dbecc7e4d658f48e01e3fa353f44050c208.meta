{
    "Token": {
        "function_list": [
            "transfer(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "bytes32",
                    "name": "bytes32",
                    "symbol": "bytes32",
                    "totalSupply": "uint256",
                    "decimals": "uint8"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "bytes32",
                    "name": "bytes32",
                    "symbol": "bytes32",
                    "totalSupply": "uint256",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "bytes32",
                    "name": "bytes32",
                    "symbol": "bytes32",
                    "totalSupply": "uint256",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "bytes32",
                    "name": "bytes32",
                    "symbol": "bytes32",
                    "totalSupply": "uint256",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Exchange": {
        "function_list": [
            "assert(bool)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "setOwner(address)",
            "getOwner()",
            "invalidateOrdersBefore(address,uint256)",
            "setInactivityReleasePeriod(uint256)",
            "Exchange(address)",
            "setAdmin(address,bool)",
            "fallback()",
            "depositToken(address,uint256)",
            "deposit()",
            "withdraw(address,uint256)",
            "adminWithdraw(address,uint256,address,uint256,uint8,bytes32,bytes32,uint256)",
            "balanceOf(address,address)",
            "trade(uint256[8],address[4],uint8[2],bytes32[4])"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "getOwner()": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "invalidateOrdersBefore(address,uint256)": {
                "argument": {
                    "nonce": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "setInactivityReleasePeriod(uint256)": {
                "argument": {
                    "expiry": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "Exchange(address)": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "setAdmin(address,bool)": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "depositToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "withdraw(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "adminWithdraw(address,uint256,address,uint256,uint8,bytes32,bytes32,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "nonce": "uint256",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32",
                    "feeWithdrawal": "uint256"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "balanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            },
            "trade(uint256[8],address[4],uint8[2],bytes32[4])": {
                "argument": {
                    "tradeValues": "uint256[8]",
                    "v": "uint8[2]",
                    "rs": "bytes32[4]"
                },
                "contract": {
                    "inactivityReleasePeriod": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "assert(bool)": [
                347,
                75
            ],
            "invalidateOrdersBefore(address,uint256)": [
                1604,
                383
            ],
            "balanceOf(address,address)": [
                2444,
                603
            ],
            "trade(uint256[8],address[4],uint8[2],bytes32[4])": [
                1983,
                515
            ],
            "withdraw(address,uint256)": [
                2274,
                559
            ],
            "adminWithdraw(address,uint256,address,uint256,uint8,bytes32,bytes32,uint256)": [
                461,
                119
            ],
            "setOwner(address)": [
                394,
                97
            ],
            "safeAdd(uint256,uint256)": [
                1908,
                493
            ],
            "safeMul(uint256,uint256)": [
                1681,
                405
            ],
            "deposit()": [
                1756,
                427
            ],
            "safeSub(uint256,uint256)": [
                1529,
                361
            ],
            "setAdmin(address,bool)": [
                983,
                229
            ],
            "getOwner()": [
                1355,
                317
            ],
            "depositToken(address,uint256)": [
                742,
                163
            ],
            "setInactivityReleasePeriod(uint256)": [
                1839,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump3320": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash), v, r, s)",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash), v, r, s)"
            ],
            "jump5748": [
                "Token(token).transferFrom(msg.sender, this, amount)",
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "jump4736": [
                "Token(token).transfer(user, amount)",
                "Token(token).transfer(user, amount)"
            ],
            "block4505": [
                "user.send(amount)"
            ],
            "block9260": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", tradeHash), v[1], rs[2], rs[3])"
            ],
            "block13830": [
                "Token(token).transfer(msg.sender, amount)"
            ],
            "block8757": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", orderHash), v[0], rs[0], rs[1])"
            ],
            "block4736": [
                "Token(token).transfer(user, amount)"
            ],
            "jump13830": [
                "Token(token).transfer(msg.sender, amount)",
                "Token(token).transfer(msg.sender, amount)"
            ],
            "jump8757": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", orderHash), v[0], rs[0], rs[1])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", orderHash), v[0], rs[0], rs[1])"
            ],
            "block5748": [
                "Token(token).transferFrom(msg.sender, this, amount)"
            ],
            "jump13599": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "jump4505": [
                "user.send(amount)",
                "user.send(amount)"
            ],
            "block13599": [
                "msg.sender.send(amount)"
            ],
            "jump9260": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", tradeHash), v[1], rs[2], rs[3])",
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", tradeHash), v[1], rs[2], rs[3])"
            ],
            "block3320": [
                "ecrecover(keccak256(\"\\x19Ethereum Signed Message:\\n32\", hash), v, r, s)"
            ]
        }
    }
}