block0(g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	lt(s(1), s(0))
	call(block153())

jump0(s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	geq(s(1), s(0))
	call(block13(g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))

jump13(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block158(s(0), l(l1), l(l0), address, balance, callvalue))

jump13(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))

block13(g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 302407648
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block201(s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue))

jump65(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))

block65(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 396229619
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 813656850
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block272(s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value))

jump76(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block87(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1201551676
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block337(s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))

jump87(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, codesize, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block98(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block98(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2001218328
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block407(s(0), l(l1), l(l0), address, balance, callvalue))

jump98(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block109(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block109(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2017635821
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block450(s(0), l(l1), l(l0), address, balance, callvalue))

jump109(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block120(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

jump120(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block493(s(0),g(state), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block131(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block120(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3436291617
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block550(s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

jump131(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block142(s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))

block142(s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3580569737
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block582(s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))

jump142(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block153_0(s(0)))

block153()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

jump158(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block170(s(1), s(0), l(l1), l(l0), address, balance))

jump158(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block166(s(1), s(0)))

block158(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump158(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block166(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block170(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 179
	nop(PUSH2)
	s(2) = 605
	nop(PUSH2)
	call(block605(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block179(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block201(s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump201(s(2),s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump201(s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block213(s(1), s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump201(s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block209(s(1), s(0)))

block209(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block213(s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 222
	nop(PUSH2)
	s(2) = 636
	nop(PUSH2)
	call(block636(s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block222(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(1)
	nop(DUP7)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump272(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	eq(s(2), 0)
	call(block284(s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, value))

jump272(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	neq(s(2), 0)
	call(block280(s(1), s(0)))

block272(s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump272(s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block280(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block284(s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 315
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 726
	nop(PUSH2)
	call(block726(s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block315(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block337(s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(1) = 345
	nop(PUSH2)
	s(2) = 1183
	nop(PUSH2)
	call(block1183(s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))
	nop(JUMP)

block345(s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 20
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block361(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

jump361(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	geq(s(11), s(10))
	call(block388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump361(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	lt(s(11), s(10))
	call(block370(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block361(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump361(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block370(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l6)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 361
	nop(PUSH2)
	call(block361(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block388(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block407(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump407(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump407(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block419(s(1), s(0), l(l1), l(l0), address, balance))

jump407(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block415(s(1), s(0)))

block415(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block419(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 428
	nop(PUSH2)
	s(2) = 1278
	nop(PUSH2)
	call(block1278_0(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block428(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block450(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump450(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block462(s(1), s(0), l(l1), l(l0), address, balance))

jump450(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block458(s(1), s(0)))

block458(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block462(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 471
	nop(PUSH2)
	s(2) = 1326
	nop(PUSH2)
	call(block1326_0(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block471(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block493(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump493(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump493(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block505(s(1), s(0),g(state), l(l1), l(l0)))

jump493(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block501(s(1), s(0)))

block501(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block505(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 514
	nop(PUSH2)
	s(2) = 1410
	nop(PUSH2)
	call(block1410(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

block514(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump514(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump514(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block530(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump514(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block529(s(5), s(4), s(3), s(2), s(1), s(0)))

block529(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block530(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block550(s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 580
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = guess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1428
	nop(PUSH2)
	call(block1428(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(JUMP)

block580(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block582(s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump582(s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block594(s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump582(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block590(s(1), s(0)))

block590(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block594(s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 603
	nop(PUSH2)
	s(2) = 1989
	nop(PUSH2)
	call(block1989_0(s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block603(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block605(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block179(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block636(s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump636(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump636(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block670(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump636(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block669(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block670(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2002
	nop(PUSH2)
	s(8) = g(2002)
	nop(SLOAD)
	s(9) = 682
	nop(PUSH2)
	s(10) = 1326
	nop(PUSH2)
	call(block1326(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block682(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 1
	nop(PUSH1)
	s(11) = g(bettingprice)
	nop(SLOAD)
	s(12) = s(6)
	s(6) = s(11)
	s(11) = s(12)
	nop(SWAP5)
	nop(POP)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	nop(POP)
	s(10) = s(4)
	s(4) = s(9)
	s(9) = s(10)
	nop(SWAP5)
	nop(POP)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	call(block222(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block726(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3026
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(3026) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 1000000
	nop(PUSH3)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	call(block765(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump765(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block902(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump765(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block777(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block765(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 2002
	nop(PUSH2)
	s(8) = g(2002)
	nop(SLOAD)
	s(9) = s(5)
	nop(DUP4)
	call(jump765(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block777(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 2
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump777(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump777(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block792(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump777(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block791(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block791(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump792(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump792(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block792(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = slt(s(9), s(8))
	nop(SLT)
	call(jump792(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block814(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block851(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block851(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	nop(DUP5)
	call(jump851(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block889(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump851(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block860(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block860(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 2
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump860(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump860(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block875(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump860(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block874(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block874(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block875(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	call(block889(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block889(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(8) = 765
	nop(PUSH2)
	call(block765(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block902(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	call(block907(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block1171(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump907(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block907(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 2002
	nop(PUSH2)
	s(8) = g(2002)
	nop(SLOAD)
	s(9) = s(5)
	nop(DUP4)
	call(jump907(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block919(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 2
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump919(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump919(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block934(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump919(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block933(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block933(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump934(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block993(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump934(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block956(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block934(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = slt(s(9), s(8))
	nop(SLT)
	call(jump934(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block956(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block993(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block993(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	nop(DUP5)
	call(jump993(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block1158(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump993(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block1002(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1002(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1017(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1002(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1016(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1002(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 2
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump1002(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1016(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(12), s(11))
	call(block1091(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(12), s(11))
	call(block1090(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1017(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(guesses)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2026
	nop(PUSH2)
	s(10) = 3026
	nop(PUSH2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(3026)
	nop(SLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	g(3026) = s(11)
	nop(SSTORE)
	s(11) = 1000
	nop(PUSH2)
	s(12) = s(10)
	nop(DUP2)
	call(jump1017(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1090(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1091(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(2026)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2026) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block1158(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1158(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(8) = 907
	nop(PUSH2)
	call(block907(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block1171(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block315(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1183(s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(2) = 1191
	nop(PUSH2)
	s(3) = 2714
	nop(PUSH2)
	call(block2714(s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))
	nop(JUMP)

jump1191(s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	eq(s(4), s(3))
	call(block1210(s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1191(s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	neq(s(4), s(3))
	call(block1206(s(2), s(1), s(0)))

block1191(s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 1
	nop(PUSH1)
	s(4) = g(bettingprice)
	nop(SLOAD)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = callvalue
	nop(CALLVALUE)
	call(jump1191(s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1206(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1210(s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2005
	nop(PUSH2)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	call(jump1210(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1210(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	eq(s(9), 0)
	call(block1268(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1210(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	neq(s(9), 0)
	call(block1242(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block1242(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	call(block1248(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block1248(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(2005)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	call(jump1248(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump1248(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	gt(s(10), s(9))
	call(block1248(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1248(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	leq(s(10), s(9))
	call(block1268(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block1268(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block345(s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block1278(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 100
	nop(PUSH1)
	s(17) = address
	nop(ADDRESS)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(17) = balance
	nop(BALANCE)
	s(18) = s(16)
	nop(DUP2)
	call(jump1278(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1278(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(18), 0)
	call(block1316(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1278(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(18), 0)
	call(block1315(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1315(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1316(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block1339(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1326(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 1339
	nop(PUSH2)
	s(14) = 1278
	nop(PUSH2)
	call(block1278(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1339(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(14) = 3026
	nop(PUSH2)
	s(14) = g(3026)
	nop(SLOAD)
	call(jump1339(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump1339(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	lt(s(14), s(13))
	call(block1361(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1339(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	geq(s(14), s(13))
	call(block1353(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

block1353(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	s(13) = 3026
	nop(PUSH2)
	s(13) = g(3026)
	nop(SLOAD)
	s(14) = 1364
	nop(PUSH2)
	call(block1364(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1361(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(13) = 1
	nop(PUSH1)
	call(block1364(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1364(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(15), 0)
	call(block1399(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1364(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(15), 0)
	call(block1398(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1364(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = s(11)
	nop(DUP3)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(15) = balance
	nop(BALANCE)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	call(jump1364(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1398(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1399(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block682(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1410(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block514(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1428(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1428(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1428(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block1445(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1428(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block1444(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1444(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1445(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1445(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1445(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block1471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1445(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block1470(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1470(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump1471(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block1483(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block1479(s(5), s(4), s(3), s(2), s(1), s(0)))

block1479(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1483(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(6) = g(bettingprice)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump1483(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1483(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block1499(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))

jump1483(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block1495(s(5), s(4), s(3), s(2), s(1), s(0)))

block1495(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1499(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 2004
	nop(PUSH2)
	s(6) = g(2004)
	nop(SLOAD)
	s(7) = 1000000
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	call(jump1499(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1499(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block1516(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))

jump1499(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block1515(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1515(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1516(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block1660(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump1516(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block1651(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block1516(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = coinbase
	nop(COINBASE)
	s(9) = difficulty
	nop(DIFFICULTY)
	s(10) = 2003
	nop(PUSH2)
	s(10) = g(2003)
	nop(SLOAD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 79228162514264337593543950336
	nop(PUSH13)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 20
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l8) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l9) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(7)
	s(7) = s(12)
	s(12) = s(13)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	nop(DUP7)
	s(14) = gas
	nop(GAS)
	s(8) = 1
	nop(CALL)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump1516(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1651(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block1660(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1660(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1660(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block1681(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump1660(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block1677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block1681(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l1)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 2003
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(2003) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 2002
	nop(PUSH2)
	s(8) = g(2002)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump1681(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1681(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block1983(s(5), s(4), s(3), s(2), s(1), s(0)))

jump1681(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block1727(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

block1727(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = 2
	nop(PUSH1)
	s(8) = 2002
	nop(PUSH2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(2002)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(2002) = s(9)
	nop(SSTORE)
	s(9) = 1000
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	call(jump1727(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1727(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(10), s(9))
	call(block1802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump1727(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(10), s(9))
	call(block1801(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1801(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l2)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	call(jump1802(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block1901(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1802(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block1900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1901(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block1926(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1901(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block1917(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1901(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 2004
	nop(PUSH2)
	s(6) = g(2004)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump1901(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1917(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 2004
	nop(PUSH2)
	s(7) = g(2004)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block1926(s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1926(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 2005
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1926(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1926(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block1942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1926(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block1941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1000
	nop(PUSH2)
	s(7) = 2002
	nop(PUSH2)
	s(7) = g(2002)
	nop(SLOAD)
	call(jump1942(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block1982(s(5), s(4), s(3), s(2), s(1), s(0)))

jump1942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block1974(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1974(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(6) = 1981
	nop(PUSH2)
	s(7) = 1989
	nop(PUSH2)
	call(block1989(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1981(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block1982(s(5),s(4),s(3),s(2),s(1),s(0)))

block1982(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block1983(s(5),s(4),s(3),s(2),s(1),s(0)))

block1983(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block580(s(0)))
	nop(JUMP)

block1989(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(state)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	call(jump1989(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1989(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(19), s(18))
	call(block2028(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1989(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(19), s(18))
	call(block2027(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2027(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2028(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(state) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(14) = 1000000
	nop(PUSH3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(15) = 2003
	nop(PUSH2)
	s(15) = g(2003)
	nop(SLOAD)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	call(jump2028(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2028(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block2059(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2028(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block2058(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2058(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2059(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(14)%s(13)
	nop(MOD)
	s(14) = s(7)
	s(7) = s(13)
	s(13) = s(14)
	nop(SWAP6)
	nop(POP)
	s(13) = 2071
	nop(PUSH2)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 726
	nop(PUSH2)
	call(block726_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2071(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(8)
	s(8) = s(13)
	s(13) = s(14)
	nop(SWAP5)
	nop(POP)
	s(13) = 2081
	nop(PUSH2)
	s(14) = 1326
	nop(PUSH2)
	call(block1326_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2081(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(9)
	s(9) = s(13)
	s(13) = s(14)
	nop(SWAP4)
	nop(POP)
	s(13) = 3026
	nop(PUSH2)
	s(13) = g(3026)
	nop(SLOAD)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = address
	nop(ADDRESS)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14) = balance
	nop(BALANCE)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	call(block2121(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2121(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block2414(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize))

jump2121(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block2133(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2121(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 3026
	nop(PUSH2)
	s(13) = g(3026)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	call(jump2121(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2133(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(13) = 2026
	nop(PUSH2)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 1000
	nop(PUSH2)
	s(16) = s(14)
	nop(DUP2)
	call(jump2133(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2133(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block2149(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2133(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block2148(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2148(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2149(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(2026)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2300
	nop(PUSH2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(15)
	nop(DUP6)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(14)
	nop(DUP9)
	s(17) = 1
	nop(CALL)
	s(18) = s(13)
	s(13) = s(17)
	s(17) = s(18)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump2149(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2149(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block2258(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2149(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block2249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(14) = returndatasize
	nop(RETURNDATASIZE)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(15) = returndatasize
	nop(RETURNDATASIZE)
	s(16) = 0
	nop(PUSH1)
	nop(REVERT)

block2258(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = 10161437123019703799368490947982123334096525230655471442976718163230804810685
	nop(PUSH32)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 2025
	nop(PUSH2)
	s(17) = g(2025)
	nop(SLOAD)
	s(18) = s(7)
	nop(DUP11)
	s(19) = timestamp
	nop(TIMESTAMP)
	s(20) = 64
	nop(PUSH1)
	s(20) = l(l0)
	nop(MLOAD)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(14)
	nop(DUP8)
	s(23) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(15)
	nop(DUP7)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(16)
	nop(DUP6)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	nop(DUP5)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(18)
	nop(DUP4)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(19)
	nop(DUP3)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(14)
	s(14) = s(21)
	s(21) = s(22)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = 2121
	nop(PUSH2)
	call(block2121(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2414(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 111878518489905076529453067008237143312024387244205214753439995900192534493299
	nop(PUSH32)
	s(14) = s(10)
	nop(DUP4)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(15) = balance
	nop(BALANCE)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	s(13) = 145310274130995655498999676065288342874741794197
	nop(PUSH20)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2300
	nop(PUSH2)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(15)
	nop(DUP6)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(14)
	nop(DUP9)
	s(17) = 1
	nop(CALL)
	s(18) = s(13)
	s(13) = s(17)
	s(17) = s(18)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump2414(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2414(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	eq(s(14), 0)
	call(block2590(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2414(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	neq(s(14), 0)
	call(block2581(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2581(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(14) = returndatasize
	nop(RETURNDATASIZE)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(15) = returndatasize
	nop(RETURNDATASIZE)
	s(16) = 0
	nop(PUSH1)
	nop(REVERT)

block2590(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = 2002
	nop(PUSH2)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(2002) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	call(block2605(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))

jump2605(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(14), s(13))
	call(block2652(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2605(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(14), s(13))
	call(block2617(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

block2605(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(13) = 2004
	nop(PUSH2)
	s(13) = g(2004)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	call(jump2605(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2617(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = 2005
	nop(PUSH2)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 20
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump2617(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2617(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(17), s(16))
	call(block2634(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2617(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(17), s(16))
	call(block2633(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2633(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2634(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(2005) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = 2605
	nop(PUSH2)
	call(block2605(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(JUMP)

jump2652(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	leq(s(19), s(18))
	call(block2701(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2652(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	gt(s(19), s(18))
	call(block2700(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2652(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(13) = 2025
	nop(PUSH2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(2025)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(2025) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 0
	nop(PUSH1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(state)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	call(jump2652(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2700(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2701(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(state) = s(14)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1981(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block2714(s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(3) = 640
	nop(PUSH2)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = codesize
	nop(CODESIZE)
	s(9) = s(5)
	nop(DUP4)
	nop(CODECOPY)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	call(block1191(s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue))
	nop(JUMP)

jump1002_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block1017_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1002_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block1016_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1002_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 2
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump1002_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1002_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1017_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1002_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1016_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1002_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 2
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump1002_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1016_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1016_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1017_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(24), s(23))
	call(block1091_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1017_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(24), s(23))
	call(block1090_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1017_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(21) = g(guesses)
	nop(SLOAD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = 256
	nop(PUSH2)
	s(21) = s(22)^s(21)
	nop(EXP)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 2026
	nop(PUSH2)
	s(22) = 3026
	nop(PUSH2)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(22)
	nop(DUP2)
	s(24) = g(3026)
	nop(SLOAD)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	s(26) = 1
	nop(PUSH1)
	s(25) = s(26)+s(25)
	nop(ADD)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	nop(POP)
	g(3026) = s(23)
	nop(SSTORE)
	s(23) = 1000
	nop(PUSH2)
	s(24) = s(22)
	nop(DUP2)
	call(jump1017_0(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1017_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(19), s(18))
	call(block1091_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1017_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(19), s(18))
	call(block1090_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1017_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(guesses)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 2026
	nop(PUSH2)
	s(17) = 3026
	nop(PUSH2)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	s(19) = g(3026)
	nop(SLOAD)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	g(3026) = s(18)
	nop(SSTORE)
	s(18) = 1000
	nop(PUSH2)
	s(19) = s(17)
	nop(DUP2)
	call(jump1017_1(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1090_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1090_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1091_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	nop(DUP2)
	s(23) = g(2026)
	nop(SLOAD)
	s(24) = s(22)
	nop(DUP2)
	s(25) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(24) = s(25)*s(24)
	nop(MUL)
	s(24) = not(s(24))
	nop(NOT)
	s(23) = and(s(24), s(23))
	nop(AND)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = s(20)
	nop(DUP4)
	s(25) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(24) = and(s(25), s(24))
	nop(AND)
	s(23) = s(24)*s(23)
	nop(MUL)
	s(22) = or(s(23), s(22))
	nop(OR)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	g(2026) = s(21)
	nop(SSTORE)
	nop(POP)
	call(block1158_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1091_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	nop(DUP2)
	s(18) = g(2026)
	nop(SLOAD)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(2026) = s(16)
	nop(SSTORE)
	nop(POP)
	call(block1158_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1158_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(20)
	nop(DUP1)
	s(22) = 1
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	s(17) = s(21)
	s(21) = s(22)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(20) = 907
	nop(PUSH2)
	call(block907_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1158_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	s(12) = s(16)
	s(16) = s(17)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(15) = 907
	nop(PUSH2)
	call(block907_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1171_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(15)
	s(15) = s(20)
	s(20) = s(21)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	call(block2071(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1171_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(10)
	s(10) = s(15)
	s(15) = s(16)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block2071_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

jump1278_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block1316_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump1278_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block1315_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1278_0(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 100
	nop(PUSH1)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(4)
	nop(DUP2)
	call(jump1278_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1278_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(10), 0)
	call(block1316_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

jump1278_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(10), 0)
	call(block1315_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1278_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 100
	nop(PUSH1)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9) = balance
	nop(BALANCE)
	s(10) = s(8)
	nop(DUP2)
	call(jump1278_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1278_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(22), 0)
	call(block1316_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1278_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(22), 0)
	call(block1315_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1278_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 100
	nop(PUSH1)
	s(21) = address
	nop(ADDRESS)
	s(22) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(21) = balance
	nop(BALANCE)
	s(22) = s(20)
	nop(DUP2)
	call(jump1278_2(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1278_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(17), 0)
	call(block1316_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1278_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(17), 0)
	call(block1315_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1278_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 100
	nop(PUSH1)
	s(16) = address
	nop(ADDRESS)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(16) = balance
	nop(BALANCE)
	s(17) = s(15)
	nop(DUP2)
	call(jump1278_3(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1315_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1315_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1315_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1315_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1316_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block428(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1316_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block1339_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1316_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block1339_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1316_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	call(block1339_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1326_0(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1339
	nop(PUSH2)
	s(6) = 1278
	nop(PUSH2)
	call(block1278_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1326_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 0
	nop(PUSH1)
	s(17) = 1339
	nop(PUSH2)
	s(18) = 1278
	nop(PUSH2)
	call(block1278_2(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1326_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 1339
	nop(PUSH2)
	s(13) = 1278
	nop(PUSH2)
	call(block1278_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

jump1339_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	lt(s(6), s(5))
	call(block1361_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

jump1339_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	geq(s(6), s(5))
	call(block1353_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

block1339_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 3026
	nop(PUSH2)
	s(6) = g(3026)
	nop(SLOAD)
	call(jump1339_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump1339_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1361_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1339_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1353_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1339_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = 1
	nop(PUSH1)
	s(18) = 3026
	nop(PUSH2)
	s(18) = g(3026)
	nop(SLOAD)
	call(jump1339_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump1339_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(13), s(12))
	call(block1361_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1339_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(13), s(12))
	call(block1353_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1339_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 1
	nop(PUSH1)
	s(13) = 3026
	nop(PUSH2)
	s(13) = g(3026)
	nop(SLOAD)
	call(jump1339_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block1353_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	s(5) = 3026
	nop(PUSH2)
	s(5) = g(3026)
	nop(SLOAD)
	s(6) = 1364
	nop(PUSH2)
	call(block1364_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1353_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(17) = 3026
	nop(PUSH2)
	s(17) = g(3026)
	nop(SLOAD)
	s(18) = 1364
	nop(PUSH2)
	call(block1364_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1353_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(12) = 3026
	nop(PUSH2)
	s(12) = g(3026)
	nop(SLOAD)
	s(13) = 1364
	nop(PUSH2)
	call(block1364_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1361_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	call(block1364_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))

block1361_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 1
	nop(PUSH1)
	call(block1364_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1361_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 1
	nop(PUSH1)
	call(block1364_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1364_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	call(jump1364_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1364_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block1399_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump1364_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block1398_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump1364_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(19), 0)
	call(block1399_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1364_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(19), 0)
	call(block1398_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1364_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = s(15)
	nop(DUP3)
	s(19) = address
	nop(ADDRESS)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(19) = balance
	nop(BALANCE)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(19) = s(17)
	nop(DUP2)
	call(jump1364_1(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1364_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block1399_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1364_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block1398_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1364_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(14) = address
	nop(ADDRESS)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14) = balance
	nop(BALANCE)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	call(jump1364_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1398_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1398_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1398_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1399_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block471(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1399_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block2081(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1399_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block2081_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block153_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block1989_0(s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump1989_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1989_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(14), s(13))
	call(block2028_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1989_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(14), s(13))
	call(block2027_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2027_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2028_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(10), 0)
	call(block2059_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2028_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(10), 0)
	call(block2058_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2028_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 1000000
	nop(PUSH3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = timestamp
	nop(TIMESTAMP)
	s(10) = 2003
	nop(PUSH2)
	s(10) = g(2003)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	call(jump2028_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2058_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2059_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(9)%s(8)
	nop(MOD)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 2071
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 726
	nop(PUSH2)
	call(block726_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2071_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 2081
	nop(PUSH2)
	s(9) = 1326
	nop(PUSH2)
	call(block1326_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2081_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 3026
	nop(PUSH2)
	s(8) = g(3026)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9) = balance
	nop(BALANCE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block2121_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2121_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 3026
	nop(PUSH2)
	s(8) = g(3026)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	call(jump2121_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2121_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block2414_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize))

jump2121_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block2133_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2133_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(8) = 2026
	nop(PUSH2)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump2133_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2133_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(11), s(10))
	call(block2149_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2133_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(11), s(10))
	call(block2148_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2148_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2149_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(2026)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump2149_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2149_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block2258_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2149_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block2249_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2249_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block2258_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = 10161437123019703799368490947982123334096525230655471442976718163230804810685
	nop(PUSH32)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 2025
	nop(PUSH2)
	s(12) = g(2025)
	nop(SLOAD)
	s(13) = s(2)
	nop(DUP11)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(10)
	nop(DUP7)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(11)
	nop(DUP6)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	nop(DUP5)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(9)
	s(9) = s(16)
	s(16) = s(17)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = 2121
	nop(PUSH2)
	call(block2121_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

jump2414_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	eq(s(9), 0)
	call(block2590_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2414_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	neq(s(9), 0)
	call(block2581_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2414_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 111878518489905076529453067008237143312024387244205214753439995900192534493299
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	s(8) = 145310274130995655498999676065288342874741794197
	nop(PUSH20)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump2414_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2581_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block2590_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 2002
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2002) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block2605_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))

jump2605_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(9), s(8))
	call(block2652_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2605_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(9), s(8))
	call(block2617_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

block2605_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(8) = 2004
	nop(PUSH2)
	s(8) = g(2004)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	call(jump2605_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2617_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 2005
	nop(PUSH2)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 20
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump2617_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2617_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(12), s(11))
	call(block2634_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2617_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(12), s(11))
	call(block2633_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2633_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2634_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2005) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = 2605
	nop(PUSH2)
	call(block2605_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(JUMP)

block2652_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(8) = 2025
	nop(PUSH2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(2025)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(2025) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump2652_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2652_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	leq(s(14), s(13))
	call(block2701_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2652_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	gt(s(14), s(13))
	call(block2700_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2700_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2701_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block603(s(0)))
	nop(JUMP)

block726_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = 3026
	nop(PUSH2)
	s(22) = s(20)
	nop(DUP2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	g(3026) = s(21)
	nop(SSTORE)
	nop(POP)
	s(20) = 1000000
	nop(PUSH3)
	s(21) = s(16)
	s(16) = s(20)
	s(20) = s(21)
	nop(SWAP4)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	call(block765_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block726_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 3026
	nop(PUSH2)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(3026) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 1000000
	nop(PUSH3)
	s(16) = s(11)
	s(11) = s(15)
	s(15) = s(16)
	nop(SWAP4)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	call(block765_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump765_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(21), s(20))
	call(block902_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump765_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(21), s(20))
	call(block777_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block765_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 2002
	nop(PUSH2)
	s(20) = g(2002)
	nop(SLOAD)
	s(21) = s(17)
	nop(DUP4)
	call(jump765_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump765_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block902_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump765_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block777_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block765_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 2002
	nop(PUSH2)
	s(15) = g(2002)
	nop(SLOAD)
	s(16) = s(12)
	nop(DUP4)
	call(jump765_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump777_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block792_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump777_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block791_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block777_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 2
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump777_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block777_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 2
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump777_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump777_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block792_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump777_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block791_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block791_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block791_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block792_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(14)
	nop(DUP7)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = slt(s(21), s(20))
	nop(SLT)
	call(jump792_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump792_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(20), 0)
	call(block851_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump792_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(20), 0)
	call(block814_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block792_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(9)
	nop(DUP7)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = slt(s(16), s(15))
	nop(SLT)
	call(jump792_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump792_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block851_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump792_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block814_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block814_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	call(block851_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block814_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	call(block851_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block851_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	nop(DUP5)
	call(jump851_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(21), s(20))
	call(block889_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump851_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(21), s(20))
	call(block860_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block851_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	call(jump851_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(16), s(15))
	call(block889_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump851_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(16), s(15))
	call(block860_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump860_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block875_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump860_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block874_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block860_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 2
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump860_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump860_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block875_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump860_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block874_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block860_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 2
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump860_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block874_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block874_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block875_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	s(16) = s(20)
	s(20) = s(21)
	nop(SWAP4)
	nop(POP)
	call(block889_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block875_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	s(11) = s(15)
	s(15) = s(16)
	nop(SWAP4)
	nop(POP)
	call(block889_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block889_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(20)
	nop(DUP1)
	s(22) = 1
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	s(17) = s(21)
	s(21) = s(22)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(20) = 765
	nop(PUSH2)
	call(block765_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block889_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	s(12) = s(16)
	s(16) = s(17)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(15) = 765
	nop(PUSH2)
	call(block765_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block902_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	call(block907_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block902_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	call(block907_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block907_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 2002
	nop(PUSH2)
	s(20) = g(2002)
	nop(SLOAD)
	s(21) = s(17)
	nop(DUP4)
	call(jump907_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump907_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(21), s(20))
	call(block1171_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump907_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(21), s(20))
	call(block919_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block907_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 2002
	nop(PUSH2)
	s(15) = g(2002)
	nop(SLOAD)
	s(16) = s(12)
	nop(DUP4)
	call(jump907_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump907_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block1171_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump907_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block919_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump919_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block934_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump919_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block933_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block919_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 2
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump919_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump919_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block934_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump919_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block933_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block919_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 2
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump919_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block933_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block933_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block934_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(14)
	nop(DUP7)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = slt(s(21), s(20))
	nop(SLT)
	call(jump934_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump934_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(20), 0)
	call(block993_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump934_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(20), 0)
	call(block956_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block934_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(9)
	nop(DUP7)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = slt(s(16), s(15))
	nop(SLT)
	call(jump934_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump934_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block993_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump934_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block956_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block956_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	call(block993_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block956_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	call(block993_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block993_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	nop(DUP5)
	call(jump993_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump993_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(21), s(20))
	call(block1158_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump993_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(21), s(20))
	call(block1002_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block993_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	call(jump993_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump993_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(16), s(15))
	call(block1158_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump993_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(16), s(15))
	call(block1002_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

