{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "EnjinBuyer": {
        "function_list": [
            "set_token(address)",
            "activate_kill_switch(string)",
            "personal_withdraw()",
            "withdraw_token(address)",
            "withdraw_refund()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "set_token(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "activate_kill_switch(string)": {
                "argument": {
                    "password": "string"
                },
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "personal_withdraw()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "withdraw_token(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "withdraw_refund()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "refund_contract_eth_value": "uint256",
                    "refund_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "activate_kill_switch(string)": [
                1726,
                405
            ],
            "set_token(address)": [
                1659,
                383
            ],
            "withdraw_token(address)": [
                1349,
                251
            ],
            "withdraw_refund()": [
                1102,
                141
            ],
            "personal_withdraw()": [
                1506,
                317
            ]
        },
        "block_CALL_mapping": {
            "block4972": [
                "token.transfer(developer, fee)"
            ],
            "block552_0": [
                "sale.call.value(contract_eth_value)()"
            ],
            "block5241": [
                "token.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump3789": [
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)",
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump5241": [
                "token.transfer(msg.sender, tokens_to_withdraw - fee)",
                "token.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump4423": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump3039": [
                "myToken.balanceOf(address(this))",
                "myToken.balanceOf(address(this))"
            ],
            "block2676": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump4972": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "block3789": [
                "myToken.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump3999": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block3039": [
                "myToken.balanceOf(address(this))"
            ],
            "jump3554": [
                "myToken.transfer(developer, fee)",
                "myToken.transfer(developer, fee)"
            ],
            "block552": [
                "sale.call.value(contract_eth_value)()"
            ],
            "jump2150": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump2676": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump552_0": [
                "sale.call.value(contract_eth_value)()",
                "sale.call.value(contract_eth_value)()"
            ],
            "block2150": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block4423": [
                "token.balanceOf(address(this))"
            ],
            "block3554": [
                "myToken.transfer(developer, fee)"
            ],
            "block3999": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump552": [
                "sale.call.value(contract_eth_value)()",
                "sale.call.value(contract_eth_value)()"
            ]
        }
    }
}