{
    "ReentrancyHandlingContract": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SeedCrowdsaleContract": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "fallback()",
            "checkCrowdsaleState()",
            "refundTransaction(bool)",
            "calculateMaxContribution(address)",
            "processTransaction(address,uint256)",
            "salvageTokensFromContract(address,address,uint256)",
            "withdrawEth()",
            "pullBalance()",
            "batchReturnEthIfFailed(uint256)",
            "withdrawRemainingBalanceForManualRecovery()",
            "setMultisigAddress(address)",
            "setPriorityPassContract(address)",
            "priorityPassContractAddress()",
            "setCrowdsaleTimes(uint256,uint256,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "checkCrowdsaleState()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "refundTransaction(bool)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "calculateMaxContribution(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "processTransaction(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "salvageTokensFromContract(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "pullBalance()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "batchReturnEthIfFailed(uint256)": {
                "argument": {
                    "_numberOfReturns": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "withdrawRemainingBalanceForManualRecovery()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "setMultisigAddress(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "setPriorityPassContract(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "priorityPassContractAddress()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            },
            "setCrowdsaleTimes(uint256,uint256,uint256)": {
                "argument": {
                    "_presaleStartTime": "uint256",
                    "_presaleUnlimitedStartTime": "uint256",
                    "_crowdsaleEndedTime": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartTime": "uint256",
                    "presaleUnlimitedStartTime": "uint256",
                    "crowdsaleEndedTime": "uint256",
                    "minCap": "uint256",
                    "maxP1Cap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "pendingEthWithdrawal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setCrowdsaleTimes(uint256,uint256,uint256)": [
                1837,
                317
            ],
            "calculateMaxContribution(address)": [
                1902,
                339
            ],
            "withdrawEth()": [
                2383,
                493
            ],
            "batchReturnEthIfFailed(uint256)": [
                2012,
                383
            ],
            "withdrawRemainingBalanceForManualRecovery()": [
                1401,
                141
            ],
            "priorityPassContractAddress()": [
                1510,
                207
            ],
            "transferOwnership(address)": [
                2616,
                603
            ],
            "salvageTokensFromContract(address,address,uint256)": [
                2274,
                471
            ],
            "setPriorityPassContract(address)": [
                1770,
                295
            ],
            "pullBalance()": [
                2449,
                537
            ],
            "setMultisigAddress(address)": [
                1182,
                75
            ],
            "acceptOwnership()": [
                1989,
                361
            ]
        },
        "block_CALL_mapping": {
            "block6529": [
                "currentParticipantAddress.send(contribution)"
            ],
            "block7216": [
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)"
            ],
            "block1048_0": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4073": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "block719": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4158": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block4158": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_1": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump1048": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block4073": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump7216": [
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)",
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)"
            ],
            "jump4689": [
                "multisigAddress.transfer(this.balance)",
                "multisigAddress.transfer(this.balance)"
            ],
            "jump6529": [
                "currentParticipantAddress.send(contribution)",
                "currentParticipantAddress.send(contribution)"
            ],
            "jump7575": [
                "multisigAddress.transfer(pendingEthWithdrawal)",
                "multisigAddress.transfer(pendingEthWithdrawal)"
            ],
            "block5628_0": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block5628_1": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block719_0": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block7575": [
                "multisigAddress.transfer(pendingEthWithdrawal)"
            ],
            "block5628_2": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump719_0": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4158_1": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_3": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_2": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_0": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump4158_4": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_2": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump5628_3": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4689": [
                "multisigAddress.transfer(this.balance)"
            ],
            "jump719": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block5628_3": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4158_3": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_2": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_1": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block1048": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block4158_4": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump1048_0": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block5628": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump5628": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4073_2": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4073_1": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4073_0": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_1": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_0": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_2": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ]
        }
    },
    "ENTXSeedCrowdsale": {
        "function_list": [
            "fallback()",
            "checkCrowdsaleState()",
            "refundTransaction(bool)",
            "calculateMaxContribution(address)",
            "processTransaction(address,uint256)",
            "salvageTokensFromContract(address,address,uint256)",
            "withdrawEth()",
            "pullBalance()",
            "batchReturnEthIfFailed(uint256)",
            "withdrawRemainingBalanceForManualRecovery()",
            "setMultisigAddress(address)",
            "setPriorityPassContract(address)",
            "priorityPassContractAddress()",
            "setCrowdsaleTimes(uint256,uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "ENTXSeedCrowdsale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "checkCrowdsaleState()": {
                "argument": {},
                "contract": {}
            },
            "refundTransaction(bool)": {
                "argument": {},
                "contract": {}
            },
            "calculateMaxContribution(address)": {
                "argument": {},
                "contract": {}
            },
            "processTransaction(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "salvageTokensFromContract(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {}
            },
            "pullBalance()": {
                "argument": {},
                "contract": {}
            },
            "batchReturnEthIfFailed(uint256)": {
                "argument": {
                    "_numberOfReturns": "uint256"
                },
                "contract": {}
            },
            "withdrawRemainingBalanceForManualRecovery()": {
                "argument": {},
                "contract": {}
            },
            "setMultisigAddress(address)": {
                "argument": {},
                "contract": {}
            },
            "setPriorityPassContract(address)": {
                "argument": {},
                "contract": {}
            },
            "priorityPassContractAddress()": {
                "argument": {},
                "contract": {}
            },
            "setCrowdsaleTimes(uint256,uint256,uint256)": {
                "argument": {
                    "_presaleStartTime": "uint256",
                    "_presaleUnlimitedStartTime": "uint256",
                    "_crowdsaleEndedTime": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "ENTXSeedCrowdsale()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setCrowdsaleTimes(uint256,uint256,uint256)": [
                1837,
                317
            ],
            "calculateMaxContribution(address)": [
                1902,
                339
            ],
            "withdrawEth()": [
                2383,
                493
            ],
            "batchReturnEthIfFailed(uint256)": [
                2012,
                383
            ],
            "withdrawRemainingBalanceForManualRecovery()": [
                1401,
                141
            ],
            "priorityPassContractAddress()": [
                1510,
                207
            ],
            "transferOwnership(address)": [
                2616,
                603
            ],
            "salvageTokensFromContract(address,address,uint256)": [
                2274,
                471
            ],
            "setPriorityPassContract(address)": [
                1770,
                295
            ],
            "pullBalance()": [
                2449,
                537
            ],
            "setMultisigAddress(address)": [
                1182,
                75
            ],
            "acceptOwnership()": [
                1989,
                361
            ]
        },
        "block_CALL_mapping": {
            "block6529": [
                "currentParticipantAddress.send(contribution)"
            ],
            "block7216": [
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)"
            ],
            "block1048_0": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4073": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "block719": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4158": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block4158": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_1": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump1048": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block4073": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump7216": [
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)",
                "ERC20TokenInterface(_tokenAddress).transfer(_to, _amount)"
            ],
            "jump4689": [
                "multisigAddress.transfer(this.balance)",
                "multisigAddress.transfer(this.balance)"
            ],
            "jump6529": [
                "currentParticipantAddress.send(contribution)",
                "currentParticipantAddress.send(contribution)"
            ],
            "jump7575": [
                "multisigAddress.transfer(pendingEthWithdrawal)",
                "multisigAddress.transfer(pendingEthWithdrawal)"
            ],
            "block5628_0": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block5628_1": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block719_0": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block7575": [
                "multisigAddress.transfer(pendingEthWithdrawal)"
            ],
            "block5628_2": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump719_0": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "jump4158_1": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_3": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4158_2": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_0": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump4158_4": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5628_2": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump5628_3": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4689": [
                "multisigAddress.transfer(this.balance)"
            ],
            "jump719": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block5628_3": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4158_3": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_2": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_1": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4158_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block1048": [
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block4158_4": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump1048_0": [
                "priorityPassContract.getAccountActivity(msg.sender)",
                "priorityPassContract.getAccountActivity(msg.sender)"
            ],
            "block5628": [
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "jump5628": [
                "priorityPassContract.getAccountLimit(_contributor)",
                "priorityPassContract.getAccountLimit(_contributor)"
            ],
            "block4073_2": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4073_1": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4073_0": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_1": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_0": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4073_2": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ]
        }
    }
}