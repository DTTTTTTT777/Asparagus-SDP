{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "burnTokens(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "burnTokens(uint256)": {
                "argument": {
                    "_unsoldTokens": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                260,
                97
            ],
            "increaseApproval(address,uint256)": [
                1130,
                317
            ],
            "mint(address,uint256)": [
                537,
                163
            ],
            "balanceOf(address)": [
                808,
                229
            ],
            "burnTokens(uint256)": [
                739,
                207
            ],
            "allowance(address,address)": [
                1231,
                339
            ],
            "decreaseApproval(address,uint256)": [
                638,
                185
            ],
            "transferFrom(address,address,uint256)": [
                404,
                141
            ],
            "finishMinting()": [
                895,
                251
            ],
            "transfer(address,uint256)": [
                1029,
                295
            ],
            "transferOwnership(address)": [
                1350,
                361
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getPublicSupply()": [
                589,
                207
            ],
            "hasEnded()": [
                989,
                383
            ],
            "buyTokens(address)": [
                935,
                361
            ],
            "bountyFunds(address,uint256)": [
                482,
                163
            ],
            "burnToken()": [
                1103,
                427
            ],
            "getTokenAddress()": [
                329,
                97
            ],
            "grantAdvisorToken()": [
                416,
                119
            ],
            "transferOwnership(address)": [
                1036,
                405
            ],
            "grantTeamToken()": [
                869,
                317
            ],
            "transferToken(address,uint256)": [
                252,
                75
            ],
            "rewardsFunds(address,uint256)": [
                719,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3759": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump2053": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump4179": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block4179": [
                "token.mint(beneficiary, valueToken)"
            ],
            "block2595": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7323_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump7323_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump6327": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)",
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump5496": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)",
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "jump3482": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)",
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "block7323_0": [
                "wallet.transfer(msg.value)"
            ],
            "jump2053_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3482": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "block6050": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "block3205": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "jump3205": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)",
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "block6327": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump3759": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)",
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump4730": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "jump6050": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)",
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "block7323": [
                "wallet.transfer(msg.value)"
            ],
            "block7044": [
                "token.burnTokens(remainingPublicSupply)"
            ],
            "block5496": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "jump5773": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)",
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump2595": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2053_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2053_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2053": [
                "token.mint(beneficiary, tokens)"
            ],
            "block5219": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "block4730": [
                "token.mint(beneficiary, valueToken)"
            ],
            "jump7044": [
                "token.burnTokens(remainingPublicSupply)",
                "token.burnTokens(remainingPublicSupply)"
            ],
            "block7323_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump5219": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)",
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "jump2053_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5773": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump7323": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                717,
                273
            ],
            "buyTokens(address)": [
                663,
                251
            ],
            "transferOwnership(address)": [
                764,
                295
            ]
        },
        "block_CALL_mapping": {
            "block1629": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block2143_1": [
                "token.mint(reserve, reserveAmount)"
            ],
            "block2143_0": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1886_0": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump1886_1": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "block1886": [
                "token.mint(team, teamAmount)"
            ],
            "jump2648": [
                "token.mint(_to, mintAmount)",
                "token.mint(_to, mintAmount)"
            ],
            "jump2143": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1372": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1886_0": [
                "token.mint(team, teamAmount)"
            ],
            "block1886_1": [
                "token.mint(team, teamAmount)"
            ],
            "block3343_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3343_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump3343_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3343_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2143": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump3343": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1629_1": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block1629_0": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block3343": [
                "wallet.transfer(msg.value)"
            ],
            "jump1372_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1372_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1886": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump2143_1": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump2143_0": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "block1372_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1372_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629_1": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "jump1629_0": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "block2648": [
                "token.mint(_to, mintAmount)"
            ],
            "block1372": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "burnToken()": {
                "argument": {},
                "contract": {}
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {}
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {}
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {}
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {}
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {}
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                179,
                97
            ],
            "hasEnded()": [
                379,
                185
            ],
            "transferOwnership(address)": [
                426,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                268,
                119
            ],
            "refund(address)": [
                643,
                251
            ],
            "close()": [
                158,
                75
            ],
            "deposit(address)": [
                589,
                229
            ],
            "transferOwnership(address)": [
                522,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "jump2095": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block883": [
                "wallet.transfer(this.balance)"
            ],
            "block2095": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "updateGoalCheck()",
            "getVaultAddress()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "updateGoalCheck()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "getVaultAddress()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                513,
                229
            ],
            "finalize()": [
                266,
                119
            ],
            "hasEnded()": [
                536,
                251
            ],
            "goalReached()": [
                332,
                163
            ],
            "transferOwnership(address)": [
                583,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2008": [
                "vault.enableRefunds()"
            ],
            "jump1845": [
                "vault.close()",
                "vault.close()"
            ],
            "block1845": [
                "vault.close()"
            ],
            "jump2008": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump1281": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block1281": [
                "vault.refund(msg.sender)"
            ]
        }
    },
    "BenebitToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "burnTokens(uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "BenebitToken()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "burnTokens(uint256)": {
                "argument": {
                    "_unsoldTokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "BenebitToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                448,
                119
            ],
            "increaseApproval(address,uint256)": [
                1548,
                405
            ],
            "mint(address,uint256)": [
                811,
                229
            ],
            "burnTokens(uint256)": [
                1013,
                273
            ],
            "balanceOf(address)": [
                1082,
                295
            ],
            "decreaseApproval(address,uint256)": [
                912,
                251
            ],
            "transferFrom(address,address,uint256)": [
                592,
                163
            ],
            "finishMinting()": [
                1169,
                317
            ],
            "allowance(address,address)": [
                1649,
                427
            ],
            "transfer(address,uint256)": [
                1447,
                383
            ],
            "transferOwnership(address)": [
                1768,
                449
            ]
        },
        "block_CALL_mapping": {}
    },
    "BenebitICO": {
        "function_list": [
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "updateGoalCheck()",
            "getVaultAddress()",
            "finalize()",
            "finalization()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "BenebitICO()",
            "createTokenContract()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "updateGoalCheck()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getVaultAddress()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "BenebitICO()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1355,
                537
            ],
            "claimRefund()": [
                1235,
                471
            ],
            "bountyFunds(address,uint256)": [
                691,
                251
            ],
            "goalReached()": [
                928,
                339
            ],
            "grantTeamToken()": [
                1212,
                449
            ],
            "getPublicSupply()": [
                885,
                317
            ],
            "rewardsFunds(address,uint256)": [
                1062,
                383
            ],
            "getVaultAddress()": [
                798,
                295
            ],
            "transferToken(address,uint256)": [
                329,
                75
            ],
            "transferOwnership(address)": [
                1402,
                559
            ],
            "finalize()": [
                668,
                229
            ],
            "burnToken()": [
                1469,
                581
            ],
            "grantAdvisorToken()": [
                516,
                141
            ],
            "buyTokens(address)": [
                1301,
                515
            ],
            "updateGoalCheck()": [
                493,
                119
            ],
            "getTokenAddress()": [
                406,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump3691": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)",
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "block3691": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "block2961": [
                "token.mint(beneficiary, tokens)"
            ],
            "block8940": [
                "vault.close()"
            ],
            "block3968": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "jump2961": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block8739": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block8268": [
                "token.burnTokens(remainingPublicSupply)"
            ],
            "jump6435": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)",
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "jump8739_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump7573": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump2419_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2419_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2419": [
                "token.mint(beneficiary, tokens)"
            ],
            "block8739_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump6712": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)",
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump8739_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump2419": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump8940": [
                "vault.close()",
                "vault.close()"
            ],
            "block6158": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "block7573": [
                "vault.refund(msg.sender)"
            ],
            "block7266": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "block6712": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump4896": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block6989": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "block6435": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "jump7266": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)",
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump6989": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)",
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "jump6158": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)",
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "block8739_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block9103": [
                "vault.enableRefunds()"
            ],
            "block2419_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2419_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump5669": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "jump4245": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)",
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump9103": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block4896": [
                "token.mint(beneficiary, valueToken)"
            ],
            "jump3968": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)",
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "block4245": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump8739": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block5669": [
                "token.mint(beneficiary, valueToken)"
            ],
            "jump8268": [
                "token.burnTokens(remainingPublicSupply)",
                "token.burnTokens(remainingPublicSupply)"
            ]
        }
    }
}