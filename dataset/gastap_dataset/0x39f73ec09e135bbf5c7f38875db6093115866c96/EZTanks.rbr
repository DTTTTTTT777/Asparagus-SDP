block0(g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	lt(s(1), s(0))
	call(block494())

jump0(s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	geq(s(1), s(0))
	call(block13(g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))

jump13(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	eq(s(2), s(1))
	call(block499(s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, callvalue, codesize, tankID))

jump13(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	neq(s(2), s(1))
	call(block65(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))

block13(g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 18627846
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldataload, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	eq(s(2), s(1))
	call(block604(s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize, callvalue))

jump65(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	neq(s(2), s(1))
	call(block76(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))

block65(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 503841885
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), add, address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 606457406
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	eq(s(2), s(1))
	call(block756(s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, tankID, upgradeChoice))

jump76(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID, upgradeChoice)=>
	neq(s(2), s(1))
	call(block87(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block87(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 773487949
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block801(s(0), l(l11), l(l10), l(l3), l(l0), address, amount, balance, calldatasize, caller))

jump87(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amount, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block98(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump98(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block833(s(0),g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, earnings, startPrice))

jump98(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block109(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block98(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 809749445
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, codesize, duration, earnings, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block109(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1162488499
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block952(s(0),g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID, timestamp))

jump109(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block120(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump120(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block984(s(0),g(balances), g(owner), amt, calldatasize, caller, callvalue))

jump120(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block131(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block120(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1346304510
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, amt, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1408024018
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1032(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump131(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block142(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block142(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1415261965
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1097(s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, callvalue, codesize, tankID))

jump142(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block153(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump153(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1202(s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, callvalue, tankID, timestamp))

jump153(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block164(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block153(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1423518633
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1267(s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, codesize, tankID))

jump164(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block175(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block164(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1567483798
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1594265611
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1299(s(0),g(tournamentAmt), g(owner), calldatasize, caller, callvalue, fee))

jump175(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, fee, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block186(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump186(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1344(s(0),g(tournamentTaxRate), l(l3), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block197(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block186(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1620991140
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1387(s(0),g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, typeID))

jump197(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block208(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block197(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1847802136
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1872738698
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1425(s(0),g(owner), l(l3), l(l0), address, balance, caller, callvalue))

jump208(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block219(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block219(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1968868657
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1468(s(0),g(owner), l(l3), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block230(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump230(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1517(s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, callvalue, codesize, timestamp))

jump230(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block241(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block230(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2025683253
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2059270473
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1622(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump241(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block252(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block252(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2120096012
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1687(s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, codesize, typeID))

jump252(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l1), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, codesize, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block263(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

block263(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2178705140
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1792(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump263(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block274(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))

jump274(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1861(s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, duration, endPrice, startPrice, tankID, timestamp))

jump274(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block285(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

block274(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2251087603
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, duration, endPrice, newOwner, playerID, rate, size, startPrice, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2377076175
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1936(s(0),g(tournamentTaxRate), l(l3), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block296(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

jump296(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block1985(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, tankID))

jump296(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block307(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

block296(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2528487253
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block2030(s(0),g(teamSize), l(l3), l(l0), callvalue))

jump307(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block318(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

block307(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2675170240
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block318(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2702016734
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block2073(s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID))

jump318(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block329(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

block329(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2759517983
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block2118(s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID))

jump329(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block340(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

jump340(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block2183(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump340(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block351(s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))

block340(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2775759404
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	eq(s(2), s(1))
	call(block2252(s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, callvalue, timestamp))

jump351(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	neq(s(2), s(1))
	call(block362(s(0),g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, typeID))

block351(s(0), g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2820675732
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l7), l(l3), l(l0), address, auctionID, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, timestamp, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, typeID)=>
	eq(s(2), s(1))
	call(block2317(s(0),g(owner), g(tournamentTaxRate), calldatasize, caller, callvalue, rate))

jump362(s(2), s(1), s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, typeID)=>
	neq(s(2), s(1))
	call(block373(s(0),g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))

block362(s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2838319975
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, rate, size, tankID, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2928849412
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	eq(s(2), s(1))
	call(block2365(s(0),g(balances), l(l3), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(balances), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	neq(s(2), s(1))
	call(block384(s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))

block384(s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2935906016
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	eq(s(2), s(1))
	call(block2414(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, tankID))

jump384(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	neq(s(2), s(1))
	call(block395(s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))

block395(s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3235451085
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	eq(s(2), s(1))
	call(block2459(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump395(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	neq(s(2), s(1))
	call(block406(s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))

jump406(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	eq(s(2), s(1))
	call(block2568(s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))

jump406(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	neq(s(2), s(1))
	call(block417(s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID))

block406(s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3451268118
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, tankID, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3523182929
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	eq(s(2), s(1))
	call(block2633(s(0),g(battleTeams), l(l3), l(l0), callvalue))

jump417(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	neq(s(2), s(1))
	call(block428(s(0),g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID))

block428(s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3799207059
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	eq(s(2), s(1))
	call(block2676(s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, playerID))

jump428(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, playerID, size, typeID)=>
	neq(s(2), s(1))
	call(block439(s(0),g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID))

block439(s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3985163918
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump439(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	eq(s(2), s(1))
	call(block2763(s(0),g(tournamentTaxRate), callvalue))

jump439(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	neq(s(2), s(1))
	call(block450(s(0),g(battleFee), g(tournamentAmt), g(owner), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID))

block450(s(0), g(battleFee), g(tournamentAmt), g(owner), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4072562701
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(battleFee), g(tournamentAmt), g(owner), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	eq(s(2), s(1))
	call(block2773(s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID))

jump450(s(2), s(1), s(0), g(battleFee), g(tournamentAmt), g(owner), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size, typeID)=>
	neq(s(2), s(1))
	call(block461(s(0),g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size))

block461(s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4121032116
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size)=>
	eq(s(2), s(1))
	call(block2838(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump461(s(2), s(1), s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, newOwner, size)=>
	neq(s(2), s(1))
	call(block472(s(0),g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, size))

jump472(s(2), s(1), s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, size)=>
	eq(s(2), s(1))
	call(block2905(s(0),g(tournamentAmt), l(l3), l(l0), callvalue))

jump472(s(2), s(1), s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, size)=>
	neq(s(2), s(1))
	call(block483(s(0),g(owner), calldatasize, caller, callvalue, size))

block472(s(0), g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, size)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4214155521
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(tournamentAmt), g(owner), l(l3), l(l0), calldatasize, caller, callvalue, size))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, size)=>
	eq(s(2), s(1))
	call(block2948(s(0),g(owner), calldatasize, caller, callvalue, size))

jump483(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, size)=>
	neq(s(2), s(1))
	call(block494_0(s(0)))

block483(s(0), g(owner), calldatasize, caller, callvalue, size)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4234808486
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, size))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block499(s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, callvalue, codesize, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump499(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, callvalue, codesize, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump499(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, callvalue, codesize, tankID)=>
	eq(s(2), 0)
	call(block511(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, codesize, tankID))

jump499(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, callvalue, codesize, tankID)=>
	neq(s(2), 0)
	call(block507(s(1), s(0)))

block507(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block511(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), calldatasize, codesize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 542
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2996
	nop(PUSH2)
	call(block2996(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block542(s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 4
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block558(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block558(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump558(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump558(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump558(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block567(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block567(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l1)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 558
	nop(PUSH2)
	call(block558(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block604(s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump604(s(2),s(1),s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block616(s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize))

jump604(s(2), s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block612(s(1), s(0)))

block612(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block616(s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0), add, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 669
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = add
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3725
	nop(PUSH2)
	call(block3725(s(2),s(1),s(0), l(l11), l(l10), l(l4), l(l3), l(l0)))
	nop(JUMP)

block669(s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	nop(DUP3)
	ls(1) = s(5)
	ls(2) = s(6)
	nop(MSTORE)
	s(5) = s(1)
	nop(DUP4)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(7) = l(l3)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(6) = l(l3)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	call(block709(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))

block709(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump709(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump709(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	geq(s(12), s(11))
	call(block736(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump709(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	lt(s(12), s(11))
	call(block718(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0)))

block718(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l0))=>
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(11) = l(l4)
	nop(MLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 709
	nop(PUSH2)
	call(block709(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l0)))
	nop(JUMP)

block736(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block756(s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, tankID, upgradeChoice)=>
	nop(JUMPDEST)
	s(1) = 799
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = upgradeChoice
	nop(CALLDATALOAD)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3876
	nop(PUSH2)
	call(block3876(s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(JUMP)

block799(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block801(s(0), l(l11), l(l10), l(l3), l(l0), address, amount, balance, calldatasize, caller)=>
	nop(JUMPDEST)
	s(1) = 831
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4807
	nop(PUSH2)
	call(block4807(s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(JUMP)

block831(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump833(s(2), s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, earnings, startPrice)=>
	eq(s(2), 0)
	call(block845(s(1), s(0),g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, earnings, startPrice))

jump833(s(2), s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, earnings, startPrice)=>
	neq(s(2), 0)
	call(block841(s(1), s(0)))

block833(s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, earnings, startPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump833(s(2),s(1),s(0),g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, callvalue, earnings, startPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block841(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block845(s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), baseArmor, baseAttack, baseHealth, baseSpeed, calldatasize, caller, earnings, startPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 950
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = startPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = earnings
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = baseHealth
	nop(CALLDATALOAD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = baseAttack
	nop(CALLDATALOAD)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = baseArmor
	nop(CALLDATALOAD)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = baseSpeed
	nop(CALLDATALOAD)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 5237
	nop(PUSH2)
	call(block5237(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller))
	nop(JUMP)

block950(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block952(s(0), g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID, timestamp)=>
	nop(JUMPDEST)
	s(1) = 982
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5690
	nop(PUSH2)
	call(block5690(s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(JUMP)

block982(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump984(s(2), s(1), s(0), g(balances), g(owner), amt, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block996(s(1), s(0),g(balances), g(owner), amt, calldatasize, caller))

jump984(s(2), s(1), s(0), g(balances), g(owner), amt, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block992(s(1), s(0)))

block984(s(0), g(balances), g(owner), amt, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump984(s(2),s(1),s(0),g(balances), g(owner), amt, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block992(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block996(s(1), s(0), g(balances), g(owner), amt, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1030
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amt
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6741
	nop(PUSH2)
	call(block6741(s(2),s(1),s(0),g(balances), g(owner), caller))
	nop(JUMP)

block1030(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1032(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block1044(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump1032(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block1040(s(1), s(0)))

block1032(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1032(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1040(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1044(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1075
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6895
	nop(PUSH2)
	call(block6895(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block1075(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1097(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, callvalue, codesize, tankID)=>
	eq(s(2), 0)
	call(block1109(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, codesize, tankID))

jump1097(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, callvalue, codesize, tankID)=>
	neq(s(2), 0)
	call(block1105(s(1), s(0)))

block1097(s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, callvalue, codesize, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1097(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, callvalue, codesize, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1105(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1109(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), calldatasize, codesize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1140
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6954
	nop(PUSH2)
	call(block6954(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), codesize))
	nop(JUMP)

block1140(s(1), s(0), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 4
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block1156(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))

jump1156(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	geq(s(11), s(10))
	call(block1183(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1156(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	lt(s(11), s(10))
	call(block1165(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0)))

block1156(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump1156(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1165(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l5)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 1156
	nop(PUSH2)
	call(block1156(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))
	nop(JUMP)

block1183(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1202(s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, callvalue, tankID, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1202(s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, callvalue, tankID, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1202(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, callvalue, tankID, timestamp)=>
	eq(s(2), 0)
	call(block1214(s(1), s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, tankID, timestamp))

jump1202(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, callvalue, tankID, timestamp)=>
	neq(s(2), 0)
	call(block1210(s(1), s(0)))

block1210(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1214(s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), calldatasize, tankID, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1245
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7117
	nop(PUSH2)
	call(block7117(s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block1245(s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1267(s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, codesize, tankID)=>
	nop(JUMPDEST)
	s(1) = 1297
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7209
	nop(PUSH2)
	call(block7209(s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block1297(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1299(s(2), s(1), s(0), g(tournamentAmt), g(owner), calldatasize, caller, callvalue, fee)=>
	eq(s(2), 0)
	call(block1311(s(1), s(0),g(tournamentAmt), g(owner), calldatasize, caller, fee))

jump1299(s(2), s(1), s(0), g(tournamentAmt), g(owner), calldatasize, caller, callvalue, fee)=>
	neq(s(2), 0)
	call(block1307(s(1), s(0)))

block1299(s(0), g(tournamentAmt), g(owner), calldatasize, caller, callvalue, fee)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1299(s(2),s(1),s(0),g(tournamentAmt), g(owner), calldatasize, caller, callvalue, fee))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1307(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1311(s(1), s(0), g(tournamentAmt), g(owner), calldatasize, caller, fee)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1342
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = fee
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9451
	nop(PUSH2)
	call(block9451(s(2),s(1),s(0),g(tournamentAmt), g(owner), caller))
	nop(JUMP)

block1342(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1344(s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1344(s(2),s(1),s(0),g(tournamentTaxRate), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1344(s(2), s(1), s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1356(s(1), s(0),g(tournamentTaxRate), l(l3), l(l0)))

jump1344(s(2), s(1), s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1352(s(1), s(0)))

block1352(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1356(s(1), s(0), g(tournamentTaxRate), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1365
	nop(PUSH2)
	s(2) = 9568
	nop(PUSH2)
	call(block9568(s(1),s(0),g(tournamentTaxRate), l(l3), l(l0)))
	nop(JUMP)

block1365(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1387(s(0), g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, typeID)=>
	nop(JUMPDEST)
	s(1) = 1423
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = typeID
	nop(CALLDATALOAD)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9578
	nop(PUSH2)
	call(block9578(s(2),s(1),s(0),g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(JUMP)

block1423(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1425(s(0), g(owner), l(l3), l(l0), address, balance, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1425(s(2),s(1),s(0),g(owner), l(l3), l(l0), address, balance, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1425(s(2), s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller, callvalue)=>
	eq(s(2), 0)
	call(block1437(s(1), s(0),g(owner), l(l3), l(l0), address, balance, caller))

jump1425(s(2), s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller, callvalue)=>
	neq(s(2), 0)
	call(block1433(s(1), s(0)))

block1433(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1437(s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1446
	nop(PUSH2)
	s(2) = 10905
	nop(PUSH2)
	call(block10905(s(1),s(0),g(owner), l(l3), l(l0), address, balance, caller))
	nop(JUMP)

block1446(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1468(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1480(s(1), s(0),g(owner), l(l3), l(l0)))

jump1468(s(2), s(1), s(0), g(owner), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1476(s(1), s(0)))

block1468(s(0), g(owner), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1468(s(2),s(1),s(0),g(owner), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1476(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1480(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1489
	nop(PUSH2)
	s(2) = 11027
	nop(PUSH2)
	call(block11027(s(1),s(0),g(owner), l(l3), l(l0)))
	nop(JUMP)

block1489(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1517(s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, callvalue, codesize, timestamp)=>
	eq(s(2), 0)
	call(block1529(s(1), s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, codesize, timestamp))

jump1517(s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, callvalue, codesize, timestamp)=>
	neq(s(2), 0)
	call(block1525(s(1), s(0)))

block1517(s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, callvalue, codesize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1517(s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, callvalue, codesize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1525(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1529(s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), auctionID, calldatasize, codesize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1560
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = auctionID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11050
	nop(PUSH2)
	call(block11050(s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp))
	nop(JUMP)

block1560(s(1), s(0), l(l9), l(l8), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 3
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block1576(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l0)))

block1576(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump1576(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1576(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l0))=>
	geq(s(11), s(10))
	call(block1603(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1576(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l0))=>
	lt(s(11), s(10))
	call(block1585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l0)))

block1585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l8)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l9) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 1576
	nop(PUSH2)
	call(block1576(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l0)))
	nop(JUMP)

block1603(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1622(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1622(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1622(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block1634(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump1622(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block1630(s(1), s(0)))

block1630(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1634(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1665
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11277
	nop(PUSH2)
	call(block11277(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block1665(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1687(s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, codesize, typeID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1687(s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, codesize, typeID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1687(s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, codesize, typeID)=>
	eq(s(2), 0)
	call(block1699(s(1), s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, codesize, typeID))

jump1687(s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, codesize, typeID)=>
	neq(s(2), 0)
	call(block1695(s(1), s(0)))

block1695(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1699(s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), calldatasize, codesize, typeID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1730
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = typeID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11370
	nop(PUSH2)
	call(block11370(s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize))
	nop(JUMP)

block1730(s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 8
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block1746(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l1), l(l0)))

block1746(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump1746(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1746(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1773(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1746(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1755(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

block1755(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l6)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 1746
	nop(PUSH2)
	call(block1746(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l1), l(l0)))
	nop(JUMP)

block1773(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1792(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1792(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1792(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block1804(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump1792(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block1800(s(1), s(0)))

block1800(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1804(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1835
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11909
	nop(PUSH2)
	call(block11909(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block1835(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1861(s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, duration, endPrice, startPrice, tankID, timestamp)=>
	eq(s(2), 0)
	call(block1873(s(1), s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, duration, endPrice, startPrice, tankID, timestamp))

jump1861(s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, duration, endPrice, startPrice, tankID, timestamp)=>
	neq(s(2), 0)
	call(block1869(s(1), s(0)))

block1861(s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, duration, endPrice, startPrice, tankID, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1861(s(2),s(1),s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, callvalue, duration, endPrice, startPrice, tankID, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1869(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1873(s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), calldatasize, caller, duration, endPrice, startPrice, tankID, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1934
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = startPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = endPrice
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = duration
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 11982
	nop(PUSH2)
	call(block11982(s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(JUMP)

block1934(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1936(s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1936(s(2),s(1),s(0),g(tournamentTaxRate), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1936(s(2), s(1), s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1948(s(1), s(0),g(tournamentTaxRate), l(l3), l(l0)))

jump1936(s(2), s(1), s(0), g(tournamentTaxRate), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1944(s(1), s(0)))

block1944(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1948(s(1), s(0), g(tournamentTaxRate), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1957
	nop(PUSH2)
	s(2) = 12678
	nop(PUSH2)
	call(block12678(s(1),s(0),g(tournamentTaxRate), l(l3), l(l0)))
	nop(JUMP)

block1957(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1985(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1985(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1985(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, tankID)=>
	eq(s(2), 0)
	call(block1997(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, tankID))

jump1985(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, callvalue, tankID)=>
	neq(s(2), 0)
	call(block1993(s(1), s(0)))

block1993(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1997(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, caller, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2028
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 12700
	nop(PUSH2)
	call(block12700(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller))
	nop(JUMP)

block2028(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2030(s(2), s(1), s(0), g(teamSize), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2042(s(1), s(0),g(teamSize), l(l3), l(l0)))

jump2030(s(2), s(1), s(0), g(teamSize), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2038(s(1), s(0)))

block2030(s(0), g(teamSize), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2030(s(2),s(1),s(0),g(teamSize), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2038(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2042(s(1), s(0), g(teamSize), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2051
	nop(PUSH2)
	s(2) = 13134
	nop(PUSH2)
	call(block13134(s(1),s(0),g(teamSize), l(l3), l(l0)))
	nop(JUMP)

block2051(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2073(s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID)=>
	eq(s(2), 0)
	call(block2085(s(1), s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, tankID))

jump2073(s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID)=>
	neq(s(2), 0)
	call(block2081(s(1), s(0)))

block2073(s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2073(s(2),s(1),s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2081(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2085(s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), calldatasize, caller, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2116
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13147
	nop(PUSH2)
	call(block13147(s(2),s(1),s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(JUMP)

block2116(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2118(s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2118(s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2118(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	eq(s(2), 0)
	call(block2130(s(1), s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, typeID))

jump2118(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	neq(s(2), 0)
	call(block2126(s(1), s(0)))

block2126(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2130(s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, typeID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2161
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = typeID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13635
	nop(PUSH2)
	call(block13635(s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2161(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2183(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2183(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2183(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block2195(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump2183(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block2191(s(1), s(0)))

block2191(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2195(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2226
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13694
	nop(PUSH2)
	call(block13694(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2226(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2252(s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2252(s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2252(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block2264(s(1), s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, timestamp))

jump2252(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block2260(s(1), s(0)))

block2260(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2264(s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), auctionID, calldatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2295
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = auctionID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 13766
	nop(PUSH2)
	call(block13766_2(s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block2295(s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2317(s(0), g(owner), g(tournamentTaxRate), calldatasize, caller, callvalue, rate)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2317(s(2),s(1),s(0),g(owner), g(tournamentTaxRate), calldatasize, caller, callvalue, rate))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2317(s(2), s(1), s(0), g(owner), g(tournamentTaxRate), calldatasize, caller, callvalue, rate)=>
	eq(s(2), 0)
	call(block2329(s(1), s(0),g(owner), g(tournamentTaxRate), calldatasize, caller, rate))

jump2317(s(2), s(1), s(0), g(owner), g(tournamentTaxRate), calldatasize, caller, callvalue, rate)=>
	neq(s(2), 0)
	call(block2325(s(1), s(0)))

block2325(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2329(s(1), s(0), g(owner), g(tournamentTaxRate), calldatasize, caller, rate)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2363
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = rate
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14013
	nop(PUSH2)
	call(block14013(s(2),s(1),s(0),g(owner), g(tournamentTaxRate), caller))
	nop(JUMP)

block2363(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2365(s(0), g(balances), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2365(s(2),s(1),s(0),g(balances), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2365(s(2), s(1), s(0), g(balances), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2377(s(1), s(0),g(balances), l(l3), l(l0)))

jump2365(s(2), s(1), s(0), g(balances), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2373(s(1), s(0)))

block2373(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2377(s(1), s(0), g(balances), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2386
	nop(PUSH2)
	s(2) = 14168
	nop(PUSH2)
	call(block14168(s(1),s(0),g(balances), l(l3), l(l0)))
	nop(JUMP)

block2386(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2414(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2414(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2414(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, tankID)=>
	eq(s(2), 0)
	call(block2426(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, tankID))

jump2414(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, callvalue, tankID)=>
	neq(s(2), 0)
	call(block2422(s(1), s(0)))

block2422(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2426(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, calldatasize, caller, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2457
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14190
	nop(PUSH2)
	call(block14190(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(JUMP)

block2457(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2459(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block2471(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump2459(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block2467(s(1), s(0)))

block2459(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2459(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2467(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2471(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2502
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14829
	nop(PUSH2)
	call(block14829(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2502(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2568(s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2568(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2568(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	eq(s(2), 0)
	call(block2580(s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID))

jump2568(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, tankID)=>
	neq(s(2), 0)
	call(block2576(s(1), s(0)))

block2576(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2580(s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), calldatasize, tankID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2611
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = tankID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 14920
	nop(PUSH2)
	call(block14920_0(s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2611(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2633(s(2), s(1), s(0), g(battleTeams), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2645(s(1), s(0),g(battleTeams), l(l3), l(l0)))

jump2633(s(2), s(1), s(0), g(battleTeams), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2641(s(1), s(0)))

block2633(s(0), g(battleTeams), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2633(s(2),s(1),s(0),g(battleTeams), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2641(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2645(s(1), s(0), g(battleTeams), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2654
	nop(PUSH2)
	s(2) = 15094
	nop(PUSH2)
	call(block15094(s(1),s(0),g(battleTeams), l(l3), l(l0)))
	nop(JUMP)

block2654(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2676(s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, playerID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2676(s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, playerID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2676(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, playerID)=>
	eq(s(2), 0)
	call(block2688(s(1), s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, playerID))

jump2676(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, playerID)=>
	neq(s(2), 0)
	call(block2684(s(1), s(0)))

block2684(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2688(s(1), s(0), l(l11), l(l10), l(l3), l(l0), calldatasize, playerID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2741
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = playerID
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15107
	nop(PUSH2)
	call(block15107(s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2741(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2763(s(0), g(tournamentTaxRate), callvalue)=>
	nop(JUMPDEST)
	s(1) = 2771
	nop(PUSH2)
	s(2) = 15180
	nop(PUSH2)
	call(block15180(s(1),s(0),g(tournamentTaxRate), callvalue))
	nop(JUMP)

block2771(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2773(s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2773(s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2773(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	eq(s(2), 0)
	call(block2785(s(1), s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, typeID))

jump2773(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, callvalue, typeID)=>
	neq(s(2), 0)
	call(block2781(s(1), s(0)))

block2781(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2785(s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0), calldatasize, typeID)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2816
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = typeID
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15213
	nop(PUSH2)
	call(block15213(s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))
	nop(JUMP)

block2816(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2838(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2838(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2838(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block2850(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump2838(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block2846(s(1), s(0)))

block2846(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2850(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2903
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15294
	nop(PUSH2)
	call(block15294(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block2903(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2905(s(0), g(tournamentAmt), l(l3), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2905(s(2),s(1),s(0),g(tournamentAmt), l(l3), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2905(s(2), s(1), s(0), g(tournamentAmt), l(l3), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2917(s(1), s(0),g(tournamentAmt), l(l3), l(l0)))

jump2905(s(2), s(1), s(0), g(tournamentAmt), l(l3), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2913(s(1), s(0)))

block2913(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2917(s(1), s(0), g(tournamentAmt), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2926
	nop(PUSH2)
	s(2) = 15454
	nop(PUSH2)
	call(block15454(s(1),s(0),g(tournamentAmt), l(l3), l(l0)))
	nop(JUMP)

block2926(s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2948(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, size)=>
	eq(s(2), 0)
	call(block2960(s(1), s(0),g(owner), calldatasize, caller, size))

jump2948(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, size)=>
	neq(s(2), 0)
	call(block2956(s(1), s(0)))

block2948(s(0), g(owner), calldatasize, caller, callvalue, size)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2948(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, size))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2956(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2960(s(1), s(0), g(owner), calldatasize, caller, size)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2994
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = size
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15464
	nop(PUSH2)
	call(block15464(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block2994(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2996(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(3) = 3004
	nop(PUSH2)
	s(4) = 16157
	nop(PUSH2)
	call(block16157(s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3004(s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(4) = 3012
	nop(PUSH2)
	s(5) = 16192
	nop(PUSH2)
	call(block16192(s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3012(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(5) = 3020
	nop(PUSH2)
	s(6) = 16292
	nop(PUSH2)
	call(block16292(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3020(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(6) = 3028
	nop(PUSH2)
	s(7) = 16157
	nop(PUSH2)
	call(block16157_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block3028(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(8) = s(7)
	nop(DUP1)
	call(jump3028(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3028(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block3045(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0)))

jump3028(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block3039(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0)))

block3039(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	nop(POP)
	s(7) = 6
	nop(PUSH1)
	s(7) = g(battleTeams)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = lt(s(8), s(7))
	nop(LT)
	call(block3045(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l2), l(l1), l(l0)))

block3045(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump3045(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3045(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block3056(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0)))

jump3045(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block3052(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3052(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump3056(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block3447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3056(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block3383(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block3056(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 256
	nop(PUSH2)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(4)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 4
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(5)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 8
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(6)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 12
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(7)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 16
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(8)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 4
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	call(jump3056(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3383(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	call(block3392(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump3392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(15), s(14))
	call(block3392(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3392(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(15), s(14))
	call(block3445(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block3392(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 0
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(10)
	nop(DUP5)
	call(jump3392(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block3445(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	call(block3447(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block3447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 96
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 0
	nop(PUSH1)
	s(11) = 4
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump3447(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(12), s(11))
	call(block3476(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3447(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(12), s(11))
	call(block3475(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3475(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3476(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block3500(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3476(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block3499(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3476(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = s(10)+s(9)
	nop(ADD)
	ll = s(9)
	s(9) = fresh(0)
	nop(MLOAD)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	call(jump3476(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3499(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3500(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block3528(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3500(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block3527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3500(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 96
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump3500(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3527(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3528(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1
	nop(PUSH1)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump3528(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3528(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(10), s(9))
	call(block3552(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3528(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(10), s(9))
	call(block3551(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3551(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3552(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block3587(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3552(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block3586(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3552(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 128
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(1)
	nop(MLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1
	nop(PUSH1)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump3552(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3586(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3587(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 2
	nop(PUSH1)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump3587(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3587(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(10), s(9))
	call(block3611(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3587(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(10), s(9))
	call(block3610(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3610(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3611(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 160
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(1)
	nop(MLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 2
	nop(PUSH1)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump3611(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3611(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block3646(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3611(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block3645(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3645(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(10), s(9))
	call(block3670(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3646(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(10), s(9))
	call(block3669(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3646(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 3
	nop(PUSH1)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump3646(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3669(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3670(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block3705(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3670(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block3704(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3670(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 192
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(1)
	nop(MLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 3
	nop(PUSH1)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump3670(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3704(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3705(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	nop(DUP2)
	ls(1) = s(9)
	ls(2) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block542(s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump3725(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0))=>
	eq(s(10), 0)
	call(block3864(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump3725(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0))=>
	neq(s(10), 0)
	call(block3828(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l4), l(l3), l(l0)))

block3725(s(2), s(1), s(0), l(l11), l(l10), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 96
	nop(PUSH1)
	s(4) = 10
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(4)
	nop(DUP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(9)
	nop(DUP1)
	call(jump3725(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l4), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3828(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l4), l(l3), l(l0))=>
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block3844(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))

block3844(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	call(jump3844(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump3844(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	gt(s(11), s(10))
	call(block3844(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

jump3844(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	leq(s(11), s(10))
	call(block3864(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0)))

block3864(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block669(s(1),s(0), l(l4), l(l3), l(l0)))
	nop(JUMP)

block3876(s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump3876(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3876(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(7), 0)
	call(block3896(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump3876(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(7), 0)
	call(block3890(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

block3890(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(POP)
	s(6) = 6
	nop(PUSH1)
	s(6) = g(battleTeams)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block3896(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump3896(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block3907(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump3896(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block3903(s(5), s(4), s(3), s(2), s(1), s(0)))

block3896(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(jump3896(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3903(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block3907(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump3907(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3907(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(7), s(6))
	call(block4019(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump3907(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(7), s(6))
	call(block4015(s(5), s(4), s(3), s(2), s(1), s(0)))

block4015(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4019(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 4
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4019(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4019(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block4067(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4019(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block4063(s(5), s(4), s(3), s(2), s(1), s(0)))

block4063(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4067(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4067(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4067(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block4115(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4067(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block4111(s(5), s(4), s(3), s(2), s(1), s(0)))

block4111(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4115(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump4115(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4115(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(7), 0)
	call(block4138(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4115(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(7), 0)
	call(block4130(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

block4130(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(POP)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block4138(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4138(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block4149(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4138(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block4145(s(5), s(4), s(3), s(2), s(1), s(0)))

block4138(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(jump4138(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4145(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump4149(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	lt(s(9), s(8))
	call(block4187(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4149(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	geq(s(9), s(8))
	call(block4186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4149(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump4149(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4186(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4187(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	lt(s(11), s(10))
	call(block4252(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4187(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	geq(s(11), s(10))
	call(block4251(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4187(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)%s(7)
	nop(MOD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1
	nop(PUSH1)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	call(jump4187(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4251(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4252(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)%s(9)
	nop(MOD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump4252(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4252(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	gt(s(7), s(6))
	call(block4290(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4252(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	leq(s(7), s(6))
	call(block4286(s(5), s(4), s(3), s(2), s(1), s(0)))

block4286(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4290(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump4290(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4290(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(8), 0)
	call(block4346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4290(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(8), 0)
	call(block4345(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4345(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump4346(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	geq(s(7), s(6))
	call(block4364(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4346(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	lt(s(7), s(6))
	call(block4360(s(5), s(4), s(3), s(2), s(1), s(0)))

block4360(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4364(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump4364(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4364(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	lt(s(9), s(8))
	call(block4402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

jump4364(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	geq(s(9), s(8))
	call(block4401(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4401(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	leq(s(7), s(6))
	call(block4546(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller))

jump4402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	gt(s(7), s(6))
	call(block4467(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))

block4402(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)%s(7)
	nop(MOD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump4402(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4467(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller, callvalue)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = callvalue
	nop(CALLVALUE)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block4546(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller))

block4546(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 100
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(tournamentTaxRate)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump4546(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4546(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller)=>
	neq(s(8), 0)
	call(block4578(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller))

jump4546(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller)=>
	eq(s(8), 0)
	call(block4577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4577(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4578(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(tournamentTaxRate)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(tournamentTaxRate) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 84196705573818123355479046772567579597499372429588255070619046101301005893237
	nop(PUSH32)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	l(l3) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l4) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block799(s(0)))
	nop(JUMP)

block4807(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump4807(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4807(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	geq(s(4), s(3))
	call(block4823(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump4807(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	lt(s(4), s(3))
	call(block4819(s(2), s(1), s(0)))

block4819(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump4823(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	geq(s(4), s(3))
	call(block4861(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump4823(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	lt(s(4), s(3))
	call(block4857(s(2), s(1), s(0)))

block4823(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	call(jump4823(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4857(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump4861(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	geq(s(4), s(3))
	call(block4939(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump4861(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	lt(s(4), s(3))
	call(block4935(s(2), s(1), s(0)))

block4861(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 12
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump4861(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4935(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block4939(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump4939(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4939(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block5015(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump4939(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block4949(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

block4949(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	s(3) = 12
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l10) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l11) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block5015(s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))

block5015(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump5015(s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5015(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(3), 0)
	call(block5079(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump5015(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(3), 0)
	call(block5075(s(2), s(1), s(0)))

block5075(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block5079(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 12
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 29758856654620332834110302680175396788863454596382151577645774845666034483851
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	call(block831(s(0)))
	nop(JUMP)

block5237(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 2
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump5237(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5237(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller)=>
	eq(s(9), s(8))
	call(block5329(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleFee), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))

jump5237(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), g(owner), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller)=>
	neq(s(9), s(8))
	call(block5325(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5325(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block5329(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = 256
	nop(PUSH2)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(3)
	nop(DUP7)
	s(11) = s(9)
	nop(DUP2)
	l(l12) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l8) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l13) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l14) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l15) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = 8
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(battleFee)
	nop(SLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	g(battleFee) = s(12)
	nop(SSTORE)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l3)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l4)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 64
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l12)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = 96
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l8)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 128
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l5)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 4
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 160
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l13)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 8
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 192
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l14)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 12
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(3)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 224
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l15)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 3
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 16
	nop(PUSH1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	nop(DUP2)
	gl = s(13)
	s(13) = fresh(4)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = or(s(13), s(12))
	nop(OR)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block950(s(0)))
	nop(JUMP)

jump5690(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(9), 0)
	call(block5714(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump5690(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(9), 0)
	call(block5708(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

block5690(s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump5690(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5708(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(battleTeams), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(POP)
	s(8) = 6
	nop(PUSH1)
	s(8) = g(battleTeams)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = lt(s(9), s(8))
	nop(LT)
	call(block5714(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump5714(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(8), 0)
	call(block5725(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump5714(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(8), 0)
	call(block5721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5714(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump5714(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5721(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block5725(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(8) = 1
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	call(jump5725(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5725(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(9), s(8))
	call(block5779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump5725(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(9), s(8))
	call(block5775(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5775(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block5779(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 5
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 5813
	nop(PUSH2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 13766
	nop(PUSH2)
	call(block13766(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(JUMP)

jump5813(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	geq(s(9), s(8))
	call(block5831(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump5813(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	lt(s(9), s(8))
	call(block5827(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5813(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	call(jump5813(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5827(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump5831(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	geq(s(9), s(8))
	call(block5846(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump5831(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	lt(s(9), s(8))
	call(block5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5831(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = callvalue
	nop(CALLVALUE)
	call(jump5831(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

jump5846(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	leq(s(9), s(8))
	call(block5934(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))

jump5846(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	gt(s(9), s(8))
	call(block5855(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

block5846(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(8) = s(4)
	nop(DUP4)
	s(9) = callvalue
	nop(CALLVALUE)
	call(jump5846(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5855(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	s(8) = s(4)
	nop(DUP4)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = 12
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block5934(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))

jump5934(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	neq(s(10), 0)
	call(block5965(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))

jump5934(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	eq(s(10), 0)
	call(block5964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5934(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 100
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(balances)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(4)
	nop(DUP6)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump5934(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5964(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5965(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	neq(s(10), 0)
	call(block6000(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))

jump5965(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	eq(s(10), 0)
	call(block5999(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5965(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 100
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(tournamentTaxRate)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(5)
	nop(DUP5)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	call(jump5965(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5999(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block6000(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(12) = g(tournamentTaxRate)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(tournamentTaxRate) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = 12
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 9
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = s(12)
	nop(DUP2)
	l(l10) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l11) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 2
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = 12
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(owner)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(2)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(3)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = caller
	nop(CALLER)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(4)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(5)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 11
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 9
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = s(12)
	nop(DUP2)
	l(l10) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l11) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 5
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(6)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 5
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(7)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 9
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(10)
	nop(DUP2)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l11) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 5
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(8)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 0
	nop(PUSH1)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 6665
	nop(PUSH2)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 15604
	nop(PUSH2)
	call(block15604(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(JUMP)

block6665(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 9569869270502571965754574911025899771144704982026290041194126313362216428949
	nop(PUSH32)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block982(s(0)))
	nop(JUMP)

jump6741(s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), caller)=>
	eq(s(4), s(3))
	call(block6833(s(2), s(1), s(0),g(balances)))

jump6741(s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), caller)=>
	neq(s(4), s(3))
	call(block6829(s(2), s(1), s(0)))

block6741(s(2), s(1), s(0), g(balances), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6741(s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6829(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6833(s(2), s(1), s(0), g(balances))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(4) = s(3)
	nop(DUP1)
	call(jump6833(s(4),s(3),s(2),s(1),s(0),g(balances)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6833(s(4), s(3), s(2), s(1), s(0), g(balances))=>
	eq(s(4), 0)
	call(block6855(s(3), s(2), s(1), s(0),g(balances)))

jump6833(s(4), s(3), s(2), s(1), s(0), g(balances))=>
	neq(s(4), 0)
	call(block6847(s(3), s(2), s(1), s(0),g(balances)))

block6847(s(3), s(2), s(1), s(0), g(balances))=>
	nop(POP)
	s(3) = 100
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = lt(s(4), s(3))
	nop(LT)
	call(block6855(s(3),s(2),s(1),s(0),g(balances)))

block6855(s(3), s(2), s(1), s(0), g(balances))=>
	nop(JUMPDEST)
	call(jump6855(s(3),s(2),s(1),s(0),g(balances)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6855(s(3), s(2), s(1), s(0), g(balances))=>
	neq(s(3), 0)
	call(block6866(s(2), s(1), s(0),g(balances)))

jump6855(s(3), s(2), s(1), s(0), g(balances))=>
	eq(s(3), 0)
	call(block6862(s(2), s(1), s(0)))

block6862(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6866(s(2), s(1), s(0), g(balances))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(balances)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(balances) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block1030(s(0)))
	nop(JUMP)

block6895(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump6895(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6895(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block6913(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump6895(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block6907(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block6907(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block6913(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

block6913(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump6913(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6913(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block6924(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump6913(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block6920(s(3), s(2), s(1), s(0)))

block6920(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6924(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1075(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block6954(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), codesize)=>
	nop(JUMPDEST)
	s(3) = 6962
	nop(PUSH2)
	s(4) = 16292
	nop(PUSH2)
	call(block16292_0(s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), codesize))
	nop(JUMP)

jump6962(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	eq(s(5), 0)
	call(block6979(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0)))

jump6962(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	neq(s(5), 0)
	call(block6973(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0)))

block6962(s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump6962(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6973(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block6979(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l6), l(l5), l(l0)))

block6979(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(jump6979(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l6), l(l5), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6979(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	neq(s(4), 0)
	call(block6990(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0)))

jump6979(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	eq(s(4), 0)
	call(block6986(s(3), s(2), s(1), s(0)))

block6986(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6990(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	call(jump6990(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l6), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6990(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	eq(s(10), 0)
	call(block7105(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0)))

jump6990(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l6), l(l5), l(l0))=>
	neq(s(10), 0)
	call(block7041(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0)))

block7041(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block7050(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))

block7050(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l5) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(7)
	nop(DUP5)
	call(jump7050(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump7050(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	gt(s(12), s(11))
	call(block7050(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0)))

jump7050(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	leq(s(12), s(11))
	call(block7103(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0)))

block7103(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block7105(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l6), l(l5), l(l0)))

block7105(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1140(s(1),s(0), l(l6), l(l5), l(l0)))
	nop(JUMP)

jump7117(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(5), 0)
	call(block7167(s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))

jump7117(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(5), 0)
	call(block7163(s(4), s(3), s(2), s(1), s(0)))

block7117(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 4
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump7117(s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7163(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block7167(s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 5
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 7201
	nop(PUSH2)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 13766
	nop(PUSH2)
	call(block13766_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block7201(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1245(s(1),s(0), l(l7), l(l0)))
	nop(JUMP)

block7209(s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(3) = 7217
	nop(PUSH2)
	s(4) = 16157
	nop(PUSH2)
	call(block16157_1(s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block7217(s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(4) = 7225
	nop(PUSH2)
	s(5) = 16157
	nop(PUSH2)
	call(block16157_2(s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block7225(s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(5) = 7233
	nop(PUSH2)
	s(6) = 16157
	nop(PUSH2)
	call(block16157_3(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block7233(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(12) = gt(s(13), s(12))
	nop(GT)
	s(13) = s(12)
	nop(DUP1)
	call(jump7233(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7233(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	eq(s(13), 0)
	call(block7259(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7233(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	neq(s(13), 0)
	call(block7253(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

block7253(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(POP)
	s(12) = 6
	nop(PUSH1)
	s(12) = g(battleTeams)
	nop(SLOAD)
	s(13) = s(2)
	nop(DUP11)
	s(12) = lt(s(13), s(12))
	nop(LT)
	call(block7259(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

block7259(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	call(jump7259(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7259(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	neq(s(12), 0)
	call(block7270(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7259(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	eq(s(12), 0)
	call(block7266(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7266(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

jump7270(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	eq(s(13), s(12))
	call(block7382(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7270(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	neq(s(13), s(12))
	call(block7378(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7270(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(12) = caller
	nop(CALLER)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 9
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(2)
	nop(DUP13)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump7270(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7378(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block7382(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(12) = 9
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(2)
	nop(DUP12)
	s(15) = s(13)
	nop(DUP2)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l11) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump7382(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7382(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	eq(s(12), 0)
	call(block7430(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7382(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	neq(s(12), 0)
	call(block7426(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7426(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block7430(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(12) = 9
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(2)
	nop(DUP12)
	s(15) = s(13)
	nop(DUP2)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l11) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 2
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump7430(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7430(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	eq(s(12), 0)
	call(block7478(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7430(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	neq(s(12), 0)
	call(block7474(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7474(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

jump7478(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	geq(s(13), s(12))
	call(block7495(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

jump7478(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	lt(s(13), s(12))
	call(block7491(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7478(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(12) = 3
	nop(PUSH1)
	s(12) = g(tournamentAmt)
	nop(SLOAD)
	s(13) = callvalue
	nop(CALLVALUE)
	call(jump7478(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7491(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block7495(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(12) = 3
	nop(PUSH1)
	s(12) = g(tournamentAmt)
	nop(SLOAD)
	s(13) = callvalue
	nop(CALLVALUE)
	call(jump7495(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7495(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	leq(s(13), s(12))
	call(block7587(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize))

jump7495(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	gt(s(13), s(12))
	call(block7506(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))

block7506(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	s(12) = 3
	nop(PUSH1)
	s(12) = g(tournamentAmt)
	nop(SLOAD)
	s(13) = callvalue
	nop(CALLVALUE)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = 12
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = caller
	nop(CALLER)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block7587(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize))

jump7587(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize)=>
	geq(s(13), s(12))
	call(block7806(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7587(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize)=>
	lt(s(13), s(12))
	call(block7711(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10)))

block7587(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize)=>
	nop(JUMPDEST)
	s(12) = 3
	nop(PUSH1)
	s(12) = g(tournamentAmt)
	nop(SLOAD)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(tournamentTaxRate)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(tournamentTaxRate) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(2)
	nop(DUP10)
	s(13) = caller
	nop(CALLER)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 110374290529362402259782484742430517845698531025029461576052341485376736182832
	nop(PUSH32)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG3)
	s(12) = 1
	nop(PUSH1)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(owner)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 4
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(14) = g(teamSize)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	call(jump7587(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, codesize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7711(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	s(12) = 4
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(teamSize)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	g(teamSize) = s(16)
	nop(SSTORE)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 0
	nop(PUSH1)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 1
	nop(PUSH1)
	s(13) = 9
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(2)
	nop(DUP13)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	nop(DUP2)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 255
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(16) = not(s(16))
	nop(NOT)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(12)
	nop(DUP4)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(14) = or(s(15), s(14))
	nop(OR)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 9439
	nop(PUSH2)
	call(block9439(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block7806(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(12) = 4
	nop(PUSH1)
	s(13) = s(2)
	nop(DUP11)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(teamSize)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	g(teamSize) = s(16)
	nop(SSTORE)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 1
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 0
	nop(PUSH1)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	s(6) = s(12)
	s(12) = s(13)
	nop(SWAP6)
	nop(POP)
	call(block7855(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7855(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(13), s(12))
	call(block8386(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))

jump7855(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(13), s(12))
	call(block7882(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block7855(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(owner)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(6)
	nop(DUP7)
	call(jump7855(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7882(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block7899(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7882(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block7898(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7882(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	s(12) = 7915
	nop(PUSH2)
	s(13) = 4
	nop(PUSH1)
	s(14) = s(6)
	nop(DUP8)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(teamSize)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	call(jump7882(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7898(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block7899(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 2996
	nop(PUSH2)
	call(block2996_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

jump7915(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block7932(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7915(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block7931(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7915(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(13) = s(5)
	s(5) = s(12)
	s(12) = s(13)
	nop(SWAP7)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 0
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump7915(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7931(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7932(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block7952(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7932(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block7951(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7932(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l16)
	nop(MLOAD)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 0
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump7932(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7951(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7952(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block7982(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7952(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block7981(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7952(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l3)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 1
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump7952(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7981(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7982(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8002(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump7982(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8001(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7982(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l17)
	nop(MLOAD)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump7982(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8001(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8002(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8032(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8002(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8031(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8002(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l4)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 2
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8002(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8031(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8032(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l18)
	nop(MLOAD)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 2
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8032(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8032(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8052(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8032(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8051(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8051(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8052(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l12)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l12) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8052(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8052(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8082(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8052(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8081(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8081(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8082(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8102(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8082(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8101(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8082(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l19)
	nop(MLOAD)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 3
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8082(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8101(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8102(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l8)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l8) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = 8171
	nop(PUSH2)
	s(13) = 4
	nop(PUSH1)
	s(14) = s(6)
	nop(DUP8)
	s(15) = 2
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(owner)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(teamSize)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	call(jump8102(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8102(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8155(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8102(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8154(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8154(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8155(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 2996
	nop(PUSH2)
	call(block2996_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

jump8171(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8188(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8171(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8187(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8171(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(13) = s(5)
	s(5) = s(12)
	s(12) = s(13)
	nop(SWAP7)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 0
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8171(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8187(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8188(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l20)
	nop(MLOAD)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 0
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8188(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8188(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8208(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8188(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8207(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8207(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8208(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8238(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8208(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8237(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8208(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l5)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l5) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 1
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8208(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8237(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8238(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8258(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8238(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8257(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8238(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l21)
	nop(MLOAD)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8238(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8257(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8258(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l13)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l13) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 2
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8258(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8258(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8288(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8258(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8287(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8287(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8288(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l22)
	nop(MLOAD)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 2
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8288(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8288(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8308(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8288(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8307(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8307(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8308(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(15), s(14))
	call(block8338(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8308(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(15), s(14))
	call(block8337(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8308(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l14)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l14) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(5)
	nop(DUP7)
	s(13) = 3
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8308(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8337(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8338(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(16), s(15))
	call(block8358(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump8338(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(16), s(15))
	call(block8357(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8338(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l23)
	nop(MLOAD)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 3
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8338(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8357(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8358(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(15) = l(l15)
	nop(MLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	l(l15) = s(14)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(6)
	s(6) = s(13)
	s(13) = s(14)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	s(12) = 7855
	nop(PUSH2)
	call(block7855(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block8386(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 2
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8386(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8386(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	lt(s(15), s(14))
	call(block8401(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))

jump8386(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	geq(s(15), s(14))
	call(block8400(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8400(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8401(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8421(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))

jump8401(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8420(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8401(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l14)
	nop(MLOAD)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 1
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8401(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8420(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8421(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l4)
	nop(MLOAD)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(7)
	s(7) = s(12)
	s(12) = s(13)
	nop(SWAP5)
	nop(POP)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 2
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8421(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8421(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	lt(s(15), s(14))
	call(block8444(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8421(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0))=>
	geq(s(15), s(14))
	call(block8443(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8443(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8444(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8464(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8444(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8463(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8444(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l12)
	nop(MLOAD)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 1
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8444(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8463(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8464(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l13)
	nop(MLOAD)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	call(jump8464(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump8464(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	gt(s(13), s(12))
	call(block8487(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8464(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l13), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	leq(s(13), s(12))
	call(block8481(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

block8481(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 8489
	nop(PUSH2)
	call(block8489(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(JUMP)

block8487(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(7)
	nop(DUP5)
	call(block8489(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8489(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	gt(s(13), s(12))
	call(block8506(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8489(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	leq(s(13), s(12))
	call(block8500(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

block8489(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(7)
	s(7) = s(12)
	s(12) = s(13)
	nop(SWAP5)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	call(jump8489(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block8500(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = 8508
	nop(PUSH2)
	call(block8508(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(JUMP)

block8506(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	call(block8508(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

block8508(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = s(3)
	nop(DUP9)
	s(13) = 3
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8508(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8508(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(15), s(14))
	call(block8525(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8508(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(15), s(14))
	call(block8524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8525(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8547(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8525(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8546(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8525(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l8)
	nop(MLOAD)
	s(13) = s(7)
	nop(DUP6)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 0
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8525(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8546(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8547(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	neq(s(14), 0)
	call(block8561(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8547(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	eq(s(14), 0)
	call(block8560(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8547(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l5)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump8547(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8560(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8561(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(15), s(14))
	call(block8579(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8561(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(15), s(14))
	call(block8578(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8561(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 3
	nop(PUSH1)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	call(jump8561(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8578(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8579(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l15)
	nop(MLOAD)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 0
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8579(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8579(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8601(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8579(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8600(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8600(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8601(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l3)
	nop(MLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump8601(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8601(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	neq(s(14), 0)
	call(block8615(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8601(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	eq(s(14), 0)
	call(block8614(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8614(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8615(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(3)
	nop(DUP10)
	s(14) = 3
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8615(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8615(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8635(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))

jump8615(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8634(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8634(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8635(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	lt(s(17), s(16))
	call(block8657(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l5), l(l3), l(l0)))

jump8635(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	geq(s(17), s(16))
	call(block8656(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8635(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l8)
	nop(MLOAD)
	s(14) = s(7)
	nop(DUP7)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 0
	nop(PUSH1)
	s(16) = 4
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump8635(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l8), l(l5), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8656(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8657(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l5), l(l3), l(l0))=>
	neq(s(15), 0)
	call(block8671(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))

jump8657(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l5), l(l3), l(l0))=>
	eq(s(15), 0)
	call(block8670(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8657(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l5), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(14) = l(l5)
	nop(MLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump8657(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l5), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8670(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8671(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(13), s(12))
	call(block8686(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))

jump8671(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(13), s(12))
	call(block8680(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))

block8671(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(14)%s(13)
	nop(MOD)
	call(jump8671(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8680(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	call(block8686(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))

jump8686(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	lt(s(16), s(15))
	call(block8703(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))

jump8686(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	geq(s(16), s(15))
	call(block8702(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8686(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(4)
	nop(DUP9)
	s(14) = 3
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	call(jump8686(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8702(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump8703(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	lt(s(17), s(16))
	call(block8725(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0)))

jump8703(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	geq(s(17), s(16))
	call(block8724(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8703(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(13) = l(l15)
	nop(MLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(3)
	nop(DUP11)
	s(15) = 0
	nop(PUSH1)
	s(16) = 4
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump8703(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l15), l(l11), l(l10), l(l3), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8724(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8725(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(14) = l(l3)
	nop(MLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump8725(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8725(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(15), 0)
	call(block8739(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))

jump8725(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(15), 0)
	call(block8738(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8738(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8739(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(13) = s(14)%s(13)
	nop(MOD)
	call(jump8739(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8739(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	eq(s(13), s(12))
	call(block8754(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))

jump8739(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	neq(s(13), s(12))
	call(block8748(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))

block8748(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	s(12) = 1
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	call(block8754(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))

block8754(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(owner)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1
	nop(PUSH1)
	s(13) = g(tournamentTaxRate)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump8754(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8754(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	neq(s(14), 0)
	call(block8785(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))

jump8754(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	eq(s(14), 0)
	call(block8784(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8784(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8785(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(owner)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(tournamentTaxRate)
	nop(SLOAD)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(tournamentTaxRate) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(9)
	nop(DUP4)
	call(jump8785(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8785(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	gt(s(13), s(12))
	call(block9038(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump8785(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0))=>
	leq(s(13), s(12))
	call(block8834(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block8834(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	s(6) = s(12)
	s(12) = s(13)
	nop(SWAP6)
	nop(POP)
	call(block8838(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block8838(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(owner)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(6)
	nop(DUP7)
	call(jump8838(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8838(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(13), s(12))
	call(block9033(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump8838(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(13), s(12))
	call(block8865(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block8865(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = 12
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 9
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(6)
	nop(DUP12)
	s(19) = s(17)
	nop(DUP2)
	s(19) = g(teamSize)
	nop(SLOAD)
	s(20) = s(18)
	nop(DUP2)
	call(jump8865(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8865(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(20), s(19))
	call(block8888(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump8865(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(20), s(19))
	call(block8887(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8887(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8888(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 0
	nop(PUSH1)
	l(l10) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	l(l10) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l11) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 2
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(2)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(6)
	s(6) = s(13)
	s(13) = s(14)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	s(12) = 8838
	nop(PUSH2)
	call(block8838(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(JUMP)

block9033(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 9259
	nop(PUSH2)
	call(block9259(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(JUMP)

block9038(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	s(6) = s(12)
	s(12) = s(13)
	nop(SWAP6)
	nop(POP)
	call(block9043(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block9043(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(owner)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(6)
	nop(DUP7)
	call(jump9043(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9043(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(13), s(12))
	call(block9258(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump9043(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(13), s(12))
	call(block9070(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block9070(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = 12
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 9
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(6)
	nop(DUP12)
	s(19) = 2
	nop(PUSH1)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(20) = g(owner)
	nop(SLOAD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 256
	nop(PUSH2)
	s(20) = s(21)^s(20)
	nop(EXP)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(17)
	nop(DUP2)
	s(19) = g(teamSize)
	nop(SLOAD)
	s(20) = s(18)
	nop(DUP2)
	call(jump9070(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9070(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(20), s(19))
	call(block9113(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump9070(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(20), s(19))
	call(block9112(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9112(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9113(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 0
	nop(PUSH1)
	l(l10) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	l(l10) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l11) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 2
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(2)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(6)
	s(6) = s(13)
	s(13) = s(14)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	s(12) = 9043
	nop(PUSH2)
	call(block9043(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(JUMP)

block9258(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	call(block9259(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block9259(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	s(6) = s(12)
	s(12) = s(13)
	nop(SWAP6)
	nop(POP)
	call(block9264(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

block9264(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(owner)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 2
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(6)
	nop(DUP7)
	call(jump9264(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9264(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(13), s(12))
	call(block9378(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0)))

jump9264(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(13), s(12))
	call(block9294(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump9294(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	lt(s(18), s(17))
	call(block9314(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))

jump9294(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	geq(s(18), s(17))
	call(block9313(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9294(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = 9
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 4
	nop(PUSH1)
	s(16) = s(6)
	nop(DUP10)
	s(17) = s(15)
	nop(DUP2)
	s(17) = g(teamSize)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	call(jump9294(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9313(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9314(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), g(owner), l(l11), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 0
	nop(PUSH1)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(15) = s(16)+s(15)
	nop(ADD)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	nop(DUP2)
	gl = s(15)
	s(15) = fresh(1)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 255
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(16) = not(s(16))
	nop(NOT)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(12)
	nop(DUP4)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(14) = or(s(15), s(14))
	nop(OR)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(6)
	s(6) = s(13)
	s(13) = s(14)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	s(12) = 9264
	nop(PUSH2)
	call(block9264(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), g(owner), l(l11), l(l10), l(l0)))
	nop(JUMP)

block9378(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0))=>
	nop(JUMPDEST)
	s(12) = 87635949709341913852936663815980004375616232671016047088699522928255742302021
	nop(PUSH32)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 4
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 9437
	nop(PUSH2)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 16327
	nop(PUSH2)
	call(block16327_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l10)))
	nop(JUMP)

block9437(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block9439(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block9439(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1297(s(0)))
	nop(JUMP)

block9451(s(2), s(1), s(0), g(tournamentAmt), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9451(s(4),s(3),s(2),s(1),s(0),g(tournamentAmt), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9451(s(4), s(3), s(2), s(1), s(0), g(tournamentAmt), g(owner), caller)=>
	eq(s(4), s(3))
	call(block9543(s(2), s(1), s(0),g(tournamentAmt)))

jump9451(s(4), s(3), s(2), s(1), s(0), g(tournamentAmt), g(owner), caller)=>
	neq(s(4), s(3))
	call(block9539(s(2), s(1), s(0)))

block9539(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump9543(s(4), s(3), s(2), s(1), s(0), g(tournamentAmt))=>
	gt(s(4), s(3))
	call(block9558(s(2), s(1), s(0),g(tournamentAmt)))

jump9543(s(4), s(3), s(2), s(1), s(0), g(tournamentAmt))=>
	leq(s(4), s(3))
	call(block9554(s(2), s(1), s(0)))

block9543(s(2), s(1), s(0), g(tournamentAmt))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump9543(s(4),s(3),s(2),s(1),s(0),g(tournamentAmt)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9554(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9558(s(2), s(1), s(0), g(tournamentAmt))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(tournamentAmt) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block1342(s(0)))
	nop(JUMP)

block9568(s(1), s(0), g(tournamentTaxRate), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(tournamentTaxRate)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block1365(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block9578(s(2), s(1), s(0), g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump9578(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9578(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(7), 0)
	call(block9611(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9578(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(7), 0)
	call(block9599(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

block9599(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(battleFee), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(POP)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(battleFee)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block9611(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

block9611(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(jump9611(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9611(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block9622(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9611(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block9618(s(5), s(4), s(3), s(2), s(1), s(0)))

block9618(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block9622(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump9622(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9622(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(7), 0)
	call(block9666(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9622(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(7), 0)
	call(block9661(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

block9661(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = callvalue
	nop(CALLVALUE)
	s(6) = gt(s(7), s(6))
	nop(GT)
	call(block9666(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9666(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	neq(s(6), 0)
	call(block9677(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9666(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	eq(s(6), 0)
	call(block9673(s(5), s(4), s(3), s(2), s(1), s(0)))

block9666(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(jump9666(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9673(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block9677(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump9677(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	geq(s(7), s(6))
	call(block9720(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

jump9677(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	lt(s(7), s(6))
	call(block9716(s(5), s(4), s(3), s(2), s(1), s(0)))

block9716(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump9720(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	leq(s(7), s(6))
	call(block9864(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller))

jump9720(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	gt(s(7), s(6))
	call(block9757(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))

block9720(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump9720(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9757(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller, callvalue)=>
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block9864(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller))

block9864(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 16
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 16
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(3)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(4)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 224
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 128
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l15) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l24) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l25) = s(10)
	nop(MSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l12) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l8) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l13) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	l(l14) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 6
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(battleTeams)
	nop(SLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	g(battleTeams) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l4)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4
	nop(PUSH1)
	s(11) = 10275
	nop(PUSH2)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 16371
	nop(PUSH2)
	call(block16371(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

jump10275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	neq(s(8), 0)
	call(block10497(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l11), l(l10), l(l7), l(l0), caller))

jump10275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	eq(s(8), 0)
	call(block10496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10275(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l12)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 96
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l8)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 128
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 160
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l13)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 192
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l14)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 5
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(3)
	nop(SLOAD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 100
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(tournamentTaxRate)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump10275(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10496(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block10497(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l11), l(l10), l(l7), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 8
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(tournamentTaxRate)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(tournamentTaxRate) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 10
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(8) = 6
	nop(PUSH1)
	s(8) = g(battleTeams)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 0
	nop(PUSH1)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 20713235198764975496306628777800317534835525844614610224145431204842472487882
	nop(PUSH32)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1
	nop(PUSH1)
	s(10) = 6
	nop(PUSH1)
	s(10) = g(battleTeams)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = 8
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l10) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l11) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l26) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l27) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1423(s(0)))
	nop(JUMP)

block10905(s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump10905(s(4),s(3),s(2),s(1),s(0),g(owner), l(l3), l(l0), address, balance, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10905(s(4), s(3), s(2), s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller)=>
	eq(s(4), s(3))
	call(block10998(s(2), s(1), s(0), l(l3), l(l0), address, balance))

jump10905(s(4), s(3), s(2), s(1), s(0), g(owner), l(l3), l(l0), address, balance, caller)=>
	neq(s(4), s(3))
	call(block10994(s(2), s(1), s(0)))

block10994(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block10998(s(2), s(1), s(0), l(l3), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block1446(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block11027(s(1), s(0), g(owner), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block1489(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block11050(s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	s(3) = 11058
	nop(PUSH2)
	s(4) = 16525
	nop(PUSH2)
	call(block16525(s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp))
	nop(JUMP)

block11058(s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 11071
	nop(PUSH2)
	s(8) = 16525
	nop(PUSH2)
	call(block16525_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp))
	nop(JUMP)

jump11071(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	eq(s(9), 0)
	call(block11088(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

jump11071(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	neq(s(9), 0)
	call(block11082(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

block11071(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(8) = gt(s(9), s(8))
	nop(GT)
	s(9) = s(8)
	nop(DUP1)
	call(jump11071(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11082(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(POP)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(newTypeID)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = lt(s(9), s(8))
	nop(LT)
	call(block11088(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

block11088(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump11088(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11088(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	neq(s(8), 0)
	call(block11099(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

jump11088(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	eq(s(8), 0)
	call(block11095(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11095(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block11099(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 11133
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 13766
	nop(PUSH2)
	call(block13766_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(JUMP)

block11133(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 5
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = 3
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump11133(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11133(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	lt(s(12), s(11))
	call(block11189(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0)))

jump11133(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	geq(s(12), s(11))
	call(block11188(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11188(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11189(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l8) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(11) = 3
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump11189(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l9), l(l8), l(l5), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11189(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	lt(s(12), s(11))
	call(block11214(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0)))

jump11189(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	geq(s(12), s(11))
	call(block11213(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11213(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11214(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	eq(s(8), 1 )
	call(block11235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0)))

jump11214(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	neq(s(8), 1 )
	call(block11229(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0)))

block11214(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l5) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 11235
	nop(PUSH2)
	call(jump11214(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l9), l(l8), l(l5), l(l0)))
	nop(JUMPI)

block11229(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 11238
	nop(PUSH2)
	call(block11238(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l9), l(l8), l(l0)))
	nop(JUMP)

block11235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	nop(JUMPDEST)
	s(8) = 1
	nop(PUSH1)
	call(block11238(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l9), l(l8), l(l0)))

block11238(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	nop(JUMPDEST)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 3
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump11238(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l9), l(l8), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11238(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	lt(s(12), s(11))
	call(block11256(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0)))

jump11238(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	geq(s(12), s(11))
	call(block11255(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11255(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11256(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l9), l(l8), l(l0))=>
	nop(JUMPDEST)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l13) = s(10)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1560(s(1),s(0), l(l9), l(l8), l(l0)))
	nop(JUMP)

jump11277(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block11295(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump11277(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block11289(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block11277(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump11277(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11289(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block11295(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

block11295(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump11295(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11295(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block11306(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump11295(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block11302(s(3), s(2), s(1), s(0)))

block11302(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block11306(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 4
	nop(PUSH1)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump11306(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(6), 0)
	call(block11362(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0)))

jump11306(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(6), 0)
	call(block11361(s(5), s(4), s(3), s(2), s(1), s(0)))

block11361(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11362(s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1665(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block11370(s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(3) = 11378
	nop(PUSH2)
	s(4) = 16560
	nop(PUSH2)
	call(block16560(s(3),s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize))
	nop(JUMP)

block11378(s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(4) = 11386
	nop(PUSH2)
	s(5) = 16560
	nop(PUSH2)
	call(block16560_0(s(4),s(3),s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize))
	nop(JUMP)

jump11386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block11403(s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11386(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block11397(s(5), s(4), s(3), s(2), s(1), s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

block11386(s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 0
	nop(PUSH1)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(6) = s(5)
	nop(DUP1)
	call(jump11386(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11397(s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(5) = g(battleFee)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = lt(s(6), s(5))
	nop(LT)
	call(block11403(s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

block11403(s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump11403(s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11403(s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(5), 0)
	call(block11414(s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11403(s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(5), 0)
	call(block11410(s(4), s(3), s(2), s(1), s(0)))

block11410(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump11414(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11452(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11414(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11451(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11414(s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 0
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11414(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11451(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11452(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11499(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11452(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11498(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11452(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11452(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11498(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11499(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11546(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11499(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11499(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l24) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 2
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11499(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11546(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11615(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11546(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11614(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11546(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l25) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 3
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11546(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l25), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11614(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11615(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11684(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))

jump11615(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11615(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l26), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l26) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 4
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11615(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l26), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11684(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 8
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 5
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11684(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11684(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11753(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l6), l(l1), l(l0)))

jump11684(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11752(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11752(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump11753(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11822(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l11), l(l10), l(l6), l(l1), l(l0)))

jump11753(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11821(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11753(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l27) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 12
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 6
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11753(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l27), l(l11), l(l10), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11821(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11822(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l28) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = 8
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 16
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 4294967295
	nop(PUSH4)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 7
	nop(PUSH1)
	s(8) = 8
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump11822(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l29), l(l28), l(l11), l(l10), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11822(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block11891(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l6), l(l1), l(l0)))

jump11822(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l28), l(l11), l(l10), l(l6), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block11890(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11890(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11891(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l29), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	l(l29) = s(7)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1730(s(1),s(0), l(l6), l(l1), l(l0)))
	nop(JUMP)

block11909(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	s(4) = lt(s(5), s(4))
	nop(LT)
	s(5) = s(4)
	nop(DUP1)
	call(jump11909(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11909(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block11928(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump11909(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block11922(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block11922(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block11928(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

block11928(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump11928(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11928(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block11939(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump11928(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block11935(s(3), s(2), s(1), s(0)))

block11935(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block11939(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1835(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump11982(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(7), 0)
	call(block11999(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump11982(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(7), 0)
	call(block11993(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

block11982(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump11982(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11993(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), g(battleTeams), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(POP)
	s(6) = 6
	nop(PUSH1)
	s(6) = g(battleTeams)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block11999(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

block11999(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump11999(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11999(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block12010(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump11999(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block12006(s(5), s(4), s(3), s(2), s(1), s(0)))

block12006(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12010(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump12010(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12010(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block12122(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12010(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block12118(s(5), s(4), s(3), s(2), s(1), s(0)))

block12118(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12122(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump12122(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12122(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block12170(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12122(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block12166(s(5), s(4), s(3), s(2), s(1), s(0)))

block12166(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump12170(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block12218(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12170(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block12214(s(5), s(4), s(3), s(2), s(1), s(0)))

block12170(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 4
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump12170(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12214(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump12218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(7), s(6))
	call(block12255(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12218(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(7), s(6))
	call(block12251(s(5), s(4), s(3), s(2), s(1), s(0)))

block12218(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 5
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	call(jump12218(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12251(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump12255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	geq(s(7), s(6))
	call(block12270(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12255(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	lt(s(7), s(6))
	call(block12266(s(5), s(4), s(3), s(2), s(1), s(0)))

block12255(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(3)
	nop(DUP4)
	call(jump12255(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12266(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12270(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump12270(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12270(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(7), 0)
	call(block12287(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12270(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(7), 0)
	call(block12281(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

block12281(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(block12287(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

block12287(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	call(jump12287(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12287(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	neq(s(6), 0)
	call(block12298(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12287(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	eq(s(6), 0)
	call(block12294(s(5), s(4), s(3), s(2), s(1), s(0)))

block12294(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump12298(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	gt(s(7), s(6))
	call(block12313(s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))

jump12298(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	leq(s(7), s(6))
	call(block12309(s(5), s(4), s(3), s(2), s(1), s(0)))

block12298(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump12298(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12309(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block12313(s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l25), l(l24), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l6), l(l5), l(l4), l(l3), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(6) = 192
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l12) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(9) = s(7)
	nop(DUP2)
	l(l8) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l13) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = 11
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 7
	nop(PUSH1)
	s(9) = g(newTypeID)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l3)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l4)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 64
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l12)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 96
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l8)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 3
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 128
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 4
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = 160
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l13)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 5
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(newTypeID)
	nop(SLOAD)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 5
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 7
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(newTypeID)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	g(newTypeID) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 98942567901169304628921301675138816669136680031504138520022431570078595706249
	nop(PUSH32)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(5)
	nop(DUP6)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = s(14)
	nop(DUP2)
	l(l14) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(14)
	nop(DUP2)
	l(l15) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	l(l24) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l25) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(8)
	s(8) = s(14)
	s(14) = s(15)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1934(s(0)))
	nop(JUMP)

block12678(s(1), s(0), g(tournamentTaxRate), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(tournamentTaxRate)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block1957(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block12700(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(4) = s(3)
	nop(DUP1)
	call(jump12700(s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12700(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(4), 0)
	call(block12717(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump12700(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(4), 0)
	call(block12711(s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller))

block12711(s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(POP)
	s(3) = 6
	nop(PUSH1)
	s(3) = g(battleTeams)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = lt(s(4), s(3))
	nop(LT)
	call(block12717(s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump12717(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(3), 0)
	call(block12728(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump12717(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(3), 0)
	call(block12724(s(2), s(1), s(0)))

block12717(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump12717(s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12724(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12728(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(3), 0)
	call(block12775(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump12728(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(3), 0)
	call(block12771(s(2), s(1), s(0)))

block12728(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l10) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l11) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 4
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump12728(s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12771(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump12775(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(4), s(3))
	call(block12887(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump12775(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(4), s(3))
	call(block12883(s(2), s(1), s(0)))

block12775(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 2
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump12775(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12883(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block12887(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 11
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 5
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 5
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(2)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 5
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 84738497526788819087507700323265422536468816269668778645504942611602016717322
	nop(PUSH32)
	s(5) = caller
	nop(CALLER)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	call(block2028(s(0)))
	nop(JUMP)

block13134(s(1), s(0), g(teamSize), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 4
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(teamSize)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2051(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13147(s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	call(jump13147(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13147(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	eq(s(6), 0)
	call(block13167(s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13147(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	neq(s(6), 0)
	call(block13161(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller))

block13161(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(POP)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(battleTeams)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = lt(s(6), s(5))
	nop(LT)
	call(block13167(s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

block13167(s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump13167(s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13167(s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	neq(s(5), 0)
	call(block13178(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13167(s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	eq(s(5), 0)
	call(block13174(s(4), s(3), s(2), s(1), s(0)))

block13174(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump13178(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	eq(s(6), s(5))
	call(block13290(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13178(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	neq(s(6), s(5))
	call(block13286(s(4), s(3), s(2), s(1), s(0)))

block13178(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump13178(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13286(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump13290(s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	neq(s(5), 0)
	call(block13337(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13290(s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	eq(s(5), 0)
	call(block13333(s(4), s(3), s(2), s(1), s(0)))

block13290(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l11) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump13290(s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13333(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block13337(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = g(teamSize)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block13350(s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13350(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	geq(s(6), s(5))
	call(block13629(s(4), s(3), s(2), s(1), s(0)))

jump13350(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	lt(s(6), s(5))
	call(block13359(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

block13350(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	nop(DUP2)
	call(jump13350(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13359(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	s(5) = s(2)
	nop(DUP3)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(teamSize)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump13359(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13359(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	lt(s(9), s(8))
	call(block13374(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13359(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	geq(s(9), s(8))
	call(block13373(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13373(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13374(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	neq(s(6), s(5))
	call(block13616(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

jump13374(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	eq(s(6), s(5))
	call(block13392(s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10), l(l0), caller))

block13374(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump13374(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13392(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	s(5) = s(2)
	nop(DUP3)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 24920428316186323333159289829049134121935754159477098158956223700460028932218
	nop(PUSH32)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(teamSize)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump13392(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13392(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	lt(s(8), s(7))
	call(block13474(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10)))

jump13392(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	geq(s(8), s(7))
	call(block13473(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13473(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13474(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	lt(s(8), s(7))
	call(block13506(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(teamSize), l(l11), l(l10)))

jump13474(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	geq(s(8), s(7))
	call(block13505(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13474(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	s(5) = 4
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(teamSize)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump13474(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13505(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13506(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(teamSize)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump13506(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13506(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	lt(s(9), s(8))
	call(block13532(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10)))

jump13506(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10))=>
	geq(s(9), s(8))
	call(block13531(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13531(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13532(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l10) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 13563
	nop(PUSH2)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 16327
	nop(PUSH2)
	call(block16327_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block13563(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 255
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 13630
	nop(PUSH2)
	call(block13630(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block13616(s(4), s(3), s(2), s(1), s(0), g(teamSize), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 13350
	nop(PUSH2)
	call(block13350(s(4),s(3),s(2),s(1),s(0),g(teamSize), l(l11), l(l10), l(l0), caller))
	nop(JUMP)

block13629(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block13630(s(4),s(3),s(2),s(1),s(0)))

block13630(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2116(s(0)))
	nop(JUMP)

block13635(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump13635(s(5),s(4),s(3),s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13635(s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block13653(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump13635(s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block13647(s(4), s(3), s(2), s(1), s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))

block13647(s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(battleFee)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block13653(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

block13653(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump13653(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13653(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block13664(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump13653(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block13660(s(3), s(2), s(1), s(0)))

block13660(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13664(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2161(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13694(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump13694(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13694(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block13712(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump13694(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block13706(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block13706(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block13712(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

jump13712(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block13723(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump13712(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block13719(s(3), s(2), s(1), s(0)))

block13712(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump13712(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13719(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block13723(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 2
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2226(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block13766(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 13776
	nop(PUSH2)
	s(12) = 16596
	nop(PUSH2)
	call(block16596(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(JUMP)

block13776(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(14) = gt(s(15), s(14))
	nop(GT)
	s(15) = s(14)
	nop(DUP1)
	call(jump13776(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13776(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(15), 0)
	call(block13796(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump13776(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(15), 0)
	call(block13790(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

block13790(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(POP)
	s(14) = 7
	nop(PUSH1)
	s(14) = g(newTypeID)
	nop(SLOAD)
	s(15) = s(9)
	nop(DUP6)
	s(14) = lt(s(15), s(14))
	nop(LT)
	call(block13796(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

block13796(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	call(jump13796(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13796(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(14), 0)
	call(block13807(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))

jump13796(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(14), 0)
	call(block13803(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13803(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

block13807(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(14) = 11
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = s(15)
	nop(DUP2)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l11) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 192
	nop(PUSH1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 64
	nop(PUSH1)
	l(l0) = s(16)
	nop(MSTORE)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 2
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(2)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 3
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(3)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(4)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 5
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	gl = s(18)
	s(18) = fresh(5)
	nop(SLOAD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 256
	nop(PUSH2)
	s(18) = s(19)^s(18)
	nop(EXP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(18) = 255
	nop(PUSH1)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(6)
	nop(MLOAD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 96
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(7)
	nop(MLOAD)
	s(15) = timestamp
	nop(TIMESTAMP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 128
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	ll = s(15)
	s(15) = fresh(8)
	nop(MLOAD)
	s(16) = s(11)
	nop(DUP5)
	s(17) = 64
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	ll = s(16)
	s(16) = fresh(9)
	nop(MLOAD)
	s(17) = s(11)
	nop(DUP6)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	ll = s(17)
	s(17) = fresh(10)
	nop(MLOAD)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	nop(DUP2)
	call(jump13807(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13807(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	neq(s(17), 0)
	call(block13956(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump13807(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	eq(s(17), 0)
	call(block13955(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13955(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13956(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	eq(s(15), 1 )
	call(block13979(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump13956(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	neq(s(15), 1 )
	call(block13975(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

block13956(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 64
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(0)
	nop(MLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = lt(s(15), s(14))
	nop(LT)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 13979
	nop(PUSH2)
	call(jump13956(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(JUMPI)

block13975(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(14) = gt(s(15), s(14))
	nop(GT)
	call(block13979(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump13979(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	eq(s(14), 0)
	call(block13996(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

jump13979(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	neq(s(14), 0)
	call(block13985(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

block13979(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	call(jump13979(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13985(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	s(14) = s(11)
	nop(DUP3)
	s(15) = 64
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(0)
	nop(MLOAD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = 14002
	nop(PUSH2)
	call(block14002(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(JUMP)

block13996(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	call(block14002(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))

block14002(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(10)
	s(10) = s(14)
	s(14) = s(15)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block5813(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue))
	nop(JUMP)

jump14013(s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), caller)=>
	eq(s(4), s(3))
	call(block14105(s(2), s(1), s(0),g(tournamentTaxRate)))

jump14013(s(4), s(3), s(2), s(1), s(0), g(owner), g(tournamentTaxRate), caller)=>
	neq(s(4), s(3))
	call(block14101(s(2), s(1), s(0)))

block14013(s(2), s(1), s(0), g(owner), g(tournamentTaxRate), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump14013(s(4),s(3),s(2),s(1),s(0),g(owner), g(tournamentTaxRate), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14101(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block14105(s(2), s(1), s(0), g(tournamentTaxRate))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = gt(s(4), s(3))
	nop(GT)
	s(4) = s(3)
	nop(DUP1)
	call(jump14105(s(4),s(3),s(2),s(1),s(0),g(tournamentTaxRate)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14105(s(4), s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	eq(s(4), 0)
	call(block14127(s(3), s(2), s(1), s(0),g(tournamentTaxRate)))

jump14105(s(4), s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	neq(s(4), 0)
	call(block14119(s(3), s(2), s(1), s(0),g(tournamentTaxRate)))

block14119(s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	nop(POP)
	s(3) = 100
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = lt(s(4), s(3))
	nop(LT)
	call(block14127(s(3),s(2),s(1),s(0),g(tournamentTaxRate)))

jump14127(s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	neq(s(3), 0)
	call(block14138(s(2), s(1), s(0),g(tournamentTaxRate)))

jump14127(s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	eq(s(3), 0)
	call(block14134(s(2), s(1), s(0)))

block14127(s(3), s(2), s(1), s(0), g(tournamentTaxRate))=>
	nop(JUMPDEST)
	call(jump14127(s(3),s(2),s(1),s(0),g(tournamentTaxRate)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14134(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block14138(s(2), s(1), s(0), g(tournamentTaxRate))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(tournamentTaxRate)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(tournamentTaxRate) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2363(s(0)))
	nop(JUMP)

block14168(s(1), s(0), g(balances), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(balances)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2386(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block14190(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(6) = gt(s(7), s(6))
	nop(GT)
	s(7) = s(6)
	nop(DUP1)
	call(jump14190(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14190(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block14211(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14190(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block14205(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14205(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 6
	nop(PUSH1)
	s(6) = g(battleTeams)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block14211(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	call(jump14211(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(6), 0)
	call(block14222(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14211(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(6), 0)
	call(block14218(s(5), s(4), s(3), s(2), s(1), s(0)))

block14218(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14222(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump14222(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), s(6))
	call(block14334(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), s(6))
	call(block14330(s(5), s(4), s(3), s(2), s(1), s(0)))

block14330(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14334(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 4
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump14334(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14334(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(7), 0)
	call(block14405(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14334(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(7), 0)
	call(block14378(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14378(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 5
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	call(block14405(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14405(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	call(jump14405(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14405(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(6), 0)
	call(block14416(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14405(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(6), 0)
	call(block14412(s(5), s(4), s(3), s(2), s(1), s(0)))

block14412(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump14416(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(6), 0)
	call(block14464(s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14416(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(6), 0)
	call(block14460(s(5), s(4), s(3), s(2), s(1), s(0)))

block14416(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump14416(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14460(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14464(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 8
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 16
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 14545
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 14920
	nop(PUSH2)
	call(block14920(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(JUMP)

block14545(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump14545(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	geq(s(7), s(6))
	call(block14585(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump14545(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	lt(s(7), s(6))
	call(block14581(s(5), s(4), s(3), s(2), s(1), s(0)))

block14581(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14585(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump14585(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	gt(s(7), s(6))
	call(block14600(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump14585(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	leq(s(7), s(6))
	call(block14596(s(5), s(4), s(3), s(2), s(1), s(0)))

block14596(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump14600(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	neq(s(6), 0)
	call(block14718(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller))

jump14600(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	eq(s(6), 0)
	call(block14714(s(5), s(4), s(3), s(2), s(1), s(0)))

block14600(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l10) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l11) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(jump14600(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14714(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block14718(s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 3
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 94900711957580563231810333125322369571294626208938603793522260446667368566731
	nop(PUSH32)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l3) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2457(s(0)))
	nop(JUMP)

jump14829(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block14847(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump14829(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block14841(s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block14829(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump14829(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14841(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block14847(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

jump14847(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block14858(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump14847(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block14854(s(3), s(2), s(1), s(0)))

block14847(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump14847(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14854(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block14858(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 2
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2502(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump14920(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(14), 0)
	call(block14945(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14920(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(14), 0)
	call(block14939(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14920(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 0
	nop(PUSH1)
	s(13) = lt(s(14), s(13))
	nop(LT)
	s(14) = s(13)
	nop(DUP1)
	call(jump14920(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14939(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(POP)
	s(13) = 6
	nop(PUSH1)
	s(13) = g(battleTeams)
	nop(SLOAD)
	s(14) = s(7)
	nop(DUP7)
	s(13) = lt(s(14), s(13))
	nop(LT)
	call(block14945(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

block14945(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	call(jump14945(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14945(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	neq(s(13), 0)
	call(block14956(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))

jump14945(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	eq(s(13), 0)
	call(block14952(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14952(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

block14956(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller)=>
	nop(JUMPDEST)
	s(13) = 9
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(9)
	s(9) = s(13)
	s(13) = s(14)
	nop(SWAP4)
	nop(POP)
	s(13) = 8
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	s(13) = 9
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 3
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 8
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 3
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 16
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(8)
	s(8) = s(13)
	s(13) = s(14)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block14545(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0), address, balance, caller))
	nop(JUMP)

block15094(s(1), s(0), g(battleTeams), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(battleTeams)
	nop(SLOAD)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2654(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block15107(s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 12
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2741(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block15180(s(1), s(0), g(tournamentTaxRate), callvalue)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = callvalue
	nop(CALLVALUE)
	call(jump15180(s(3),s(2),s(1),s(0),g(tournamentTaxRate), callvalue))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15180(s(3), s(2), s(1), s(0), g(tournamentTaxRate), callvalue)=>
	gt(s(3), s(2))
	call(block15195(s(1), s(0),g(tournamentTaxRate), callvalue))

jump15180(s(3), s(2), s(1), s(0), g(tournamentTaxRate), callvalue)=>
	leq(s(3), s(2))
	call(block15191(s(1), s(0)))

block15191(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block15195(s(1), s(0), g(tournamentTaxRate), callvalue)=>
	nop(JUMPDEST)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(6) = g(tournamentTaxRate)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(tournamentTaxRate) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block2771(s(0)))
	nop(JUMP)

jump15213(s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(5), 0)
	call(block15231(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump15213(s(5), s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(5), 0)
	call(block15225(s(4), s(3), s(2), s(1), s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))

block15213(s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(4) = gt(s(5), s(4))
	nop(GT)
	s(5) = s(4)
	nop(DUP1)
	call(jump15213(s(5),s(4),s(3),s(2),s(1),s(0),g(battleFee), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15225(s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(battleFee)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(4) = lt(s(5), s(4))
	nop(LT)
	call(block15231(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

jump15231(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(4), 0)
	call(block15242(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump15231(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(4), 0)
	call(block15238(s(3), s(2), s(1), s(0)))

block15231(s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump15231(s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15238(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15242(s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(4) = 8
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l10) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l11) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 16
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 4294967295
	nop(PUSH4)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2816(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block15294(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15294(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15294(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block15386(s(2), s(1), s(0),g(owner)))

jump15294(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block15382(s(2), s(1), s(0)))

block15382(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15386(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2903(s(0)))
	nop(JUMP)

block15454(s(1), s(0), g(tournamentAmt), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(3) = g(tournamentAmt)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block2926(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

jump15464(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block15556(s(2), s(1), s(0),g(owner)))

jump15464(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block15552(s(2), s(1), s(0)))

block15464(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15464(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15552(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15556(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15556(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15556(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	gt(s(4), s(3))
	call(block15574(s(2), s(1), s(0),g(owner)))

jump15556(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	leq(s(4), s(3))
	call(block15570(s(2), s(1), s(0)))

block15570(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15574(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2994(s(0)))
	nop(JUMP)

block15604(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 10
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(13)
	nop(DUP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	call(block15681(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))

jump15681(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	geq(s(14), s(13))
	call(block16150(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

jump15681(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	lt(s(14), s(13))
	call(block15690(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

block15681(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	nop(DUP2)
	call(jump15681(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15690(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	lt(s(17), s(16))
	call(block15766(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15690(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	geq(s(17), s(16))
	call(block15765(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15690(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	s(13) = s(10)
	nop(DUP3)
	s(14) = 10
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l11) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	call(jump15690(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15765(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15766(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 0
	nop(PUSH1)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	call(jump15766(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15766(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	neq(s(14), s(13))
	call(block16137(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15766(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	eq(s(14), s(13))
	call(block15784(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15784(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	lt(s(16), s(15))
	call(block15859(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15784(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	geq(s(16), s(15))
	call(block15858(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15784(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	s(13) = 10
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	call(jump15784(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15858(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump15859(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	lt(s(16), s(15))
	call(block15952(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15859(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	geq(s(16), s(15))
	call(block15951(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block15859(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	s(13) = 10
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l11) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	nop(DUP2)
	call(jump15859(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15951(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block15952(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 0
	nop(PUSH1)
	l(l10) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = 10
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l11) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	call(jump15952(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15952(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	lt(s(17), s(16))
	call(block16039(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller))

jump15952(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	geq(s(17), s(16))
	call(block16038(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16038(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16039(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 0
	nop(PUSH1)
	l(l10) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = 10
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l11) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = s(13)
	nop(DUP2)
	s(16) = 16131
	nop(PUSH2)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 16327
	nop(PUSH2)
	call(block16327(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l10), l(l0), caller))
	nop(JUMP)

block16131(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = 16151
	nop(PUSH2)
	call(block16151(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16137(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 15681
	nop(PUSH2)
	call(block15681(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l0), caller))
	nop(JUMP)

block16150(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	call(block16151(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))

block16151(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block6665(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16157(s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(4) = 128
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block3004(s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block16192(s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(5) = 256
	nop(PUSH2)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block3012(s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block16292(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(6) = 128
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(9)
	nop(DUP1)
	s(11) = codesize
	nop(CODESIZE)
	s(12) = s(8)
	nop(DUP4)
	nop(CODECOPY)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block3020(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize))
	nop(JUMP)

block16327(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0), caller)=>
	nop(JUMPDEST)
	s(17) = s(15)
	nop(DUP2)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(15)
	nop(DUP4)
	gs(1) = s(19)
	gs(2) = s(18)
	nop(SSTORE)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	nop(DUP2)
	call(jump16327(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l10), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16327(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0), caller)=>
	leq(s(19), s(18))
	call(block16366(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

jump16327(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0), caller)=>
	gt(s(19), s(18))
	call(block16341(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0), caller))

block16341(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10), l(l0), caller)=>
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 0
	nop(PUSH1)
	l(l10) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(20) = 0
	nop(PUSH1)
	s(19) = sha3(s(20), s(19))
	nop(SHA3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(17)
	nop(DUP3)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 16365
	nop(PUSH2)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 16653
	nop(PUSH2)
	call(block16653(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16365(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	call(block16366(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))

block16366(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block16131(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16371(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 4
	nop(PUSH1)
	s(14) = 31
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 32
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	nop(DUP3)
	call(jump16371(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16371(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	eq(s(14), 0)
	call(block16508(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

jump16371(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	neq(s(14), 0)
	call(block16391(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16391(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	call(block16399(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

jump16399(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	leq(s(16), s(15))
	call(block16461(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

jump16399(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	gt(s(16), s(15))
	call(block16408(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16399(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(13)
	nop(DUP3)
	call(jump16399(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16408(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	s(15) = s(11)
	nop(DUP4)
	s(15) = l(l15)
	nop(MLOAD)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(14)
	nop(DUP3)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	nop(DUP2)
	gl = s(18)
	s(18) = fresh(0)
	nop(SLOAD)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 255
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 255
	nop(PUSH1)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gs(1) = s(17)
	gs(2) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 0
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = 16399
	nop(PUSH2)
	call(block16399(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

jump16461(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	eq(s(15), 0)
	call(block16506(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

jump16461(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	neq(s(15), 0)
	call(block16468(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16461(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	call(jump16461(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16468(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	nop(DUP2)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 32
	nop(PUSH1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 0
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = 16461
	nop(PUSH2)
	call(block16461(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block16506(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	call(block16508(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16508(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 16521
	nop(PUSH2)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 16690
	nop(PUSH2)
	call(block16690(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block16521(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block10275(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block16525(s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	s(4) = 96
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 3
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block11058(s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp))
	nop(JUMP)

block16560(s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(4) = 256
	nop(PUSH2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 8
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block11378(s(3),s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize))
	nop(JUMP)

block16596(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(12) = 192
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 64
	nop(PUSH1)
	l(l0) = s(13)
	nop(MSTORE)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block13776(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(balances), g(newTypeID), g(owner), g(tournamentTaxRate), l(l11), l(l10), l(l0), caller, callvalue, timestamp))
	nop(JUMP)

block16653(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	s(20) = 16687
	nop(PUSH2)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	call(block16659(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))

jump16659(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	leq(s(22), s(21))
	call(block16683(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

jump16659(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	gt(s(22), s(21))
	call(block16668(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller))

block16659(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	call(jump16659(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16668(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	s(21) = 0
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	gs(1) = s(23)
	gs(2) = s(22)
	nop(SSTORE)
	nop(POP)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 16659
	nop(PUSH2)
	call(block16659(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16683(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	call(block16687(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16687(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller)=>
	nop(JUMPDEST)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block16365(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller))
	nop(JUMP)

block16690(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(13) = 16735
	nop(PUSH2)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	call(block16696(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16696(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	call(jump16696(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16696(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	leq(s(15), s(14))
	call(block16731(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

jump16696(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	gt(s(15), s(14))
	call(block16705(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))

block16705(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	nop(DUP2)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	nop(POP)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 16696
	nop(PUSH2)
	call(block16696(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block16731(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block16735(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block16735(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller)=>
	nop(JUMPDEST)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block16521(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(owner), g(tournamentTaxRate), l(l27), l(l26), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l7), l(l5), l(l0), caller))
	nop(JUMP)

block13766_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 13776
	nop(PUSH2)
	s(9) = 16596
	nop(PUSH2)
	call(block16596_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block13766_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 13776
	nop(PUSH2)
	s(12) = 16596
	nop(PUSH2)
	call(block16596_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(JUMP)

block13766_2(s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 13776
	nop(PUSH2)
	s(5) = 16596
	nop(PUSH2)
	call(block16596_2(s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block13776_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(11) = gt(s(12), s(11))
	nop(GT)
	s(12) = s(11)
	nop(DUP1)
	call(jump13776_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13776_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(12), 0)
	call(block13796_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

jump13776_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(12), 0)
	call(block13790_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))

block13776_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(14) = gt(s(15), s(14))
	nop(GT)
	s(15) = s(14)
	nop(DUP1)
	call(jump13776_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13776_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	eq(s(15), 0)
	call(block13796_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

jump13776_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	neq(s(15), 0)
	call(block13790_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

block13776_2(s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(7) = gt(s(8), s(7))
	nop(GT)
	s(8) = s(7)
	nop(DUP1)
	call(jump13776_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13776_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(8), 0)
	call(block13796_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

jump13776_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(8), 0)
	call(block13790_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))

block13790_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(POP)
	s(11) = 7
	nop(PUSH1)
	s(11) = g(newTypeID)
	nop(SLOAD)
	s(12) = s(6)
	nop(DUP6)
	s(11) = lt(s(12), s(11))
	nop(LT)
	call(block13796_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

block13790_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(POP)
	s(14) = 7
	nop(PUSH1)
	s(14) = g(newTypeID)
	nop(SLOAD)
	s(15) = s(9)
	nop(DUP6)
	s(14) = lt(s(15), s(14))
	nop(LT)
	call(block13796_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

block13790_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(POP)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(newTypeID)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = lt(s(8), s(7))
	nop(LT)
	call(block13796_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

block13796_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump13796_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13796_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(11), 0)
	call(block13807_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

jump13796_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(11), 0)
	call(block13803_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13796_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump13796_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13796_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	neq(s(14), 0)
	call(block13807_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))

jump13796_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	eq(s(14), 0)
	call(block13803_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13796_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	call(jump13796_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13796_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(7), 0)
	call(block13807_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp))

jump13796_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(7), 0)
	call(block13803_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13803_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block13803_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

block13803_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump13807_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(14), 0)
	call(block13956_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13807_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(14), 0)
	call(block13955_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13807_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(11) = 11
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	nop(DUP7)
	s(14) = s(12)
	nop(DUP2)
	l(l10) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l11) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 192
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 64
	nop(PUSH1)
	l(l0) = s(13)
	nop(MSTORE)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 1
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 2
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(2)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 3
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(3)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 4
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	gl = s(14)
	s(14) = fresh(4)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 5
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gl = s(15)
	s(15) = fresh(5)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	ll = s(11)
	s(11) = fresh(6)
	nop(MLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 96
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	ll = s(11)
	s(11) = fresh(7)
	nop(MLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 128
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	ll = s(12)
	s(12) = fresh(8)
	nop(MLOAD)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	ll = s(13)
	s(13) = fresh(9)
	nop(MLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(10)
	nop(MLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	call(jump13807_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13807_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(14) = 11
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = s(15)
	nop(DUP2)
	l(l10) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l11) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 192
	nop(PUSH1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 64
	nop(PUSH1)
	l(l0) = s(16)
	nop(MSTORE)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 2
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(2)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 3
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(3)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	gl = s(17)
	s(17) = fresh(4)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 5
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	gl = s(18)
	s(18) = fresh(5)
	nop(SLOAD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 256
	nop(PUSH2)
	s(18) = s(19)^s(18)
	nop(EXP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(18) = 255
	nop(PUSH1)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(6)
	nop(MLOAD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 96
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(7)
	nop(MLOAD)
	s(15) = timestamp
	nop(TIMESTAMP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 128
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	ll = s(15)
	s(15) = fresh(8)
	nop(MLOAD)
	s(16) = s(11)
	nop(DUP5)
	s(17) = 64
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	ll = s(16)
	s(16) = fresh(9)
	nop(MLOAD)
	s(17) = s(11)
	nop(DUP6)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	ll = s(17)
	s(17) = fresh(10)
	nop(MLOAD)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	nop(DUP2)
	call(jump13807_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13807_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	neq(s(17), 0)
	call(block13956_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

jump13807_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	eq(s(17), 0)
	call(block13955_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13807_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(7) = 11
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l10) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l11) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 192
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 2
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(2)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(3)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 4
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	gl = s(10)
	s(10) = fresh(4)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 5
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(5)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(9)
	nop(DUP2)
	ls(1) = s(10)
	ls(2) = s(11)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(6)
	nop(MLOAD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 96
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(7)
	nop(MLOAD)
	s(8) = timestamp
	nop(TIMESTAMP)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 128
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	ll = s(8)
	s(8) = fresh(8)
	nop(MLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	ll = s(9)
	s(9) = fresh(9)
	nop(MLOAD)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	ll = s(10)
	s(10) = fresh(10)
	nop(MLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	call(jump13807_2(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13807_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	neq(s(10), 0)
	call(block13956_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13807_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	eq(s(10), 0)
	call(block13955_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13955_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13955_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13955_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13956_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 64
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	ll = s(11)
	s(11) = fresh(0)
	nop(MLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 13979
	nop(PUSH2)
	call(jump13956_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(JUMPI)

jump13956_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	eq(s(12), 1 )
	call(block13979_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13956_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	neq(s(12), 1 )
	call(block13975_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13956_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	eq(s(15), 1 )
	call(block13979_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

jump13956_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	neq(s(15), 1 )
	call(block13975_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

block13956_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 64
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(0)
	nop(MLOAD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(14) = lt(s(15), s(14))
	nop(LT)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 13979
	nop(PUSH2)
	call(jump13956_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))
	nop(JUMPI)

block13956_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 64
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = lt(s(8), s(7))
	nop(LT)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 13979
	nop(PUSH2)
	call(jump13956_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(JUMPI)

jump13956_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	eq(s(8), 1 )
	call(block13979_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13956_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	neq(s(8), 1 )
	call(block13975_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

block13975_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(11) = gt(s(12), s(11))
	nop(GT)
	call(block13979_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))

block13975_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	nop(DUP2)
	s(14) = gt(s(15), s(14))
	nop(GT)
	call(block13979_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

block13975_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(7) = gt(s(8), s(7))
	nop(GT)
	call(block13979_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))

block13979_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	call(jump13979_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13979_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	eq(s(11), 0)
	call(block13996_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13979_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	neq(s(11), 0)
	call(block13985_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

block13979_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	call(jump13979_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13979_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	eq(s(14), 0)
	call(block13996_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

jump13979_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	neq(s(14), 0)
	call(block13985_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

block13979_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	call(jump13979_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13979_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	eq(s(7), 0)
	call(block13996_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

jump13979_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	neq(s(7), 0)
	call(block13985_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0)))

block13985_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	s(11) = s(8)
	nop(DUP3)
	s(12) = 64
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	ll = s(11)
	s(11) = fresh(0)
	nop(MLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 14002
	nop(PUSH2)
	call(block14002_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(JUMP)

block13985_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	s(14) = s(11)
	nop(DUP3)
	s(15) = 64
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	ll = s(14)
	s(14) = fresh(0)
	nop(MLOAD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	s(14) = 14002
	nop(PUSH2)
	call(block14002_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))
	nop(JUMP)

block13985_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	s(7) = s(4)
	nop(DUP3)
	s(8) = 64
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	ll = s(7)
	s(7) = fresh(0)
	nop(MLOAD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 14002
	nop(PUSH2)
	call(block14002_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(JUMP)

block13996_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	call(block14002_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))

block13996_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	call(block14002_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))

block13996_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block14002_2(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))

block14002_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	call(block7201(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l0)))
	nop(JUMP)

block14002_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0))=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(10)
	s(10) = s(14)
	s(14) = s(15)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block11133(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0)))
	nop(JUMP)

block14002_2(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2295(s(1),s(0), l(l7), l(l0)))
	nop(JUMP)

jump14920_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(9), 0)
	call(block14945_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump14920_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(9), 0)
	call(block14939_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))

block14920_0(s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 0
	nop(PUSH1)
	s(8) = lt(s(9), s(8))
	nop(LT)
	s(9) = s(8)
	nop(DUP1)
	call(jump14920_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14939_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l3), l(l0))=>
	nop(POP)
	s(8) = 6
	nop(PUSH1)
	s(8) = g(battleTeams)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = lt(s(9), s(8))
	nop(LT)
	call(block14945_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))

block14945_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	call(jump14945_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10), l(l3), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14945_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	neq(s(8), 0)
	call(block14956_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0)))

jump14945_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	eq(s(8), 0)
	call(block14952_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14952_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block14956_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10), l(l3), l(l0))=>
	nop(JUMPDEST)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 8
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(9)
	nop(DUP2)
	l(l10) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l11) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 16
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(3)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2611(s(1),s(0), l(l3), l(l0)))
	nop(JUMP)

block16157_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(7) = 128
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	l(l0) = s(8)
	nop(MSTORE)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 4
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(10)
	nop(DUP1)
	s(12) = codesize
	nop(CODESIZE)
	s(13) = s(9)
	nop(DUP4)
	nop(CODECOPY)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3028(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l2), l(l1), l(l0)))
	nop(JUMP)

block16157_1(s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(4) = 128
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block7217(s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block16157_2(s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(5) = 128
	nop(PUSH1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 4
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(8)
	nop(DUP1)
	s(10) = codesize
	nop(CODESIZE)
	s(11) = s(7)
	nop(DUP4)
	nop(CODECOPY)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block7225(s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block16157_3(s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize)=>
	nop(JUMPDEST)
	s(6) = 128
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(9)
	nop(DUP1)
	s(11) = codesize
	nop(CODESIZE)
	s(12) = s(8)
	nop(DUP4)
	nop(CODECOPY)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block7233(s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(tournamentAmt), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), caller, callvalue, codesize))
	nop(JUMP)

block16157_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 128
	nop(PUSH1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 64
	nop(PUSH1)
	l(l0) = s(16)
	nop(MSTORE)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(18)
	nop(DUP1)
	s(20) = codesize
	nop(CODESIZE)
	s(21) = s(17)
	nop(DUP4)
	nop(CODECOPY)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	call(block3004_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16157_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 128
	nop(PUSH1)
	s(19) = 64
	nop(PUSH1)
	s(19) = l(l0)
	nop(MLOAD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = 64
	nop(PUSH1)
	l(l0) = s(19)
	nop(MSTORE)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(22) = s(21)
	nop(DUP1)
	s(23) = codesize
	nop(CODESIZE)
	s(24) = s(20)
	nop(DUP4)
	nop(CODECOPY)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block3028_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16157_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 128
	nop(PUSH1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 64
	nop(PUSH1)
	l(l0) = s(16)
	nop(MSTORE)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 4
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(18)
	nop(DUP1)
	s(20) = codesize
	nop(CODESIZE)
	s(21) = s(17)
	nop(DUP4)
	nop(CODECOPY)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	call(block3004_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16157_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 128
	nop(PUSH1)
	s(19) = 64
	nop(PUSH1)
	s(19) = l(l0)
	nop(MLOAD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = 64
	nop(PUSH1)
	l(l0) = s(19)
	nop(MSTORE)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 32
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(22) = s(21)
	nop(DUP1)
	s(23) = codesize
	nop(CODESIZE)
	s(24) = s(20)
	nop(DUP4)
	nop(CODECOPY)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block3028_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16192_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(16) = 256
	nop(PUSH2)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 64
	nop(PUSH1)
	l(l0) = s(17)
	nop(MSTORE)
	s(17) = s(16)
	nop(DUP1)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	call(block3012_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16192_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(16) = 256
	nop(PUSH2)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 64
	nop(PUSH1)
	l(l0) = s(17)
	nop(MSTORE)
	s(17) = s(16)
	nop(DUP1)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	call(block3012_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16292_0(s(3), s(2), s(1), s(0), g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0), codesize)=>
	nop(JUMPDEST)
	s(4) = 128
	nop(PUSH1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(7)
	nop(DUP1)
	s(9) = codesize
	nop(CODESIZE)
	s(10) = s(6)
	nop(DUP4)
	nop(CODECOPY)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block6962(s(3),s(2),s(1),s(0),g(battleTeams), l(l11), l(l10), l(l6), l(l5), l(l0)))
	nop(JUMP)

block16292_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(17) = 128
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(17)
	nop(DUP2)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 64
	nop(PUSH1)
	l(l0) = s(18)
	nop(MSTORE)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 4
	nop(PUSH1)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(20)
	nop(DUP1)
	s(22) = codesize
	nop(CODESIZE)
	s(23) = s(19)
	nop(DUP4)
	nop(CODECOPY)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	call(block3020_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block16292_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(17) = 128
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(17)
	nop(DUP2)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 64
	nop(PUSH1)
	l(l0) = s(18)
	nop(MSTORE)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 4
	nop(PUSH1)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 32
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(20)
	nop(DUP1)
	s(22) = codesize
	nop(CODESIZE)
	s(23) = s(19)
	nop(DUP4)
	nop(CODECOPY)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	call(block3020_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

jump16327_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10))=>
	leq(s(18), s(17))
	call(block16366_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16327_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10))=>
	gt(s(18), s(17))
	call(block16341_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10)))

block16327_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10))=>
	nop(JUMPDEST)
	s(16) = s(14)
	nop(DUP2)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(14)
	nop(DUP4)
	gs(1) = s(18)
	gs(2) = s(17)
	nop(SSTORE)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	nop(DUP2)
	call(jump16327_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l10)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16327_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	leq(s(11), s(10))
	call(block16366_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10)))

jump16327_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	gt(s(11), s(10))
	call(block16341_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10)))

block16327_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	call(jump16327_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16341_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l10))=>
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(14)
	nop(DUP4)
	s(19) = 0
	nop(PUSH1)
	l(l10) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(16)
	nop(DUP3)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 16365
	nop(PUSH2)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 16653
	nop(PUSH2)
	call(block16653_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16341_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 0
	nop(PUSH1)
	l(l10) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 16365
	nop(PUSH2)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 16653
	nop(PUSH2)
	call(block16653_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block16365_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block16366_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block16365_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	call(block16366_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))

block16366_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block9437(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16366_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block13563(s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block16525_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), codesize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 96
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 3
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(11)
	nop(DUP1)
	s(13) = codesize
	nop(CODESIZE)
	s(14) = s(10)
	nop(DUP4)
	nop(CODECOPY)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	call(block11071(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(JUMP)

block16560_0(s(4), s(3), s(2), s(1), s(0), g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0), codesize)=>
	nop(JUMPDEST)
	s(5) = 256
	nop(PUSH2)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 8
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(8)
	nop(DUP1)
	s(10) = codesize
	nop(CODESIZE)
	s(11) = s(7)
	nop(DUP4)
	nop(CODECOPY)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block11386(s(4),s(3),s(2),s(1),s(0),g(battleFee), l(l29), l(l28), l(l27), l(l26), l(l25), l(l24), l(l11), l(l10), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block16596_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(9) = 192
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	l(l0) = s(10)
	nop(MSTORE)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(10)
	nop(DUP2)
	ls(1) = s(11)
	ls(2) = s(12)
	nop(MSTORE)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block13776_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block16596_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = 192
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 64
	nop(PUSH1)
	l(l0) = s(13)
	nop(MSTORE)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(14)= eq(s(14), 0)
	nop(ISZERO)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	nop(POP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block13776_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l13), l(l11), l(l10), l(l9), l(l8), l(l5), l(l0), timestamp))
	nop(JUMP)

block16596_2(s(4), s(3), s(2), s(1), s(0), g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = 192
	nop(PUSH1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(6)
	nop(DUP2)
	ls(1) = s(7)
	ls(2) = s(8)
	nop(MSTORE)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block13776_2(s(4),s(3),s(2),s(1),s(0),g(newTypeID), l(l11), l(l10), l(l7), l(l0), timestamp))
	nop(JUMP)

block16653_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(19) = 16687
	nop(PUSH2)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	call(block16659_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block16653_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(12) = 16687
	nop(PUSH2)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	call(block16659_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))

jump16659_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	leq(s(21), s(20))
	call(block16683_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump16659_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	gt(s(21), s(20))
	call(block16668_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16659_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	call(jump16659_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16659_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	call(jump16659_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16659_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	leq(s(14), s(13))
	call(block16683_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10)))

jump16659_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	gt(s(14), s(13))
	call(block16668_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10)))

block16668_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(20) = 0
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	s(22) = 0
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gs(1) = s(22)
	gs(2) = s(21)
	nop(SSTORE)
	nop(POP)
	s(20) = 1
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = 16659
	nop(PUSH2)
	call(block16659_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16668_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 16659
	nop(PUSH2)
	call(block16659_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block16683_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block16687_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16683_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	nop(POP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	call(block16687_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block16687_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	call(block16365_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block16687_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l11), l(l10))=>
	nop(JUMPDEST)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block16365_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l11), l(l10)))
	nop(JUMP)

block2996_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 3004
	nop(PUSH2)
	s(15) = 16157
	nop(PUSH2)
	call(block16157_4(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block2996_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(14) = 3004
	nop(PUSH2)
	s(15) = 16157
	nop(PUSH2)
	call(block16157_6(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3004_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 3012
	nop(PUSH2)
	s(16) = 16192
	nop(PUSH2)
	call(block16192_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3004_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(15) = 3012
	nop(PUSH2)
	s(16) = 16192
	nop(PUSH2)
	call(block16192_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3012_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(16) = 3020
	nop(PUSH2)
	s(17) = 16292
	nop(PUSH2)
	call(block16292_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3012_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(16) = 3020
	nop(PUSH2)
	s(17) = 16292
	nop(PUSH2)
	call(block16292_2(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3020_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(17) = 3028
	nop(PUSH2)
	s(18) = 16157
	nop(PUSH2)
	call(block16157_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3020_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(17) = 3028
	nop(PUSH2)
	s(18) = 16157
	nop(PUSH2)
	call(block16157_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3028_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(13)
	nop(DUP6)
	s(18) = gt(s(19), s(18))
	nop(GT)
	s(19) = s(18)
	nop(DUP1)
	call(jump3028_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3028_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(19), 0)
	call(block3045_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3028_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(19), 0)
	call(block3039_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3028_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(13)
	nop(DUP6)
	s(18) = gt(s(19), s(18))
	nop(GT)
	s(19) = s(18)
	nop(DUP1)
	call(jump3028_1(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3028_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(19), 0)
	call(block3045_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3028_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(19), 0)
	call(block3039_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3039_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(POP)
	s(18) = 6
	nop(PUSH1)
	s(18) = g(battleTeams)
	nop(SLOAD)
	s(19) = s(13)
	nop(DUP6)
	s(18) = lt(s(19), s(18))
	nop(LT)
	call(block3045_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3039_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(POP)
	s(18) = 6
	nop(PUSH1)
	s(18) = g(battleTeams)
	nop(SLOAD)
	s(19) = s(13)
	nop(DUP6)
	s(18) = lt(s(19), s(18))
	nop(LT)
	call(block3045_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3045_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	call(jump3045_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3045_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(18), 0)
	call(block3056_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3045_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(18), 0)
	call(block3052_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump3045_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(18), 0)
	call(block3056_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3045_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(18), 0)
	call(block3052_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3045_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	call(jump3045_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3052_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	nop(REVERT)

block3052_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	nop(REVERT)

block3056_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 8
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(20) = 9
	nop(PUSH1)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(21)
	nop(DUP2)
	l(l10) = s(22)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(20)
	nop(DUP2)
	l(l11) = s(21)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(20) = sha3(s(21), s(20))
	nop(SHA3)
	s(21) = 0
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	gl = s(20)
	s(20) = fresh(0)
	nop(SLOAD)
	s(21) = s(19)
	nop(DUP2)
	l(l10) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	l(l11) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(19) = 256
	nop(PUSH2)
	s(20) = 64
	nop(PUSH1)
	s(20) = l(l0)
	nop(MLOAD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = s(19)
	nop(DUP2)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 64
	nop(PUSH1)
	l(l0) = s(20)
	nop(MSTORE)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(1)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(2)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 2
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(3)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(4)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 4
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(5)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 8
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(6)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 12
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(7)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 16
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(8)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	nop(POP)
	s(18) = 9
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(13)
	nop(DUP7)
	s(21) = s(19)
	nop(DUP2)
	l(l10) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	l(l11) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(19) = 1
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = 64
	nop(PUSH1)
	s(21) = l(l0)
	nop(MLOAD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(20)
	nop(DUP2)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 64
	nop(PUSH1)
	l(l0) = s(21)
	nop(MSTORE)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(18)
	s(18) = s(21)
	s(21) = s(22)
	nop(SWAP3)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(19)
	nop(DUP3)
	s(23) = 4
	nop(PUSH1)
	s(24) = s(23)
	nop(DUP1)
	call(jump3056_0(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3056_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(24), 0)
	call(block3447_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3056_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(24), 0)
	call(block3383_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3056_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = 8
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(20) = 9
	nop(PUSH1)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(21)
	nop(DUP2)
	l(l10) = s(22)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(20)
	nop(DUP2)
	l(l11) = s(21)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(20) = sha3(s(21), s(20))
	nop(SHA3)
	s(21) = 0
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	gl = s(20)
	s(20) = fresh(0)
	nop(SLOAD)
	s(21) = s(19)
	nop(DUP2)
	l(l10) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	l(l11) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(19) = 256
	nop(PUSH2)
	s(20) = 64
	nop(PUSH1)
	s(20) = l(l0)
	nop(MLOAD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = s(19)
	nop(DUP2)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 64
	nop(PUSH1)
	l(l0) = s(20)
	nop(MSTORE)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(1)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(2)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 2
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	gl = s(21)
	s(21) = fresh(3)
	nop(SLOAD)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(4)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 4
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(5)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 8
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(6)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 12
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(7)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 3
	nop(PUSH1)
	s(22) = s(19)
	nop(DUP3)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 16
	nop(PUSH1)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	gl = s(22)
	s(22) = fresh(8)
	nop(SLOAD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(22) = s(20)
	nop(DUP2)
	ls(1) = s(21)
	ls(2) = s(22)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	nop(POP)
	s(18) = 9
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(13)
	nop(DUP7)
	s(21) = s(19)
	nop(DUP2)
	l(l10) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	l(l11) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	s(19) = 1
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = 64
	nop(PUSH1)
	s(21) = l(l0)
	nop(MLOAD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(20)
	nop(DUP2)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 64
	nop(PUSH1)
	l(l0) = s(21)
	nop(MSTORE)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(18)
	s(18) = s(21)
	s(21) = s(22)
	nop(SWAP3)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(19)
	nop(DUP3)
	s(23) = 4
	nop(PUSH1)
	s(24) = s(23)
	nop(DUP1)
	call(jump3056_1(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(24), 0)
	call(block3447_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(24), 0)
	call(block3383_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3383_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	s(24) = 32
	nop(PUSH1)
	s(23) = s(24)*s(23)
	nop(MUL)
	s(24) = s(21)
	nop(DUP3)
	s(23) = s(24)+s(23)
	nop(ADD)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	call(block3392_0(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3383_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	s(24) = 32
	nop(PUSH1)
	s(23) = s(24)*s(23)
	nop(MUL)
	s(24) = s(21)
	nop(DUP3)
	s(23) = s(24)+s(23)
	nop(ADD)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	call(block3392_1(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3392_0(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	gt(s(26), s(25))
	call(block3392_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3392_0(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	leq(s(26), s(25))
	call(block3445_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3392_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	gl = s(26)
	s(26) = fresh(0)
	nop(SLOAD)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	s(27) = 256
	nop(PUSH2)
	s(26) = s(27)^s(26)
	nop(EXP)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(26) = 255
	nop(PUSH1)
	s(25) = and(s(26), s(25))
	nop(AND)
	s(26) = 255
	nop(PUSH1)
	s(25) = and(s(26), s(25))
	nop(AND)
	s(26) = s(24)
	nop(DUP2)
	ls(1) = s(25)
	ls(2) = s(26)
	nop(MSTORE)
	s(25) = 32
	nop(PUSH1)
	s(24) = s(25)+s(24)
	nop(ADD)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 1
	nop(PUSH1)
	s(24) = s(25)+s(24)
	nop(ADD)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 32
	nop(PUSH1)
	s(26) = s(23)
	nop(DUP3)
	s(27) = 0
	nop(PUSH1)
	s(26) = s(27)+s(26)
	nop(ADD)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = s(22)
	nop(DUP4)
	s(25) = s(26)+s(25)
	nop(ADD)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = 1
	nop(PUSH1)
	s(25) = s(26)-s(25)
	nop(SUB)
	s(26) = s(23)
	nop(DUP3)
	s(25) = s(26)*s(25)
	nop(MUL)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	nop(POP)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(21)
	nop(DUP5)
	call(jump3392_0(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block3392_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	gl = s(26)
	s(26) = fresh(0)
	nop(SLOAD)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	s(27) = 256
	nop(PUSH2)
	s(26) = s(27)^s(26)
	nop(EXP)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(26) = 255
	nop(PUSH1)
	s(25) = and(s(26), s(25))
	nop(AND)
	s(26) = 255
	nop(PUSH1)
	s(25) = and(s(26), s(25))
	nop(AND)
	s(26) = s(24)
	nop(DUP2)
	ls(1) = s(25)
	ls(2) = s(26)
	nop(MSTORE)
	s(25) = 32
	nop(PUSH1)
	s(24) = s(25)+s(24)
	nop(ADD)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 1
	nop(PUSH1)
	s(24) = s(25)+s(24)
	nop(ADD)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 32
	nop(PUSH1)
	s(26) = s(23)
	nop(DUP3)
	s(27) = 0
	nop(PUSH1)
	s(26) = s(27)+s(26)
	nop(ADD)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = s(22)
	nop(DUP4)
	s(25) = s(26)+s(25)
	nop(ADD)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = 1
	nop(PUSH1)
	s(25) = s(26)-s(25)
	nop(SUB)
	s(26) = s(23)
	nop(DUP3)
	s(25) = s(26)*s(25)
	nop(MUL)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	nop(POP)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(21)
	nop(DUP5)
	call(jump3392_1(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump3392_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	gt(s(26), s(25))
	call(block3392_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3392_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	leq(s(26), s(25))
	call(block3445_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3445_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	nop(POP)
	call(block3447_1(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3445_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	nop(POP)
	call(block3447_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

block3447_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	s(18) = 4
	nop(PUSH1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 96
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 0
	nop(PUSH1)
	s(22) = 4
	nop(PUSH1)
	s(23) = s(21)
	nop(DUP2)
	call(jump3447_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3447_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(23), s(22))
	call(block3476_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3447_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(23), s(22))
	call(block3475_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump3447_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(23), s(22))
	call(block3476_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3447_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(23), s(22))
	call(block3475_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3447_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	s(18) = 4
	nop(PUSH1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 96
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 0
	nop(PUSH1)
	s(22) = 4
	nop(PUSH1)
	s(23) = s(21)
	nop(DUP2)
	call(jump3447_1(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3475_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3475_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3476_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	ll = s(20)
	s(20) = fresh(0)
	nop(MLOAD)
	s(21) = 255
	nop(PUSH1)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	call(jump3476_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3476_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(20), 0)
	call(block3500_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3476_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(20), 0)
	call(block3499_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump3476_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	neq(s(20), 0)
	call(block3500_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3476_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	eq(s(20), 0)
	call(block3499_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3476_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	ll = s(20)
	s(20) = fresh(0)
	nop(MLOAD)
	s(21) = 255
	nop(PUSH1)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	call(jump3476_1(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3499_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3499_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3500_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3528_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3500_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3527_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3500_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 96
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 0
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3500_0(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3500_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3528_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3500_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3527_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3500_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 96
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(0)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 0
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3500_1(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3527_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3527_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3528_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 1
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3528_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3528_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3552_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3528_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3551_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3528_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 1
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3528_1(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3528_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3552_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3528_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3551_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3551_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3551_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3552_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3587_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3552_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3586_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3552_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 128
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3552_0(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3552_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 128
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3552_1(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3552_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3587_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3552_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3586_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3586_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3586_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3587_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3611_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3587_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3610_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3587_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 2
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3587_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3587_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3611_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3587_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3610_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3587_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 2
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3587_1(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3610_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3610_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3611_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3646_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3611_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3645_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3611_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 160
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 2
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3611_0(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3611_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3646_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3611_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3645_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3611_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 160
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 2
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3611_1(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3645_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3645_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3646_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3670_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3646_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3669_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3646_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 3
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3646_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3646_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 3
	nop(PUSH1)
	s(20) = 4
	nop(PUSH1)
	s(21) = s(19)
	nop(DUP2)
	call(jump3646_1(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3646_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(21), s(20))
	call(block3670_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3646_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(21), s(20))
	call(block3669_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3669_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3669_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump3670_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3705_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3670_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3704_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3670_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 192
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 3
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3670_0(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3670_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	lt(s(22), s(21))
	call(block3705_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))

jump3670_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	geq(s(22), s(21))
	call(block3704_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3670_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(18) = s(19)+s(18)
	nop(ADD)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 255
	nop(PUSH1)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 192
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	ll = s(19)
	s(19) = fresh(1)
	nop(MLOAD)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 3
	nop(PUSH1)
	s(21) = 4
	nop(PUSH1)
	s(22) = s(20)
	nop(DUP2)
	call(jump3670_1(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3704_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3704_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3705_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(14)
	s(14) = s(18)
	s(18) = s(19)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	call(block7915(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block3705_1(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize)=>
	nop(JUMPDEST)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(19)
	nop(DUP2)
	ls(1) = s(20)
	ls(2) = s(21)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(14)
	s(14) = s(18)
	s(18) = s(19)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	call(block8171(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(battleTeams), g(teamSize), g(owner), g(tournamentTaxRate), l(l23), l(l22), l(l21), l(l20), l(l19), l(l18), l(l17), l(l16), l(l15), l(l14), l(l13), l(l12), l(l11), l(l10), l(l8), l(l5), l(l4), l(l3), l(l0), codesize))
	nop(JUMP)

block494_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

