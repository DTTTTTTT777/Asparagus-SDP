{
    "ESH": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ESH()",
            "Mine()",
            "MaxTotalSupply()",
            "MiningReward()",
            "MaxMiningReward()",
            "RewardHalvingTimePeriod()",
            "NextRewardHalving()",
            "RewardTimePeriod()",
            "RewardStart()",
            "RewardEnd()",
            "CurrentMined()",
            "TimeNow()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "ESH()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "Mine()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "MaxTotalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "MiningReward()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "MaxMiningReward()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "RewardHalvingTimePeriod()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "NextRewardHalving()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "RewardTimePeriod()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "RewardStart()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "RewardEnd()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "CurrentMined()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "TimeNow()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "_maxTotalSupply": "uint256",
                    "_miningReward": "uint256",
                    "_maxMiningReward": "uint256",
                    "_rewardHalvingTimePeriod": "uint256",
                    "_nextRewardHalving": "uint256",
                    "_rewardTimePeriod": "uint256",
                    "_rewardStart": "uint256",
                    "_rewardEnd": "uint256",
                    "_currentMined": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                601,
                141
            ],
            "allowance(address,address)": [
                1826,
                471
            ],
            "transferFrom(address,address,uint256)": [
                644,
                163
            ],
            "approve(address,uint256)": [
                500,
                119
            ],
            "balanceOf(address)": [
                938,
                251
            ],
            "transfer(address,uint256)": [
                1487,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump4690": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4822": [
                "msg.sender.transfer(amount * sellPrice)",
                "msg.sender.transfer(amount * sellPrice)"
            ],
            "block4822": [
                "msg.sender.transfer(amount * sellPrice)"
            ],
            "block4690": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    }
}