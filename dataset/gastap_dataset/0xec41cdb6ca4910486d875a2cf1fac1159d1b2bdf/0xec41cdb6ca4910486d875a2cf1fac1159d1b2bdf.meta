{
    "ERC223ReceivingContract": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                459,
                119
            ],
            "balanceOf(address)": [
                1034,
                273
            ],
            "transferFrom(address,address,uint256)": [
                603,
                163
            ],
            "allowance(address,address)": [
                1763,
                449
            ],
            "transfer(address,uint256)": [
                1561,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                772,
                207
            ],
            "transfer(address,uint256,bytes)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                500,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3197": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3197": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "xChaingeToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)",
            "xChaingeToken(address,address)",
            "burn(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "xChaingeToken(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "num": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                324,
                97
            ],
            "burn(uint256)": [
                650,
                185
            ],
            "balanceOf(address)": [
                695,
                207
            ],
            "transfer(address,uint256,bytes)": [
                1027,
                273
            ],
            "transferFrom(address,address,uint256)": [
                468,
                141
            ],
            "allowance(address,address)": [
                1198,
                295
            ],
            "transfer(address,uint256)": [
                926,
                251
            ]
        },
        "block_CALL_mapping": {
            "block4242": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump4242": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "DutchAuction": {
        "function_list": [
            "DutchAuction(address)",
            "fallback()",
            "setup(address)",
            "startAuction()",
            "finalizeAuction()",
            "CancelAuction()",
            "bid()",
            "claimTokens()",
            "proxyClaimTokens(address)",
            "withdraw()",
            "proxyWithdraw(address)",
            "price()",
            "missingFundsToEndAuction()",
            "calcTokenPrice()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "DutchAuction(address)": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "setup(address)": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "startAuction()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "finalizeAuction()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "CancelAuction()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "bid()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "claimTokens()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "proxyClaimTokens(address)": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "proxyWithdraw(address)": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "price()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "missingFundsToEndAuction()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "calcTokenPrice()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokenClaimWaitingPeriod": "uint256",
                    "priceStart": "uint256",
                    "minPrice": "uint256",
                    "softCap": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "startBlock": "uint256",
                    "receivedWei": "uint256",
                    "fundsClaimed": "uint256",
                    "tokenMultiplier": "uint256",
                    "numTokensAuctioned": "uint256",
                    "finalPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "startAuction()": [
                1077,
                339
            ],
            "CancelAuction()": [
                1722,
                625
            ],
            "claimTokens()": [
                612,
                185
            ],
            "setup(address)": [
                923,
                295
            ],
            "proxyClaimTokens(address)": [
                1359,
                471
            ],
            "price()": [
                1273,
                427
            ],
            "finalizeAuction()": [
                1745,
                647
            ],
            "withdraw()": [
                565,
                163
            ],
            "proxyWithdraw(address)": [
                745,
                251
            ],
            "bid()": [
                512,
                119
            ],
            "missingFundsToEndAuction()": [
                1593,
                559
            ]
        },
        "block_CALL_mapping": {
            "jump4664": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump5081_0": [
                "token.transfer(receiverAddress, num)",
                "token.transfer(receiverAddress, num)"
            ],
            "jump3524": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block5081": [
                "token.transfer(receiverAddress, num)"
            ],
            "jump7093": [
                "token.burn(burnTokens)",
                "token.burn(burnTokens)"
            ],
            "jump5511_0": [
                "token.balanceOf(receiverAddress)",
                "token.balanceOf(receiverAddress)"
            ],
            "block4664": [
                "token.balanceOf(address(this))"
            ],
            "jump5511": [
                "token.balanceOf(receiverAddress)",
                "token.balanceOf(receiverAddress)"
            ],
            "block2574": [
                "receiverAddress.transfer(amount)"
            ],
            "block5511": [
                "token.balanceOf(receiverAddress)"
            ],
            "block3326": [
                "token.balanceOf(address(this))"
            ],
            "block6156": [
                "token.transfer(walletAddress, numTokensAuctioned)"
            ],
            "block3524": [
                "token.decimals()"
            ],
            "jump2574": [
                "receiverAddress.transfer(amount)",
                "receiverAddress.transfer(amount)"
            ],
            "block2574_0": [
                "receiverAddress.transfer(amount)"
            ],
            "jump3326": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump5081": [
                "token.transfer(receiverAddress, num)",
                "token.transfer(receiverAddress, num)"
            ],
            "jump6156": [
                "token.transfer(walletAddress, numTokensAuctioned)",
                "token.transfer(walletAddress, numTokensAuctioned)"
            ],
            "jump6644": [
                "token.transfer(walletAddress, numTokensAuctioned)",
                "token.transfer(walletAddress, numTokensAuctioned)"
            ],
            "block4664_0": [
                "token.balanceOf(address(this))"
            ],
            "block5081_0": [
                "token.transfer(receiverAddress, num)"
            ],
            "block5511_0": [
                "token.balanceOf(receiverAddress)"
            ],
            "block7093": [
                "token.burn(burnTokens)"
            ],
            "block6789": [
                "walletAddress.transfer(receivedWei)"
            ],
            "jump4664_0": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump6789": [
                "walletAddress.transfer(receivedWei)",
                "walletAddress.transfer(receivedWei)"
            ],
            "jump2574_0": [
                "receiverAddress.transfer(amount)",
                "receiverAddress.transfer(amount)"
            ],
            "block6644": [
                "token.transfer(walletAddress, numTokensAuctioned)"
            ]
        }
    }
}