{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "balanceOf(address)": [
                1055,
                273
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "DepositVault": {
        "function_list": [
            "transferOwnership(address)",
            "Vault()",
            "SetReleaseDate(uint256)",
            "fallback()",
            "deposit()",
            "withdraw(uint256)",
            "withdrawTo(address,uint256)",
            "withdrawToken(address,uint256)",
            "MinimumDeposit()",
            "ReleaseDate()",
            "WithdrawalEnabled()",
            "lock()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "Vault()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "SetReleaseDate(uint256)": {
                "argument": {
                    "NewDate": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "withdrawTo(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "MinimumDeposit()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "ReleaseDate()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "WithdrawalEnabled()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            },
            "lock()": {
                "argument": {},
                "contract": {
                    "minDeposit": "uint256",
                    "Date": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "SetReleaseDate(uint256)": [
                541,
                229
            ],
            "withdraw(uint256)": [
                272,
                119
            ],
            "withdrawTo(address,uint256)": [
                185,
                75
            ],
            "lock()": [
                663,
                295
            ],
            "ReleaseDate()": [
                391,
                163
            ],
            "withdrawToken(address,uint256)": [
                434,
                185
            ],
            "Vault()": [
                262,
                97
            ],
            "MinimumDeposit()": [
                498,
                207
            ],
            "deposit()": [
                586,
                251
            ],
            "transferOwnership(address)": [
                596,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump1058": [
                "to.transfer(amount)",
                "to.transfer(amount)"
            ],
            "jump1923": [
                "ERC20(token).transfer(msg.sender, amount)",
                "ERC20(token).transfer(msg.sender, amount)"
            ],
            "block1615": [
                "ERC20(token).balanceOf(address(this))"
            ],
            "jump1058_0": [
                "to.transfer(amount)",
                "to.transfer(amount)"
            ],
            "block1923": [
                "ERC20(token).transfer(msg.sender, amount)"
            ],
            "block1058_0": [
                "to.transfer(amount)"
            ],
            "jump1615": [
                "ERC20(token).balanceOf(address(this))",
                "ERC20(token).balanceOf(address(this))"
            ],
            "block1058": [
                "to.transfer(amount)"
            ]
        }
    }
}