{
    "strings": {
        "function_list": [
            "memcpy(uint256,uint256,uint256)",
            "toSlice(string)",
            "len(bytes32)",
            "toSliceB32(bytes32)",
            "copy(strings.slice)",
            "toString(strings.slice)",
            "len(strings.slice)",
            "empty(strings.slice)",
            "compare(strings.slice,strings.slice)",
            "equals(strings.slice,strings.slice)",
            "nextRune(strings.slice,strings.slice)",
            "nextRune(strings.slice)",
            "ord(strings.slice)",
            "keccak(strings.slice)",
            "startsWith(strings.slice,strings.slice)",
            "beyond(strings.slice,strings.slice)",
            "endsWith(strings.slice,strings.slice)",
            "until(strings.slice,strings.slice)",
            "findPtr(uint256,uint256,uint256,uint256)",
            "rfindPtr(uint256,uint256,uint256,uint256)",
            "find(strings.slice,strings.slice)",
            "rfind(strings.slice,strings.slice)",
            "split(strings.slice,strings.slice,strings.slice)",
            "split(strings.slice,strings.slice)",
            "rsplit(strings.slice,strings.slice,strings.slice)",
            "rsplit(strings.slice,strings.slice)",
            "count(strings.slice,strings.slice)",
            "contains(strings.slice,strings.slice)",
            "concat(strings.slice,strings.slice)",
            "join(strings.slice,strings.slice[])"
        ],
        "initial_state": {
            "memcpy(uint256,uint256,uint256)": {
                "argument": {
                    "dest": "uint256",
                    "src": "uint256",
                    "len": "uint256"
                },
                "contract": {}
            },
            "toSlice(string)": {
                "argument": {
                    "self": "string"
                },
                "contract": {}
            },
            "len(bytes32)": {
                "argument": {
                    "self": "bytes32"
                },
                "contract": {}
            },
            "toSliceB32(bytes32)": {
                "argument": {
                    "self": "bytes32"
                },
                "contract": {}
            },
            "copy(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "toString(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "len(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "empty(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "compare(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "equals(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "nextRune(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "rune": "strings.slice"
                },
                "contract": {}
            },
            "nextRune(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "ord(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "keccak(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "startsWith(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "beyond(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "endsWith(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "until(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "findPtr(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "selflen": "uint256",
                    "selfptr": "uint256",
                    "needlelen": "uint256",
                    "needleptr": "uint256"
                },
                "contract": {}
            },
            "rfindPtr(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "selflen": "uint256",
                    "selfptr": "uint256",
                    "needlelen": "uint256",
                    "needleptr": "uint256"
                },
                "contract": {}
            },
            "find(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "rfind(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "split(strings.slice,strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice",
                    "token": "strings.slice"
                },
                "contract": {}
            },
            "split(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "rsplit(strings.slice,strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice",
                    "token": "strings.slice"
                },
                "contract": {}
            },
            "rsplit(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "count(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "contains(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "concat(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "join(strings.slice,strings.slice[])": {
                "argument": {
                    "self": "strings.slice",
                    "parts": "strings.slice[]"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Manager": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "totalSupply()",
            "getAccountCount()",
            "getAddress(uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "getAccountCount()": {
                "argument": {},
                "contract": {}
            },
            "getAddress(uint256)": {
                "argument": {
                    "slot": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getAddress(uint256)": [
                276,
                141
            ],
            "getAccountCount()": [
                233,
                119
            ],
            "balanceOf(address)": [
                146,
                97
            ],
            "totalSupply()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Contracts": {
        "function_list": [
            "addContract(address)",
            "setContractOrigin(address,bool)",
            "getContractOrigin()",
            "latchContract()",
            "unlatchContract()",
            "removeContract(address)",
            "getContractCount()",
            "getContractAddress(uint256)",
            "getContractStatus(address)",
            "contractCheck(address,uint256)"
        ],
        "initial_state": {
            "addContract(address)": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "setContractOrigin(address,bool)": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "getContractOrigin()": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "latchContract()": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "unlatchContract()": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "removeContract(address)": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "getContractCount()": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "getContractAddress(uint256)": {
                "argument": {
                    "slot": "uint256"
                },
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "getContractStatus(address)": {
                "argument": {},
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            },
            "contractCheck(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "profit_per_token": "uint256",
                    "contractCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addContract(address)": [
                616,
                185
            ],
            "removeContract(address)": [
                1262,
                361
            ],
            "latchContract()": [
                569,
                163
            ],
            "getContractCount()": [
                932,
                273
            ],
            "unlatchContract()": [
                435,
                119
            ],
            "getContractStatus(address)": [
                344,
                97
            ],
            "getContractOrigin()": [
                1432,
                405
            ],
            "setContractOrigin(address,bool)": [
                1353,
                383
            ],
            "getContractAddress(uint256)": [
                1153,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StringUtils": {
        "function_list": [
            "compare(string,string)",
            "equal(string,string)",
            "indexOf(string,string)"
        ],
        "initial_state": {
            "compare(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {}
            },
            "equal(string,string)": {
                "argument": {
                    "_a": "string",
                    "_b": "string"
                },
                "contract": {}
            },
            "indexOf(string,string)": {
                "argument": {
                    "_haystack": "string",
                    "_needle": "string"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "compare(string,string)": [
                115,
                83
            ],
            "indexOf(string,string)": [
                509,
                127
            ],
            "equal(string,string)": [
                310,
                105
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "totalSupply()": [
                281,
                97
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "SubToken": {
        "function_list": [
            "SubTokenCreate(uint256,uint8,string,string,address)"
        ],
        "initial_state": {
            "SubTokenCreate(uint256,uint8,string,string,address)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "decimalUnits": "uint8",
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "SubTokenCreate(uint256,uint8,string,string,address)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Dividend": {
        "function_list": [
            "setReseller(address)"
        ],
        "initial_state": {
            "setReseller(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setReseller(address)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Peg": {
        "function_list": [
            "addContract(address)",
            "setContractOrigin(address,bool)",
            "getContractOrigin()",
            "latchContract()",
            "unlatchContract()",
            "removeContract(address)",
            "getContractCount()",
            "getContractAddress(uint256)",
            "getContractStatus(address)",
            "contractCheck(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "Peg()",
            "balanceOf(address)",
            "totalSupply()",
            "getAccountCount()",
            "getAddress(uint256)",
            "appendTokenHolders(address)",
            "transfer(address,uint256)",
            "transferWithMemo(address,uint256,string,string)",
            "getMemos(string)",
            "getMemo(uint256)",
            "setDividendCommission(uint256)",
            "setTransactionFee(uint256)",
            "setMasterResellerContract(address)",
            "setResellerOnDistributionContract(address,address)",
            "addReseller(address)",
            "isReseller(address)",
            "removeReseller(address)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "transferOwnership(address)",
            "assignMinter(address)",
            "assignManagement(address)",
            "freezeAccount(address)",
            "unfreezeAccount(address)",
            "mintToken(address,uint256)",
            "mintTokenByMinter(address,uint256)",
            "setTokenCreationContract(address)",
            "payPegDistribution(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "addContract(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setContractOrigin(address,bool)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getContractOrigin()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "latchContract()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "unlatchContract()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "removeContract(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getContractCount()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getContractAddress(uint256)": {
                "argument": {
                    "slot": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getContractStatus(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "contractCheck(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "Peg()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getAccountCount()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getAddress(uint256)": {
                "argument": {
                    "slot": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "appendTokenHolders(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "transferWithMemo(address,uint256,string,string)": {
                "argument": {
                    "_value": "uint256",
                    "_memo": "string",
                    "_hash": "string"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getMemos(string)": {
                "argument": {
                    "_hash": "string"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "getMemo(uint256)": {
                "argument": {
                    "num": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setDividendCommission(uint256)": {
                "argument": {
                    "_comm": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setTransactionFee(uint256)": {
                "argument": {
                    "_fee": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setMasterResellerContract(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setResellerOnDistributionContract(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "addReseller(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "isReseller(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "removeReseller(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "assignMinter(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "assignManagement(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "freezeAccount(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "unfreezeAccount(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "mintTokenByMinter(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "setTokenCreationContract(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            },
            "payPegDistribution(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "initialSupply": "uint256",
                    "dividendcommission": "uint256",
                    "transactionfee": "uint256",
                    "accountCount": "uint256",
                    "memoCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getContractAddress(uint256)": [
                5278,
                1131
            ],
            "getAddress(uint256)": [
                5387,
                1153
            ],
            "freezeAccount(address)": [
                6114,
                1307
            ],
            "totalSupply()": [
                1559,
                273
            ],
            "allowance(address,address)": [
                5995,
                1285
            ],
            "mintTokenByMinter(address,uint256)": [
                3935,
                823
            ],
            "transferFrom(address,address,uint256)": [
                1649,
                317
            ],
            "isReseller(address)": [
                5000,
                1043
            ],
            "payPegDistribution(address,uint256)": [
                1195,
                185
            ],
            "removeContract(address)": [
                5587,
                1197
            ],
            "approve(address,uint256)": [
                950,
                119
            ],
            "setResellerOnDistributionContract(address,address)": [
                1096,
                163
            ],
            "unfreezeAccount(address)": [
                3690,
                757
            ],
            "getAccountCount()": [
                5235,
                1109
            ],
            "setTokenCreationContract(address)": [
                3623,
                735
            ],
            "getMemo(uint256)": [
                3104,
                669
            ],
            "setDividendCommission(uint256)": [
                3487,
                691
            ],
            "burnFrom(address,uint256)": [
                3834,
                801
            ],
            "assignMinter(address)": [
                2575,
                559
            ],
            "unlatchContract()": [
                1602,
                295
            ],
            "removeReseller(address)": [
                4842,
                999
            ],
            "transferWithMemo(address,uint256,string,string)": [
                2642,
                581
            ],
            "getContractOrigin()": [
                6315,
                1373
            ],
            "getContractCount()": [
                4233,
                911
            ],
            "latchContract()": [
                2437,
                515
            ],
            "getMemos(string)": [
                4276,
                933
            ],
            "balanceOf(address)": [
                2974,
                625
            ],
            "mintToken(address,uint256)": [
                3757,
                779
            ],
            "approveAndCall(address,uint256,bytes)": [
                5745,
                1241
            ],
            "setTransactionFee(uint256)": [
                1051,
                141
            ],
            "transferOwnership(address)": [
                6181,
                1329
            ],
            "addContract(address)": [
                2484,
                537
            ],
            "setMasterResellerContract(address)": [
                5678,
                1219
            ],
            "burn(uint256)": [
                2070,
                427
            ],
            "setContractOrigin(address,bool)": [
                5916,
                1263
            ],
            "assignManagement(address)": [
                6248,
                1351
            ],
            "addReseller(address)": [
                2226,
                471
            ],
            "transfer(address,uint256)": [
                5134,
                1087
            ],
            "getContractStatus(address)": [
                1381,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump7798": [
                "token.getAccountCount()",
                "token.getAccountCount()"
            ],
            "block8700": [
                "token.balanceOf( tokenHolder )"
            ],
            "jump19885": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump21552_0": [
                "contract_address.pegHandler  ( msg.sender , value )",
                "contract_address.pegHandler  ( msg.sender , value )"
            ],
            "jump7993": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block21552_1": [
                "contract_address.pegHandler  ( msg.sender , value )"
            ],
            "jump8394": [
                "token.getAddress(i)",
                "token.getAddress(i)"
            ],
            "block7993": [
                "token.totalSupply()"
            ],
            "block7798": [
                "token.getAccountCount()"
            ],
            "block7348": [
                "div.setReseller ( reseller )"
            ],
            "block21552": [
                "contract_address.pegHandler  ( msg.sender , value )"
            ],
            "jump7348": [
                "div.setReseller ( reseller )",
                "div.setReseller ( reseller )"
            ],
            "jump21552_1": [
                "contract_address.pegHandler  ( msg.sender , value )",
                "contract_address.pegHandler  ( msg.sender , value )"
            ],
            "jump21552": [
                "contract_address.pegHandler  ( msg.sender , value )",
                "contract_address.pegHandler  ( msg.sender , value )"
            ],
            "jump8700": [
                "token.balanceOf( tokenHolder )",
                "token.balanceOf( tokenHolder )"
            ],
            "block19885": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block8394": [
                "token.getAddress(i)"
            ],
            "block21552_0": [
                "contract_address.pegHandler  ( msg.sender , value )"
            ]
        }
    }
}