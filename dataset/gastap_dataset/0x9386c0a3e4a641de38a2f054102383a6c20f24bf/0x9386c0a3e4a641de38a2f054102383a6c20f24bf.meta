{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                202,
                119
            ],
            "acceptOwnership()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "ERC20(uint256,string,uint8,string,bool,bool)",
            "setBalance(address,uint256)",
            "transferInternal(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "ERC20(uint256,string,uint8,string,bool,bool)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "setBalance(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "initialSupply": "uint256",
                    "creationBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transfer(address,uint256)": [
                1385,
                361
            ],
            "totalSupply()": [
                545,
                141
            ],
            "balanceOf(address)": [
                1044,
                273
            ],
            "transferFrom(address,address,uint256)": [
                588,
                163
            ],
            "acceptOwnership()": [
                1131,
                295
            ],
            "approveAndCall(address,uint256,bytes)": [
                1486,
                383
            ],
            "transferOwnership(address)": [
                1823,
                449
            ]
        },
        "block_CALL_mapping": {
            "block3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "MintingERC20": {
        "function_list": [
            "ERC20(uint256,string,uint8,string,bool,bool)",
            "setBalance(address,uint256)",
            "transferInternal(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "MintingERC20(uint256,uint256,string,uint8,string,bool,bool)",
            "addMinter(address)",
            "removeMinter(address)",
            "mint(address,uint256)"
        ],
        "initial_state": {
            "ERC20(uint256,string,uint8,string,bool,bool)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "setBalance(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "MintingERC20(uint256,uint256,string,uint8,string,bool,bool)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "_maxSupply": "uint256",
                    "_tokenName": "string",
                    "_decimals": "uint8",
                    "_symbol": "string"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "addMinter(address)": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "removeMinter(address)": {
                "argument": {},
                "contract": {
                    "maxSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "maxSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                600,
                141
            ],
            "addMinter(address)": [
                1604,
                405
            ],
            "transferFrom(address,address,uint256)": [
                643,
                163
            ],
            "approve(address,uint256)": [
                456,
                97
            ],
            "removeMinter(address)": [
                863,
                207
            ],
            "balanceOf(address)": [
                1263,
                317
            ],
            "approveAndCall(address,uint256,bytes)": [
                1772,
                449
            ],
            "transferOwnership(address)": [
                2152,
                537
            ],
            "mint(address,uint256)": [
                1022,
                273
            ],
            "transfer(address,uint256)": [
                1671,
                427
            ],
            "acceptOwnership()": [
                1350,
                339
            ]
        },
        "block_CALL_mapping": {
            "jump4908": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block4908": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Lamden": {
        "function_list": [
            "MintingERC20(uint256,uint256,string,uint8,string,bool,bool)",
            "addMinter(address)",
            "removeMinter(address)",
            "mint(address,uint256)",
            "ERC20(uint256,string,uint8,string,bool,bool)",
            "setBalance(address,uint256)",
            "transferInternal(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Lamden(uint256,bool)",
            "setLocked(bool)",
            "freezing(bool)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MintingERC20(uint256,uint256,string,uint8,string,bool,bool)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "_maxSupply": "uint256",
                    "_tokenName": "string",
                    "_decimals": "uint8",
                    "_symbol": "string"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "addMinter(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "removeMinter(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "ERC20(uint256,string,uint8,string,bool,bool)": {
                "argument": {
                    "_initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "setBalance(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "transferInternal(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "bytes": "bytes"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "Lamden(uint256,bool)": {
                "argument": {
                    "initialSupply": "uint256"
                },
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "setLocked(bool)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            },
            "freezing(bool)": {
                "argument": {},
                "contract": {
                    "decimals": "uint8",
                    "maxSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string"
                }
            }
        },
        "function_block_mapping": {
            "freezing(bool)": [
                1081,
                273
            ],
            "totalSupply()": [
                655,
                141
            ],
            "addMinter(address)": [
                2041,
                493
            ],
            "transferFrom(address,address,uint256)": [
                745,
                185
            ],
            "approve(address,uint256)": [
                511,
                97
            ],
            "removeMinter(address)": [
                965,
                229
            ],
            "transferOwnership(address)": [
                2636,
                647
            ],
            "setLocked(bool)": [
                698,
                163
            ],
            "balanceOf(address)": [
                1556,
                383
            ],
            "approveAndCall(address,uint256,bytes)": [
                2256,
                559
            ],
            "mint(address,uint256)": [
                1171,
                317
            ],
            "transfer(address,uint256)": [
                2108,
                515
            ],
            "acceptOwnership()": [
                1643,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "LamdenTokenAllocation": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "LamdenTokenAllocation(address,address[])",
            "allocateTokens()",
            "setTau(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "LamdenTokenAllocation(address,address[])": {
                "argument": {
                    "addresses": "address[]"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "allocateTokens()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "setTau(address)": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "allocatedTokens": "uint256",
                    "allocations": "LamdenTokenAllocation.Allocation[]"
                }
            }
        },
        "function_block_mapping": {
            "allocateTokens()": [
                136,
                75
            ],
            "setTau(address)": [
                269,
                141
            ],
            "transferOwnership(address)": [
                466,
                207
            ],
            "acceptOwnership()": [
                159,
                97
            ]
        },
        "block_CALL_mapping": {
            "block945": [
                "tau.mint(allocation._address, allocation.amount)"
            ],
            "jump945": [
                "tau.mint(allocation._address, allocation.amount)",
                "tau.mint(allocation._address, allocation.amount)"
            ]
        }
    },
    "LamdenPhases": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "LamdenPhases(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "sendTokensToInvestor()",
            "getIcoTokensAmount(uint256,uint256,address)",
            "fallback()",
            "setInternalFinished(uint8,bool)",
            "setFinished(uint8,bool)",
            "buy(address,uint256)",
            "setTau(address)",
            "setPhase(uint8,uint256,uint256,uint256)",
            "transferEthers()",
            "addToWhitelist(uint8,address)",
            "removeFromWhitelist(uint8,address)",
            "mint(address,uint256)",
            "mintInternal(address,uint256)",
            "getPhase(uint8)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "LamdenPhases(address,address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_tokenPreIcoPrice": "uint256",
                    "_preIcoSince": "uint256",
                    "_preIcoTill": "uint256",
                    "preIcoMaxAmount": "uint256",
                    "_tokenIcoPrice": "uint256",
                    "_icoSince": "uint256",
                    "_icoTill": "uint256",
                    "icoMaxAmount": "uint256",
                    "icoThresholds": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "sendTokensToInvestor()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "getIcoTokensAmount(uint256,uint256,address)": {
                "argument": {
                    "value": "uint256",
                    "time": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "setInternalFinished(uint8,bool)": {
                "argument": {
                    "phaseId": "uint8"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "setFinished(uint8,bool)": {
                "argument": {
                    "phaseId": "uint8"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "setTau(address)": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "setPhase(uint8,uint256,uint256,uint256)": {
                "argument": {
                    "phaseId": "uint8",
                    "since": "uint256",
                    "till": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "transferEthers()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "addToWhitelist(uint8,address)": {
                "argument": {
                    "phaseId": "uint8"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "removeFromWhitelist(uint8,address)": {
                "argument": {
                    "phaseId": "uint8"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "getPhase(uint8)": {
                "argument": {
                    "phaseId": "uint8"
                },
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "LAMDEN_DECIMALS": "uint256",
                    "soldTokens": "uint256",
                    "collectedEthers": "uint256",
                    "todayCollectedEthers": "uint256",
                    "icoInitialThresholds": "uint256",
                    "currentDay": "uint256",
                    "phases": "LamdenPhases.Phase[]",
                    "currentPhase": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "getPhase(uint8)": [
                1388,
                427
            ],
            "transferEthers()": [
                1258,
                383
            ],
            "getIcoTokensAmount(uint256,uint256,address)": [
                1281,
                405
            ],
            "setFinished(uint8,bool)": [
                977,
                295
            ],
            "addToWhitelist(uint8,address)": [
                744,
                207
            ],
            "mint(address,uint256)": [
                5091,
                946
            ],
            "setPhase(uint8,uint256,uint256,uint256)": [
                642,
                185
            ],
            "transferOwnership(address)": [
                1502,
                449
            ],
            "setTau(address)": [
                1061,
                317
            ],
            "acceptOwnership()": [
                867,
                251
            ],
            "sendTokensToInvestor()": [
                522,
                141
            ],
            "removeFromWhitelist(uint8,address)": [
                331,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump5091_2": [
                "tau.mint(_address, tokenAmount)",
                "tau.mint(_address, tokenAmount)"
            ],
            "jump5091_0": [
                "tau.mint(_address, tokenAmount)",
                "tau.mint(_address, tokenAmount)"
            ],
            "jump5091_1": [
                "tau.mint(_address, tokenAmount)",
                "tau.mint(_address, tokenAmount)"
            ],
            "block3958": [
                "etherHolder.transfer(this.balance)"
            ],
            "jump3958": [
                "etherHolder.transfer(this.balance)",
                "etherHolder.transfer(this.balance)"
            ],
            "block5091_0": [
                "tau.mint(_address, tokenAmount)"
            ],
            "block5091_1": [
                "tau.mint(_address, tokenAmount)"
            ],
            "block5091_2": [
                "tau.mint(_address, tokenAmount)"
            ],
            "jump5091": [
                "tau.mint(_address, tokenAmount)",
                "tau.mint(_address, tokenAmount)"
            ],
            "block5091": [
                "tau.mint(_address, tokenAmount)"
            ]
        }
    }
}