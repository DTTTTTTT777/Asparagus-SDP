{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                479,
                141
            ]
        },
        "block_CALL_mapping": {
            "block3392": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3392": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "FastInvestTokenCrowdsale": {
        "function_list": [
            "FastInvestTokenCrowdsale(address,address,uint256,uint256)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "setStart(uint256)",
            "setEnd(uint256)",
            "hasEnded()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "FastInvestTokenCrowdsale(address,address,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "setEnd(uint256)": {
                "argument": {
                    "_end": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "SOFT_CAP": "uint256",
                    "FUNDING_GOAL": "uint256",
                    "RATE": "uint256",
                    "RATE_SOFT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                934,
                361
            ],
            "setStart(uint256)": [
                981,
                383
            ],
            "buyTokens(address)": [
                880,
                339
            ],
            "setEnd(uint256)": [
                662,
                251
            ]
        },
        "block_CALL_mapping": {
            "block2682_1": [
                "wallet.transfer(msg.value)"
            ],
            "block2682_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1678_1": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "block1678_0": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "jump2682_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2682_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1678": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "jump1678_1": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)",
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "jump1678_0": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)",
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "block2682": [
                "wallet.transfer(msg.value)"
            ],
            "jump1678": [
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)",
                "tokenReward.transferFrom(tokenOwner, beneficiary, tokens)"
            ],
            "jump2682": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    }
}