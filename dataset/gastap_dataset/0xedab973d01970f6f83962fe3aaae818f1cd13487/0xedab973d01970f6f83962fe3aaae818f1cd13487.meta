{
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IQNSecondPreICO": {
        "function_list": [
            "Ownable()",
            "IQNSecondPreICO(address,address,address)",
            "fallback()",
            "sendAfterIco(uint256)",
            "sellForBitcoin(address,uint256)",
            "tokensAvailable()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "IQNSecondPreICO(address,address,address)": {
                "argument": {},
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "sendAfterIco(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "sellForBitcoin(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "tokensAvailable()": {
                "argument": {},
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "EXCHANGE_RATE": "uint256",
                    "START": "uint256",
                    "availableTokens": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "price": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "sellForBitcoin(address,uint256)": [
                838,
                163
            ],
            "tokensAvailable()": [
                795,
                141
            ],
            "sendAfterIco(uint256)": [
                763,
                119
            ]
        },
        "block_CALL_mapping": {
            "block545_0": [
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)"
            ],
            "block1968": [
                "tokenReward.transfer(_address, amount)"
            ],
            "jump565_0": [
                "addressToSendEthereum.transfer(amount)",
                "addressToSendEthereum.transfer(amount)"
            ],
            "jump1643": [
                "tokenReward.transfer(addressToSendTokenAfterIco, amount)",
                "tokenReward.transfer(addressToSendTokenAfterIco, amount)"
            ],
            "block565_0": [
                "addressToSendEthereum.transfer(amount)"
            ],
            "block565": [
                "addressToSendEthereum.transfer(amount)"
            ],
            "jump1968": [
                "tokenReward.transfer(_address, amount)",
                "tokenReward.transfer(_address, amount)"
            ],
            "jump565": [
                "addressToSendEthereum.transfer(amount)",
                "addressToSendEthereum.transfer(amount)"
            ],
            "block1643": [
                "tokenReward.transfer(addressToSendTokenAfterIco, amount)"
            ],
            "jump545": [
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)",
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)"
            ],
            "jump545_0": [
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)",
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)"
            ],
            "block545": [
                "tokenReward.transfer(msg.sender, amount * EXCHANGE_RATE)"
            ]
        }
    }
}