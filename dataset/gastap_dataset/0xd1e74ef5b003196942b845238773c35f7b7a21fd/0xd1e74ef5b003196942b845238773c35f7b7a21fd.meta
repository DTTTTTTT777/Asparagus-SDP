{
    "itMaps": {
        "function_list": [
            "insert(itMaps.itMapAddressUint,address,uint256)",
            "remove(itMaps.itMapAddressUint,address)",
            "destroy(itMaps.itMapAddressUint)",
            "contains(itMaps.itMapAddressUint,address)",
            "size(itMaps.itMapAddressUint)",
            "get(itMaps.itMapAddressUint,address)",
            "getKeyByIndex(itMaps.itMapAddressUint,uint256)",
            "getValueByIndex(itMaps.itMapAddressUint,uint256)"
        ],
        "initial_state": {
            "insert(itMaps.itMapAddressUint,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "remove(itMaps.itMapAddressUint,address)": {
                "argument": {},
                "contract": {}
            },
            "destroy(itMaps.itMapAddressUint)": {
                "argument": {},
                "contract": {}
            },
            "contains(itMaps.itMapAddressUint,address)": {
                "argument": {},
                "contract": {}
            },
            "size(itMaps.itMapAddressUint)": {
                "argument": {},
                "contract": {}
            },
            "get(itMaps.itMapAddressUint,address)": {
                "argument": {},
                "contract": {}
            },
            "getKeyByIndex(itMaps.itMapAddressUint,uint256)": {
                "argument": {
                    "idx": "uint256"
                },
                "contract": {}
            },
            "getValueByIndex(itMaps.itMapAddressUint,uint256)": {
                "argument": {
                    "idx": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "totalSupply()": [
                556,
                141
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "AmirNessSpecial": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "AmirNessSpecial()",
            "setCurrentExchangeRate(uint256)",
            "fallback()",
            "approveDividends(uint256)",
            "burnUnsold()",
            "approvedDividendsOf(address)",
            "transferAllDividends()",
            "withdraw(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "AmirNessSpecial()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "setCurrentExchangeRate(uint256)": {
                "argument": {
                    "rate": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "approveDividends(uint256)": {
                "argument": {
                    "totalDividendsAmount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "burnUnsold()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "approvedDividendsOf(address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "transferAllDividends()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "currentUSDExchangeRate": "uint256",
                    "priceUSD": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                809,
                97
            ],
            "approvedDividendsOf(address)": [
                1086,
                163
            ],
            "approveDividends(uint256)": [
                1618,
                317
            ],
            "withdraw(uint256)": [
                1173,
                185
            ],
            "setCurrentExchangeRate(uint256)": [
                1328,
                251
            ],
            "totalSupply()": [
                910,
                119
            ],
            "burnUnsold()": [
                1663,
                339
            ],
            "transfer(address,uint256)": [
                1517,
                295
            ],
            "balanceOf(address)": [
                1241,
                229
            ],
            "transferFrom(address,address,uint256)": [
                953,
                141
            ],
            "allowance(address,address)": [
                1710,
                361
            ],
            "transferAllDividends()": [
                1218,
                207
            ]
        },
        "block_CALL_mapping": {
            "block3424": [
                "AmirAddress.transfer(amount*10**18)"
            ],
            "block3748": [
                "tokenHolder.transfer(approvedDividends[tokenHolder])"
            ],
            "jump3748": [
                "tokenHolder.transfer(approvedDividends[tokenHolder])",
                "tokenHolder.transfer(approvedDividends[tokenHolder])"
            ],
            "jump3424": [
                "AmirAddress.transfer(amount*10**18)",
                "AmirAddress.transfer(amount*10**18)"
            ]
        }
    }
}