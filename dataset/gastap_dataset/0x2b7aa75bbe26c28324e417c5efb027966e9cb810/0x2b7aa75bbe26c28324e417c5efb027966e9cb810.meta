{
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "totalSupply()": [
                438,
                119
            ],
            "allowance(address,address)": [
                1310,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "jump3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SecureERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "SecureERC20Token(uint256,string,string,uint8,bool)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "lockAccount(address)",
            "unlockAccount(address)",
            "burnUserTokens(address)",
            "changeMinter(address)",
            "changeAdmin(address)",
            "mint(address,uint256)",
            "enableTransfers(bool)",
            "doTransfer(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "SecureERC20Token(uint256,string,string,uint8,bool)": {
                "argument": {
                    "initialSupply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "lockAccount(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "unlockAccount(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "burnUserTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "changeMinter(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "version": "uint8",
                    "creationBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "unlockAccount(address)": [
                1328,
                361
            ],
            "approve(address,uint256)": [
                521,
                119
            ],
            "changeMinter(address)": [
                841,
                207
            ],
            "mint(address,uint256)": [
                957,
                251
            ],
            "totalSupply()": [
                665,
                163
            ],
            "enableTransfers(bool)": [
                1873,
                493
            ],
            "allowance(address,address)": [
                1754,
                471
            ],
            "transfer(address,uint256)": [
                1606,
                427
            ],
            "balanceOf(address)": [
                1174,
                317
            ],
            "transferFrom(address,address,uint256)": [
                708,
                185
            ],
            "lockAccount(address)": [
                1058,
                273
            ],
            "burnUserTokens(address)": [
                1539,
                405
            ],
            "changeAdmin(address)": [
                1261,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "GilgameshToken": {
        "function_list": [
            "SecureERC20Token(uint256,string,string,uint8,bool)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "lockAccount(address)",
            "unlockAccount(address)",
            "burnUserTokens(address)",
            "changeMinter(address)",
            "changeAdmin(address)",
            "mint(address,uint256)",
            "enableTransfers(bool)",
            "doTransfer(address,address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "GilgameshToken()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "SecureERC20Token(uint256,string,string,uint8,bool)": {
                "argument": {
                    "initialSupply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "lockAccount(address)": {
                "argument": {},
                "contract": {}
            },
            "unlockAccount(address)": {
                "argument": {},
                "contract": {}
            },
            "burnUserTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "changeMinter(address)": {
                "argument": {},
                "contract": {}
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "GilgameshToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unlockAccount(address)": [
                1328,
                361
            ],
            "approve(address,uint256)": [
                521,
                119
            ],
            "changeMinter(address)": [
                841,
                207
            ],
            "mint(address,uint256)": [
                957,
                251
            ],
            "totalSupply()": [
                665,
                163
            ],
            "enableTransfers(bool)": [
                1873,
                493
            ],
            "allowance(address,address)": [
                1754,
                471
            ],
            "transfer(address,uint256)": [
                1606,
                427
            ],
            "balanceOf(address)": [
                1174,
                317
            ],
            "transferFrom(address,address,uint256)": [
                708,
                185
            ],
            "lockAccount(address)": [
                1058,
                273
            ],
            "burnUserTokens(address)": [
                1539,
                405
            ],
            "changeAdmin(address)": [
                1261,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "GilgameshTokenSale": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "GilgameshTokenSale(uint256,uint256,address,address,uint8,uint8,uint256,address,uint256,uint256)",
            "emergencyStopSale()",
            "restartSale()",
            "changeFundOwnerWalletAddress(address)",
            "changeTokenOwnerWalletAddress(address)",
            "finalizeSale()",
            "changeCap(uint256)",
            "changeMinimumCap(uint256)",
            "removeContract()",
            "changeOwner(address)",
            "depositForMySelf(uint256)",
            "deposit(uint256,address)",
            "calculateTokens(uint256)",
            "calculateRewardTokens(uint256,uint8)",
            "getStageByBlockNumber(uint256)",
            "isDuringSalePeriod(uint256)",
            "doFinalizeSale()",
            "getBlockNumber()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "GilgameshTokenSale(uint256,uint256,address,address,uint8,uint8,uint256,address,uint256,uint256)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_totalStages": "uint8",
                    "_stageMaxBonusPercentage": "uint8",
                    "_tokenPrice": "uint256",
                    "_minimumCap": "uint256",
                    "_tokenCap": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "emergencyStopSale()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "restartSale()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "changeFundOwnerWalletAddress(address)": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "changeTokenOwnerWalletAddress(address)": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "finalizeSale()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "changeCap(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "changeMinimumCap(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "removeContract()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "depositForMySelf(uint256)": {
                "argument": {
                    "userId": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "deposit(uint256,address)": {
                "argument": {
                    "userId": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "calculateTokens(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "calculateRewardTokens(uint256,uint8)": {
                "argument": {
                    "amount": "uint256",
                    "stageNumber": "uint8"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "getStageByBlockNumber(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "isDuringSalePeriod(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "doFinalizeSale()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "creationBlock": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "totalRaised": "uint256",
                    "minimumInvestment": "uint256",
                    "hardCap": "uint256",
                    "tokenCap": "uint256",
                    "minimumCap": "uint256",
                    "stageBonusPercentage": "uint256[]",
                    "totalParticipants": "uint256",
                    "totalStages": "uint8",
                    "stageMaxBonusPercentage": "uint8",
                    "tokenPrice": "uint256",
                    "teamTokenRatio": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "calculateTokens(uint256)": [
                1320,
                427
            ],
            "getStageByBlockNumber(uint256)": [
                1119,
                339
            ],
            "depositForMySelf(uint256)": [
                663,
                141
            ],
            "removeContract()": [
                2419,
                867
            ],
            "changeMinimumCap(uint256)": [
                1496,
                515
            ],
            "calculateRewardTokens(uint256,uint8)": [
                1980,
                691
            ],
            "finalizeSale()": [
                1233,
                383
            ],
            "changeCap(uint256)": [
                1451,
                493
            ],
            "emergencyStopSale()": [
                825,
                207
            ],
            "changeTokenOwnerWalletAddress(address)": [
                940,
                273
            ],
            "changeFundOwnerWalletAddress(address)": [
                596,
                119
            ],
            "changeOwner(address)": [
                1718,
                603
            ],
            "restartSale()": [
                1385,
                449
            ],
            "deposit(uint256,address)": [
                1256,
                405
            ]
        },
        "block_CALL_mapping": {
            "block6886_0": [
                "token.totalSupply()"
            ],
            "jump4047_0": [
                "fundOwnerWallet.send(msg.value)",
                "fundOwnerWallet.send(msg.value)"
            ],
            "block7315": [
                "fundOwnerWallet.send(this.balance)"
            ],
            "block7211": [
                "token.mint(tokenOwnerWallet, teamTokens)"
            ],
            "jump7211_0": [
                "token.mint(tokenOwnerWallet, teamTokens)",
                "token.mint(tokenOwnerWallet, teamTokens)"
            ],
            "block4608_0": [
                "token.totalSupply()"
            ],
            "jump4608": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump3976": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4608": [
                "token.totalSupply()"
            ],
            "jump7211": [
                "token.mint(tokenOwnerWallet, teamTokens)",
                "token.mint(tokenOwnerWallet, teamTokens)"
            ],
            "jump4342": [
                "token.mint(userAddress, userAssignedTokens)",
                "token.mint(userAddress, userAssignedTokens)"
            ],
            "jump7315": [
                "fundOwnerWallet.send(this.balance)",
                "fundOwnerWallet.send(this.balance)"
            ],
            "block4047_0": [
                "fundOwnerWallet.send(msg.value)"
            ],
            "jump4608_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump3976_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump6886": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block6886": [
                "token.totalSupply()"
            ],
            "jump7315_0": [
                "fundOwnerWallet.send(this.balance)",
                "fundOwnerWallet.send(this.balance)"
            ],
            "block3976_0": [
                "token.totalSupply()"
            ],
            "jump6886_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4047": [
                "fundOwnerWallet.send(msg.value)",
                "fundOwnerWallet.send(msg.value)"
            ],
            "block4342_0": [
                "token.mint(userAddress, userAssignedTokens)"
            ],
            "block3976": [
                "token.totalSupply()"
            ],
            "block4047": [
                "fundOwnerWallet.send(msg.value)"
            ],
            "block7211_0": [
                "token.mint(tokenOwnerWallet, teamTokens)"
            ],
            "jump4342_0": [
                "token.mint(userAddress, userAssignedTokens)",
                "token.mint(userAddress, userAssignedTokens)"
            ],
            "block7315_0": [
                "fundOwnerWallet.send(this.balance)"
            ],
            "block4342": [
                "token.mint(userAddress, userAssignedTokens)"
            ]
        }
    }
}