{
    "Sale": {
        "function_list": [
            "buyTokens(address,uint256,uint256)",
            "getTokens(address)",
            "getRefund(address)",
            "getSoldTokens()",
            "getOwnerEth()",
            "tokensPerEth()",
            "isActive(uint256)",
            "isComplete(uint256)"
        ],
        "initial_state": {
            "buyTokens(address,uint256,uint256)": {
                "argument": {
                    "_eth": "uint256",
                    "_time": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "getTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "getRefund(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "getSoldTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "getOwnerEth()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "tokensPerEth()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "isActive(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            },
            "isComplete(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "stopTime": "uint256",
                    "target": "uint256",
                    "raised": "uint256",
                    "collected": "uint256",
                    "numContributors": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump5933": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump5662": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump5933_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump5933_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2899": [
                "m.passOff()"
            ],
            "block5241_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block5241_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block5241": [
                "token.mint(beneficiary, tokens)"
            ],
            "block5662": [
                "token.finishMinting()"
            ],
            "jump5241": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5933_0": [
                "wallet.transfer(msg.value)"
            ],
            "jump3056": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "block5933_1": [
                "wallet.transfer(msg.value)"
            ],
            "block3056": [
                "token.acceptOwnership()"
            ],
            "jump5241_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2899": [
                "m.passOff()",
                "m.passOff()"
            ],
            "jump5241_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block5933": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "Constants": {
        "function_list": [
            "slitherConstructorVariables()"
        ],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "EventDefinitions": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Testable": {
        "function_list": [
            "setFakeTime(uint256)",
            "addMinutes(uint256)",
            "addDays(uint256)",
            "currTime()",
            "weiPerEth()"
        ],
        "initial_state": {
            "setFakeTime(uint256)": {
                "argument": {
                    "t": "uint256"
                },
                "contract": {
                    "fakeTime": "uint256"
                }
            },
            "addMinutes(uint256)": {
                "argument": {
                    "m": "uint256"
                },
                "contract": {
                    "fakeTime": "uint256"
                }
            },
            "addDays(uint256)": {
                "argument": {
                    "d": "uint256"
                },
                "contract": {
                    "fakeTime": "uint256"
                }
            },
            "currTime()": {
                "argument": {},
                "contract": {
                    "fakeTime": "uint256"
                }
            },
            "weiPerEth()": {
                "argument": {},
                "contract": {
                    "fakeTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addMinutes(uint256)": [
                303,
                163
            ],
            "currTime()": [
                125,
                75
            ],
            "weiPerEth()": [
                168,
                97
            ],
            "addDays(uint256)": [
                348,
                185
            ],
            "setFakeTime(uint256)": [
                211,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                202,
                119
            ],
            "acceptOwnership()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "changeOwner(address)",
            "acceptOwnership()",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "Token()",
            "setICO(address)",
            "setController(address)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "lockTokenHolder()",
            "setTokenHolder(address)",
            "burn(uint256)",
            "setMaxSupply(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "setICO(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "setController(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "lockTokenHolder()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "setTokenHolder(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            },
            "setMaxSupply(uint256)": {
                "argument": {
                    "_maxSupply": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "maxSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "mint(address,uint256)": [
                794,
                207
            ],
            "setMaxSupply(uint256)": [
                1041,
                273
            ],
            "decreaseApproval(address,uint256)": [
                940,
                251
            ],
            "transferFrom(address,address,uint256)": [
                589,
                141
            ],
            "approve(address,uint256)": [
                445,
                97
            ],
            "increaseApproval(address,uint256)": [
                1772,
                493
            ],
            "changeOwner(address)": [
                1494,
                405
            ],
            "setICO(address)": [
                1662,
                449
            ],
            "setController(address)": [
                1283,
                361
            ],
            "setTokenHolder(address)": [
                1992,
                537
            ],
            "burn(uint256)": [
                871,
                229
            ],
            "transfer(address,uint256)": [
                1561,
                427
            ],
            "lockTokenHolder()": [
                722,
                163
            ],
            "acceptOwnership()": [
                1173,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump4496": [
                "tokenholder.burn(msg.sender, _amount)",
                "tokenholder.burn(msg.sender, _amount)"
            ],
            "block4496": [
                "tokenholder.burn(msg.sender, _amount)"
            ]
        }
    },
    "TokenHolder": {
        "function_list": [
            "burn(address,uint256)"
        ],
        "initial_state": {
            "burn(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "burn(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ICO": {
        "function_list": [
            "changeOwner(address)",
            "acceptOwnership()",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "setFakeTime(uint256)",
            "addMinutes(uint256)",
            "addDays(uint256)",
            "currTime()",
            "weiPerEth()",
            "ICO()",
            "changePayee(address)",
            "setToken(address)",
            "setAsTest()",
            "setController(address)",
            "addSale(address,uint256)",
            "addSale(address)",
            "getCurrSale()",
            "currSaleActive()",
            "currSaleComplete()",
            "numSales()",
            "numContributors(uint256)",
            "fallback()",
            "deposit()",
            "doDeposit(address,uint256)",
            "depositFiat(address,uint256,bytes32)",
            "depositTokens(address,address,uint256,uint256,bytes32)",
            "safebalance(uint256)",
            "topUp()",
            "withdrawTopUp()",
            "claim()",
            "claimFor(address,address)",
            "claimable(address,bool)",
            "claimableTokens(address)",
            "claimableRefund(address)",
            "claimableTokens()",
            "claimableRefund()",
            "claimableOwnerEth(uint256)",
            "claimOwnerEth(uint256)",
            "transferTokens(address,address)",
            "setAllStopper(address)",
            "allStop()",
            "allStart()",
            "emergencyRefund(address,uint256)",
            "raised()",
            "tokensPerEth()"
        ],
        "initial_state": {
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "setFakeTime(uint256)": {
                "argument": {
                    "t": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "addMinutes(uint256)": {
                "argument": {
                    "m": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "addDays(uint256)": {
                "argument": {
                    "d": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "currTime()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "weiPerEth()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "ICO()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "changePayee(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "setAsTest()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "setController(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "addSale(address,uint256)": {
                "argument": {
                    "minimumPurchase": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "addSale(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "getCurrSale()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "currSaleActive()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "currSaleComplete()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "numSales()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "numContributors(uint256)": {
                "argument": {
                    "salenum": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "doDeposit(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "depositFiat(address,uint256,bytes32)": {
                "argument": {
                    "_ethValue": "uint256",
                    "_reference": "bytes32"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "depositTokens(address,address,uint256,uint256,bytes32)": {
                "argument": {
                    "_ethValue": "uint256",
                    "_depositedTokens": "uint256",
                    "_reference": "bytes32"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "safebalance(uint256)": {
                "argument": {
                    "bal": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "topUp()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "withdrawTopUp()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claim()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimFor(address,address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimable(address,bool)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimableTokens(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimableRefund(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimableTokens()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimableRefund()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimableOwnerEth(uint256)": {
                "argument": {
                    "salenum": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "claimOwnerEth(uint256)": {
                "argument": {
                    "salenum": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "transferTokens(address,address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "setAllStopper(address)": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "allStop()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "allStart()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "emergencyRefund(address,uint256)": {
                "argument": {
                    "_amt": "uint256"
                },
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "raised()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            },
            "tokensPerEth()": {
                "argument": {},
                "contract": {
                    "sales": "Sale[]",
                    "raisedFromFiat": "uint256",
                    "topUpAmount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "numSales()": [
                2177,
                647
            ],
            "depositTokens(address,address,uint256,uint256,bytes32)": [
                981,
                207
            ],
            "claimableRefund(address)": [
                1601,
                427
            ],
            "setAllStopper(address)": [
                757,
                119
            ],
            "transferTokens(address,address)": [
                1459,
                383
            ],
            "raised()": [
                12937,
                931
            ],
            "changePayee(address)": [
                867,
                163
            ],
            "claimableRefund()": [
                1339,
                339
            ],
            "numContributors(uint256)": [
                1688,
                449
            ],
            "emergencyRefund(address,uint256)": [
                1382,
                361
            ],
            "claimableTokens()": [
                2693,
                823
            ],
            "claimFor(address,address)": [
                2485,
                779
            ],
            "setFakeTime(uint256)": [
                1776,
                493
            ],
            "addSale(address)": [
                1184,
                273
            ],
            "claimableOwnerEth(uint256)": [
                1274,
                317
            ],
            "changeOwner(address)": [
                2308,
                713
            ],
            "getCurrSale()": [
                3047,
                999
            ],
            "claim()": [
                1251,
                295
            ],
            "claimOwnerEth(uint256)": [
                2263,
                691
            ],
            "allStop()": [
                3090,
                1021
            ],
            "depositFiat(address,uint256,bytes32)": [
                3113,
                1043
            ],
            "setToken(address)": [
                690,
                97
            ],
            "setController(address)": [
                2087,
                603
            ],
            "currTime()": [
                824,
                141
            ],
            "weiPerEth()": [
                1558,
                405
            ],
            "withdrawTopUp()": [
                2375,
                735
            ],
            "allStart()": [
                1114,
                229
            ],
            "deposit()": [
                2939,
                911
            ],
            "addSale(address,uint256)": [
                3204,
                1065
            ],
            "claimableTokens(address)": [
                1821,
                515
            ],
            "setAsTest()": [
                2154,
                625
            ],
            "addMinutes(uint256)": [
                2042,
                581
            ],
            "topUp()": [
                2994,
                955
            ],
            "currSaleComplete()": [
                1137,
                251
            ],
            "addDays(uint256)": [
                2949,
                933
            ],
            "tokensPerEth()": [
                11257,
                931
            ],
            "currSaleActive()": [
                934,
                185
            ],
            "acceptOwnership()": [
                1753,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump12679_0": [
                "Sale(sale).stopTime()",
                "Sale(sale).stopTime()"
            ],
            "jump4701": [
                "sales[getCurrSale()].isActive(currTime())",
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump10188": [
                "msg.sender.call.value(safebalance(amount))()",
                "msg.sender.call.value(safebalance(amount))()"
            ],
            "block7726": [
                "_a.call.value(safebalance(amt))()"
            ],
            "jump7726": [
                "_a.call.value(safebalance(amt))()",
                "_a.call.value(safebalance(amt))()"
            ],
            "block10759": [
                "token.mint(_to, tokens)"
            ],
            "block13376_0": [
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "block12520_0": [
                "Sale(sale).startTime()"
            ],
            "block5595": [
                "token.mint(_for, tkn)"
            ],
            "block13643": [
                "token.mint(_for, tokensToMintNow)"
            ],
            "jump7367_0": [
                "sales[salenum].getOwnerEth()",
                "sales[salenum].getOwnerEth()"
            ],
            "block14626": [
                "sales[nc].getRefund(_a)"
            ],
            "jump10759": [
                "token.mint(_to, tokens)",
                "token.mint(_to, tokens)"
            ],
            "jump6703": [
                "token.mint(msg.sender, tokens)",
                "token.mint(msg.sender, tokens)"
            ],
            "jump13376_2": [
                "sales[currSale].buyTokens(_for, _value, currTime())",
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "jump13376_0": [
                "sales[currSale].buyTokens(_for, _value, currTime())",
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "jump13376_1": [
                "sales[currSale].buyTokens(_for, _value, currTime())",
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "jump14626": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "jump13643_2": [
                "token.mint(_for, tokensToMintNow)",
                "token.mint(_for, tokensToMintNow)"
            ],
            "block14098_2": [
                "sales[nc].isComplete(currTime())"
            ],
            "block14098_3": [
                "sales[nc].isComplete(currTime())"
            ],
            "block14098_0": [
                "sales[nc].isComplete(currTime())"
            ],
            "block14098_1": [
                "sales[nc].isComplete(currTime())"
            ],
            "block14098_4": [
                "sales[nc].isComplete(currTime())"
            ],
            "jump14098_4": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "block8239": [
                "token.transfer(_to, balance)"
            ],
            "jump8015": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump14098_0": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "jump14098_1": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "jump14098_2": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "jump14098_3": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "block6703": [
                "token.mint(msg.sender, tokens)"
            ],
            "block12679_0": [
                "Sale(sale).stopTime()"
            ],
            "block14342": [
                "sales[nc].stopTime()"
            ],
            "jump14098": [
                "sales[nc].isComplete(currTime())",
                "sales[nc].isComplete(currTime())"
            ],
            "jump4701_1": [
                "sales[getCurrSale()].isActive(currTime())",
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump12937": [
                "sales[getCurrSale()].raised()",
                "sales[getCurrSale()].raised()"
            ],
            "jump4701_3": [
                "sales[getCurrSale()].isActive(currTime())",
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump4701_2": [
                "sales[getCurrSale()].isActive(currTime())",
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump14626_1": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "jump14626_0": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "jump14626_3": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "block10188": [
                "msg.sender.call.value(safebalance(amount))()"
            ],
            "block6912": [
                "msg.sender.send(safebalance(refund))"
            ],
            "jump14626_4": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "block4701_1": [
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump5307": [
                "sales[0].tokensPerEth()",
                "sales[0].tokensPerEth()"
            ],
            "block12520": [
                "Sale(sale).startTime()"
            ],
            "jump12520_0": [
                "Sale(sale).startTime()",
                "Sale(sale).startTime()"
            ],
            "jump12520": [
                "Sale(sale).startTime()",
                "Sale(sale).startTime()"
            ],
            "jump8704": [
                "sales[salenum].numContributors()",
                "sales[salenum].numContributors()"
            ],
            "block7367": [
                "sales[salenum].getOwnerEth()"
            ],
            "jump14342_2": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "jump14342_3": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "jump14342_0": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "jump14342_1": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "jump14342_4": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "block10968": [
                "_to.send(safebalance(refund))"
            ],
            "block7136_0": [
                "sales[salenum].isComplete(time)"
            ],
            "block8704": [
                "sales[salenum].numContributors()"
            ],
            "jump8239": [
                "token.transfer(_to, balance)",
                "token.transfer(_to, balance)"
            ],
            "jump6125": [
                "sales[getCurrSale()].isComplete(currTime())",
                "sales[getCurrSale()].isComplete(currTime())"
            ],
            "jump11257": [
                "sales[getCurrSale()].tokensPerEth()",
                "sales[getCurrSale()].tokensPerEth()"
            ],
            "jump13643_1": [
                "token.mint(_for, tokensToMintNow)",
                "token.mint(_for, tokensToMintNow)"
            ],
            "jump13643_0": [
                "token.mint(_for, tokensToMintNow)",
                "token.mint(_for, tokensToMintNow)"
            ],
            "block14626_3": [
                "sales[nc].getRefund(_a)"
            ],
            "jump5595": [
                "token.mint(_for, tkn)",
                "token.mint(_for, tkn)"
            ],
            "block8015": [
                "token.balanceOf(this)"
            ],
            "jump6912": [
                "msg.sender.send(safebalance(refund))",
                "msg.sender.send(safebalance(refund))"
            ],
            "jump7136": [
                "sales[salenum].isComplete(time)",
                "sales[salenum].isComplete(time)"
            ],
            "jump14342": [
                "sales[nc].stopTime()",
                "sales[nc].stopTime()"
            ],
            "block12937": [
                "sales[getCurrSale()].raised()"
            ],
            "block13376": [
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "block14908_4": [
                "sales[nc].getTokens(_a)"
            ],
            "block14908_0": [
                "sales[nc].getTokens(_a)"
            ],
            "block14908_1": [
                "sales[nc].getTokens(_a)"
            ],
            "block14908_2": [
                "sales[nc].getTokens(_a)"
            ],
            "block14908_3": [
                "sales[nc].getTokens(_a)"
            ],
            "jump4701_0": [
                "sales[getCurrSale()].isActive(currTime())",
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump13376": [
                "sales[currSale].buyTokens(_for, _value, currTime())",
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "block12679": [
                "Sale(sale).stopTime()"
            ],
            "jump10968": [
                "_to.send(safebalance(refund))",
                "_to.send(safebalance(refund))"
            ],
            "block14626_4": [
                "sales[nc].getRefund(_a)"
            ],
            "jump13643": [
                "token.mint(_for, tokensToMintNow)",
                "token.mint(_for, tokensToMintNow)"
            ],
            "block14626_2": [
                "sales[nc].getRefund(_a)"
            ],
            "block14626_1": [
                "sales[nc].getRefund(_a)"
            ],
            "block14626_0": [
                "sales[nc].getRefund(_a)"
            ],
            "jump14908_4": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "jump14908_2": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "jump14908_3": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "jump14908_0": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "jump14908_1": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "block5307": [
                "sales[0].tokensPerEth()"
            ],
            "block14098": [
                "sales[nc].isComplete(currTime())"
            ],
            "jump14908": [
                "sales[nc].getTokens(_a)",
                "sales[nc].getTokens(_a)"
            ],
            "block14908": [
                "sales[nc].getTokens(_a)"
            ],
            "block4701": [
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump9829": [
                "payee.call.value(safebalance(ownereth))()",
                "payee.call.value(safebalance(ownereth))()"
            ],
            "block13376_1": [
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "block13376_2": [
                "sales[currSale].buyTokens(_for, _value, currTime())"
            ],
            "block11257": [
                "sales[getCurrSale()].tokensPerEth()"
            ],
            "block14342_0": [
                "sales[nc].stopTime()"
            ],
            "block14342_1": [
                "sales[nc].stopTime()"
            ],
            "block14342_2": [
                "sales[nc].stopTime()"
            ],
            "block14342_3": [
                "sales[nc].stopTime()"
            ],
            "block14342_4": [
                "sales[nc].stopTime()"
            ],
            "block9829": [
                "payee.call.value(safebalance(ownereth))()"
            ],
            "jump14626_2": [
                "sales[nc].getRefund(_a)",
                "sales[nc].getRefund(_a)"
            ],
            "block4701_3": [
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "jump7136_0": [
                "sales[salenum].isComplete(time)",
                "sales[salenum].isComplete(time)"
            ],
            "block4701_2": [
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "block6125": [
                "sales[getCurrSale()].isComplete(currTime())"
            ],
            "block4701_0": [
                "sales[getCurrSale()].isActive(currTime())"
            ],
            "block7367_0": [
                "sales[salenum].getOwnerEth()"
            ],
            "block7136": [
                "sales[salenum].isComplete(time)"
            ],
            "jump12679": [
                "Sale(sale).stopTime()",
                "Sale(sale).stopTime()"
            ],
            "block13643_1": [
                "token.mint(_for, tokensToMintNow)"
            ],
            "block13643_0": [
                "token.mint(_for, tokensToMintNow)"
            ],
            "block13643_2": [
                "token.mint(_for, tokensToMintNow)"
            ],
            "jump7367": [
                "sales[salenum].getOwnerEth()",
                "sales[salenum].getOwnerEth()"
            ]
        }
    }
}