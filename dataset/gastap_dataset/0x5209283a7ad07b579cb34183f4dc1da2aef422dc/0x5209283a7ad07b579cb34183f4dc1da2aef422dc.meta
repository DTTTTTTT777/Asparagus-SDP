{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale()",
            "fallback()",
            "safeWithdrawal()"
        ],
        "initial_state": {
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "tokenBalance": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "dollar_exchange": "uint256",
                    "test_factor": "uint256",
                    "start_time": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokenBalance": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "dollar_exchange": "uint256",
                    "test_factor": "uint256",
                    "start_time": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "tokenBalance": "uint256",
                    "amountRaised": "uint256",
                    "deadline": "uint256",
                    "dollar_exchange": "uint256",
                    "test_factor": "uint256",
                    "start_time": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "safeWithdrawal()": [
                1105,
                207
            ]
        },
        "block_CALL_mapping": {
            "block1309": [
                "beneficiary.send(amountRaised)"
            ],
            "block566": [
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))"
            ],
            "jump1309": [
                "beneficiary.send(amountRaised)",
                "beneficiary.send(amountRaised)"
            ],
            "jump566": [
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))",
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))"
            ],
            "jump566_0": [
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))",
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))"
            ],
            "block566_0": [
                "tokenReward.transfer(msg.sender, SafeMath.div(amount * 1 ether, price))"
            ]
        }
    }
}