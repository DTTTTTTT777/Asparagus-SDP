{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "emergencyStop()",
            "release()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {}
            },
            "release()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "emergencyStop()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "release()": [
                184,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "PullPayment": {
        "function_list": [
            "asyncSend(address,uint256)",
            "withdrawPayments()"
        ],
        "initial_state": {
            "asyncSend(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalPayments": "uint256"
                }
            },
            "withdrawPayments()": {
                "argument": {},
                "contract": {
                    "totalPayments": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawPayments()": [
                134,
                22
            ]
        },
        "block_CALL_mapping": {
            "block396": [
                "payee.send(payment)"
            ],
            "jump396": [
                "payee.send(payment)",
                "payee.send(payment)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "asyncSend(address,uint256)",
            "withdrawPayments()",
            "emergencyStop()",
            "release()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,address)",
            "fallback()",
            "start()",
            "receiveETH(address)",
            "bonus(uint256)",
            "finalize()",
            "drain()",
            "setMultisig(address)",
            "backDARFtokenOwner()",
            "getRemainCoins()",
            "refund(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "asyncSend(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "withdrawPayments()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "release()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "Crowdsale(address,address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "receiveETH(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "bonus(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "backDARFtokenOwner()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "getRemainCoins()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "refund(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MIN_CAP": "uint256",
                    "MAX_CAP": "uint256",
                    "MIN_BUY_ETHER": "uint256",
                    "MIN_INVEST_BUY": "uint256",
                    "MAX_INVEST_SHARE": "uint256",
                    "CROWDSALE_PERIOD": "uint256",
                    "COIN_PER_ETHER": "uint256",
                    "BIGSELL": "uint256",
                    "etherReceived": "uint256",
                    "coinSentToEther": "uint256",
                    "invcoinSentToEther": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "backDARFtokenOwner()": [
                2009,
                682
            ],
            "transferOwnership(address)": [
                7519,
                1012
            ],
            "refund(uint256)": [
                646,
                66
            ],
            "start()": [
                1393,
                418
            ],
            "getRemainCoins()": [
                1636,
                528
            ],
            "withdrawPayments()": [
                800,
                154
            ],
            "emergencyStop()": [
                823,
                176
            ],
            "release()": [
                979,
                264
            ],
            "drain()": [
                1132,
                330
            ],
            "setMultisig(address)": [
                1942,
                660
            ],
            "finalize()": [
                777,
                132
            ]
        },
        "block_CALL_mapping": {
            "block3908": [
                "coin.transferFrom(msg.sender, address(this), _value)"
            ],
            "jump6382": [
                "coin.transfer(owner, remains)",
                "coin.transfer(owner, remains)"
            ],
            "jump2493_0": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block2493": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "jump2607": [
                "multisigEther.send(msg.value)",
                "multisigEther.send(msg.value)"
            ],
            "jump7519": [
                "coin.transferOwnership(owner)",
                "coin.transferOwnership(owner)"
            ],
            "jump4321": [
                "multisigEther.send(this.balance)",
                "multisigEther.send(this.balance)"
            ],
            "block6382": [
                "coin.transfer(owner, remains)"
            ],
            "jump4869": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "block7519": [
                "coin.transferOwnership(owner)"
            ],
            "block2493_0": [
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block4869": [
                "payee.send(payment)"
            ],
            "jump2607_0": [
                "multisigEther.send(msg.value)",
                "multisigEther.send(msg.value)"
            ],
            "jump4631": [
                "coin.balanceOf(this)",
                "coin.balanceOf(this)"
            ],
            "jump3908": [
                "coin.transferFrom(msg.sender, address(this), _value)",
                "coin.transferFrom(msg.sender, address(this), _value)"
            ],
            "block2607": [
                "multisigEther.send(msg.value)"
            ],
            "jump5448": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block5448": [
                "owner.send(this.balance)"
            ],
            "block4321": [
                "multisigEther.send(this.balance)"
            ],
            "jump2493": [
                "coin.transfer(beneficiary, coinToSend)",
                "coin.transfer(beneficiary, coinToSend)"
            ],
            "block4631": [
                "coin.balanceOf(this)"
            ],
            "block2607_0": [
                "multisigEther.send(msg.value)"
            ]
        }
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DARFtoken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "DARFtoken()",
            "burn(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "DARFtoken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                335,
                97
            ],
            "burn(uint256)": [
                655,
                185
            ],
            "balanceOf(address)": [
                724,
                207
            ],
            "transferFrom(address,address,uint256)": [
                479,
                141
            ],
            "transferOwnership(address)": [
                1262,
                317
            ],
            "allowance(address,address)": [
                1143,
                295
            ],
            "transfer(address,uint256)": [
                1042,
                273
            ]
        },
        "block_CALL_mapping": {}
    }
}