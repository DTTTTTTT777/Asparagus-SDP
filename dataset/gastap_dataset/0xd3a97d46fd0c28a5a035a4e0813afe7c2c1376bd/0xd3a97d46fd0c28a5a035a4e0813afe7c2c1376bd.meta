{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "myUsingOracalize": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "myUsingOracalize()",
            "update_oracalize()",
            "oraclize_query(string,string,string)",
            "oraclize_getPrice(string)",
            "setGasLimit(uint256)",
            "oraclize_setNetwork()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "myUsingOracalize()": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "update_oracalize()": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "setGasLimit(uint256)": {
                "argument": {
                    "_newLimit": "uint256"
                },
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "oracalize_gaslimit": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setGasLimit(uint256)": [
                365,
                163
            ],
            "update_oracalize()": [
                342,
                141
            ],
            "transferOwnership(address)": [
                410,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump692": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "block692": [
                "OAR.getAddress()"
            ]
        }
    },
    "InterCrypto": {
        "function_list": [
            "myUsingOracalize()",
            "update_oracalize()",
            "oraclize_query(string,string,string)",
            "oraclize_getPrice(string)",
            "setGasLimit(uint256)",
            "oraclize_setNetwork()",
            "getCodeSize(address)",
            "parseAddr(string)",
            "Ownable()",
            "transferOwnership(address)",
            "InterCrypto()",
            "kill()",
            "fallback()",
            "getInterCryptoPrice()",
            "sendToOtherBlockchain1(string,string)",
            "sendToOtherBlockchain2(string,string,address)",
            "__callback(bytes32,string)",
            "cancelTransaction(uint256)",
            "recover()",
            "engine(string,string,address)",
            "isValidateParameter(string,uint256)",
            "concatBytes(bytes,bytes,bytes,bytes,bytes,bytes,bytes)",
            "createShapeShiftTransactionPost(string,string)",
            "nibbleToChar(uint256)",
            "addressToBytes(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "myUsingOracalize()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "update_oracalize()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "oraclize_query(string,string,string)": {
                "argument": {
                    "datasource": "string",
                    "arg1": "string",
                    "arg2": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "oraclize_getPrice(string)": {
                "argument": {
                    "datasource": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "setGasLimit(uint256)": {
                "argument": {
                    "_newLimit": "uint256"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "oraclize_setNetwork()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "getCodeSize(address)": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "parseAddr(string)": {
                "argument": {
                    "_a": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "InterCrypto()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "getInterCryptoPrice()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "sendToOtherBlockchain1(string,string)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "sendToOtherBlockchain2(string,string,address)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "__callback(bytes32,string)": {
                "argument": {
                    "myid": "bytes32",
                    "result": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "cancelTransaction(uint256)": {
                "argument": {
                    "transactionID": "uint256"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "recover()": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "engine(string,string,address)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "isValidateParameter(string,uint256)": {
                "argument": {
                    "_parameter": "string",
                    "maxSize": "uint256"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "concatBytes(bytes,bytes,bytes,bytes,bytes,bytes,bytes)": {
                "argument": {
                    "b1": "bytes",
                    "b2": "bytes",
                    "b3": "bytes",
                    "b4": "bytes",
                    "b5": "bytes",
                    "b6": "bytes",
                    "b7": "bytes"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "createShapeShiftTransactionPost(string,string)": {
                "argument": {
                    "_coinSymbol": "string",
                    "_toAddress": "string"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "nibbleToChar(uint256)": {
                "argument": {
                    "nibble": "uint256"
                },
                "contract": {
                    "transactionCount": "uint256"
                }
            },
            "addressToBytes(address)": {
                "argument": {},
                "contract": {
                    "transactionCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setGasLimit(uint256)": [
                1129,
                361
            ],
            "sendToOtherBlockchain1(string,string)": [
                221,
                75
            ],
            "kill()": [
                605,
                185
            ],
            "update_oracalize()": [
                1083,
                317
            ],
            "getInterCryptoPrice()": [
                1040,
                295
            ],
            "cancelTransaction(uint256)": [
                430,
                119
            ],
            "recover()": [
                1106,
                339
            ],
            "sendToOtherBlockchain2(string,string,address)": [
                628,
                207
            ],
            "transferOwnership(address)": [
                1174,
                383
            ],
            "__callback(bytes32,string)": [
                311,
                97
            ]
        },
        "block_CALL_mapping": {
            "block8556_0": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)"
            ],
            "block8556": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)"
            ],
            "block3793": [
                "msg.sender.send(amount)"
            ],
            "jump2185": [
                "depositAddress.send(sendAmount)",
                "depositAddress.send(sendAmount)"
            ],
            "block7978_0": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "jump6714_1": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)",
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "jump6714_0": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)",
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "block6714_1": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "block6714_0": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "jump6714": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)",
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "jump8556": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)",
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)"
            ],
            "jump1511": [
                "oraclize.cbAddress()",
                "oraclize.cbAddress()"
            ],
            "block6714": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "block3668": [
                "OAR.getAddress()"
            ],
            "jump3668": [
                "OAR.getAddress()",
                "OAR.getAddress()"
            ],
            "jump7978_0": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)",
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "block2185": [
                "depositAddress.send(sendAmount)"
            ],
            "jump7978": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)",
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "block7978": [
                "oraclize.getPrice(datasource, oracalize_gaslimit)"
            ],
            "jump3793": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "jump8556_0": [
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)",
                "oraclize.query2_withGasLimit.value(price)(0, datasource, arg1, arg2, oracalize_gaslimit)"
            ],
            "block1511": [
                "oraclize.cbAddress()"
            ]
        }
    }
}