{
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Utils": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IERC20Token": {
        "function_list": [
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "name()": {
                "argument": {},
                "contract": {}
            },
            "symbol()": {
                "argument": {},
                "contract": {}
            },
            "decimals()": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "ERC20Token": {
        "function_list": [
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ERC20Token(string,string,uint8)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Utils()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "ERC20Token(string,string,uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "symbol()": [
                870,
                229
            ],
            "name()": [
                169,
                75
            ],
            "totalSupply()": [
                414,
                119
            ],
            "balanceOf(address)": [
                783,
                207
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "allowance(address,address)": [
                1115,
                273
            ],
            "transfer(address,uint256)": [
                1014,
                251
            ],
            "decimals()": [
                590,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ENJToken": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "ERC20Token(string,string,uint8)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "name()",
            "symbol()",
            "decimals()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ENJToken(address,address,address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "releaseEnjinTeamTokens()",
            "releaseAdvisorTokens()",
            "retrieveUnsoldTokens()",
            "addToAllocation(uint256)",
            "allowTransfers()",
            "isTransferAllowed()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "ERC20Token(string,string,uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "name()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "symbol()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "decimals()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "ENJToken(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "releaseEnjinTeamTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "releaseAdvisorTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "retrieveUnsoldTokens()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "addToAllocation(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "allowTransfers()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "isTransferAllowed()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "ENJ_UNIT": "uint256",
                    "maxPresaleSupply": "uint256",
                    "minCrowdsaleAllocation": "uint256",
                    "incentivisationAllocation": "uint256",
                    "advisorsAllocation": "uint256",
                    "enjinTeamAllocation": "uint256",
                    "totalAllocatedToAdvisors": "uint256",
                    "totalAllocatedToTeam": "uint256",
                    "totalAllocated": "uint256",
                    "endTime": "uint256",
                    "teamTranchesReleased": "uint256",
                    "maxTeamTranches": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1528,
                405
            ],
            "totalSupply()": [
                725,
                141
            ],
            "allowance(address,address)": [
                2586,
                735
            ],
            "transferFrom(address,address,uint256)": [
                834,
                207
            ],
            "approve(address,uint256)": [
                577,
                97
            ],
            "retrieveUnsoldTokens()": [
                1615,
                427
            ],
            "decimals()": [
                967,
                229
            ],
            "addToAllocation(uint256)": [
                2003,
                537
            ],
            "allowTransfers()": [
                768,
                163
            ],
            "releaseAdvisorTokens()": [
                678,
                119
            ],
            "symbol()": [
                1772,
                493
            ],
            "releaseEnjinTeamTokens()": [
                2322,
                647
            ],
            "owner()": [
                1685,
                471
            ],
            "name()": [
                433,
                75
            ],
            "transferOwnership(address)": [
                2748,
                779
            ],
            "transfer(address,uint256)": [
                2091,
                581
            ],
            "acceptOwnership()": [
                1662,
                449
            ]
        },
        "block_CALL_mapping": {
            "block4986": [
                "_token.transfer(_to, _amount)"
            ],
            "jump4986": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "ENJCrowdfund": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Utils()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "ENJCrowdfund(uint256,address)",
            "setToken(address)",
            "changeBeneficiary(address)",
            "deliverPresaleTokens(address[],uint256[])",
            "deliverPresaleTokenToClient(address,uint256)",
            "contributeETH(address)",
            "processContribution(address)",
            "totalEnjSold()",
            "getTotalAmountOfTokens(uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "Utils()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "ENJCrowdfund(uint256,address)": {
                "argument": {
                    "_totalPresaleTokensYetToAllocate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "changeBeneficiary(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "deliverPresaleTokens(address[],uint256[])": {
                "argument": {
                    "_batchOfAddresses": "address[]",
                    "_amountofENJ": "uint256[]"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "deliverPresaleTokenToClient(address,uint256)": {
                "argument": {
                    "_amountofENJ": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "contributeETH(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "processContribution(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "totalEnjSold()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "getTotalAmountOfTokens(uint256)": {
                "argument": {
                    "_contribution": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "week2Start": "uint256",
                    "week3Start": "uint256",
                    "week4Start": "uint256",
                    "totalPresaleTokensYetToAllocate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getTotalAmountOfTokens(uint256)": [
                981,
                317
            ],
            "changeBeneficiary(address)": [
                1133,
                361
            ],
            "setToken(address)": [
                242,
                75
            ],
            "totalEnjSold()": [
                589,
                185
            ],
            "owner()": [
                807,
                273
            ],
            "contributeETH(address)": [
                1267,
                405
            ],
            "deliverPresaleTokens(address[],uint256[])": [
                309,
                97
            ],
            "transferOwnership(address)": [
                1200,
                383
            ],
            "acceptOwnership()": [
                784,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump4564_0": [
                "token.addToAllocation(tokenAmount)",
                "token.addToAllocation(tokenAmount)"
            ],
            "jump4564_1": [
                "token.addToAllocation(tokenAmount)",
                "token.addToAllocation(tokenAmount)"
            ],
            "jump5190": [
                "token.addToAllocation(_amountofENJ)",
                "token.addToAllocation(_amountofENJ)"
            ],
            "jump2317": [
                "token.totalAllocated()",
                "token.totalAllocated()"
            ],
            "jump4055": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "block2770": [
                "_token.transfer(_to, _amount)"
            ],
            "block4055": [
                "beneficiary.transfer(msg.value)"
            ],
            "block4359_0": [
                "token.transfer(_to, tokenAmount)"
            ],
            "block4359_1": [
                "token.transfer(_to, tokenAmount)"
            ],
            "jump4359_0": [
                "token.transfer(_to, tokenAmount)",
                "token.transfer(_to, tokenAmount)"
            ],
            "jump4359_1": [
                "token.transfer(_to, tokenAmount)",
                "token.transfer(_to, tokenAmount)"
            ],
            "jump4985": [
                "token.transfer(_accountHolder, _amountofENJ)",
                "token.transfer(_accountHolder, _amountofENJ)"
            ],
            "jump4564": [
                "token.addToAllocation(tokenAmount)",
                "token.addToAllocation(tokenAmount)"
            ],
            "block4985": [
                "token.transfer(_accountHolder, _amountofENJ)"
            ],
            "block4359": [
                "token.transfer(_to, tokenAmount)"
            ],
            "block4564": [
                "token.addToAllocation(tokenAmount)"
            ],
            "block4564_0": [
                "token.addToAllocation(tokenAmount)"
            ],
            "block4564_1": [
                "token.addToAllocation(tokenAmount)"
            ],
            "jump4055_1": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "jump4055_0": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "block5190": [
                "token.addToAllocation(_amountofENJ)"
            ],
            "jump2770": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block2317": [
                "token.totalAllocated()"
            ],
            "jump4359": [
                "token.transfer(_to, tokenAmount)",
                "token.transfer(_to, tokenAmount)"
            ],
            "block4055_1": [
                "beneficiary.transfer(msg.value)"
            ],
            "block4055_0": [
                "beneficiary.transfer(msg.value)"
            ]
        }
    }
}