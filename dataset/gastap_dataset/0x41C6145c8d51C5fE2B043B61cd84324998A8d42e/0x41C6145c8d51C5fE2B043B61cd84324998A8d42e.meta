{
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                81,
                75
            ],
            "transfer(address,uint256)": [
                214,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ViewCoin": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ViewCoin()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setPrices(uint256)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "ViewCoin()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "setPrices(uint256)": {
                "argument": {
                    "newBuyPrice": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "maxSell": "uint256",
                    "totalSold": "uint256",
                    "buyPrice": "uint256",
                    "minPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                844,
                97
            ],
            "setPrices(uint256)": [
                1574,
                295
            ],
            "balanceOf(address)": [
                1170,
                185
            ],
            "totalSupply()": [
                945,
                119
            ],
            "transferFrom(address,address,uint256)": [
                988,
                141
            ],
            "allowance(address,address)": [
                1763,
                361
            ],
            "transfer(address,uint256)": [
                1619,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump328_0": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "jump328": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "block328_0": [
                "owner.send(msg.value)"
            ],
            "block328": [
                "owner.send(msg.value)"
            ]
        }
    }
}