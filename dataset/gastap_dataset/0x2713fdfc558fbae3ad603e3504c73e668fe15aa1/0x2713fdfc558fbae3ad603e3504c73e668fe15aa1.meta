{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                481,
                119
            ],
            "allowance(address,address)": [
                1897,
                493
            ],
            "balanceOf(address)": [
                1140,
                317
            ],
            "transferFrom(address,address,uint256)": [
                672,
                185
            ],
            "transfer(address,uint256)": [
                1584,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "floaksToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "owned()",
            "transferOwnership(address)",
            "floaksToken()",
            "setEtherPrices(uint256,uint256)",
            "setGasForFLKD(uint256)",
            "setFLKDForGas(uint256)",
            "setGasReserve(uint256)",
            "setMinBalance(uint256)",
            "haltDirectTrade()",
            "unhaltDirectTrade()",
            "transfer(address,uint256)",
            "buyfloaksAgainstEther()",
            "sellfloaksAgainstEther(uint256)",
            "refundToOwner(uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "floaksToken()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setEtherPrices(uint256,uint256)": {
                "argument": {
                    "newBuyPriceEth": "uint256",
                    "newSellPriceEth": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setGasForFLKD(uint256)": {
                "argument": {
                    "newGasAmountInWei": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setFLKDForGas(uint256)": {
                "argument": {
                    "newFLKDAmount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setGasReserve(uint256)": {
                "argument": {
                    "newGasReserveInWei": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setMinBalance(uint256)": {
                "argument": {
                    "minimumBalanceInWei": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "haltDirectTrade()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "unhaltDirectTrade()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "buyfloaksAgainstEther()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "sellfloaksAgainstEther(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "refundToOwner(uint256,uint256)": {
                "argument": {
                    "amountOfEth": "uint256",
                    "FLKD": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "gasForFLKD": "uint256",
                    "FLKDForGas": "uint256",
                    "gasReserve": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1431,
                383
            ],
            "haltDirectTrade()": [
                1561,
                427
            ],
            "allowance(address,address)": [
                2101,
                603
            ],
            "transferFrom(address,address,uint256)": [
                874,
                185
            ],
            "approve(address,uint256)": [
                685,
                119
            ],
            "setGasReserve(uint256)": [
                786,
                141
            ],
            "setFLKDForGas(uint256)": [
                1584,
                449
            ],
            "buyfloaksAgainstEther()": [
                2071,
                581
            ],
            "setMinBalance(uint256)": [
                2026,
                559
            ],
            "setGasForFLKD(uint256)": [
                1143,
                251
            ],
            "sellfloaksAgainstEther(uint256)": [
                1716,
                493
            ],
            "transferOwnership(address)": [
                2329,
                691
            ],
            "unhaltDirectTrade()": [
                2263,
                647
            ],
            "setEtherPrices(uint256,uint256)": [
                1278,
                317
            ],
            "refundToOwner(uint256,uint256)": [
                1376,
                361
            ],
            "transfer(address,uint256)": [
                1925,
                537
            ]
        },
        "block_CALL_mapping": {
            "block7678": [
                "msg.sender.send(gasForFLKD)"
            ],
            "jump7678": [
                "msg.sender.send(gasForFLKD)",
                "msg.sender.send(gasForFLKD)"
            ],
            "jump5721_0": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump4589": [
                "msg.sender.send(eth)",
                "msg.sender.send(eth)"
            ],
            "jump7778": [
                "_to.send(gasForFLKD)",
                "_to.send(gasForFLKD)"
            ],
            "block5721": [
                "msg.sender.send(revenue)"
            ],
            "block4589": [
                "msg.sender.send(eth)"
            ],
            "block7778": [
                "_to.send(gasForFLKD)"
            ],
            "jump5721": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "block5721_0": [
                "msg.sender.send(revenue)"
            ]
        }
    }
}