{
    "SafeMath": {
        "function_list": [
            "SafeMath()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)"
        ],
        "initial_state": {
            "SafeMath()": {
                "argument": {},
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IOwned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "owner()": [
                126,
                97
            ],
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenHolder": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "acceptOwnership()": [
                223,
                97
            ],
            "transferOwnership(address)": [
                420,
                163
            ],
            "owner()": [
                246,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump876": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "block876": [
                "_token.transfer(_to, _amount)"
            ]
        }
    },
    "SmartTokenController": {
        "function_list": [
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "issueTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "withdrawFromToken(IERC20Token,address,uint256)"
        ],
        "initial_state": {
            "TokenHolder()": {
                "argument": {},
                "contract": {}
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "owner()": {
                "argument": {},
                "contract": {}
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {}
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {}
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "issueTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "disableTokenTransfers(bool)": [
                599,
                207
            ],
            "issueTokens(address,uint256)": [
                390,
                141
            ],
            "transferTokenOwnership(address)": [
                191,
                75
            ],
            "destroyTokens(address,uint256)": [
                733,
                251
            ],
            "owner()": [
                646,
                229
            ],
            "acceptTokenOwnership()": [
                258,
                97
            ],
            "transferOwnership(address)": [
                897,
                295
            ],
            "acceptOwnership()": [
                576,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump2671": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump3459": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "block1940": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block2671": [
                "_token.transfer(_to, _amount)"
            ],
            "block1577": [
                "token.acceptOwnership()"
            ],
            "jump2254": [
                "token.issue(_to, _amount)",
                "token.issue(_to, _amount)"
            ],
            "block3808": [
                "token.destroy(_from, _amount)"
            ],
            "block1328": [
                "token.transferOwnership(_newOwner)"
            ],
            "block2254": [
                "token.issue(_to, _amount)"
            ],
            "jump1940": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "block3459": [
                "token.disableTransfers(_disable)"
            ],
            "jump1328": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "jump1577": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump3808": [
                "token.destroy(_from, _amount)",
                "token.destroy(_from, _amount)"
            ]
        }
    },
    "CrowdsaleController": {
        "function_list": [
            "SafeMath()",
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "SmartTokenController(ISmartToken)",
            "transferTokenOwnership(address)",
            "acceptTokenOwnership()",
            "disableTokenTransfers(bool)",
            "issueTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "withdrawFromToken(IERC20Token,address,uint256)",
            "TokenHolder()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "owner()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "withdrawTokens(IERC20Token,address,uint256)",
            "CrowdsaleController(ISmartToken,uint256,address,address,bytes32)",
            "computeRealCap(uint256,uint256)",
            "enableRealCap(uint256,uint256)",
            "computeReturn(uint256)",
            "contributeETH()",
            "contributeBTCs()",
            "processContribution()",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "SafeMath()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "SmartTokenController(ISmartToken)": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "transferTokenOwnership(address)": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "acceptTokenOwnership()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "disableTokenTransfers(bool)": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "issueTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "withdrawFromToken(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "TokenHolder()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "withdrawTokens(IERC20Token,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "owner()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "CrowdsaleController(ISmartToken,uint256,address,address,bytes32)": {
                "argument": {
                    "_startTime": "uint256",
                    "_realEtherCapHash": "bytes32"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "computeRealCap(uint256,uint256)": {
                "argument": {
                    "_cap": "uint256",
                    "_key": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "enableRealCap(uint256,uint256)": {
                "argument": {
                    "_cap": "uint256",
                    "_key": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "computeReturn(uint256)": {
                "argument": {
                    "_contribution": "uint256"
                },
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "contributeETH()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "contributeBTCs()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "processContribution()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DURATION": "uint256",
                    "TOKEN_PRICE_N": "uint256",
                    "TOKEN_PRICE_D": "uint256",
                    "BTCS_ETHER_CAP": "uint256",
                    "MAX_GAS_PRICE": "uint256",
                    "version": "string",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "totalEtherCap": "uint256",
                    "totalEtherContributed": "uint256",
                    "realEtherCapHash": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "contributeETH()": [
                481,
                119
            ],
            "transferTokenOwnership(address)": [
                619,
                185
            ],
            "acceptTokenOwnership()": [
                772,
                251
            ],
            "enableRealCap(uint256,uint256)": [
                1615,
                515
            ],
            "issueTokens(address,uint256)": [
                1034,
                339
            ],
            "computeReturn(uint256)": [
                554,
                163
            ],
            "owner()": [
                6549,
                900
            ],
            "contributeBTCs()": [
                1670,
                537
            ],
            "disableTokenTransfers(bool)": [
                1430,
                449
            ],
            "transferOwnership(address)": [
                2120,
                691
            ],
            "destroyTokens(address,uint256)": [
                1830,
                603
            ],
            "computeRealCap(uint256,uint256)": [
                1994,
                647
            ],
            "acceptOwnership()": [
                1407,
                427
            ]
        },
        "block_CALL_mapping": {
            "block6549_2": [
                "token.owner()"
            ],
            "block6549_1": [
                "token.owner()"
            ],
            "block6549_0": [
                "token.owner()"
            ],
            "block6549": [
                "token.owner()"
            ],
            "block7258": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block5320": [
                "token.owner()"
            ],
            "block6691_1": [
                "beneficiary.send(msg.value)"
            ],
            "block3636": [
                "token.issue(_to, _amount)"
            ],
            "jump7258_2": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump3636": [
                "token.issue(_to, _amount)",
                "token.issue(_to, _amount)"
            ],
            "block7003_2": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block7003_1": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block7003_0": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump6691_1": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "jump6691_0": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "jump6691_2": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block2655": [
                "token.transferOwnership(_newOwner)"
            ],
            "block7258_0": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump5320": [
                "token.owner()",
                "token.owner()"
            ],
            "block7258_2": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block4211": [
                "_token.transfer(_to, _amount)"
            ],
            "block6691_2": [
                "beneficiary.send(msg.value)"
            ],
            "jump6549": [
                "token.owner()",
                "token.owner()"
            ],
            "block6691_0": [
                "beneficiary.send(msg.value)"
            ],
            "block5005": [
                "token.disableTransfers(_disable)"
            ],
            "block7003": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump6691": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block5988": [
                "token.destroy(_from, _amount)"
            ],
            "block6691": [
                "beneficiary.send(msg.value)"
            ],
            "block7258_1": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump7258_1": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump7258_0": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block2916": [
                "token.acceptOwnership()"
            ],
            "jump2655": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "jump2916": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump7003_1": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump7003_0": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump5988": [
                "token.destroy(_from, _amount)",
                "token.destroy(_from, _amount)"
            ],
            "jump7003_2": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump5005": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "jump6549_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump7003": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block3317": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump4211": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump6549_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump7258": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump3317": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump6549_2": [
                "token.owner()",
                "token.owner()"
            ]
        }
    }
}