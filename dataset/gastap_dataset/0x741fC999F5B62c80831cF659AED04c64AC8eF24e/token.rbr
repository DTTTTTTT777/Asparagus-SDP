jump0(s(1), s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	lt(s(1), s(0))
	call(block87())

jump0(s(1), s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	geq(s(1), s(0))
	call(block13(l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender))

block0(l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13(l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	eq(s(2), s(1))
	call(block92(s(0), l(l1), l(l0), amount, calldatasize, callvalue, receiver, sender))

jump13(s(2), s(1), s(0), l(l1), l(l0), amount, calldataload, calldatasize, callvalue, newStart, receiver, sender)=>
	neq(s(2), s(1))
	call(block65(s(0), calldatasize, callvalue, newStart))

jump65(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	eq(s(2), s(1))
	call(block225(s(0), callvalue))

jump65(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	neq(s(2), s(1))
	call(block76(s(0), calldatasize, callvalue, newStart))

block65(s(0), calldatasize, callvalue, newStart)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1155501680
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0), calldatasize, callvalue, newStart))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), calldatasize, callvalue, newStart)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4137696959
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0), calldatasize, callvalue, newStart))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	eq(s(2), s(1))
	call(block248(s(0), calldatasize, callvalue, newStart))

jump76(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	neq(s(2), s(1))
	call(block87_0(s(0)))

block87()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block92(s(0), l(l1), l(l0), amount, calldatasize, callvalue, receiver, sender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump92(s(2),s(1),s(0), l(l1), l(l0), amount, calldatasize, callvalue, receiver, sender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump92(s(2), s(1), s(0), l(l1), l(l0), amount, calldatasize, callvalue, receiver, sender)=>
	eq(s(2), 0)
	call(block104(s(1), s(0), l(l1), l(l0), amount, calldatasize, receiver, sender))

jump92(s(2), s(1), s(0), l(l1), l(l0), amount, calldatasize, callvalue, receiver, sender)=>
	neq(s(2), 0)
	call(block100(s(1), s(0)))

block100(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block104(s(1), s(0), l(l1), l(l0), amount, calldatasize, receiver, sender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 199
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = sender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = receiver
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = amount
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 293
	nop(PUSH2)
	call(block293(s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block199(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block225(s(0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump225(s(2),s(1),s(0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump225(s(2), s(1), s(0), callvalue)=>
	eq(s(2), 0)
	call(block237(s(1), s(0)))

jump225(s(2), s(1), s(0), callvalue)=>
	neq(s(2), 0)
	call(block233(s(1), s(0)))

block233(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block237(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 246
	nop(PUSH2)
	s(2) = 302
	nop(PUSH2)
	call(block302(s(1),s(0)))
	nop(JUMP)

block246(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block248(s(0), calldatasize, callvalue, newStart)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump248(s(2),s(1),s(0), calldatasize, callvalue, newStart))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump248(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	eq(s(2), 0)
	call(block260(s(1), s(0), calldatasize, newStart))

jump248(s(2), s(1), s(0), calldatasize, callvalue, newStart)=>
	neq(s(2), 0)
	call(block256(s(1), s(0)))

block256(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block260(s(1), s(0), calldatasize, newStart)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 291
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newStart
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 304
	nop(PUSH2)
	call(block304(s(2),s(1),s(0)))
	nop(JUMP)

block291(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block293(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block199(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block302(s(1), s(0))=>
	nop(JUMPDEST)
	call(block246(s(0)))
	nop(JUMP)

block304(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block291(s(0)))
	nop(JUMP)

block87_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

