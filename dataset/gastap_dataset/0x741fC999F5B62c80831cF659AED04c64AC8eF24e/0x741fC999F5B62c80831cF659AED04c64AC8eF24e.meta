{
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "burn()",
            "setStart(uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "burn()": {
                "argument": {},
                "contract": {}
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "burn()": [
                225,
                97
            ],
            "setStart(uint256)": [
                248,
                119
            ],
            "transferFrom(address,address,uint256)": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Crowdsale(address,address,address,uint256,uint256,uint256)",
            "fallback()",
            "invest(address)",
            "getNumTokens(uint256)",
            "checkGoalReached()",
            "safeWithdrawal()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "Crowdsale(address,address,address,uint256,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_timeAfterSoftCap": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "getNumTokens(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "fundingGoal": "uint256",
                    "softCap": "uint256",
                    "maxGoal": "uint256",
                    "amountRaised": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "timeAfterSoftCap": "uint256",
                    "tokensSold": "uint256",
                    "rateSoft": "uint256",
                    "rateHard": "uint256",
                    "rateCoefficient": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "checkGoalReached()": [
                362,
                75
            ],
            "getNumTokens(uint256)": [
                482,
                141
            ],
            "invest(address)": [
                385,
                97
            ],
            "safeWithdrawal()": [
                1296,
                471
            ]
        },
        "block_CALL_mapping": {
            "jump2002": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)",
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "jump2373": [
                "tokenReward.setStart(newEnd)",
                "tokenReward.setStart(newEnd)"
            ],
            "jump3508": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "jump2373_0": [
                "tokenReward.setStart(newEnd)",
                "tokenReward.setStart(newEnd)"
            ],
            "jump2373_1": [
                "tokenReward.setStart(newEnd)",
                "tokenReward.setStart(newEnd)"
            ],
            "block2657": [
                "tokenReward.burn()"
            ],
            "block2002": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "jump1441": [
                "msWallet.transfer(amount)",
                "msWallet.transfer(amount)"
            ],
            "block1441": [
                "msWallet.transfer(amount)"
            ],
            "block3508": [
                "msg.sender.transfer(amount)"
            ],
            "block2002_1": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "block2002_0": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "jump2657": [
                "tokenReward.burn()",
                "tokenReward.burn()"
            ],
            "block2373_0": [
                "tokenReward.setStart(newEnd)"
            ],
            "block2373_1": [
                "tokenReward.setStart(newEnd)"
            ],
            "jump1441_1": [
                "msWallet.transfer(amount)",
                "msWallet.transfer(amount)"
            ],
            "jump1441_0": [
                "msWallet.transfer(amount)",
                "msWallet.transfer(amount)"
            ],
            "jump2002_1": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)",
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "jump2002_0": [
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)",
                "tokenReward.transferFrom(tokenOwner, _receiver, numTokens)"
            ],
            "block2373": [
                "tokenReward.setStart(newEnd)"
            ],
            "block1441_1": [
                "msWallet.transfer(amount)"
            ],
            "block1441_0": [
                "msWallet.transfer(amount)"
            ]
        }
    }
}