{
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                213,
                119
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                446,
                141
            ],
            "allowance(address,address)": [
                831,
                251
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                643,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DynamicCeiling": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "DynamicCeiling(address,address)",
            "setHiddenCurves(bytes32[])",
            "revealCurve(uint256,uint256,uint256,bool,bytes32)",
            "revealMulti(uint256[],uint256[],uint256[],bool[],bytes32[])",
            "moveTo(uint256)",
            "toCollect(uint256)",
            "calculateHash(uint256,uint256,uint256,bool,bytes32)",
            "nCurves()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "DynamicCeiling(address,address)": {
                "argument": {},
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "setHiddenCurves(bytes32[])": {
                "argument": {
                    "_curveHashes": "bytes32[]"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "revealCurve(uint256,uint256,uint256,bool,bytes32)": {
                "argument": {
                    "_limit": "uint256",
                    "_slopeFactor": "uint256",
                    "_collectMinimum": "uint256",
                    "_salt": "bytes32"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "revealMulti(uint256[],uint256[],uint256[],bool[],bytes32[])": {
                "argument": {
                    "_limits": "uint256[]",
                    "_slopeFactors": "uint256[]",
                    "_collectMinimums": "uint256[]",
                    "_lasts": "bool[]",
                    "_salts": "bytes32[]"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "moveTo(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "toCollect(uint256)": {
                "argument": {
                    "collected": "uint256"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "calculateHash(uint256,uint256,uint256,bool,bytes32)": {
                "argument": {
                    "_limit": "uint256",
                    "_slopeFactor": "uint256",
                    "_collectMinimum": "uint256",
                    "_salt": "bytes32"
                },
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            },
            "nCurves()": {
                "argument": {},
                "contract": {
                    "curves": "DynamicCeiling.Curve[]",
                    "currentIndex": "uint256",
                    "revealedCurves": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "nCurves()": [
                372,
                119
            ],
            "revealMulti(uint256[],uint256[],uint256[],bool[],bytes32[])": [
                651,
                207
            ],
            "setHiddenCurves(bytes32[])": [
                549,
                185
            ],
            "moveTo(uint256)": [
                1516,
                383
            ],
            "revealCurve(uint256,uint256,uint256,bool,bytes32)": [
                1021,
                229
            ],
            "calculateHash(uint256,uint256,uint256,bool,bytes32)": [
                1178,
                295
            ],
            "toCollect(uint256)": [
                1297,
                317
            ],
            "changeOwner(address)": [
                1449,
                361
            ],
            "acceptOwnership()": [
                1155,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "getBlockNumber()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10148,
                26
            ],
            "claimTokens(address)": [
                2808,
                537
            ],
            "totalSupply()": [
                935,
                141
            ],
            "allowance(address,address)": [
                2689,
                515
            ],
            "transferFrom(address,address,uint256)": [
                978,
                163
            ],
            "approve(address,uint256)": [
                791,
                97
            ],
            "totalSupplyAt(uint256)": [
                10148,
                26
            ],
            "enableTransfers(bool)": [
                2962,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1468,
                273
            ],
            "changeController(address)": [
                6213,
                889
            ],
            "balanceOf(address)": [
                8639,
                847
            ],
            "generateTokens(address,uint256)": [
                1916,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2417,
                471
            ],
            "destroyTokens(address,uint256)": [
                2588,
                493
            ],
            "transfer(address,uint256)": [
                8896,
                996
            ]
        },
        "block_CALL_mapping": {
            "block9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8639": [
                "token.balanceOf(this)"
            ],
            "block5997": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump8896": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5997": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump8639": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block8896": [
                "token.transfer(controller, balance)"
            ],
            "block5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8350": [
                "controller.transfer(this.balance)"
            ],
            "jump8350": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump6213": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6213": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "SNT": {
        "function_list": [
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "getBlockNumber()",
            "claimTokens(address)",
            "Controlled()",
            "changeController(address)",
            "SNT(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {}
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {}
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {}
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "SNT(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10148,
                26
            ],
            "claimTokens(address)": [
                2808,
                537
            ],
            "totalSupply()": [
                935,
                141
            ],
            "allowance(address,address)": [
                2689,
                515
            ],
            "transferFrom(address,address,uint256)": [
                978,
                163
            ],
            "approve(address,uint256)": [
                791,
                97
            ],
            "totalSupplyAt(uint256)": [
                10148,
                26
            ],
            "enableTransfers(bool)": [
                2962,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1468,
                273
            ],
            "changeController(address)": [
                6213,
                889
            ],
            "balanceOf(address)": [
                8639,
                847
            ],
            "generateTokens(address,uint256)": [
                1916,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2417,
                471
            ],
            "destroyTokens(address,uint256)": [
                2588,
                493
            ],
            "transfer(address,uint256)": [
                8896,
                996
            ]
        },
        "block_CALL_mapping": {
            "block9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8639": [
                "token.balanceOf(this)"
            ],
            "block5997": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump8896": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5997": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block3790_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump8639": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump9765": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7722": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump564": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block564_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump9765_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block8896": [
                "token.transfer(controller, balance)"
            ],
            "block5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3790": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8350": [
                "controller.transfer(this.balance)"
            ],
            "jump8350": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump6213": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7208": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7208_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5219": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6213": [
                "cloneToken.changeController(msg.sender)"
            ],
            "block5219_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5219_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "StatusContribution": {
        "function_list": [
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "StatusContribution()",
            "initialize(address,address,uint256,uint256,address,address,address,address,address,address,uint256)",
            "setGuaranteedAddress(address,uint256)",
            "fallback()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "buyNormal(address)",
            "buyGuaranteed(address)",
            "doBuy(address,uint256,bool)",
            "finalize()",
            "percent(uint256)",
            "isContract(address)",
            "tokensIssued()",
            "totalCollected()",
            "getBlockNumber()",
            "claimTokens(address)",
            "pauseContribution()",
            "resumeContribution()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "StatusContribution()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "initialize(address,address,uint256,uint256,address,address,address,address,address,address,uint256)": {
                "argument": {
                    "_startBlock": "uint256",
                    "_endBlock": "uint256",
                    "_maxSGTSupply": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "setGuaranteedAddress(address,uint256)": {
                "argument": {
                    "_limit": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "buyNormal(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "buyGuaranteed(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "doBuy(address,uint256,bool)": {
                "argument": {
                    "_toFund": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "percent(uint256)": {
                "argument": {
                    "p": "uint256"
                },
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "tokensIssued()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "totalCollected()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "pauseContribution()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "resumeContribution()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "failSafeLimit": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "exchangeRate": "uint256",
                    "maxGasPrice": "uint256",
                    "maxCallFrequency": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "maxSGTSupply": "uint256",
                    "totalGuaranteedCollected": "uint256",
                    "totalNormalCollected": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proxyPayment(address)": [
                3150,
                889
            ],
            "claimTokens(address)": [
                10855,
                925
            ],
            "pauseContribution()": [
                1260,
                361
            ],
            "onApprove(address,address,uint256)": [
                2907,
                823
            ],
            "totalCollected()": [
                3107,
                867
            ],
            "setGuaranteedAddress(address,uint256)": [
                2656,
                757
            ],
            "changeOwner(address)": [
                2479,
                691
            ],
            "onTransfer(address,address,uint256)": [
                1127,
                339
            ],
            "initialize(address,address,uint256,uint256,address,address,address,address,address,address,uint256)": [
                1810,
                581
            ],
            "finalize()": [
                1283,
                383
            ],
            "tokensIssued()": [
                1767,
                559
            ],
            "resumeContribution()": [
                2546,
                713
            ],
            "acceptOwnership()": [
                1744,
                537
            ]
        },
        "block_CALL_mapping": {
            "jump12616": [
                "dynamicCeiling.toCollect(totalNormalCollected)",
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "jump13572_4": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump13572_0": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump13572_1": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump13572_2": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump13572_3": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "block10855": [
                "SNT.claimTokens(_token)"
            ],
            "block10912": [
                "owner.transfer(this.balance)"
            ],
            "block13251": [
                "destEthDevs.transfer(_toFund)"
            ],
            "jump10912": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump10855": [
                "SNT.claimTokens(_token)",
                "SNT.claimTokens(_token)"
            ],
            "jump4732": [
                "dynamicCeiling.curves(dynamicCeiling.revealedCurves().sub(1))",
                "dynamicCeiling.curves(dynamicCeiling.revealedCurves().sub(1))"
            ],
            "jump4288": [
                "dynamicCeiling.allRevealed()",
                "dynamicCeiling.allRevealed()"
            ],
            "block13647": [
                "msg.sender.transfer(toReturn)"
            ],
            "block6901": [
                "SNT.changeController(sntController)"
            ],
            "jump5002": [
                "SGT.totalSupply()",
                "SGT.totalSupply()"
            ],
            "block4732": [
                "dynamicCeiling.curves(dynamicCeiling.revealedCurves().sub(1))"
            ],
            "block11458": [
                "token.transfer(owner, balance)"
            ],
            "block11201": [
                "token.balanceOf(this)"
            ],
            "block12616_0": [
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "block12616_1": [
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "jump13184_4": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump13184_3": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump13184_2": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump13184_1": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump13184_0": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block8341": [
                "SNT.decimals()"
            ],
            "jump7457": [
                "SNT.totalSupply()",
                "SNT.totalSupply()"
            ],
            "jump13251_2": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "jump13251_3": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "jump13251_0": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "jump13251_1": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "jump13251_4": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "jump13647_4": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "jump13647_3": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "jump13647_2": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "jump13647_1": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "jump13647_0": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "block5925": [
                "SNT.generateTokens(\n            destTokensReserve,\n            totalTokens.mul(percentageToReserve).div(percent(100)))"
            ],
            "block8112": [
                "SNT.controller()"
            ],
            "block4288": [
                "dynamicCeiling.allRevealed()"
            ],
            "jump9320": [
                "MiniMeToken(SGT).totalSupply()",
                "MiniMeToken(SGT).totalSupply()"
            ],
            "block13251_4": [
                "destEthDevs.transfer(_toFund)"
            ],
            "block13251_0": [
                "destEthDevs.transfer(_toFund)"
            ],
            "block13251_1": [
                "destEthDevs.transfer(_toFund)"
            ],
            "block13251_2": [
                "destEthDevs.transfer(_toFund)"
            ],
            "block13251_3": [
                "destEthDevs.transfer(_toFund)"
            ],
            "block10579": [
                "SNT.controller()"
            ],
            "jump5925": [
                "SNT.generateTokens(\n            destTokensReserve,\n            totalTokens.mul(percentageToReserve).div(percent(100)))",
                "SNT.generateTokens(\n            destTokensReserve,\n            totalTokens.mul(percentageToReserve).div(percent(100)))"
            ],
            "jump13184": [
                "SNT.generateTokens(_th, tokensGenerated)",
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump6611": [
                "SNT.generateTokens(\n            destTokensDevs,\n            totalTokens.mul(percentageToDevs).div(percent(100)))",
                "SNT.generateTokens(\n            destTokensDevs,\n            totalTokens.mul(percentageToDevs).div(percent(100)))"
            ],
            "jump7884": [
                "SNT.totalSupply()",
                "SNT.totalSupply()"
            ],
            "block7457": [
                "SNT.totalSupply()"
            ],
            "block5002": [
                "SGT.totalSupply()"
            ],
            "block6268": [
                "SNT.generateTokens(\n            destTokensSgt,\n            totalTokens.mul(percentageToSgt).div(percent(100)))"
            ],
            "jump11458": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "jump5560": [
                "SNT.totalSupply()",
                "SNT.totalSupply()"
            ],
            "block13572_4": [
                "_th.transfer(toReturn)"
            ],
            "block13572_2": [
                "_th.transfer(toReturn)"
            ],
            "block13572_3": [
                "_th.transfer(toReturn)"
            ],
            "block13572_0": [
                "_th.transfer(toReturn)"
            ],
            "block13572_1": [
                "_th.transfer(toReturn)"
            ],
            "jump8112": [
                "SNT.controller()",
                "SNT.controller()"
            ],
            "block5560": [
                "SNT.totalSupply()"
            ],
            "jump4577": [
                "dynamicCeiling.revealedCurves()",
                "dynamicCeiling.revealedCurves()"
            ],
            "block4577": [
                "dynamicCeiling.revealedCurves()"
            ],
            "jump6901": [
                "SNT.changeController(sntController)",
                "SNT.changeController(sntController)"
            ],
            "jump13647": [
                "msg.sender.transfer(toReturn)",
                "msg.sender.transfer(toReturn)"
            ],
            "block12616": [
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "block13647_4": [
                "msg.sender.transfer(toReturn)"
            ],
            "block13647_1": [
                "msg.sender.transfer(toReturn)"
            ],
            "block13647_0": [
                "msg.sender.transfer(toReturn)"
            ],
            "block13647_3": [
                "msg.sender.transfer(toReturn)"
            ],
            "block13647_2": [
                "msg.sender.transfer(toReturn)"
            ],
            "block9320": [
                "MiniMeToken(SGT).totalSupply()"
            ],
            "jump8341": [
                "SNT.decimals()",
                "SNT.decimals()"
            ],
            "jump6268": [
                "SNT.generateTokens(\n            destTokensSgt,\n            totalTokens.mul(percentageToSgt).div(percent(100)))",
                "SNT.generateTokens(\n            destTokensSgt,\n            totalTokens.mul(percentageToSgt).div(percent(100)))"
            ],
            "block5228": [
                "SGT.totalSupply()"
            ],
            "jump5228": [
                "SGT.totalSupply()",
                "SGT.totalSupply()"
            ],
            "jump12616_0": [
                "dynamicCeiling.toCollect(totalNormalCollected)",
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "jump12616_1": [
                "dynamicCeiling.toCollect(totalNormalCollected)",
                "dynamicCeiling.toCollect(totalNormalCollected)"
            ],
            "block6611": [
                "SNT.generateTokens(\n            destTokensDevs,\n            totalTokens.mul(percentageToDevs).div(percent(100)))"
            ],
            "block13184_4": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block13184_1": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block13184_0": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block13184_3": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block13184_2": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "block13184": [
                "SNT.generateTokens(_th, tokensGenerated)"
            ],
            "jump13572": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump10579": [
                "SNT.controller()",
                "SNT.controller()"
            ],
            "block13572": [
                "_th.transfer(toReturn)"
            ],
            "jump11201": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump13251": [
                "destEthDevs.transfer(_toFund)",
                "destEthDevs.transfer(_toFund)"
            ],
            "block7884": [
                "SNT.totalSupply()"
            ]
        }
    },
    "ContributionWallet": {
        "function_list": [
            "ContributionWallet(address,uint256,address)",
            "fallback()",
            "withdraw()"
        ],
        "initial_state": {
            "ContributionWallet(address,uint256,address)": {
                "argument": {
                    "_endBlock": "uint256"
                },
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "endBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdraw()": [
                143,
                97
            ]
        },
        "block_CALL_mapping": {
            "block584": [
                "contribution.finalizedBlock()"
            ],
            "jump657": [
                "multisig.transfer(this.balance)",
                "multisig.transfer(this.balance)"
            ],
            "jump584": [
                "contribution.finalizedBlock()",
                "contribution.finalizedBlock()"
            ],
            "block657": [
                "multisig.transfer(this.balance)"
            ]
        }
    },
    "DevTokensHolder": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "DevTokensHolder(address,address,address)",
            "collectTokens()",
            "months(uint256)",
            "getTime()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "DevTokensHolder(address,address,address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "collectTokens()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "months(uint256)": {
                "argument": {
                    "m": "uint256"
                },
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "getTime()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimTokens(address)": [
                412,
                185
            ],
            "collectTokens()": [
                148,
                97
            ],
            "changeOwner(address)": [
                258,
                141
            ],
            "acceptOwnership()": [
                125,
                75
            ]
        },
        "block_CALL_mapping": {
            "block2293": [
                "owner.transfer(this.balance)"
            ],
            "jump1170": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "jump2293": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump2839": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "jump1656": [
                "snt.transfer(owner, canExtract)",
                "snt.transfer(owner, canExtract)"
            ],
            "block2839": [
                "token.transfer(owner, balance)"
            ],
            "block1170": [
                "contribution.finalizedTime()"
            ],
            "block1656": [
                "snt.transfer(owner, canExtract)"
            ],
            "jump952": [
                "snt.balanceOf(address(this))",
                "snt.balanceOf(address(this))"
            ],
            "block952": [
                "snt.balanceOf(address(this))"
            ],
            "block2582": [
                "token.balanceOf(this)"
            ],
            "jump2582": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ]
        }
    },
    "SGTExchanger": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "SGTExchanger(address,address,address)",
            "collect()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "getBlockNumber()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "SGTExchanger(address,address,address)": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "collect()": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "totalCollected": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "onApprove(address,address,uint256)": [
                958,
                273
            ],
            "proxyPayment(address)": [
                1224,
                361
            ],
            "claimTokens(address)": [
                1091,
                295
            ],
            "onTransfer(address,address,uint256)": [
                474,
                141
            ],
            "collect()": [
                1201,
                339
            ],
            "changeOwner(address)": [
                804,
                229
            ],
            "acceptOwnership()": [
                694,
                185
            ]
        },
        "block_CALL_mapping": {
            "block2650": [
                "token.transfer(owner, balance)"
            ],
            "jump3770": [
                "sgt.totalSupplyAt(finalizedBlock)",
                "sgt.totalSupplyAt(finalizedBlock)"
            ],
            "jump3561": [
                "sgt.balanceOfAt(msg.sender, finalizedBlock)",
                "sgt.balanceOfAt(msg.sender, finalizedBlock)"
            ],
            "block2996": [
                "statusContribution.finalizedBlock()"
            ],
            "block3561": [
                "sgt.balanceOfAt(msg.sender, finalizedBlock)"
            ],
            "jump4336": [
                "snt.transfer(msg.sender, amount)",
                "snt.transfer(msg.sender, amount)"
            ],
            "block4336": [
                "snt.transfer(msg.sender, amount)"
            ],
            "jump2104": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump2393": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3770": [
                "sgt.totalSupplyAt(finalizedBlock)"
            ],
            "jump3286": [
                "snt.balanceOf(address(this))",
                "snt.balanceOf(address(this))"
            ],
            "block3286": [
                "snt.balanceOf(address(this))"
            ],
            "block2104": [
                "owner.transfer(this.balance)"
            ],
            "jump2650": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "jump2996": [
                "statusContribution.finalizedBlock()",
                "statusContribution.finalizedBlock()"
            ],
            "block2393": [
                "token.balanceOf(this)"
            ]
        }
    },
    "SNTPlaceHolder": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "SNTPlaceHolder(address,address,address,address)",
            "changeController(address)",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "transferable(address)",
            "getTime()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "SNTPlaceHolder(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "transferable(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "getTime()": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "activationTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "onApprove(address,address,uint256)": [
                970,
                295
            ],
            "proxyPayment(address)": [
                1170,
                339
            ],
            "claimTokens(address)": [
                2730,
                925
            ],
            "changeController(address)": [
                1566,
                926
            ],
            "onTransfer(address,address,uint256)": [
                356,
                119
            ],
            "changeOwner(address)": [
                686,
                207
            ],
            "acceptOwnership()": [
                576,
                163
            ]
        },
        "block_CALL_mapping": {
            "block3076": [
                "token.balanceOf(this)"
            ],
            "jump3333": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "block2730": [
                "snt.claimTokens(_token)"
            ],
            "block3691": [
                "contribution.finalizedTime()"
            ],
            "block1566": [
                "snt.changeController(_newController)"
            ],
            "jump3691": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "block3333": [
                "token.transfer(owner, balance)"
            ],
            "jump2454": [
                "snt.controller()",
                "snt.controller()"
            ],
            "jump2787": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "jump2730": [
                "snt.claimTokens(_token)",
                "snt.claimTokens(_token)"
            ],
            "jump3076": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3691_0": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "block2787": [
                "owner.transfer(this.balance)"
            ],
            "block2454": [
                "snt.controller()"
            ],
            "jump1566": [
                "snt.changeController(_newController)",
                "snt.changeController(_newController)"
            ],
            "block3691_0": [
                "contribution.finalizedTime()"
            ]
        }
    }
}