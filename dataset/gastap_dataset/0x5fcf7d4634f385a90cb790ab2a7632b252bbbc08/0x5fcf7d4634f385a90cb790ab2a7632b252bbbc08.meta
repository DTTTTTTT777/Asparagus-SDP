{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "EtherRacing": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "EtherRacing()",
            "fallback()",
            "setInsertCar(bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)",
            "updateCar(uint256,bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)",
            "getCar(uint256)",
            "getCars()",
            "getCarName(uint256)",
            "countCars()",
            "deleteCar(uint256)",
            "buyCar(uint256)",
            "getMyCarsIdx()",
            "getMyCarsIdxCount(uint256)",
            "getCustomer()",
            "earnedOf(address)",
            "carnumOf(address)",
            "getBalanceInEth(address)",
            "getBalance(address)",
            "getStoreBalance()",
            "withdraw(uint256)",
            "convert(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "EtherRacing()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "setInsertCar(bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "_name": "bytes32",
                    "_s_price": "uint256",
                    "_earning": "uint256",
                    "_o_earning": "uint256",
                    "_brand": "uint16",
                    "_ctype": "uint8",
                    "_spd": "uint8",
                    "_acc": "uint8",
                    "_dur": "uint8",
                    "_hndl": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "updateCar(uint256,bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "_id": "uint256",
                    "_name": "bytes32",
                    "_s_price": "uint256",
                    "_earning": "uint256",
                    "_o_earning": "uint256",
                    "_brand": "uint16",
                    "_ctype": "uint8",
                    "_spd": "uint8",
                    "_acc": "uint8",
                    "_dur": "uint8",
                    "_hndl": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getCar(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getCars()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getCarName(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "countCars()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "deleteCar(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "buyCar(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getMyCarsIdx()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getMyCarsIdxCount(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getCustomer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "earnedOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "carnumOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getBalanceInEth(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getBalance(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "getStoreBalance()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "convert(uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "conversionRate": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256",
                    "store_balance": "uint256",
                    "yesBuyer": "mapping(uint256 => address[])",
                    "carAccts": "uint256[]"
                }
            }
        },
        "function_block_mapping": {
            "updateCar(uint256,bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)": [
                853,
                207
            ],
            "buyCar(uint256)": [
                1401,
                339
            ],
            "earnedOf(address)": [
                766,
                185
            ],
            "setInsertCar(bytes32,uint256,uint256,uint256,uint16,uint8,uint8,uint8,uint8,uint8)": [
                2115,
                515
            ],
            "getMyCarsIdxCount(uint256)": [
                1631,
                405
            ],
            "getBalance(address)": [
                2789,
                647
            ],
            "carnumOf(address)": [
                2381,
                559
            ],
            "countCars()": [
                1086,
                251
            ],
            "getStoreBalance()": [
                2476,
                581
            ],
            "withdraw(uint256)": [
                605,
                119
            ],
            "getBalanceInEth(address)": [
                1457,
                361
            ],
            "convert(uint256,uint256)": [
                1848,
                449
            ],
            "getMyCarsIdx()": [
                2273,
                537
            ],
            "getCars()": [
                497,
                97
            ],
            "getCarName(uint256)": [
                2042,
                493
            ],
            "transferOwnership(address)": [
                2519,
                603
            ],
            "deleteCar(uint256)": [
                1252,
                295
            ],
            "getCar(uint256)": [
                1129,
                273
            ],
            "getCustomer()": [
                1321,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump3262": [
                "msg.sender.send(_amount)",
                "msg.sender.send(_amount)"
            ],
            "block3262": [
                "msg.sender.send(_amount)"
            ]
        }
    }
}