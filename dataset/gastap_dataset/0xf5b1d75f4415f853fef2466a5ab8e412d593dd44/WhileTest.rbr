block0(g(owner), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(owner), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(owner), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block76())

jump0(s(1), s(0), g(owner), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block13(g(owner), l(l0), address, balance, calldataload, caller, callvalue, returndatasize))

block13(g(owner), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1020253707
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(owner), l(l0), address, balance, calldataload, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(owner), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block78(s(0),g(owner), l(l0), address, balance, caller, returndatasize))

jump13(s(2), s(1), s(0), g(owner), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block65(s(0), l(l0), caller, callvalue, returndatasize))

jump65(s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block88(s(0), l(l0), caller, callvalue, returndatasize))

jump65(s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block76_0(s(0)))

block65(s(0), l(l0), caller, callvalue, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2707662372
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block78(s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 86
	nop(PUSH2)
	s(2) = 98
	nop(PUSH2)
	call(block98(s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block86(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block88(s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 96
	nop(PUSH2)
	s(2) = 318
	nop(PUSH2)
	call(block318(s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block96(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block98(s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump98(s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), s(2))
	call(block189(s(1), s(0),g(owner), l(l0), address, balance, returndatasize))

jump98(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), s(2))
	call(block185(s(1), s(0)))

block185(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block189(s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump189(s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump189(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	eq(s(3), 0)
	call(block315(s(2), s(1), s(0)))

jump189(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	neq(s(3), 0)
	call(block306(s(2), s(1), s(0), returndatasize))

block306(s(2), s(1), s(0), returndatasize)=>
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	nop(REVERT)

block315(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block86(s(0)))
	nop(JUMP)

jump318(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	lt(s(6), s(5))
	call(block488(s(4), s(3), s(2), s(1), s(0)))

jump318(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	geq(s(6), s(5))
	call(block341(s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

block318(s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = callvalue
	nop(CALLVALUE)
	call(jump318(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block341(s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	s(5) = 1
	nop(PUSH1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 2
	nop(PUSH1)
	s(6) = callvalue
	nop(CALLVALUE)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block355(s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))

jump355(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	eq(s(5), 0)
	call(block413(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

jump355(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	neq(s(5), 0)
	call(block363(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

block355(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	call(jump355(s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block363(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	s(5) = s(3)
	nop(DUP2)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump363(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump363(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	geq(s(6), s(5))
	call(block381(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

jump363(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	lt(s(6), s(5))
	call(block377(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

block377(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	s(5) = 413
	nop(PUSH2)
	call(block413(s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(JUMP)

block381(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump381(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump381(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	leq(s(6), s(5))
	call(block397(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

jump381(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	gt(s(6), s(5))
	call(block393(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize))

block393(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	s(5) = 413
	nop(PUSH2)
	call(block413(s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(JUMP)

block397(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(5) = 355
	nop(PUSH2)
	call(block355(s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(JUMP)

block413(s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump413(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump413(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	eq(s(6), 0)
	call(block486(s(5), s(4), s(3), s(2), s(1), s(0)))

jump413(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, returndatasize)=>
	neq(s(6), 0)
	call(block477(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block477(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block486(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block488(s(4),s(3),s(2),s(1),s(0)))

block488(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block96(s(0)))
	nop(JUMP)

block76_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

