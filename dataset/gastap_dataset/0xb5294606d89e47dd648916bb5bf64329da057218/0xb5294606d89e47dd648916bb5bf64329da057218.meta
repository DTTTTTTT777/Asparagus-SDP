{
    "ProvideWorkOrder": {
        "function_list": [
            "ProvideWorkOrder(address,address,address,uint128)",
            "start(address)",
            "complete(uint256,string)",
            "completeTransaction()"
        ],
        "initial_state": {
            "ProvideWorkOrder(address,address,address,uint128)": {
                "argument": {
                    "_identifier": "uint128"
                },
                "contract": {
                    "identifier": "uint128",
                    "amount": "uint256",
                    "details": "string"
                }
            },
            "start(address)": {
                "argument": {},
                "contract": {
                    "identifier": "uint128",
                    "amount": "uint256",
                    "details": "string"
                }
            },
            "complete(uint256,string)": {
                "argument": {
                    "_amount": "uint256",
                    "_details": "string"
                },
                "contract": {
                    "identifier": "uint128",
                    "amount": "uint256",
                    "details": "string"
                }
            },
            "completeTransaction()": {
                "argument": {},
                "contract": {
                    "identifier": "uint128",
                    "amount": "uint256",
                    "details": "string"
                }
            }
        },
        "function_block_mapping": {
            "start(address)": [
                976,
                295
            ],
            "complete(uint256,string)": [
                411,
                141
            ],
            "completeTransaction()": [
                966,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2097": [
                "paymentEscrow.transfer(paymentAmount)"
            ],
            "jump2097": [
                "paymentEscrow.transfer(paymentAmount)",
                "paymentEscrow.transfer(paymentAmount)"
            ],
            "block2223": [
                "prvd.transfer(feeAmount)"
            ],
            "jump2223": [
                "prvd.transfer(feeAmount)",
                "prvd.transfer(feeAmount)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assertTrue(bool)",
            "assertFalse(bool)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assertTrue(bool)": {
                "argument": {},
                "contract": {}
            },
            "assertFalse(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}