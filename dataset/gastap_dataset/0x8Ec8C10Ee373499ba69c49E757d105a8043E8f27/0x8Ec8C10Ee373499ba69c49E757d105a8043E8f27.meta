{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "subApproval(address,uint256)": [
                832,
                229
            ],
            "balanceOf(address)": [
                424,
                141
            ],
            "addApproval(address,uint256)": [
                612,
                185
            ],
            "allowance(address,address)": [
                713,
                207
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                511,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BurnableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "burn(uint256)": {
                "argument": {
                    "burnAmount": "uint256"
                },
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "subApproval(address,uint256)": [
                899,
                251
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "burn(uint256)": [
                446,
                141
            ],
            "allowance(address,address)": [
                780,
                229
            ],
            "addApproval(address,uint256)": [
                679,
                207
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                578,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                512,
                141
            ],
            "approve(address,uint256)": [
                235,
                75
            ],
            "setUpgradeAgent(address)": [
                1167,
                339
            ],
            "subApproval(address,uint256)": [
                1353,
                383
            ],
            "balanceOf(address)": [
                731,
                207
            ],
            "canUpgrade()": [
                875,
                251
            ],
            "addApproval(address,uint256)": [
                1023,
                295
            ],
            "allowance(address,address)": [
                1234,
                361
            ],
            "transferFrom(address,address,uint256)": [
                379,
                119
            ],
            "transfer(address,uint256)": [
                922,
                273
            ],
            "setUpgradeMaster(address)": [
                1454,
                405
            ],
            "getUpgradeState()": [
                818,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump5043": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "jump4836": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block3049": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump3049": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block5043": [
                "upgradeAgent.originalSupply()"
            ],
            "block4836": [
                "upgradeAgent.isUpgradeAgent()"
            ]
        }
    },
    "SunriseToken": {
        "function_list": [
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)",
            "SunriseToken(address,string,string,uint256,uint256)",
            "transferPrivileged(address,uint256)",
            "getPrivilegedBalance(address)",
            "transferFromPrivileged(address,address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "burnAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "SunriseToken(address,string,string,uint256,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_totalSupply": "uint256",
                    "_decimals": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferPrivileged(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getPrivilegedBalance(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFromPrivileged(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                944,
                229
            ],
            "allowance(address,address)": [
                2117,
                537
            ],
            "transferFrom(address,address,uint256)": [
                723,
                163
            ],
            "subApproval(address,uint256)": [
                2236,
                559
            ],
            "approve(address,uint256)": [
                478,
                97
            ],
            "getPrivilegedBalance(address)": [
                1819,
                449
            ],
            "transferPrivileged(address,uint256)": [
                622,
                141
            ],
            "canUpgrade()": [
                1671,
                405
            ],
            "addApproval(address,uint256)": [
                1906,
                471
            ],
            "balanceOf(address)": [
                1296,
                317
            ],
            "setUpgradeMaster(address)": [
                2424,
                603
            ],
            "transferFromPrivileged(address,address,uint256)": [
                989,
                251
            ],
            "setUpgradeAgent(address)": [
                2050,
                515
            ],
            "burn(uint256)": [
                899,
                207
            ],
            "transfer(address,uint256)": [
                1718,
                427
            ],
            "getUpgradeState()": [
                1383,
                339
            ]
        },
        "block_CALL_mapping": {
            "block8000": [
                "upgradeAgent.originalSupply()"
            ],
            "block5106": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump8000": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block7793": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump5106": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump7793": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ]
        }
    },
    "SunriseTokenSale": {
        "function_list": [
            "SunriseTokenSale(uint256,uint256,uint256,SunriseToken)",
            "fallback()",
            "transferOwnership(address)",
            "WithdrawETH(uint256)",
            "WithdrawAllETH()",
            "WithdrawTokens(uint256)",
            "ChangeCost(uint256)",
            "ChangeStart(uint256)",
            "ChangeEnd(uint256)"
        ],
        "initial_state": {
            "SunriseTokenSale(uint256,uint256,uint256,SunriseToken)": {
                "argument": {
                    "start": "uint256",
                    "end": "uint256",
                    "costOfEachToken": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "WithdrawETH(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "WithdrawAllETH()": {
                "argument": {},
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "WithdrawTokens(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "ChangeCost(uint256)": {
                "argument": {
                    "costOfEachToken": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "ChangeStart(uint256)": {
                "argument": {
                    "start": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            },
            "ChangeEnd(uint256)": {
                "argument": {
                    "end": "uint256"
                },
                "contract": {
                    "startline": "uint256",
                    "deadline": "uint256",
                    "price": "uint256",
                    "amountRaised": "uint256",
                    "totalTokensSold": "uint256",
                    "threshold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "ChangeEnd(uint256)": [
                1755,
                427
            ],
            "WithdrawETH(uint256)": [
                1468,
                317
            ],
            "ChangeStart(uint256)": [
                879,
                75
            ],
            "WithdrawAllETH()": [
                1012,
                141
            ],
            "ChangeCost(uint256)": [
                1643,
                383
            ],
            "transferOwnership(address)": [
                1688,
                405
            ],
            "WithdrawTokens(uint256)": [
                924,
                97
            ]
        },
        "block_CALL_mapping": {
            "block815_0": [
                "tokenReward.transfer(msg.sender, tokensToSend)"
            ],
            "block815": [
                "tokenReward.transfer(msg.sender, tokensToSend)"
            ],
            "jump815": [
                "tokenReward.transfer(msg.sender, tokensToSend)",
                "tokenReward.transfer(msg.sender, tokensToSend)"
            ],
            "jump2704": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "jump815_0": [
                "tokenReward.transfer(msg.sender, tokensToSend)",
                "tokenReward.transfer(msg.sender, tokensToSend)"
            ],
            "block340": [
                "beneficiary.transfer(amount)"
            ],
            "block2222": [
                "tokenReward.transfer(beneficiary, amount)"
            ],
            "jump2382": [
                "beneficiary.transfer(amountRaised)",
                "beneficiary.transfer(amountRaised)"
            ],
            "jump2222": [
                "tokenReward.transfer(beneficiary, amount)",
                "tokenReward.transfer(beneficiary, amount)"
            ],
            "jump340_0": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "block2382": [
                "beneficiary.transfer(amountRaised)"
            ],
            "jump340": [
                "beneficiary.transfer(amount)",
                "beneficiary.transfer(amount)"
            ],
            "block340_0": [
                "beneficiary.transfer(amount)"
            ],
            "block2704": [
                "beneficiary.transfer(amount)"
            ]
        }
    }
}