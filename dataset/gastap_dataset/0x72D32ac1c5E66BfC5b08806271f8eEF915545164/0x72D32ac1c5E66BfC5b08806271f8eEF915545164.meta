{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                313,
                97
            ],
            "balanceOf(address)": [
                639,
                185
            ],
            "allowance(address,address)": [
                1118,
                273
            ],
            "transferFrom(address,address,uint256)": [
                457,
                141
            ],
            "transfer(address,uint256)": [
                870,
                229
            ]
        },
        "block_CALL_mapping": {
            "block2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump2404": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "KeeToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "KeeToken()",
            "updateICOmask(uint256,uint256)",
            "setICObyAddress(address,uint256)",
            "clearICObyAddress(address)",
            "icoBalanceOf(address,address)",
            "pushICO(uint256)",
            "addToken(address,uint8)",
            "updateToken(uint256,address,uint8)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "icoNumberBalanceOf(address,uint256)",
            "transferX(address,address)",
            "internalBalanceOf(address,uint256)",
            "coinBal(KeeToken.AddRec,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "KeeToken()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "updateICOmask(uint256,uint256)": {
                "argument": {
                    "maskPos": "uint256",
                    "newMask": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "setICObyAddress(address,uint256)": {
                "argument": {
                    "maskPos": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "clearICObyAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "icoBalanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "pushICO(uint256)": {
                "argument": {
                    "mask": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "addToken(address,uint8)": {
                "argument": {
                    "decimalPlaces": "uint8"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "updateToken(uint256,address,uint8)": {
                "argument": {
                    "tokenPos": "uint256",
                    "decimalPlaces": "uint8"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "icoNumberBalanceOf(address,uint256)": {
                "argument": {
                    "icoMaskPtr": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "transferX(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "internalBalanceOf(address,uint256)": {
                "argument": {
                    "icoRegister": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            },
            "coinBal(KeeToken.AddRec,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "symbol": "string",
                    "decimals": "uint8",
                    "name": "string",
                    "eligible": "KeeToken.AddRec[]",
                    "icoArray": "uint256[]"
                }
            }
        },
        "function_block_mapping": {
            "addToken(address,uint8)": [
                1734,
                405
            ],
            "setICObyAddress(address,uint256)": [
                2006,
                471
            ],
            "balanceOf(address)": [
                6649,
                855
            ],
            "allowance(address,address)": [
                2148,
                515
            ],
            "transferFrom(address,address,uint256)": [
                687,
                163
            ],
            "approve(address,uint256)": [
                456,
                97
            ],
            "icoBalanceOf(address,address)": [
                869,
                207
            ],
            "pushICO(uint256)": [
                2334,
                559
            ],
            "clearICObyAddress(address)": [
                1294,
                295
            ],
            "transferOwnership(address)": [
                2267,
                537
            ],
            "updateICOmask(uint256,uint256)": [
                1679,
                383
            ],
            "updateToken(uint256,address,uint8)": [
                988,
                229
            ],
            "icoNumberBalanceOf(address,uint256)": [
                1078,
                251
            ],
            "transfer(address,uint256)": [
                1814,
                427
            ]
        },
        "block_CALL_mapping": {
            "jump6649_2": [
                "ERC20(ico.add).balanceOf(from)",
                "ERC20(ico.add).balanceOf(from)"
            ],
            "jump6649_3": [
                "ERC20(ico.add).balanceOf(from)",
                "ERC20(ico.add).balanceOf(from)"
            ],
            "jump6649_0": [
                "ERC20(ico.add).balanceOf(from)",
                "ERC20(ico.add).balanceOf(from)"
            ],
            "jump6649_1": [
                "ERC20(ico.add).balanceOf(from)",
                "ERC20(ico.add).balanceOf(from)"
            ],
            "block6649_0": [
                "ERC20(ico.add).balanceOf(from)"
            ],
            "block6649_1": [
                "ERC20(ico.add).balanceOf(from)"
            ],
            "block6649_2": [
                "ERC20(ico.add).balanceOf(from)"
            ],
            "block6649": [
                "ERC20(ico.add).balanceOf(from)"
            ],
            "block6649_3": [
                "ERC20(ico.add).balanceOf(from)"
            ],
            "jump6649": [
                "ERC20(ico.add).balanceOf(from)",
                "ERC20(ico.add).balanceOf(from)"
            ]
        }
    }
}