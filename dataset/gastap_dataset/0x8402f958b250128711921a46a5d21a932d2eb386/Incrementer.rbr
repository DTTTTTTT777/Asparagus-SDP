jump0(s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	lt(s(1), s(0))
	call(block65())

jump0(s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	geq(s(1), s(0))
	call(block13(g(c), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize))

block0(g(c), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, returndatasize))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	eq(s(2), s(1))
	call(block70(s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))

jump13(s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	neq(s(2), s(1))
	call(block65_0(s(0)))

block13(g(c), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1824677303
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, calldataload, caller, callvalue, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block65()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block70(s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = 78
	nop(PUSH2)
	s(2) = 80
	nop(PUSH2)
	call(block80(s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(JUMP)

block78(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block80(s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = callvalue
	nop(CALLVALUE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 10
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump80(s(4),s(3),s(2),s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump80(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(4), s(3))
	call(block100(s(2), s(1), s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))

jump80(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(4), s(3))
	call(block96(s(2), s(1), s(0)))

block96(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block100(s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(c)
	nop(SLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	g(c) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(4) = g(c)
	nop(SLOAD)
	call(jump100(s(4),s(3),s(2),s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump100(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), s(3))
	call(block360(s(2), s(1), s(0)))

jump100(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), s(3))
	call(block129(s(2), s(1), s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))

jump129(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), 0)
	call(block351(s(3), s(2), s(1), s(0),g(c)))

jump129(s(4), s(3), s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), 0)
	call(block342(s(3), s(2), s(1), s(0), returndatasize))

block129(s(2), s(1), s(0), g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize)=>
	s(3) = 108720883178375955848428439103213358149418076926486175089071761888074293090763
	nop(PUSH32)
	s(4) = caller
	nop(CALLER)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump129(s(4),s(3),s(2),s(1),s(0),g(c), l(l2), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block342(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block351(s(3), s(2), s(1), s(0), g(c))=>
	nop(JUMPDEST)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(c) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block360(s(2),s(1),s(0)))

block360(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block78(s(0)))
	nop(JUMP)

block65_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

