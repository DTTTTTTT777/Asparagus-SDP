{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "TokenERC20": {
        "function_list": [
            "TokenERC20(uint256,string,string,uint8)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "TokenERC20(uint256,string,string,uint8)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                335,
                97
            ],
            "burn(uint256)": [
                661,
                185
            ],
            "burnFrom(address,uint256)": [
                817,
                229
            ],
            "transferFrom(address,address,uint256)": [
                479,
                141
            ],
            "approveAndCall(address,uint256,bytes)": [
                1139,
                295
            ],
            "transfer(address,uint256)": [
                1062,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3394": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "TESTAhihi": {
        "function_list": [
            "TokenERC20(uint256,string,string,uint8)",
            "_transfer(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)",
            "owned()",
            "transferOwnership(address)",
            "setAllowMining(bool)",
            "TESTAhihi()",
            "proofOfWork(uint256)",
            "setMinBalance(uint256)",
            "_transfer(address,address,uint256)",
            "mintToken(address,uint256)",
            "freezeAccount(address,bool)",
            "setPrices(uint256,uint256)",
            "buy()",
            "sell(uint256)",
            "transfer(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "TokenERC20(uint256,string,string,uint8)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setAllowMining(bool)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "TESTAhihi()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "proofOfWork(uint256)": {
                "argument": {
                    "nonce": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setMinBalance(uint256)": {
                "argument": {
                    "minimumBalanceInFinney": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "freezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setPrices(uint256,uint256)": {
                "argument": {
                    "newSellPrice": "uint256",
                    "newBuyPrice": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "tokenSymbol": "string",
                    "tokenDecimals": "uint8",
                    "sellPrice": "uint256",
                    "buyPrice": "uint256",
                    "currentChallenge": "bytes32",
                    "timeOfLastProof": "uint256",
                    "difficulty": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buy()": [
                2149,
                559
            ],
            "transferFrom(address,address,uint256)": [
                797,
                185
            ],
            "sell(uint256)": [
                2709,
                713
            ],
            "approve(address,uint256)": [
                610,
                119
            ],
            "burnFrom(address,uint256)": [
                1587,
                427
            ],
            "transferOwnership(address)": [
                2833,
                757
            ],
            "setPrices(uint256,uint256)": [
                411,
                75
            ],
            "setMinBalance(uint256)": [
                2327,
                625
            ],
            "proofOfWork(uint256)": [
                1234,
                339
            ],
            "mintToken(address,uint256)": [
                1510,
                405
            ],
            "approveAndCall(address,uint256,bytes)": [
                2372,
                647
            ],
            "setAllowMining(bool)": [
                2543,
                669
            ],
            "burn(uint256)": [
                1071,
                273
            ],
            "transfer(address,uint256)": [
                2159,
                581
            ],
            "freezeAccount(address,bool)": [
                2754,
                735
            ]
        },
        "block_CALL_mapping": {
            "jump5924": [
                "_to.transfer(((minBalanceForAccounts - _to.balance) / sellPrice) * sellPrice)",
                "_to.transfer(((minBalanceForAccounts - _to.balance) / sellPrice) * sellPrice)"
            ],
            "jump6714": [
                "msg.sender.transfer(amount * sellPrice)",
                "msg.sender.transfer(amount * sellPrice)"
            ],
            "block6462": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump6462": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block6714": [
                "msg.sender.transfer(amount * sellPrice)"
            ],
            "jump6714_0": [
                "msg.sender.transfer(amount * sellPrice)",
                "msg.sender.transfer(amount * sellPrice)"
            ],
            "block5924": [
                "_to.transfer(((minBalanceForAccounts - _to.balance) / sellPrice) * sellPrice)"
            ],
            "block6714_0": [
                "msg.sender.transfer(amount * sellPrice)"
            ]
        }
    }
}