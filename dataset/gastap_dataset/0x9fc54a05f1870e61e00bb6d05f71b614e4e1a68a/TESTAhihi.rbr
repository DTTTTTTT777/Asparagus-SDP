block0(g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	lt(s(1), s(0))
	call(block406())

jump0(s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	geq(s(1), s(0))
	call(block13(g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value))

jump13(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block411(s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))

jump13(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block13(g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 100597159
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newBuyPrice, newOwner, newSellPrice, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block466(s(0),g(name), l(l6), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block65(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(name), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block610(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump76(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block87(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block711(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block98(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 432727138
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block754(s(0),g(difficulty), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block109(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block797(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump109(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

jump120(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block930(s(0),g(decimals), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block120(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(decimals), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 932037596
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block979(s(0), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block142(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 999811158
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1022(s(0), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

jump153(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1071(s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value))

jump153(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block153(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1117154408
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1140(s(0),g(sellPrice), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

block164(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1265959732
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1371395461
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1183(s(0),g(currentChallenge), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))

jump186(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1234(s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, callvalue, nonce, number, timestamp))

jump186(s(2), s(1), s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))

block186(s(0), g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1544617480
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(minBalanceForAccounts), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, blockhash_0, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, nonce, number, returndatasize, spender, target, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1279(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump197(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))

block197(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1812113713
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1423(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump208(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))

block219(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2043039848
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1510(s(0),g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target))

jump219(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, mintedAmount, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

jump230(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1587(s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value))

jump230(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

block230(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2043438992
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(totalSupply), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, from, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2070004512
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1688(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump241(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

block252(s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2177373341
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1832(s(0),g(timeOfLastProof), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(minBalanceForAccounts), g(timeOfLastProof), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

block263(s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2250260747
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1875(s(0),g(buyPrice), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

jump274(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block1918(s(0),g(owner), l(l1), l(l0), callvalue))

jump274(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

block274(s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2005(s(0),g(symbol), l(l6), l(l2), l(l1), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(symbol), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

block296(s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2800922170
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump296(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2149(s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))

jump296(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(buyPrice), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))

jump307(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	eq(s(2), s(1))
	call(block2159(s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value))

jump307(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value))

block307(s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block2236(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump318(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value))

block318(s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3021264054
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3374159212
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block2327(s(0),g(minBalanceForAccounts), g(owner), calldatasize, caller, callvalue, minimumBalanceInFinney))

jump329(s(2), s(1), s(0), g(minBalanceForAccounts), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, minimumBalanceInFinney, newOwner, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, returndatasize, spender, target, value))

jump340(s(2), s(1), s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, returndatasize, spender, target, value)=>
	eq(s(2), s(1))
	call(block2372(s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))

jump340(s(2), s(1), s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, returndatasize, spender, target, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block340(s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, returndatasize, spender, target, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3404319313
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, extcodesize, extraData, freeze, gas, newOwner, returndatasize, spender, target, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2543(s(0),g(isAllowMining), g(owner), allowMining, calldatasize, caller, callvalue))

jump351(s(2), s(1), s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block362(s(0),g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block351(s(0), g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3513067662
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(isAllowMining), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, allowMining, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2590(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump362(s(2), s(1), s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block373(s(0),g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))

block362(s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldataload, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	eq(s(2), s(1))
	call(block2709(s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))

jump373(s(2), s(1), s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	neq(s(2), s(1))
	call(block384(s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, target))

block373(s(0), g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3833895730
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(sellPrice), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, freeze, newOwner, returndatasize, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block384(s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, target)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3877917340
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, target))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, target)=>
	eq(s(2), s(1))
	call(block2754(s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))

jump384(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, newOwner, target)=>
	neq(s(2), s(1))
	call(block395(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

block395(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block2833(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump395(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block406_0(s(0)))

block406()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block411(s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump411(s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump411(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	eq(s(2), 0)
	call(block423(s(1), s(0),g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice))

jump411(s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, callvalue, newBuyPrice, newSellPrice)=>
	neq(s(2), 0)
	call(block419(s(1), s(0)))

block419(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block423(s(1), s(0), g(buyPrice), g(sellPrice), g(owner), calldatasize, caller, newBuyPrice, newSellPrice)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 464
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newSellPrice
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = newBuyPrice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 2900
	nop(PUSH2)
	call(block2900(s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(JUMP)

block464(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block466(s(0), g(name), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump466(s(2),s(1),s(0),g(name), l(l6), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump466(s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block478(s(1), s(0),g(name), l(l6), l(l2), l(l1), l(l0)))

jump466(s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block474(s(1), s(0)))

block474(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block478(s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 487
	nop(PUSH2)
	s(2) = 3009
	nop(PUSH2)
	call(block3009(s(1),s(0),g(name), l(l6), l(l2), l(l1), l(l0)))
	nop(JUMP)

block487(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block524(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block551(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump524(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block533(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block524(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump524(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block533(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 524
	nop(PUSH2)
	call(block524(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block551(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump551(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block596(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump551(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block571(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block571(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block596(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block596(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump610(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block622(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value))

jump610(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block618(s(1), s(0)))

block610(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump610(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block618(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block622(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 685
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3167
	nop(PUSH2)
	call(block3167(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block685(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump711(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block723(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump711(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block719(s(1), s(0)))

block711(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump711(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block719(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block723(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 732
	nop(PUSH2)
	s(2) = 3308
	nop(PUSH2)
	call(block3308(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block732(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump754(s(2), s(1), s(0), g(difficulty), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block766(s(1), s(0),g(difficulty), l(l1), l(l0)))

jump754(s(2), s(1), s(0), g(difficulty), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block762(s(1), s(0)))

block754(s(0), g(difficulty), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump754(s(2),s(1),s(0),g(difficulty), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block762(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block766(s(1), s(0), g(difficulty), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 775
	nop(PUSH2)
	s(2) = 3314
	nop(PUSH2)
	call(block3314(s(1),s(0),g(difficulty), l(l1), l(l0)))
	nop(JUMP)

block775(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump797(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block809(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value))

jump797(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block805(s(1), s(0)))

block797(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump797(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block805(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block809(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 904
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 3320
	nop(PUSH2)
	call(block3320(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block904(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump930(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block942(s(1), s(0),g(decimals), l(l1), l(l0)))

jump930(s(2), s(1), s(0), g(decimals), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block938(s(1), s(0)))

block930(s(0), g(decimals), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump930(s(2),s(1),s(0),g(decimals), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block938(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block942(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 951
	nop(PUSH2)
	s(2) = 3621
	nop(PUSH2)
	call(block3621(s(1),s(0),g(decimals), l(l1), l(l0)))
	nop(JUMP)

block951(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump979(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block991(s(1), s(0), l(l1), l(l0)))

jump979(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block987(s(1), s(0)))

block979(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump979(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block987(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block991(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1000
	nop(PUSH2)
	s(2) = 3640
	nop(PUSH2)
	call(block3640(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1000(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1022(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1022(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1022(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1034(s(1), s(0), l(l1), l(l0)))

jump1022(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1030(s(1), s(0)))

block1030(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1034(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1043
	nop(PUSH2)
	s(2) = 3648
	nop(PUSH2)
	call(block3648(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1043(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1071(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	eq(s(2), 0)
	call(block1083(s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, value))

jump1071(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	neq(s(2), 0)
	call(block1079(s(1), s(0)))

block1071(s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1071(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1079(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1083(s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1114
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3653
	nop(PUSH2)
	call(block3653(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1114(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1140(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1152(s(1), s(0),g(sellPrice), l(l1), l(l0)))

jump1140(s(2), s(1), s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1148(s(1), s(0)))

block1140(s(0), g(sellPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1140(s(2),s(1),s(0),g(sellPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1148(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1152(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1161
	nop(PUSH2)
	s(2) = 3913
	nop(PUSH2)
	call(block3913(s(1),s(0),g(sellPrice), l(l1), l(l0)))
	nop(JUMP)

block1161(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1183(s(0), g(currentChallenge), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1183(s(2),s(1),s(0),g(currentChallenge), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1183(s(2), s(1), s(0), g(currentChallenge), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1195(s(1), s(0),g(currentChallenge), l(l1), l(l0)))

jump1183(s(2), s(1), s(0), g(currentChallenge), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1191(s(1), s(0)))

block1191(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1195(s(1), s(0), g(currentChallenge), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1204
	nop(PUSH2)
	s(2) = 3919
	nop(PUSH2)
	call(block3919(s(1),s(0),g(currentChallenge), l(l1), l(l0)))
	nop(JUMP)

block1204(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1234(s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, callvalue, nonce, number, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1234(s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, callvalue, nonce, number, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1234(s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, callvalue, nonce, number, timestamp)=>
	eq(s(2), 0)
	call(block1246(s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, nonce, number, timestamp))

jump1234(s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, callvalue, nonce, number, timestamp)=>
	neq(s(2), 0)
	call(block1242(s(1), s(0)))

block1242(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1246(s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, calldatasize, caller, nonce, number, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1277
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = nonce
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3925
	nop(PUSH2)
	call(block3925(s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(JUMP)

block1277(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1279(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1279(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1279(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1291(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump1279(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1287(s(1), s(0)))

block1287(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1291(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1300
	nop(PUSH2)
	s(2) = 4311
	nop(PUSH2)
	call(block4311(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1300(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1337(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))

block1337(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1337(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1337(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1364(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump1337(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1346(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0)))

block1346(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1337
	nop(PUSH2)
	call(block1337(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))
	nop(JUMP)

jump1364(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block1409(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1364(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block1384(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block1364(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1364(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1384(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1409(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1409(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1423(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1423(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1423(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1435(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump1423(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1431(s(1), s(0)))

block1431(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1435(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1488
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4368
	nop(PUSH2)
	call(block4368(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block1488(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1510(s(2), s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	eq(s(2), 0)
	call(block1522(s(1), s(0),g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, mintedAmount, target))

jump1510(s(2), s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	neq(s(2), 0)
	call(block1518(s(1), s(0)))

block1510(s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1510(s(2),s(1),s(0),g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, mintedAmount, target))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1518(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1522(s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, mintedAmount, target)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1585
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = target
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = mintedAmount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4392
	nop(PUSH2)
	call(block4392(s(3),s(2),s(1),s(0),g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller))
	nop(JUMP)

block1585(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1587(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	eq(s(2), 0)
	call(block1599(s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, value))

jump1587(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	neq(s(2), 0)
	call(block1595(s(1), s(0)))

block1587(s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1587(s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1595(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1599(s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1662
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4761
	nop(PUSH2)
	call(block4761(s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1662(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1688(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1688(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1688(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1700(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump1688(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1696(s(1), s(0)))

block1696(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1700(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1709
	nop(PUSH2)
	s(2) = 5299
	nop(PUSH2)
	call(block5299(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block1709(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block1746(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))

block1746(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump1746(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1746(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block1773(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump1746(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block1755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0)))

block1755(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 1746
	nop(PUSH2)
	call(block1746(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l2), l(l0)))
	nop(JUMP)

jump1773(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block1818(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1773(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block1793(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block1773(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1773(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1793(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1818(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1818(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1832(s(2), s(1), s(0), g(timeOfLastProof), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1844(s(1), s(0),g(timeOfLastProof), l(l1), l(l0)))

jump1832(s(2), s(1), s(0), g(timeOfLastProof), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1840(s(1), s(0)))

block1832(s(0), g(timeOfLastProof), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1832(s(2),s(1),s(0),g(timeOfLastProof), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1840(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1844(s(1), s(0), g(timeOfLastProof), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1853
	nop(PUSH2)
	s(2) = 5356
	nop(PUSH2)
	call(block5356(s(1),s(0),g(timeOfLastProof), l(l1), l(l0)))
	nop(JUMP)

block1853(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1875(s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1875(s(2),s(1),s(0),g(buyPrice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1875(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1887(s(1), s(0),g(buyPrice), l(l1), l(l0)))

jump1875(s(2), s(1), s(0), g(buyPrice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1883(s(1), s(0)))

block1883(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1887(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1896
	nop(PUSH2)
	s(2) = 5362
	nop(PUSH2)
	call(block5362(s(1),s(0),g(buyPrice), l(l1), l(l0)))
	nop(JUMP)

block1896(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1918(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1930(s(1), s(0),g(owner), l(l1), l(l0)))

jump1918(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1926(s(1), s(0)))

block1918(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1918(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1926(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1930(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1939
	nop(PUSH2)
	s(2) = 5368
	nop(PUSH2)
	call(block5368(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block1939(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2005(s(0), g(symbol), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2005(s(2),s(1),s(0),g(symbol), l(l6), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2005(s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2017(s(1), s(0),g(symbol), l(l6), l(l2), l(l1), l(l0)))

jump2005(s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2013(s(1), s(0)))

block2013(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2017(s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2026
	nop(PUSH2)
	s(2) = 5405
	nop(PUSH2)
	call(block5405(s(1),s(0),g(symbol), l(l6), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2026(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	ls(1) = s(6)
	ls(2) = s(7)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2063(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

block2063(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2063(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2063(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block2090(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2063(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block2072(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block2072(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2063
	nop(PUSH2)
	call(block2063(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block2090(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2090(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2090(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	eq(s(7), 0)
	call(block2135(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2090(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	neq(s(7), 0)
	call(block2110(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

block2110(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	ll = s(8)
	s(8) = fresh(0)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	ls(1) = s(8)
	ls(2) = s(9)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2135(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2135(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2149(s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = 2157
	nop(PUSH2)
	s(2) = 5563
	nop(PUSH2)
	call(block5563(s(1),s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(JUMP)

block2157(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2159(s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2159(s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2159(s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	eq(s(2), 0)
	call(block2171(s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, returndatasize, to, value))

jump2159(s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, to, value)=>
	neq(s(2), 0)
	call(block2167(s(1), s(0)))

block2167(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2171(s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, calldatasize, caller, returndatasize, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2234
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5595
	nop(PUSH2)
	call(block5595(s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block2234(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2236(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2236(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2236(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2248(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump2236(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2244(s(1), s(0)))

block2244(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2248(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2301
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5975
	nop(PUSH2)
	call(block5975(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2301(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2327(s(2), s(1), s(0), g(minBalanceForAccounts), g(owner), calldatasize, caller, callvalue, minimumBalanceInFinney)=>
	eq(s(2), 0)
	call(block2339(s(1), s(0),g(minBalanceForAccounts), g(owner), calldatasize, caller, minimumBalanceInFinney))

jump2327(s(2), s(1), s(0), g(minBalanceForAccounts), g(owner), calldatasize, caller, callvalue, minimumBalanceInFinney)=>
	neq(s(2), 0)
	call(block2335(s(1), s(0)))

block2327(s(0), g(minBalanceForAccounts), g(owner), calldatasize, caller, callvalue, minimumBalanceInFinney)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2327(s(2),s(1),s(0),g(minBalanceForAccounts), g(owner), calldatasize, caller, callvalue, minimumBalanceInFinney))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2335(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2339(s(1), s(0), g(minBalanceForAccounts), g(owner), calldatasize, caller, minimumBalanceInFinney)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2370
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = minimumBalanceInFinney
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6007
	nop(PUSH2)
	call(block6007(s(2),s(1),s(0),g(minBalanceForAccounts), g(owner), caller))
	nop(JUMP)

block2370(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2372(s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	eq(s(2), 0)
	call(block2384(s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value))

jump2372(s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	neq(s(2), 0)
	call(block2380(s(1), s(0)))

block2372(s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2372(s(2),s(1),s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, callvalue, extcodesize, extraData, gas, returndatasize, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2380(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2384(s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, calldatasize, caller, extcodesize, extraData, gas, returndatasize, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2517
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = extraData
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(8) = extraData
	nop(CALLDATALOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 31
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 32
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 64
	nop(PUSH1)
	l(l0) = s(11)
	nop(MSTORE)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(14) = s(11)
	nop(DUP3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 6117
	nop(PUSH2)
	call(block6117(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2517(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2543(s(2), s(1), s(0), g(isAllowMining), g(owner), allowMining, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block2555(s(1), s(0),g(isAllowMining), g(owner), allowMining, calldatasize, caller))

jump2543(s(2), s(1), s(0), g(isAllowMining), g(owner), allowMining, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block2551(s(1), s(0)))

block2543(s(0), g(isAllowMining), g(owner), allowMining, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2543(s(2),s(1),s(0),g(isAllowMining), g(owner), allowMining, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2551(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2555(s(1), s(0), g(isAllowMining), g(owner), allowMining, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2588
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = allowMining
	nop(CALLDATALOAD)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6504
	nop(PUSH2)
	call(block6504(s(2),s(1),s(0),g(isAllowMining), g(owner), caller))
	nop(JUMP)

block2588(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2590(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2590(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2590(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2602(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump2590(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2598(s(1), s(0)))

block2598(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2602(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2687
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6624
	nop(PUSH2)
	call(block6624(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2687(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2709(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block2721(s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize))

jump2709(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block2717(s(1), s(0)))

block2709(s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2709(s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2717(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2721(s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, amount, balance, calldatasize, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2752
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = amount
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6661
	nop(PUSH2)
	call(block6661_0(s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block2752(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2754(s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2754(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2754(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	eq(s(2), 0)
	call(block2766(s(1), s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, freeze, target))

jump2754(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, freeze, target)=>
	neq(s(2), 0)
	call(block2762(s(1), s(0)))

block2762(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2766(s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), calldatasize, caller, freeze, target)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2831
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = target
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = freeze
	nop(CALLDATALOAD)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6792
	nop(PUSH2)
	call(block6792(s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2831(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2833(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2833(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2833(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block2845(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump2833(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block2841(s(1), s(0)))

block2841(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2845(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2898
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7085
	nop(PUSH2)
	call(block7085(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block2898(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2900(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump2900(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), g(sellPrice), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2900(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	eq(s(5), s(4))
	call(block2991(s(3), s(2), s(1), s(0),g(buyPrice), g(sellPrice)))

jump2900(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice), g(owner), caller)=>
	neq(s(5), s(4))
	call(block2987(s(3), s(2), s(1), s(0)))

block2987(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block2991(s(3), s(2), s(1), s(0), g(buyPrice), g(sellPrice))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 7
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(sellPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 8
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyPrice) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block464(s(0)))
	nop(JUMP)

jump3009(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block3159(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3009(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block3089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l6), l(l2), l(l1), l(l0)))

block3009(s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(name)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(name)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(name)
	s(7) = g(name)
	call(jump3009(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l6), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3089(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump3089(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(name), l(l6), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump3089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block3116(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l2), l(l1), l(l0)))

jump3089(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l6), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block3097(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(name), l(l2), l(l1), l(l0)))

block3097(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(name), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(name)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 3159
	nop(PUSH2)
	call(block3159(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3116(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block3130(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump3130(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block3130(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump3130(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block3150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block3130(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump3130(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block3150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block3159(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block3159(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block487(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3167(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block685(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3308(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block732(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3314(s(1), s(0), g(difficulty), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(difficulty)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block775(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3320(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block3461(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump3320(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block3457(s(5), s(4), s(3), s(2), s(1), s(0)))

block3320(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump3320(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3457(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block3461(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 6
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 3610
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 7243
	nop(PUSH2)
	call(block7243(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3610(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block904(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3621(s(1), s(0), g(decimals), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(decimals)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block951(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3640(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 44950000
	nop(PUSH4)
	s(3) = s(1)
	nop(DUP2)
	call(block1000(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3648(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1043(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3653(s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 5
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	call(jump3653(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3653(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(5), s(4))
	call(block3733(s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump3653(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(5), s(4))
	call(block3729(s(3), s(2), s(1), s(0)))

block3729(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block3733(s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 5
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1114(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3913(s(1), s(0), g(sellPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(sellPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1161(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3919(s(1), s(0), g(currentChallenge), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(currentChallenge)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1204(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3925(s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 9
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(isAllowMining)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump3925(s(5),s(4),s(3),s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3925(s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	eq(s(5), 0)
	call(block4306(s(4), s(3), s(2), s(1), s(0)))

jump3925(s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), g(isAllowMining), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	neq(s(5), 0)
	call(block3950(s(4), s(3), s(2), s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump3950(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	geq(s(6), s(5))
	call(block4089(s(4), s(3), s(2), s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump3950(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	lt(s(6), s(5))
	call(block4085(s(4), s(3), s(2), s(1), s(0)))

block3950(s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	s(5) = s(2)
	nop(DUP3)
	s(6) = 11
	nop(PUSH1)
	s(6) = g(currentChallenge)
	nop(SLOAD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 0
	nop(PUSH1)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 13
	nop(PUSH1)
	s(5) = g(difficulty)
	nop(SLOAD)
	s(6) = 6277101735386680763835789423207666416102355444464034512896
	nop(PUSH25)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 6277101735386680763835789423207666416102355444464034512895
	nop(PUSH24)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 6277101735386680763835789423207666416102355444464034512895
	nop(PUSH24)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump3950(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4085(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

jump4089(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	geq(s(6), s(5))
	call(block4112(s(4), s(3), s(2), s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump4089(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	lt(s(6), s(5))
	call(block4108(s(4), s(3), s(2), s(1), s(0)))

block4089(s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(5) = 12
	nop(PUSH1)
	s(5) = g(timeOfLastProof)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump4089(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4108(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block4112(s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(5) = 60
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	call(jump4112(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	neq(s(7), 0)
	call(block4124(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))

jump4112(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	eq(s(7), 0)
	call(block4123(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4123(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump4124(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	neq(s(8), 0)
	call(block4220(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l3), l(l2), l(l1), l(l0), blockhash_0, number, timestamp))

jump4124(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	eq(s(8), 0)
	call(block4219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block4124(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 5
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 600
	nop(PUSH2)
	s(8) = 13
	nop(PUSH1)
	s(8) = g(difficulty)
	nop(SLOAD)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump4124(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l7), l(l6), l(l3), l(l2), l(l1), l(l0), blockhash_0, caller, number, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block4220(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(difficulty), g(timeOfLastProof), g(currentChallenge), l(l3), l(l2), l(l1), l(l0), blockhash_0, number, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 13
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(difficulty) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 12
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(timeOfLastProof) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 11
	nop(PUSH1)
	s(6) = g(currentChallenge)
	nop(SLOAD)
	s(7) = 1
	nop(PUSH1)
	s(8) = number
	nop(NUMBER)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(7) = blockhash_0
	nop(BLOCKHASH)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 0
	nop(PUSH1)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l3) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 11
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(currentChallenge) = s(6)
	nop(SSTORE)
	nop(POP)
	call(block4306(s(4),s(3),s(2),s(1),s(0)))

block4306(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1277(s(0)))
	nop(JUMP)

block4311(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 38116766844934640260382965495601943069876728190003373287030537933452547719168
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1300(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block4368(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 5
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1488(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4392(s(3), s(2), s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump4392(s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4392(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller)=>
	eq(s(5), s(4))
	call(block4483(s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), address))

jump4392(s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), g(owner), l(l7), l(l6), l(l1), l(l0), address, caller)=>
	neq(s(5), s(4))
	call(block4479(s(3), s(2), s(1), s(0)))

block4479(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block4483(s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 5
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block1585(s(0)))
	nop(JUMP)

block4761(s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 5
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	call(jump4761(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4761(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(6), s(5))
	call(block4841(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump4761(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(6), s(5))
	call(block4837(s(4), s(3), s(2), s(1), s(0)))

block4837(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block4841(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 6
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	call(jump4841(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4841(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block4980(s(4), s(3), s(2), s(1), s(0),g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump4841(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block4976(s(4), s(3), s(2), s(1), s(0)))

block4976(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block4980(s(4), s(3), s(2), s(1), s(0), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 5
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 6
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(totalSupply)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(totalSupply) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG2)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1662(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5299(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 38109697185151755221576500878260578460995553613754915449809002645191091290112
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l2) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block1709(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5356(s(1), s(0), g(timeOfLastProof), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(timeOfLastProof)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1853(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5362(s(1), s(0), g(buyPrice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(buyPrice)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1896(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5368(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1939(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5405(s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = g(symbol)
	nop(SLOAD)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 32
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 64
	nop(PUSH1)
	l(l0) = s(5)
	nop(MSTORE)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	nop(DUP2)
	l(l1) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(symbol)
	nop(SLOAD)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(7)
	nop(DUP1)
	l(l1) = g(symbol)
	s(7) = g(symbol)
	call(jump5405(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l6), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5405(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block5555(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5405(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block5485(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l6), l(l2), l(l1), l(l0)))

jump5485(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block5512(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l2), l(l1), l(l0)))

jump5485(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block5493(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(symbol), l(l2), l(l1), l(l0)))

block5485(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l6), l(l2), l(l1), l(l0))=>
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	call(jump5485(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(symbol), l(l6), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block5493(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(symbol), l(l2), l(l1), l(l0))=>
	s(8) = 256
	nop(PUSH2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(10) = g(symbol)
	nop(SLOAD)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(5)
	nop(DUP4)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = 5555
	nop(PUSH2)
	call(block5555(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5512(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	call(block5526(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

jump5526(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block5526(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

jump5526(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block5546(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0)))

block5526(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	call(jump5526(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

block5546(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 31
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	call(block5555(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0)))

block5555(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2026(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump5563(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	neq(s(5), 0)
	call(block5578(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), address, caller))

jump5563(s(5), s(4), s(3), s(2), s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	eq(s(5), 0)
	call(block5577(s(4), s(3), s(2), s(1), s(0)))

block5563(s(1), s(0), g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 8
	nop(PUSH1)
	s(3) = g(buyPrice)
	nop(SLOAD)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = s(3)
	nop(DUP2)
	call(jump5563(s(5),s(4),s(3),s(2),s(1),s(0),g(buyPrice), l(l7), l(l6), l(l1), l(l0), address, caller, callvalue))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5577(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5578(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), address, caller)=>
	nop(JUMPDEST)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 5592
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7243
	nop(PUSH2)
	call(block7243_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block5592(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2157(s(0)))
	nop(JUMP)

jump5595(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(5), s(4))
	call(block5678(s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump5595(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(5), s(4))
	call(block5629(s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

block5595(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 14
	nop(PUSH1)
	s(4) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	call(jump5595(s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5629(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	s(4) = 5677
	nop(PUSH2)
	s(5) = 7
	nop(PUSH1)
	s(5) = g(sellPrice)
	nop(SLOAD)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(7) = 14
	nop(PUSH1)
	s(7) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	call(jump5629(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5629(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block5671(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump5629(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block5670(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5670(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5671(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 6661
	nop(PUSH2)
	call(block6661(s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block5677(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	call(block5678(s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

block5678(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 5689
	nop(PUSH2)
	s(5) = caller
	nop(CALLER)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 7243
	nop(PUSH2)
	call(block7243_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block5689(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 14
	nop(PUSH1)
	s(4) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	call(jump5689(s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5689(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(5), s(4))
	call(block5971(s(3), s(2), s(1), s(0)))

jump5689(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(5), s(4))
	call(block5723(s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

block5723(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	s(4) = 7
	nop(PUSH1)
	s(4) = g(sellPrice)
	nop(SLOAD)
	s(5) = 7
	nop(PUSH1)
	s(5) = g(sellPrice)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6) = balance
	nop(BALANCE)
	s(7) = 14
	nop(PUSH1)
	s(7) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	call(jump5723(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5723(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(7), 0)
	call(block5765(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump5723(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(7), 0)
	call(block5764(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5764(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5765(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	call(jump5765(s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5765(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	geq(s(5), s(4))
	call(block5804(s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump5765(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	lt(s(5), s(4))
	call(block5800(s(3), s(2), s(1), s(0)))

block5800(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump5804(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(9), 0)
	call(block5849(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump5804(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(9), 0)
	call(block5848(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5804(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 5855
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = address
	nop(ADDRESS)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(sellPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 14
	nop(PUSH1)
	s(9) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	call(jump5804(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5848(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5849(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 7243
	nop(PUSH2)
	call(block7243_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(JUMP)

jump5855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l0), balance, returndatasize)=>
	neq(s(9), 0)
	call(block5924(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize))

jump5855(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l0), balance, returndatasize)=>
	eq(s(9), 0)
	call(block5923(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5855(s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(sellPrice)
	nop(SLOAD)
	s(7) = 7
	nop(PUSH1)
	s(7) = g(sellPrice)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(8) = balance
	nop(BALANCE)
	s(9) = 14
	nop(PUSH1)
	s(9) = g(minBalanceForAccounts)
	nop(SLOAD)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	call(jump5855(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l0), balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5923(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump5924(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block5969(s(4), s(3), s(2), s(1), s(0)))

jump5924(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block5960(s(4), s(3), s(2), s(1), s(0), returndatasize))

block5924(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump5924(s(5),s(4),s(3),s(2),s(1),s(0), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5960(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block5969(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5971(s(3),s(2),s(1),s(0)))

block5971(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2234(s(0)))
	nop(JUMP)

block5975(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 10
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2301(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6007(s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(owner), caller)=>
	eq(s(4), s(3))
	call(block6098(s(2), s(1), s(0),g(minBalanceForAccounts)))

jump6007(s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(owner), caller)=>
	neq(s(4), s(3))
	call(block6094(s(2), s(1), s(0)))

block6007(s(2), s(1), s(0), g(minBalanceForAccounts), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6007(s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6094(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6098(s(2), s(1), s(0), g(minBalanceForAccounts))=>
	nop(JUMPDEST)
	s(3) = 1000000000000000
	nop(PUSH7)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = 14
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(minBalanceForAccounts) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2370(s(0)))
	nop(JUMP)

block6117(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 6133
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 3167
	nop(PUSH2)
	call(block3167_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block6133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	call(jump6133(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(7), 0)
	call(block6495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump6133(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(7), 0)
	call(block6139(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))

block6139(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2404383921
	nop(PUSH4)
	s(9) = caller
	nop(CALLER)
	s(10) = s(3)
	nop(DUP7)
	s(11) = address
	nop(ADDRESS)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	ls(1) = s(14)
	ls(2) = s(15)
	nop(MSTORE)
	s(14) = 4
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(14)
	nop(DUP3)
	ls(1) = s(16)
	ls(2) = s(17)
	nop(MSTORE)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	nop(DUP2)
	s(18) = l(l1)
	nop(MLOAD)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = s(16)
	nop(DUP1)
	s(17) = l(l1)
	nop(MLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 0
	nop(PUSH1)
	call(block6356(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))

jump6356(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	geq(s(23), s(22))
	call(block6383(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump6356(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	lt(s(23), s(22))
	call(block6365(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize))

block6356(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(22) = s(18)
	nop(DUP4)
	s(23) = s(21)
	nop(DUP2)
	call(jump6356(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6365(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0), extcodesize, gas, returndatasize)=>
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(22) = l(l2)
	nop(MLOAD)
	s(23) = s(21)
	nop(DUP2)
	s(24) = s(19)
	nop(DUP5)
	s(23) = s(24)+s(23)
	nop(ADD)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(23) = s(21)
	nop(DUP2)
	s(22) = s(23)+s(22)
	nop(ADD)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	nop(POP)
	s(22) = 6356
	nop(PUSH2)
	call(block6356(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0), extcodesize, gas, returndatasize))
	nop(JUMP)

jump6383(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block6428(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

jump6383(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block6403(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize))

block6383(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 31
	nop(PUSH1)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(16)
	nop(DUP1)
	call(jump6383(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6403(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(17)
	nop(DUP1)
	ll = s(18)
	s(18) = fresh(0)
	nop(MLOAD)
	s(19) = 1
	nop(PUSH1)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = 256
	nop(PUSH2)
	s(20) = s(21)^s(20)
	nop(EXP)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	call(block6428(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))

jump6428(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block6462(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize))

jump6428(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block6458(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block6428(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = s(9)
	s(9) = s(15)
	s(15) = s(16)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump6428(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6458(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump6462(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	eq(s(11), 0)
	call(block6482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump6462(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	neq(s(11), 0)
	call(block6473(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block6462(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump6462(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6473(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block6482(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 6496
	nop(PUSH2)
	call(block6496(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))
	nop(JUMP)

block6495(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	call(block6496(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block6496(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2517(s(1),s(0), l(l0)))
	nop(JUMP)

block6504(s(2), s(1), s(0), g(isAllowMining), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6504(s(4),s(3),s(2),s(1),s(0),g(isAllowMining), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6504(s(4), s(3), s(2), s(1), s(0), g(isAllowMining), g(owner), caller)=>
	eq(s(4), s(3))
	call(block6595(s(2), s(1), s(0),g(isAllowMining)))

jump6504(s(4), s(3), s(2), s(1), s(0), g(isAllowMining), g(owner), caller)=>
	neq(s(4), s(3))
	call(block6591(s(2), s(1), s(0)))

block6591(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6595(s(2), s(1), s(0), g(isAllowMining))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 9
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(isAllowMining)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(isAllowMining) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2588(s(0)))
	nop(JUMP)

block6624(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 6
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2687(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6661(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(7), s(6))
	call(block6703(s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump6661(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(7), s(6))
	call(block6699(s(5), s(4), s(3), s(2), s(1), s(0)))

block6661(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 7
	nop(PUSH1)
	s(6) = g(sellPrice)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	call(jump6661(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6699(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6703(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 6714
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = address
	nop(ADDRESS)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 7243
	nop(PUSH2)
	call(block7243_3(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block6714(s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = 7
	nop(PUSH1)
	s(8) = g(sellPrice)
	nop(SLOAD)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump6714(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6714(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(7), 0)
	call(block6788(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump6714(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(7), 0)
	call(block6779(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block6779(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block6788(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block5677(s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block6792(s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump6792(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6792(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block6883(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0)))

jump6792(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block6879(s(3), s(2), s(1), s(0)))

block6879(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6883(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 10
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 32657201770267406270387051459252782163643370607803865882362308449687686480805
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block2831(s(0)))
	nop(JUMP)

jump7085(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block7176(s(2), s(1), s(0),g(owner)))

jump7085(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block7172(s(2), s(1), s(0)))

block7085(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7085(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7172(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7176(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2898(s(0)))
	nop(JUMP)

jump7243(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(11), s(10))
	call(block7281(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7243(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(11), s(10))
	call(block7277(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7243(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump7243(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7277(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump7281(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block7358(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7281(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block7354(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7281(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump7281(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7354(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7358(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump7358(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7358(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(11), s(10))
	call(block7500(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7358(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(11), s(10))
	call(block7496(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7496(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump7500(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block7589(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7500(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block7585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7500(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump7500(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7585(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump7589(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block7678(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7589(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block7674(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7589(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump7589(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7674(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7678(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3610(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3167_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 6
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = caller
	nop(CALLER)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6133(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block406_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump6661_0(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	geq(s(4), s(3))
	call(block6703_0(s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize))

jump6661_0(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	lt(s(4), s(3))
	call(block6699_0(s(2), s(1), s(0)))

block6661_0(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 7
	nop(PUSH1)
	s(3) = g(sellPrice)
	nop(SLOAD)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	call(jump6661_0(s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6699_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6703_0(s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 6714
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = address
	nop(ADDRESS)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 7243
	nop(PUSH2)
	call(block7243_4(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block6714_0(s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = 7
	nop(PUSH1)
	s(5) = g(sellPrice)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump6714_0(s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6714_0(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block6788_0(s(3), s(2), s(1), s(0)))

jump6714_0(s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block6779_0(s(3), s(2), s(1), s(0), returndatasize))

block6779_0(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block6788_0(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block2752(s(0)))
	nop(JUMP)

block7243_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7243_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7243_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), s(7))
	call(block7281_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7243_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), s(7))
	call(block7277_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump7243_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(9), s(8))
	call(block7281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump7243_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(9), s(8))
	call(block7277_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7243_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump7243_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7243_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump7243_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7243_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	neq(s(9), s(8))
	call(block7281_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump7243_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	eq(s(9), s(8))
	call(block7277_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7243_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump7243_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7243_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(11), s(10))
	call(block7281_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump7243_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(11), s(10))
	call(block7277_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7243_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7243_4(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7243_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), s(7))
	call(block7281_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump7243_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), s(7))
	call(block7277_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7277_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7277_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7277_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7277_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7277_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7281_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump7281_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7281_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block7358_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7281_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block7354_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7281_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump7281_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7281_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(9), s(8))
	call(block7358_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump7281_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(9), s(8))
	call(block7354_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7281_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	call(jump7281_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7281_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	gt(s(9), s(8))
	call(block7358_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump7281_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	leq(s(9), s(8))
	call(block7354_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7281_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	call(jump7281_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7281_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	gt(s(11), s(10))
	call(block7358_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump7281_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	leq(s(11), s(10))
	call(block7354_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7281_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump7281_4(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7281_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	gt(s(8), s(7))
	call(block7358_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump7281_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	leq(s(8), s(7))
	call(block7354_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7354_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7354_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7354_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7354_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7354_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7358_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 5
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump7358_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7358_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block7500_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7358_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block7496_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7358_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump7358_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7358_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(9), s(8))
	call(block7500_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump7358_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(9), s(8))
	call(block7496_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump7358_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	gt(s(9), s(8))
	call(block7500_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump7358_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	leq(s(9), s(8))
	call(block7496_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7358_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(6)
	nop(DUP6)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(1)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	call(jump7358_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7358_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	gt(s(11), s(10))
	call(block7500_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump7358_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	leq(s(11), s(10))
	call(block7496_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7358_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 5
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 5
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	call(jump7358_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7358_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 5
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	call(jump7358_4(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7358_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	gt(s(8), s(7))
	call(block7500_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump7358_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	leq(s(8), s(7))
	call(block7496_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7496_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7496_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7496_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7496_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7496_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7500_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7500_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7500_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block7589_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7500_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block7585_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump7500_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(8), 0)
	call(block7589_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump7500_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(8), 0)
	call(block7585_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7500_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7500_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7500_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	eq(s(8), 0)
	call(block7589_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump7500_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	neq(s(8), 0)
	call(block7585_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7500_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7500_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7500_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump7500_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7500_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(10), 0)
	call(block7589_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump7500_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(10), 0)
	call(block7585_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump7500_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(7), 0)
	call(block7589_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump7500_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(7), 0)
	call(block7585_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7500_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7500_4(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7585_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7585_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7585_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7585_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7585_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7589_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7589_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7589_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block7678_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump7589_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block7674_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump7589_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(8), 0)
	call(block7678_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))

jump7589_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(8), 0)
	call(block7674_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7589_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7589_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7589_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	eq(s(8), 0)
	call(block7678_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))

jump7589_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	neq(s(8), 0)
	call(block7674_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7589_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7589_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7589_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	eq(s(10), 0)
	call(block7678_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))

jump7589_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	neq(s(10), 0)
	call(block7674_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7589_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 10
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump7589_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7589_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	eq(s(7), 0)
	call(block7678_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))

jump7589_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	neq(s(7), 0)
	call(block7674_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7589_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7589_4(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7674_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7674_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7674_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block7674_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block7674_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7678_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5592(s(2),s(1),s(0)))
	nop(JUMP)

block7678_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5689(s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block7678_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 5
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5855(s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l0), balance, returndatasize))
	nop(JUMP)

block7678_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 5
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(1)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block6714(s(5),s(4),s(3),s(2),s(1),s(0),g(minBalanceForAccounts), g(sellPrice), l(l7), l(l6), l(l1), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block7678_4(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(sellPrice), l(l7), l(l6), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 5
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block6714_0(s(2),s(1),s(0),g(sellPrice), l(l0), caller, returndatasize))
	nop(JUMP)

