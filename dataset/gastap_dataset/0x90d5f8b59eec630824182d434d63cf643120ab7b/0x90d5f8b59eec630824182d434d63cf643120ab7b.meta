{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "splitterContract": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "setDDF(address)",
            "splitterContract(address,uint256)",
            "startThinking()",
            "stopThinking(uint256)",
            "thinkLength()",
            "addRec4L8R(address,uint256)",
            "add(address,uint256)",
            "remove(address)",
            "update(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "setDDF(address)": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "splitterContract(address,uint256)": {
                "argument": {
                    "seedVal": "uint256"
                },
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "startThinking()": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "stopThinking(uint256)": {
                "argument": {
                    "num": "uint256"
                },
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "thinkLength()": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "addRec4L8R(address,uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "add(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "remove(address)": {
                "argument": {},
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            },
            "update(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "pos": "uint256",
                    "afterParty": "splitterContract.l8r[]"
                }
            }
        },
        "function_block_mapping": {
            "stopThinking(uint256)": [
                300,
                97
            ],
            "setDDF(address)": [
                926,
                251
            ],
            "thinkLength()": [
                719,
                185
            ],
            "startThinking()": [
                1237,
                361
            ],
            "update(address,uint256)": [
                849,
                229
            ],
            "transferOwnership(address)": [
                1170,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "DDFToken": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSubtract(uint256,uint256)",
            "safeMult(uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "DDFToken(address,address,address,uint256,uint256)",
            "fallback()",
            "createTokens(uint256)",
            "finalize()",
            "refund()",
            "transfer(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "safeSubtract(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "safeMult(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "DDFToken(address,address,address,uint256,uint256)": {
                "argument": {
                    "_fundingStartTime": "uint256",
                    "duration": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "createTokens(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "fundingStartTime": "uint256",
                    "fundingEndTime": "uint256",
                    "ddftFund": "uint256",
                    "tokenExchangeRate": "uint256",
                    "tokenCreationCap": "uint256",
                    "tokenCreationMin": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1177,
                339
            ],
            "allowance(address,address)": [
                1859,
                537
            ],
            "transferFrom(address,address,uint256)": [
                638,
                163
            ],
            "approve(address,uint256)": [
                451,
                97
            ],
            "refund()": [
                1111,
                295
            ],
            "finalize()": [
                944,
                251
            ],
            "transfer(address,uint256)": [
                1585,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump2761_0": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])",
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "jump2271_0": [
                "msg.sender.transfer(etherToRefund)",
                "msg.sender.transfer(etherToRefund)"
            ],
            "jump2271": [
                "msg.sender.transfer(etherToRefund)",
                "msg.sender.transfer(etherToRefund)"
            ],
            "block6015": [
                "sc.update(_to,balances[_to])"
            ],
            "jump6015": [
                "sc.update(_to,balances[_to])",
                "sc.update(_to,balances[_to])"
            ],
            "block2761": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "block2271": [
                "msg.sender.transfer(etherToRefund)"
            ],
            "jump5765": [
                "sc.update(msg.sender,balances[msg.sender])",
                "sc.update(msg.sender,balances[msg.sender])"
            ],
            "jump4457": [
                "ethFundDeposit.transfer(this.balance)",
                "ethFundDeposit.transfer(this.balance)"
            ],
            "block5124": [
                "msg.sender.transfer(ethVal)"
            ],
            "jump3212_0": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])",
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "block3212_0": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "block4457": [
                "ethFundDeposit.transfer(this.balance)"
            ],
            "block5765": [
                "sc.update(msg.sender,balances[msg.sender])"
            ],
            "jump5124": [
                "msg.sender.transfer(ethVal)",
                "msg.sender.transfer(ethVal)"
            ],
            "block2271_0": [
                "msg.sender.transfer(etherToRefund)"
            ],
            "jump2761": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])",
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "block2761_0": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "block3212": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ],
            "jump3212": [
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])",
                "splitterContract(splitter).update(msg.sender,balances[msg.sender])"
            ]
        }
    }
}