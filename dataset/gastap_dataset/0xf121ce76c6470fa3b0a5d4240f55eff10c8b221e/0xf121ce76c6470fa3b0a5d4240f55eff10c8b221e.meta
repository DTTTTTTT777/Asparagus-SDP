{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenSPERT": {
        "function_list": [
            "tokenSPERT(string,string,uint8)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "tokenSPERT(string,string,uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Presale": {
        "function_list": [
            "tokenSPERT(string,string,uint8)",
            "fallback()",
            "owned()",
            "transferOwnership(address)",
            "Presale()",
            "mintToken(address,uint256)",
            "burnTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "tokenSPERT(string,string,uint8)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Presale()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mintToken(address,uint256)": {
                "argument": {
                    "mintedAmount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burnTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "mintToken(address,uint256)": [
                494,
                163
            ],
            "transferOwnership(address)": [
                869,
                251
            ],
            "burnTokens(address)": [
                802,
                229
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1286,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3655": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "EristicaICO": {
        "function_list": [
            "EristicaICO(address,address,address,address,address,address,address,address,address,address)",
            "setRate(uint256)",
            "startIco()",
            "pauseIco()",
            "finishIco()",
            "fallback()",
            "buyForInvestor(address,uint256,string)",
            "replaceToken(address)",
            "buy(address,uint256)",
            "withdrawEther(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "EristicaICO(address,address,address,address,address,address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "setRate(uint256)": {
                "argument": {
                    "_RateEth": "uint256"
                },
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "pauseIco()": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "finishIco()": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "buyForInvestor(address,uint256,string)": {
                "argument": {
                    "_ertValue": "uint256",
                    "_txHash": "string"
                },
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "replaceToken(address)": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "buy(address,uint256)": {
                "argument": {
                    "_ertValue": "uint256"
                },
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "Tokens_For_Sale": "uint256",
                    "Rate_Eth": "uint256",
                    "Token_Price": "uint256",
                    "Sold": "uint256",
                    "bountyPart": "uint256",
                    "advisorsPart": "uint256",
                    "teamPart": "uint256",
                    "challengePart": "uint256",
                    "icoAndPOfPart": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "replaceToken(address)": [
                1330,
                330
            ],
            "startIco()": [
                1110,
                242
            ],
            "pauseIco()": [
                1307,
                308
            ],
            "withdrawEther(uint256)": [
                674,
                110
            ],
            "finishIco()": [
                1483,
                396
            ],
            "setRate(uint256)": [
                542,
                66
            ]
        },
        "block_CALL_mapping": {
            "jump6127": [
                "ert.mint(ChallengeFund, challengePart * totalAmount / 10000)",
                "ert.mint(ChallengeFund, challengePart * totalAmount / 10000)"
            ],
            "block5583": [
                "ert.mint(AdvisorsFund, advisorsPart * totalAmount / 10000)"
            ],
            "block5855": [
                "ert.mint(TeamFund, teamPart * totalAmount / 10000)"
            ],
            "jump2062_1": [
                "ert.mint(_investor, _ertValue)",
                "ert.mint(_investor, _ertValue)"
            ],
            "jump6285": [
                "ert.defrost()",
                "ert.defrost()"
            ],
            "jump4333": [
                "presale.burnTokens(_investor)",
                "presale.burnTokens(_investor)"
            ],
            "block6285": [
                "ert.defrost()"
            ],
            "jump5855": [
                "ert.mint(TeamFund, teamPart * totalAmount / 10000)",
                "ert.mint(TeamFund, teamPart * totalAmount / 10000)"
            ],
            "jump4982": [
                "ert.totalSupply()",
                "ert.totalSupply()"
            ],
            "block2062": [
                "ert.mint(_investor, _ertValue)"
            ],
            "block4333": [
                "presale.burnTokens(_investor)"
            ],
            "block4982": [
                "ert.totalSupply()"
            ],
            "jump2062_0": [
                "ert.mint(_investor, _ertValue)",
                "ert.mint(_investor, _ertValue)"
            ],
            "block2891": [
                "Company.transfer(_value)"
            ],
            "block4068": [
                "presale.balanceOf(_investor)"
            ],
            "jump2062": [
                "ert.mint(_investor, _ertValue)",
                "ert.mint(_investor, _ertValue)"
            ],
            "jump2891": [
                "Company.transfer(_value)",
                "Company.transfer(_value)"
            ],
            "jump4068": [
                "presale.balanceOf(_investor)",
                "presale.balanceOf(_investor)"
            ],
            "block5311": [
                "ert.mint(BountyFund, bountyPart * totalAmount / 10000)"
            ],
            "jump5311": [
                "ert.mint(BountyFund, bountyPart * totalAmount / 10000)",
                "ert.mint(BountyFund, bountyPart * totalAmount / 10000)"
            ],
            "block6127": [
                "ert.mint(ChallengeFund, challengePart * totalAmount / 10000)"
            ],
            "jump4554": [
                "ert.mint(_investor, spertTokens)",
                "ert.mint(_investor, spertTokens)"
            ],
            "block2062_0": [
                "ert.mint(_investor, _ertValue)"
            ],
            "block4554": [
                "ert.mint(_investor, spertTokens)"
            ],
            "jump5583": [
                "ert.mint(AdvisorsFund, advisorsPart * totalAmount / 10000)",
                "ert.mint(AdvisorsFund, advisorsPart * totalAmount / 10000)"
            ],
            "block2062_1": [
                "ert.mint(_investor, _ertValue)"
            ]
        }
    },
    "ERT": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ERT(address)",
            "mint(address,uint256)",
            "defrost()",
            "burn(uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "ERT(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "defrost()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                357,
                97
            ],
            "defrost()": [
                1384,
                361
            ],
            "mint(address,uint256)": [
                677,
                185
            ],
            "burn(uint256)": [
                754,
                207
            ],
            "balanceOf(address)": [
                886,
                251
            ],
            "transferFrom(address,address,uint256)": [
                501,
                141
            ],
            "allowance(address,address)": [
                1265,
                339
            ],
            "transfer(address,uint256)": [
                1117,
                295
            ]
        },
        "block_CALL_mapping": {}
    }
}