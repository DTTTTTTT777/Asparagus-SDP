{
    "SafeMathLib": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                92,
                75
            ],
            "safeAdd(uint256,uint256)": [
                242,
                119
            ],
            "safeMul(uint256,uint256)": [
                167,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                522,
                163
            ],
            "approve(address,uint256)": [
                158,
                75
            ],
            "balanceOf(address)": [
                435,
                141
            ],
            "safeAdd(uint256,uint256)": [
                892,
                251
            ],
            "safeMul(uint256,uint256)": [
                698,
                207
            ],
            "allowance(address,address)": [
                773,
                229
            ],
            "transferFrom(address,address,uint256)": [
                302,
                119
            ],
            "transfer(address,uint256)": [
                597,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                523,
                141
            ],
            "approve(address,uint256)": [
                246,
                75
            ],
            "setUpgradeAgent(address)": [
                1227,
                361
            ],
            "balanceOf(address)": [
                742,
                207
            ],
            "safeAdd(uint256,uint256)": [
                1413,
                405
            ],
            "canUpgrade()": [
                886,
                251
            ],
            "safeMul(uint256,uint256)": [
                1152,
                339
            ],
            "allowance(address,address)": [
                1294,
                383
            ],
            "safeSub(uint256,uint256)": [
                933,
                273
            ],
            "transferFrom(address,address,uint256)": [
                390,
                119
            ],
            "transfer(address,uint256)": [
                1008,
                295
            ],
            "setUpgradeMaster(address)": [
                1488,
                427
            ],
            "getUpgradeState()": [
                829,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump3332": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block4880": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump4880": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump5087": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block5087": [
                "upgradeAgent.originalSupply()"
            ],
            "block3332": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "ReleasableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                314,
                97
            ],
            "setTransferAgent(address,bool)": [
                235,
                75
            ],
            "releaseTokenTransfer()": [
                658,
                185
            ],
            "balanceOf(address)": [
                782,
                229
            ],
            "transferFrom(address,address,uint256)": [
                458,
                141
            ],
            "setReleaseAgent(address)": [
                591,
                163
            ],
            "allowance(address,address)": [
                1383,
                383
            ],
            "transfer(address,uint256)": [
                1094,
                317
            ],
            "transferOwnership(address)": [
                1502,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                738,
                207
            ],
            "approve(address,uint256)": [
                293,
                97
            ],
            "mint(address,uint256)": [
                570,
                163
            ],
            "balanceOf(address)": [
                817,
                229
            ],
            "safeAdd(uint256,uint256)": [
                1471,
                405
            ],
            "safeMul(uint256,uint256)": [
                1190,
                339
            ],
            "allowance(address,address)": [
                1352,
                383
            ],
            "safeSub(uint256,uint256)": [
                1014,
                295
            ],
            "transferFrom(address,address,uint256)": [
                437,
                141
            ],
            "transferOwnership(address)": [
                1546,
                427
            ],
            "transfer(address,uint256)": [
                1089,
                317
            ],
            "acceptOwnership()": [
                904,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "Allocatable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setAllocateAgent(address,bool)": [
                125,
                75
            ],
            "acceptOwnership()": [
                295,
                119
            ],
            "transferOwnership(address)": [
                492,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdsaleToken": {
        "function_list": [
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "CrowdsaleToken(string,string,uint256,uint8,bool)",
            "releaseTokenTransfer()",
            "canUpgrade()",
            "setTokenInformation(string,string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "CrowdsaleToken(string,string,uint256,uint8,bool)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_initialSupply": "uint256",
                    "_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setTokenInformation(string,string)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                1275,
                295
            ],
            "upgrade(uint256)": [
                1354,
                317
            ],
            "setTransferAgent(address,bool)": [
                444,
                75
            ],
            "setTokenInformation(string,string)": [
                1399,
                339
            ],
            "allowance(address,address)": [
                2889,
                757
            ],
            "transferFrom(address,address,uint256)": [
                858,
                185
            ],
            "approve(address,uint256)": [
                714,
                141
            ],
            "getUpgradeState()": [
                1881,
                471
            ],
            "safeAdd(uint256,uint256)": [
                3008,
                779
            ],
            "safeMul(uint256,uint256)": [
                2573,
                669
            ],
            "balanceOf(address)": [
                1771,
                427
            ],
            "setUpgradeAgent(address)": [
                2822,
                735
            ],
            "setReleaseAgent(address)": [
                991,
                207
            ],
            "setUpgradeMaster(address)": [
                3150,
                823
            ],
            "transferOwnership(address)": [
                3083,
                801
            ],
            "safeSub(uint256,uint256)": [
                2354,
                603
            ],
            "releaseTokenTransfer()": [
                1661,
                383
            ],
            "mint(address,uint256)": [
                1107,
                251
            ],
            "canUpgrade()": [
                2307,
                581
            ],
            "transfer(address,uint256)": [
                2429,
                625
            ],
            "acceptOwnership()": [
                1858,
                449
            ]
        },
        "block_CALL_mapping": {
            "block5546": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump5546": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump8108": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block7901": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump7901": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block8108": [
                "upgradeAgent.originalSupply()"
            ]
        }
    },
    "PricingStrategy": {
        "function_list": [
            "isPricingStrategy()",
            "isSane(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {}
            },
            "isSane(address)": {
                "argument": {},
                "contract": {}
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump769": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block769": [
                "owner.send(this.balance)"
            ]
        }
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "halt()": [
                136,
                75
            ],
            "unhalt()": [
                316,
                163
            ],
            "acceptOwnership()": [
                159,
                97
            ],
            "transferOwnership(address)": [
                426,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)",
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)",
            "fallback()",
            "investInternal(address,string)",
            "allocate(address,uint256,uint256,string,uint256)",
            "investWithCustomerId(address,string)",
            "invest(address)",
            "buyWithCustomerId(string)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investInternal(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "allocate(address,uint256,uint256,string,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiPrice": "uint256",
                    "customerId": "string",
                    "lockedTokenAmount": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithCustomerId(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithCustomerId(string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                3255,
                1087
            ],
            "refund()": [
                1771,
                471
            ],
            "finalize()": [
                1518,
                383
            ]
        },
        "block_CALL_mapping": {
            "block8627": [
                "GetEXHFundAccount().transfer(this.balance)"
            ],
            "jump4473": [
                "GetEXHFundAccount().transfer(msg.value)",
                "GetEXHFundAccount().transfer(msg.value)"
            ],
            "jump7200": [
                "investorAddress.transfer(investorStruct.weiReceivedCrowdsaleType1)",
                "investorAddress.transfer(investorStruct.weiReceivedCrowdsaleType1)"
            ],
            "block4473": [
                "GetEXHFundAccount().transfer(msg.value)"
            ],
            "block7200": [
                "investorAddress.transfer(investorStruct.weiReceivedCrowdsaleType1)"
            ],
            "jump8627": [
                "GetEXHFundAccount().transfer(this.balance)",
                "GetEXHFundAccount().transfer(this.balance)"
            ],
            "block4473_0": [
                "GetEXHFundAccount().transfer(msg.value)"
            ],
            "jump4473_0": [
                "GetEXHFundAccount().transfer(msg.value)",
                "GetEXHFundAccount().transfer(msg.value)"
            ]
        }
    },
    "BonusFinalizeAgent": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "isFinalizeAgent()",
            "isSane()",
            "finalizeCrowdsale()",
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])",
            "isSane()",
            "finalizeCrowdsale()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isFinalizeAgent()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isSane()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])": {
                "argument": {
                    "_bonusBasePoints": "uint256[]",
                    "_teamAddresses": "address[]"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                579,
                229
            ],
            "finalizeCrowdsale()": [
                180,
                75
            ],
            "isSane()": [
                445,
                185
            ],
            "safeAdd(uint256,uint256)": [
                729,
                273
            ],
            "safeMul(uint256,uint256)": [
                654,
                251
            ],
            "isFinalizeAgent()": [
                312,
                119
            ]
        },
        "block_CALL_mapping": {
            "block2300": [
                "token.releaseAgent()"
            ],
            "jump1120": [
                "crowdsale.tokensSold()",
                "crowdsale.tokensSold()"
            ],
            "block2075": [
                "token.mintAgents(address(this))"
            ],
            "jump1770": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "block1770": [
                "token.releaseTokenTransfer()"
            ],
            "jump1600": [
                "token.mint(teamAddresses[i], allocatedBonus)",
                "token.mint(teamAddresses[i], allocatedBonus)"
            ],
            "jump2075": [
                "token.mintAgents(address(this))",
                "token.mintAgents(address(this))"
            ],
            "jump2300": [
                "token.releaseAgent()",
                "token.releaseAgent()"
            ],
            "block1120": [
                "crowdsale.tokensSold()"
            ],
            "block1600": [
                "token.mint(teamAddresses[i], allocatedBonus)"
            ]
        }
    },
    "MintedEthCappedCrowdsale": {
        "function_list": [
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)",
            "fallback()",
            "investInternal(address,string)",
            "allocate(address,uint256,uint256,string,uint256)",
            "investWithCustomerId(address,string)",
            "invest(address)",
            "buyWithCustomerId(string)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "setAllocateAgent(address,bool)",
            "MintedEthCappedCrowdsale(address,PricingStrategy,address,uint256,uint256,uint256,uint256,address)",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "investInternal(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "allocate(address,uint256,uint256,string,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiPrice": "uint256",
                    "customerId": "string",
                    "lockedTokenAmount": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "investWithCustomerId(address,string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "buyWithCustomerId(string)": {
                "argument": {
                    "customerId": "string"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "weiCap": "uint256"
                }
            },
            "MintedEthCappedCrowdsale(address,PricingStrategy,address,uint256,uint256,uint256,uint256,address)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256",
                    "_weiCap": "uint256"
                },
                "contract": {
                    "weiCap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setAllocateAgent(address,bool)": [
                1271,
                295
            ],
            "refund()": [
                1664,
                449
            ],
            "buy()": [
                2875,
                889
            ],
            "setMultisig(address)": [
                3882,
                1263
            ],
            "isMinimumGoalReached()": [
                2081,
                647
            ],
            "safeAdd(uint256,uint256)": [
                3661,
                1197
            ],
            "invest(address)": [
                786,
                119
            ],
            "setRequireCustomerId(bool)": [
                2128,
                669
            ],
            "isFinalizerSane()": [
                2885,
                911
            ],
            "isBreakingCap(uint256,uint256,uint256,uint256)": [
                2701,
                845
            ],
            "allocate(address,uint256,uint256,string,uint256)": [
                2228,
                735
            ],
            "setEndsAt(uint256)": [
                1883,
                559
            ],
            "safeMul(uint256,uint256)": [
                3362,
                1087
            ],
            "isCrowdsaleFull()": [
                3571,
                1153
            ],
            "investWithCustomerId(address,string)": [
                4036,
                1307
            ],
            "loadRefund()": [
                2218,
                713
            ],
            "safeSub(uint256,uint256)": [
                2800,
                867
            ],
            "finalize()": [
                1531,
                383
            ],
            "isPricingSane()": [
                840,
                141
            ],
            "halt()": [
                1817,
                515
            ],
            "setEarlyParicipantWhitelist(address,bool)": [
                3736,
                1219
            ],
            "isCrowdsale()": [
                1484,
                361
            ],
            "setOwnerTestValue(uint256)": [
                2395,
                757
            ],
            "getState()": [
                973,
                207
            ],
            "unhalt()": [
                3339,
                1065
            ],
            "buyWithCustomerId(string)": [
                3156,
                1021
            ],
            "transferOwnership(address)": [
                3815,
                1241
            ],
            "acceptOwnership()": [
                2058,
                625
            ]
        },
        "block_CALL_mapping": {
            "block5040_6": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_7": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_4": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_5": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_2": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump6410": [
                "finalizeAgent.finalizeCrowdsale()",
                "finalizeAgent.finalizeCrowdsale()"
            ],
            "block5040_0": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_1": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block8611": [
                "token.decimals()"
            ],
            "block5040_8": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block11814": [
                "token.decimals()"
            ],
            "block13082_4": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block13082_2": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block13082_3": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block13082_0": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block13082_1": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "block5040": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block6410": [
                "finalizeAgent.finalizeCrowdsale()"
            ],
            "block9208": [
                "tokenVesting.isVestingSet(receiver)"
            ],
            "jump4777_10": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump12552_1": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12552_0": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12552_2": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "jump12552": [
                "multisigWallet.send(weiAmount)",
                "multisigWallet.send(weiAmount)"
            ],
            "block5040_3": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block9486": [
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)"
            ],
            "jump11814_2": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump11814_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump11814_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump12030_0": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump12030_1": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump12030_2": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump12030": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())",
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block12030_2": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block12030_0": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "block12030_1": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump5040_9": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "block12552_2": [
                "multisigWallet.send(weiAmount)"
            ],
            "block12552_1": [
                "multisigWallet.send(weiAmount)"
            ],
            "block12552_0": [
                "multisigWallet.send(weiAmount)"
            ],
            "block4777_10": [
                "finalizeAgent.isSane()"
            ],
            "block7044": [
                "msg.sender.send(weiValue)"
            ],
            "block4777_8": [
                "finalizeAgent.isSane()"
            ],
            "block4777_9": [
                "finalizeAgent.isSane()"
            ],
            "block4777_0": [
                "finalizeAgent.isSane()"
            ],
            "block4777_1": [
                "finalizeAgent.isSane()"
            ],
            "block4777_2": [
                "finalizeAgent.isSane()"
            ],
            "block4777_3": [
                "finalizeAgent.isSane()"
            ],
            "block4777_4": [
                "finalizeAgent.isSane()"
            ],
            "block4777_5": [
                "finalizeAgent.isSane()"
            ],
            "block4777_6": [
                "finalizeAgent.isSane()"
            ],
            "block4777_7": [
                "finalizeAgent.isSane()"
            ],
            "block11814_1": [
                "token.decimals()"
            ],
            "block11814_0": [
                "token.decimals()"
            ],
            "block11814_2": [
                "token.decimals()"
            ],
            "jump7044": [
                "msg.sender.send(weiValue)",
                "msg.sender.send(weiValue)"
            ],
            "block12552": [
                "multisigWallet.send(weiAmount)"
            ],
            "jump4777_6": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_7": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_4": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_5": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_2": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_3": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_0": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_1": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_8": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump4777_9": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump6755": [
                "pricingStrategy.isPricingStrategy()",
                "pricingStrategy.isPricingStrategy()"
            ],
            "jump11814": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block5040_9": [
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4461": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "block13082": [
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump5040_8": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump10157": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "jump5040_4": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_5": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_6": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_7": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_0": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_1": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_2": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump5040_3": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump4777": [
                "finalizeAgent.isSane()",
                "finalizeAgent.isSane()"
            ],
            "block12030": [
                "pricingStrategy.calculatePrice(weiAmount, weiRaised, tokensSold, msg.sender, token.decimals())"
            ],
            "jump9486": [
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)",
                "tokenVesting.setVestingWithDefaultSchedule(receiver, lockedTokenAmount)"
            ],
            "block4777": [
                "finalizeAgent.isSane()"
            ],
            "jump5040": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "block5040_10": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block4461": [
                "pricingStrategy.isSane(address(this))"
            ],
            "block10157": [
                "finalizeAgent.isSane()"
            ],
            "block6755": [
                "pricingStrategy.isPricingStrategy()"
            ],
            "jump8611": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump5040_10": [
                "pricingStrategy.isSane(address(this))",
                "pricingStrategy.isSane(address(this))"
            ],
            "jump13082": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump5543": [
                "finalizeAgent.isFinalizeAgent()",
                "finalizeAgent.isFinalizeAgent()"
            ],
            "jump9208": [
                "tokenVesting.isVestingSet(receiver)",
                "tokenVesting.isVestingSet(receiver)"
            ],
            "block5543": [
                "finalizeAgent.isFinalizeAgent()"
            ],
            "jump13082_4": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump13082_0": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump13082_1": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump13082_2": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ],
            "jump13082_3": [
                "mintableToken.mint(receiver, tokenAmount)",
                "mintableToken.mint(receiver, tokenAmount)"
            ]
        }
    },
    "EthTranchePricing": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "isPricingStrategy()",
            "isSane(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)",
            "EthTranchePricing(uint256[])",
            "setPreicoAddress(address,uint256)",
            "getTranche(uint256)",
            "getFirstTranche()",
            "getLastTranche()",
            "getPricingStartsAt()",
            "getPricingEndsAt()",
            "isSane(address)",
            "getCurrentTranche(uint256)",
            "getCurrentPrice(uint256)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "isPricingStrategy()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "isSane(address)": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "EthTranchePricing(uint256[])": {
                "argument": {
                    "_tranches": "uint256[]"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "setPreicoAddress(address,uint256)": {
                "argument": {
                    "pricePerToken": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getTranche(uint256)": {
                "argument": {
                    "n": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getFirstTranche()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getLastTranche()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getPricingStartsAt()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getPricingEndsAt()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getCurrentTranche(uint256)": {
                "argument": {
                    "weiRaised": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "getCurrentPrice(uint256)": {
                "argument": {
                    "weiRaised": "uint256"
                },
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_TRANCHES": "uint256",
                    "trancheCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                897,
                295
            ],
            "isPricingStrategy()": [
                278,
                75
            ],
            "isSane(address)": [
                806,
                273
            ],
            "getPricingEndsAt()": [
                610,
                185
            ],
            "calculatePrice(uint256,uint256,uint256,address,uint256)": [
                325,
                97
            ],
            "transferOwnership(address)": [
                1510,
                471
            ],
            "safeAdd(uint256,uint256)": [
                1348,
                427
            ],
            "getTranche(uint256)": [
                1199,
                383
            ],
            "safeMul(uint256,uint256)": [
                1037,
                339
            ],
            "getPricingStartsAt()": [
                524,
                141
            ],
            "acceptOwnership()": [
                653,
                207
            ],
            "setPreicoAddress(address,uint256)": [
                1271,
                405
            ],
            "getCurrentPrice(uint256)": [
                972,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenVesting": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "setAllocateAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "TokenVesting(address)",
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)",
            "setVestingWithDefaultSchedule(address,uint256)",
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)",
            "isVestingSet(address)",
            "freezeChangesToVesting(address)",
            "releaseMyVestedTokens()",
            "releaseVestedTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setAllocateAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "TokenVesting(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)": {
                "argument": {
                    "_startAt": "uint256",
                    "_cliff": "uint256",
                    "_duration": "uint256",
                    "_step": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setVestingWithDefaultSchedule(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)": {
                "argument": {
                    "_startAt": "uint256",
                    "_cliff": "uint256",
                    "_duration": "uint256",
                    "_step": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "isVestingSet(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "freezeChangesToVesting(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "releaseMyVestedTokens()": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            },
            "releaseVestedTokens(address)": {
                "argument": {},
                "contract": {
                    "totalUnreleasedTokens": "uint256",
                    "startAt": "uint256",
                    "cliff": "uint256",
                    "duration": "uint256",
                    "step": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setVestingWithDefaultSchedule(address,uint256)": [
                525,
                141
            ],
            "safeSub(uint256,uint256)": [
                845,
                229
            ],
            "isVestingSet(address)": [
                1116,
                295
            ],
            "setAllocateAgent(address,bool)": [
                268,
                75
            ],
            "releaseMyVestedTokens()": [
                1708,
                471
            ],
            "releaseVestedTokens(address)": [
                1049,
                273
            ],
            "freezeChangesToVesting(address)": [
                1369,
                361
            ],
            "setVesting(address,uint256,uint256,uint256,uint256,uint256,bool)": [
                920,
                251
            ],
            "safeAdd(uint256,uint256)": [
                1566,
                427
            ],
            "safeMul(uint256,uint256)": [
                1207,
                317
            ],
            "setDefaultVestingParameters(uint256,uint256,uint256,uint256,bool)": [
                1436,
                383
            ],
            "transferOwnership(address)": [
                1641,
                449
            ],
            "acceptOwnership()": [
                735,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump4117": [
                "LALAToken.transfer(_adr, amountToRelease)",
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "jump3401_0": [
                "LALAToken.balanceOf(this)",
                "LALAToken.balanceOf(this)"
            ],
            "jump3401": [
                "LALAToken.balanceOf(this)",
                "LALAToken.balanceOf(this)"
            ],
            "block3401": [
                "LALAToken.balanceOf(this)"
            ],
            "block4117_0": [
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "jump4117_0": [
                "LALAToken.transfer(_adr, amountToRelease)",
                "LALAToken.transfer(_adr, amountToRelease)"
            ],
            "block3401_0": [
                "LALAToken.balanceOf(this)"
            ],
            "block4117": [
                "LALAToken.transfer(_adr, amountToRelease)"
            ]
        }
    }
}