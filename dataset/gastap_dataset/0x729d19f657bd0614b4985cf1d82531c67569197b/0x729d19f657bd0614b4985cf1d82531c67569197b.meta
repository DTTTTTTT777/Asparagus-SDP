{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1493_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1493": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSNote": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSThing": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {}
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {}
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {}
            },
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1493_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1493": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "DSValue": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "peek()",
            "read()",
            "poke(bytes32)",
            "void()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "peek()": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "read()": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "poke(bytes32)": {
                "argument": {
                    "wut": "bytes32"
                },
                "contract": {
                    "val": "bytes32"
                }
            },
            "void()": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "val": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                147,
                75
            ],
            "poke(bytes32)": [
                214,
                97
            ],
            "void()": [
                530,
                207
            ],
            "read()": [
                263,
                119
            ],
            "peek()": [
                314,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump2309": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2309": [
                "authority.canCall(src, this, sig)"
            ],
            "jump2309_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2309_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump2309_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2309_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block2309_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block2309_2": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "Medianizer": {
        "function_list": [
            "peek()",
            "read()",
            "poke(bytes32)",
            "void()",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)",
            "set(address)",
            "set(bytes12,address)",
            "setMin(uint96)",
            "setNext(bytes12)",
            "unset(bytes12)",
            "unset(address)",
            "poke()",
            "poke(bytes32)",
            "compute()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "peek()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "read()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "poke(bytes32)": {
                "argument": {
                    "": "bytes32"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "void()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "set(address)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "set(bytes12,address)": {
                "argument": {
                    "pos": "bytes12"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "setMin(uint96)": {
                "argument": {
                    "min_": "uint96"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "setNext(bytes12)": {
                "argument": {
                    "next_": "bytes12"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "unset(bytes12)": {
                "argument": {
                    "pos": "bytes12"
                },
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "unset(address)": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "poke()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "compute()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "next": "bytes12",
                    "min": "uint96"
                }
            }
        },
        "function_block_mapping": {
            "setNext(bytes12)": [
                1572,
                471
            ],
            "unset(bytes12)": [
                1504,
                449
            ],
            "setOwner(address)": [
                279,
                75
            ],
            "setMin(uint96)": [
                1081,
                317
            ],
            "poke(bytes32)": [
                346,
                97
            ],
            "void()": [
                1294,
                383
            ],
            "read()": [
                836,
                251
            ],
            "unset(address)": [
                547,
                185
            ],
            "set(bytes12,address)": [
                1317,
                405
            ],
            "compute()": [
                418,
                141
            ],
            "poke()": [
                395,
                119
            ],
            "peek()": [
                887,
                273
            ],
            "set(address)": [
                480,
                163
            ]
        },
        "block_CALL_mapping": {
            "block2798_1": [
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "block2798_0": [
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "jump2798_1": [
                "DSValue(values[bytes12(i)]).peek()",
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "jump2798_0": [
                "DSValue(values[bytes12(i)]).peek()",
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "jump7175": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block2798": [
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "jump2798": [
                "DSValue(values[bytes12(i)]).peek()",
                "DSValue(values[bytes12(i)]).peek()"
            ],
            "jump7175_7": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_6": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_5": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_4": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_3": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_2": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_1": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block7175_5": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_4": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_7": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_6": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_1": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_0": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_3": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175_2": [
                "authority.canCall(src, this, sig)"
            ],
            "jump7175_8": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block7175_8": [
                "authority.canCall(src, this, sig)"
            ],
            "block7175": [
                "authority.canCall(src, this, sig)"
            ]
        }
    }
}