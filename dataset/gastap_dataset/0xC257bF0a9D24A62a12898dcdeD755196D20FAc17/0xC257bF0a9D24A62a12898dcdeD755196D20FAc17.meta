{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transfer(address,uint256)": [
                1385,
                361
            ],
            "transferFrom(address,address,uint256)": [
                588,
                163
            ],
            "approveAndCall(address,uint256,bytes)": [
                1486,
                383
            ]
        },
        "block_CALL_mapping": {
            "block3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "LCBrixToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "LCBrixToken()",
            "transferWithRef(address,uint256,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "LCBrixToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "transferWithRef(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_ref": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "oferta": "string"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                357,
                97
            ],
            "transfer(address,uint256)": [
                1256,
                295
            ],
            "transferWithRef(address,uint256,uint256)": [
                827,
                207
            ],
            "transferFrom(address,address,uint256)": [
                501,
                141
            ],
            "transferOwnership(address)": [
                1647,
                361
            ],
            "approveAndCall(address,uint256,bytes)": [
                1357,
                317
            ]
        },
        "block_CALL_mapping": {
            "block3753": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3753": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "LCBrixTokenCrowdsale": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)",
            "recalcFlags()",
            "recalcTokenPrice()",
            "fallback()",
            "transferRemainingTokens()",
            "transferGainedEther()",
            "receiveApproval(address,uint256,address,bytes)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "recalcFlags()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "recalcTokenPrice()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "transferRemainingTokens()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "transferGainedEther()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "tokenPrice": "uint256",
                    "deadline": "uint256",
                    "goalInEthers": "uint256",
                    "amountRaised": "uint256",
                    "oferta": "string"
                }
            }
        },
        "function_block_mapping": {
            "transferRemainingTokens()": [
                1584,
                163
            ],
            "recalcTokenPrice()": [
                1694,
                207
            ],
            "recalcFlags()": [
                1561,
                141
            ],
            "receiveApproval(address,uint256,address,bytes)": [
                1850,
                295
            ],
            "transferGainedEther()": [
                2119,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump3562": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block4699": [
                "token.transferFrom(_from, this, tokenAmount)"
            ],
            "block3021": [
                "token.balanceOf(this)"
            ],
            "block1215": [
                "token.transfer(msg.sender, tokenAmount)"
            ],
            "block501_0": [
                "token.balanceOf(this)"
            ],
            "block501": [
                "token.balanceOf(this)"
            ],
            "block3754": [
                "token.transfer(beneficiary, token.balanceOf(this))"
            ],
            "block2615": [
                "token.balanceOf(this)"
            ],
            "jump4741": [
                "_from.transfer(amount)",
                "_from.transfer(amount)"
            ],
            "jump501_0": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump1215": [
                "token.transfer(msg.sender, tokenAmount)",
                "token.transfer(msg.sender, tokenAmount)"
            ],
            "jump4365": [
                "token.balanceOf(_from)",
                "token.balanceOf(_from)"
            ],
            "block4741": [
                "_from.transfer(amount)"
            ],
            "jump2615_1": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3562": [
                "token.balanceOf(this)"
            ],
            "jump501": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2615_1": [
                "token.balanceOf(this)"
            ],
            "block2615_0": [
                "token.balanceOf(this)"
            ],
            "jump2615_0": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3754": [
                "token.transfer(beneficiary, token.balanceOf(this))",
                "token.transfer(beneficiary, token.balanceOf(this))"
            ],
            "jump2615": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3021": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block1215_0": [
                "token.transfer(msg.sender, tokenAmount)"
            ],
            "jump4699": [
                "token.transferFrom(_from, this, tokenAmount)",
                "token.transferFrom(_from, this, tokenAmount)"
            ],
            "jump5239": [
                "beneficiary.send(this.balance)",
                "beneficiary.send(this.balance)"
            ],
            "block5239": [
                "beneficiary.send(this.balance)"
            ],
            "block4365": [
                "token.balanceOf(_from)"
            ],
            "jump1215_0": [
                "token.transfer(msg.sender, tokenAmount)",
                "token.transfer(msg.sender, tokenAmount)"
            ]
        }
    }
}