block0(g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	lt(s(1), s(0))
	call(block98())

jump0(s(1), s(0), g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	geq(s(1), s(0))
	call(block13(g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val))

block13(g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2192684275
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	eq(s(2), s(1))
	call(block103(s(0),g(admin), l(l0), calldatasize, caller, callvalue, returndatasize, val))

jump13(s(2), s(1), s(0), g(newOwner), g(owner), g(admin), l(l1), l(l0), addr, calldataload, calldatasize, caller, callvalue, returndatasize, val)=>
	neq(s(2), s(1))
	call(block65(s(0),g(newOwner), g(owner), l(l1), l(l0), addr, calldatasize, caller, callvalue))

jump65(s(2), s(1), s(0), g(newOwner), g(owner), l(l1), l(l0), addr, calldatasize, caller, callvalue)=>
	eq(s(2), s(1))
	call(block148(s(0),g(owner), l(l1), l(l0), caller, callvalue))

jump65(s(2), s(1), s(0), g(newOwner), g(owner), l(l1), l(l0), addr, calldatasize, caller, callvalue)=>
	neq(s(2), s(1))
	call(block76(s(0),g(newOwner), g(owner), addr, calldatasize, caller, callvalue))

block65(s(0), g(newOwner), g(owner), l(l1), l(l0), addr, calldatasize, caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2402473371
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(newOwner), g(owner), l(l1), l(l0), addr, calldatasize, caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2801392353
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(newOwner), g(owner), addr, calldatasize, caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	eq(s(2), s(1))
	call(block195(s(0),g(newOwner), g(owner), addr, calldatasize, caller, callvalue))

jump76(s(2), s(1), s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	neq(s(2), s(1))
	call(block87(s(0),g(newOwner), g(owner), caller, callvalue))

jump87(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), s(1))
	call(block262(s(0),g(newOwner), g(owner), caller, callvalue))

jump87(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), s(1))
	call(block98_0(s(0)))

block87(s(0), g(newOwner), g(owner), caller, callvalue)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3181079942
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block103(s(0), g(admin), l(l0), calldatasize, caller, callvalue, returndatasize, val)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump103(s(2),s(1),s(0),g(admin), l(l0), calldatasize, caller, callvalue, returndatasize, val))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump103(s(2), s(1), s(0), g(admin), l(l0), calldatasize, caller, callvalue, returndatasize, val)=>
	eq(s(2), 0)
	call(block115(s(1), s(0),g(admin), l(l0), calldatasize, caller, returndatasize, val))

jump103(s(2), s(1), s(0), g(admin), l(l0), calldatasize, caller, callvalue, returndatasize, val)=>
	neq(s(2), 0)
	call(block111(s(1), s(0)))

block111(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block115(s(1), s(0), g(admin), l(l0), calldatasize, caller, returndatasize, val)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 146
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = val
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 285
	nop(PUSH2)
	call(block285(s(2),s(1),s(0),g(admin), l(l0), caller, returndatasize))
	nop(JUMP)

block146(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump148(s(2), s(1), s(0), g(owner), l(l1), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block160(s(1), s(0),g(owner), l(l1), l(l0), caller))

jump148(s(2), s(1), s(0), g(owner), l(l1), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block156(s(1), s(0)))

block148(s(0), g(owner), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump148(s(2),s(1),s(0),g(owner), l(l1), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block156(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block160(s(1), s(0), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 169
	nop(PUSH2)
	s(2) = 478
	nop(PUSH2)
	call(block478(s(1),s(0),g(owner), l(l1), l(l0), caller))
	nop(JUMP)

block169(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump195(s(2), s(1), s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	eq(s(2), 0)
	call(block207(s(1), s(0),g(newOwner), g(owner), addr, calldatasize, caller))

jump195(s(2), s(1), s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	neq(s(2), 0)
	call(block203(s(1), s(0)))

block195(s(0), g(newOwner), g(owner), addr, calldatasize, caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump195(s(2),s(1),s(0),g(newOwner), g(owner), addr, calldatasize, caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block203(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block207(s(1), s(0), g(newOwner), g(owner), addr, calldatasize, caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 260
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = addr
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 566
	nop(PUSH2)
	call(block566(s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block260(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block262(s(0), g(newOwner), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump262(s(2),s(1),s(0),g(newOwner), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump262(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block274(s(1), s(0),g(newOwner), g(owner), caller))

jump262(s(2), s(1), s(0), g(newOwner), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block270(s(1), s(0)))

block270(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block274(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 283
	nop(PUSH2)
	s(2) = 648
	nop(PUSH2)
	call(block648(s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block283(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump285(s(4), s(3), s(2), s(1), s(0), g(admin), l(l0), caller, returndatasize)=>
	neq(s(4), s(3))
	call(block475(s(2), s(1), s(0)))

jump285(s(4), s(3), s(2), s(1), s(0), g(admin), l(l0), caller, returndatasize)=>
	eq(s(4), s(3))
	call(block371(s(2), s(1), s(0),g(admin), l(l0), returndatasize))

block285(s(2), s(1), s(0), g(admin), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(admin)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump285(s(4),s(3),s(2),s(1),s(0),g(admin), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump371(s(4), s(3), s(2), s(1), s(0), g(admin), l(l0), returndatasize)=>
	eq(s(4), 0)
	call(block473(s(3), s(2), s(1), s(0)))

jump371(s(4), s(3), s(2), s(1), s(0), g(admin), l(l0), returndatasize)=>
	neq(s(4), 0)
	call(block464(s(3), s(2), s(1), s(0), returndatasize))

block371(s(2), s(1), s(0), g(admin), l(l0), returndatasize)=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(admin)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump371(s(4),s(3),s(2),s(1),s(0),g(admin), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block464(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block473(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block475(s(2),s(1),s(0)))

block475(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block146(s(0)))
	nop(JUMP)

block478(s(1), s(0), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3)= eq(s(4), s(3))
	nop(EQ)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block169(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block566(s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 574
	nop(PUSH2)
	s(4) = 478
	nop(PUSH2)
	call(block478_0(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(JUMP)

block574(s(3), s(2), s(1), s(0), g(newOwner))=>
	nop(JUMPDEST)
	call(jump574(s(3),s(2),s(1),s(0),g(newOwner)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump574(s(3), s(2), s(1), s(0), g(newOwner))=>
	eq(s(3), 0)
	call(block645(s(2), s(1), s(0)))

jump574(s(3), s(2), s(1), s(0), g(newOwner))=>
	neq(s(3), 0)
	call(block580(s(2), s(1), s(0),g(newOwner)))

block580(s(2), s(1), s(0), g(newOwner))=>
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(newOwner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(newOwner) = s(4)
	nop(SSTORE)
	nop(POP)
	call(block645(s(2),s(1),s(0)))

block645(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block260(s(0)))
	nop(JUMP)

jump648(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	neq(s(3), s(2))
	call(block834(s(1), s(0)))

jump648(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	eq(s(3), s(2))
	call(block735(s(1), s(0),g(newOwner), g(owner)))

block648(s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump648(s(3),s(2),s(1),s(0),g(newOwner), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block735(s(1), s(0), g(newOwner), g(owner))=>
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(newOwner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(owner) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block834(s(1),s(0)))

block834(s(1), s(0))=>
	nop(JUMPDEST)
	call(block283(s(0)))
	nop(JUMP)

block478_0(s(3), s(2), s(1), s(0), g(newOwner), g(owner), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	call(block574(s(3),s(2),s(1),s(0),g(newOwner)))
	nop(JUMP)

block98_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

