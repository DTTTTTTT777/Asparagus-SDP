{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "token": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "token()",
            "setEtherPrices(uint256,uint256)",
            "setMinBalance(uint256)",
            "transfer(address,uint256)",
            "buyDentacoinsAgainstEther()",
            "sellDentacoinsAgainstEther(uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "refundToOwner(uint256,uint256)",
            "fallback()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "token()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setEtherPrices(uint256,uint256)": {
                "argument": {
                    "newBuyPriceEth": "uint256",
                    "newSellPriceEth": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "setMinBalance(uint256)": {
                "argument": {
                    "minimumBalanceInWei": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "buyDentacoinsAgainstEther()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "sellDentacoinsAgainstEther(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "refundToOwner(uint256,uint256)": {
                "argument": {
                    "amountOfEth": "uint256",
                    "dcn": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "buyPriceEth": "uint256",
                    "sellPriceEth": "uint256",
                    "minBalanceForAccounts": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                589,
                141
            ],
            "buyDentacoinsAgainstEther()": [
                415,
                97
            ],
            "setMinBalance(uint256)": [
                1571,
                427
            ],
            "sellDentacoinsAgainstEther(uint256)": [
                1198,
                339
            ],
            "setEtherPrices(uint256,uint256)": [
                958,
                251
            ],
            "refundToOwner(uint256,uint256)": [
                1056,
                295
            ],
            "transferFrom(address,address,uint256)": [
                733,
                185
            ],
            "transferOwnership(address)": [
                1906,
                493
            ],
            "approveAndCall(address,uint256,bytes)": [
                1616,
                449
            ],
            "transfer(address,uint256)": [
                1494,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump6522": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block6003": [
                "_to.send(minBalanceForAccounts)"
            ],
            "jump3667": [
                "msg.sender.send(eth)",
                "msg.sender.send(eth)"
            ],
            "block3667": [
                "msg.sender.send(eth)"
            ],
            "block6522": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block4362_0": [
                "msg.sender.send(revenue)"
            ],
            "block5900": [
                "msg.sender.send(minBalanceForAccounts * 3)"
            ],
            "jump6003": [
                "_to.send(minBalanceForAccounts)",
                "_to.send(minBalanceForAccounts)"
            ],
            "jump4362_0": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ],
            "jump5900": [
                "msg.sender.send(minBalanceForAccounts * 3)",
                "msg.sender.send(minBalanceForAccounts * 3)"
            ],
            "block4362": [
                "msg.sender.send(revenue)"
            ],
            "jump4362": [
                "msg.sender.send(revenue)",
                "msg.sender.send(revenue)"
            ]
        }
    }
}