jump0(s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	lt(s(1), s(0))
	call(block153())

jump0(s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	geq(s(1), s(0))
	call(block13(g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

block0(g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13(g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 277785166
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block158(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))

jump13(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldataload, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block65(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

jump65(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block267(s(0),g(registrar), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block76(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

block65(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 723575703
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2144571975
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block354(s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp))

jump76(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block87(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

jump87(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block431(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))

jump87(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block98(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

block87(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2703475518
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2817569758
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block540(s(0),g(genesis), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block109(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

block109(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3153777238
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block583(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))

jump109(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block120(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))

block120(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3162205538
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump120(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	eq(s(2), s(1))
	call(block648(s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, resolver, timestamp))

jump120(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, resolver, timestamp)=>
	neq(s(2), s(1))
	call(block131(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, timestamp))

block131(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3686658179
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, timestamp)=>
	eq(s(2), s(1))
	call(block725(s(0),g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp))

jump131(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, registrar, timestamp)=>
	neq(s(2), s(1))
	call(block142(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar))

jump142(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	eq(s(2), s(1))
	call(block802(s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar))

jump142(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	neq(s(2), s(1))
	call(block153_0(s(0)))

block142(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4205550905
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block153()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

jump158(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block170(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize))

jump158(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block166(s(1), s(0)))

block158(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump158(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block166(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block170(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 201
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 869
	nop(PUSH2)
	call(block869(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block201(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block267(s(0), g(registrar), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump267(s(2),s(1),s(0),g(registrar), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump267(s(2), s(1), s(0), g(registrar), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block279(s(1), s(0),g(registrar), l(l1), l(l0)))

jump267(s(2), s(1), s(0), g(registrar), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block275(s(1), s(0)))

block275(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block279(s(1), s(0), g(registrar), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 288
	nop(PUSH2)
	s(2) = 932
	nop(PUSH2)
	call(block932(s(1),s(0),g(registrar), l(l1), l(l0)))
	nop(JUMP)

block288(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump354(s(2), s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	eq(s(2), 0)
	call(block366(s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, owner, timestamp))

jump354(s(2), s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	neq(s(2), 0)
	call(block362(s(1), s(0)))

block354(s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump354(s(2),s(1),s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block362(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block366(s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, owner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 429
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = owner
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 970
	nop(PUSH2)
	call(block970(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l0), caller, timestamp))
	nop(JUMP)

block429(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block431(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump431(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump431(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block443(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize))

jump431(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block439(s(1), s(0)))

block439(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block443(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 474
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1265
	nop(PUSH2)
	call(block1265(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block474(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block540(s(0), g(genesis), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump540(s(2),s(1),s(0),g(genesis), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump540(s(2), s(1), s(0), g(genesis), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block552(s(1), s(0),g(genesis), l(l1), l(l0)))

jump540(s(2), s(1), s(0), g(genesis), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block548(s(1), s(0)))

block548(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block552(s(1), s(0), g(genesis), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 561
	nop(PUSH2)
	s(2) = 1328
	nop(PUSH2)
	call(block1328(s(1),s(0),g(genesis), l(l1), l(l0)))
	nop(JUMP)

block561(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block583(s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump583(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump583(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block595(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize))

jump583(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block591(s(1), s(0)))

block591(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block595(s(1), s(0), l(l3), l(l2), l(l1), l(l0), DIN, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 626
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1334
	nop(PUSH2)
	call(block1334(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block626(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump648(s(2), s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, resolver, timestamp)=>
	eq(s(2), 0)
	call(block660(s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, resolver, timestamp))

jump648(s(2), s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, resolver, timestamp)=>
	neq(s(2), 0)
	call(block656(s(1), s(0)))

block648(s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, resolver, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump648(s(2),s(1),s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, resolver, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block656(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block660(s(1), s(0), l(l3), l(l2), l(l0), DIN, calldatasize, caller, resolver, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 723
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = resolver
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 1365
	nop(PUSH2)
	call(block1365(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l0), caller, timestamp))
	nop(JUMP)

block723(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block725(s(0), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump725(s(2),s(1),s(0),g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump725(s(2), s(1), s(0), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	eq(s(2), 0)
	call(block737(s(1), s(0),g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, owner, timestamp))

jump725(s(2), s(1), s(0), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, callvalue, owner, timestamp)=>
	neq(s(2), 0)
	call(block733(s(1), s(0)))

block733(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block737(s(1), s(0), g(registrar), l(l3), l(l2), l(l0), DIN, calldatasize, caller, owner, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 800
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = DIN
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = owner
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 1660
	nop(PUSH2)
	call(block1660(s(3),s(2),s(1),s(0),g(registrar), l(l3), l(l2), l(l0), caller, timestamp))
	nop(JUMP)

block800(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump802(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	eq(s(2), 0)
	call(block814(s(1), s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, registrar))

jump802(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	neq(s(2), 0)
	call(block810(s(1), s(0)))

block802(s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump802(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, callvalue, registrar))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block810(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block814(s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), calldatasize, caller, registrar)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 867
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = registrar
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1934
	nop(PUSH2)
	call(block1934(s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), caller))
	nop(JUMP)

block867(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block869(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block201(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block932(s(1), s(0), g(registrar), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(registrar)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block288(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump970(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	eq(s(6), s(5))
	call(block1082(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp))

jump970(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	neq(s(6), s(5))
	call(block1078(s(4), s(3), s(2), s(1), s(0)))

block970(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump970(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1078(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1082(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 34541065116976389672179346440214451506456007544684684883891569696942651623590
	nop(PUSH32)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block429(s(0)))
	nop(JUMP)

block1265(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block474(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1328(s(1), s(0), g(genesis), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(2) = g(genesis)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block561(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1334(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l3) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 2
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block626(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump1365(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	eq(s(6), s(5))
	call(block1477(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp))

jump1365(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	neq(s(6), s(5))
	call(block1473(s(4), s(3), s(2), s(1), s(0)))

block1365(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump1365(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l3), l(l2), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1473(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block1477(s(4), s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = or(s(8), s(7))
	nop(OR)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = timestamp
	nop(TIMESTAMP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 2
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 92127005027900551132092255978744726529561236322624647233483224623239481560276
	nop(PUSH32)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block723(s(0)))
	nop(JUMP)

jump1660(s(5), s(4), s(3), s(2), s(1), s(0), g(registrar), l(l3), l(l2), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block1752(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp))

jump1660(s(5), s(4), s(3), s(2), s(1), s(0), g(registrar), l(l3), l(l2), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block1748(s(3), s(2), s(1), s(0)))

block1660(s(3), s(2), s(1), s(0), g(registrar), l(l3), l(l2), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(registrar)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump1660(s(5),s(4),s(3),s(2),s(1),s(0),g(registrar), l(l3), l(l2), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1748(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block1752(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 108354793712136684441648375056779092926458324330279025513848483537599109886487
	nop(PUSH32)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	call(block800(s(0)))
	nop(JUMP)

jump1934(s(5), s(4), s(3), s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), caller)=>
	eq(s(5), s(4))
	call(block2048(s(3), s(2), s(1), s(0),g(registrar), l(l0)))

jump1934(s(5), s(4), s(3), s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), caller)=>
	neq(s(5), s(4))
	call(block2044(s(3), s(2), s(1), s(0)))

block1934(s(2), s(1), s(0), g(genesis), g(registrar), l(l3), l(l2), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(3) = g(genesis)
	nop(SLOAD)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump1934(s(5),s(4),s(3),s(2),s(1),s(0),g(genesis), g(registrar), l(l3), l(l2), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2044(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block2048(s(3), s(2), s(1), s(0), g(registrar), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(registrar)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(registrar) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 30831987242024509513198186193803254233148347968116969084354602736643407270093
	nop(PUSH32)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	call(block867(s(0)))
	nop(JUMP)

block153_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

