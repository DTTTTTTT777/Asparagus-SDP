{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "paused()",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "paused()": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "paused()": [
                137,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "paused()",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Token()",
            "setOwner()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "mint(address,uint256)",
            "paused()",
            "addUnpausedWallet(address)",
            "delUnpausedWallet(address)",
            "setMigrationAgent(address)",
            "migrate()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "paused()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "Token()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setOwner()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "addUnpausedWallet(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "delUnpausedWallet(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "totalMigrated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1101,
                317
            ],
            "setOwner()": [
                1031,
                273
            ],
            "allowance(address,address)": [
                1921,
                559
            ],
            "transferFrom(address,address,uint256)": [
                725,
                185
            ],
            "paused()": [
                1054,
                295
            ],
            "pause()": [
                1342,
                383
            ],
            "approve(address,uint256)": [
                581,
                141
            ],
            "unpause()": [
                907,
                229
            ],
            "migrate()": [
                1452,
                427
            ],
            "setMigrationAgent(address)": [
                1188,
                339
            ],
            "addUnpausedWallet(address)": [
                1763,
                515
            ],
            "transferOwnership(address)": [
                2040,
                581
            ],
            "mint(address,uint256)": [
                930,
                251
            ],
            "delUnpausedWallet(address)": [
                370,
                97
            ],
            "transfer(address,uint256)": [
                1662,
                493
            ]
        },
        "block_CALL_mapping": {
            "block5286": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "jump5286": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault()",
            "deposit(address)",
            "close(address)",
            "enableRefunds()",
            "refund(address)",
            "restart()",
            "del(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "RefundVault()": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "deposit(address)": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "close(address)": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "refund(address)": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "restart()": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            },
            "del(address)": {
                "argument": {},
                "contract": {
                    "round": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "refund(address)": [
                774,
                295
            ],
            "close(address)": [
                586,
                229
            ],
            "enableRefunds()": [
                352,
                141
            ],
            "restart()": [
                229,
                97
            ],
            "del(address)": [
                462,
                185
            ],
            "deposit(address)": [
                720,
                273
            ],
            "transferOwnership(address)": [
                653,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump1731": [
                "_wallet.transfer(this.balance)",
                "_wallet.transfer(this.balance)"
            ],
            "block1731": [
                "_wallet.transfer(this.balance)"
            ],
            "jump2518": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block2518": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "DistributorRefundVault": {
        "function_list": [
            "RefundVault()",
            "deposit(address)",
            "close(address)",
            "enableRefunds()",
            "refund(address)",
            "restart()",
            "del(address)",
            "Ownable()",
            "transferOwnership(address)",
            "DistributorRefundVault(address,uint256)",
            "close(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "RefundVault()": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "deposit(address)": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "close(address)": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "refund(address)": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "restart()": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "del(address)": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "taxValue": "uint256"
                }
            },
            "DistributorRefundVault(address,uint256)": {
                "argument": {
                    "_taxValue": "uint256"
                },
                "contract": {
                    "taxValue": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refund(address)": [
                926,
                339
            ],
            "close(address)": [
                695,
                251
            ],
            "enableRefunds()": [
                374,
                141
            ],
            "restart()": [
                251,
                97
            ],
            "del(address)": [
                484,
                185
            ],
            "deposit(address)": [
                872,
                317
            ],
            "transferOwnership(address)": [
                805,
                295
            ]
        },
        "block_CALL_mapping": {
            "block2099": [
                "taxCollector.transfer(forTarget1)"
            ],
            "jump2939": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "jump2099": [
                "taxCollector.transfer(forTarget1)",
                "taxCollector.transfer(forTarget1)"
            ],
            "jump2215": [
                "_wallet.transfer(forTarget2)",
                "_wallet.transfer(forTarget2)"
            ],
            "block2939": [
                "investor.transfer(depositedValue)"
            ],
            "block2215": [
                "_wallet.transfer(forTarget2)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(Token)",
            "ICOSaleType()",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "finalize1()",
            "initialize()",
            "initialization()",
            "claimRefund()",
            "goalReached()",
            "setup(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)",
            "changePeriod(uint256,uint256,uint256)",
            "changeTargets(uint256,uint256)",
            "changeRate(uint256,uint256,uint256)",
            "changeDiscount(uint256,uint256,uint256)",
            "weiRaised()",
            "weiTotalRaised()",
            "getProfitPercent()",
            "getProfitPercentForData(uint256)",
            "fastICO(uint256)",
            "tokenUnpause()",
            "tokenPause()",
            "crowdsalePause()",
            "crowdsaleUnpause()",
            "unpausedWallet(address)",
            "moveTokens(address)",
            "changeWallet(Crowdsale.Roles,address)",
            "distructVault()",
            "paymentsInOtherCurrency(uint256,uint256)",
            "buyTokens(address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(Token)": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "ICOSaleType()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "finalize1()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "initialize()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "initialization()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "setup(uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endDiscountTime": "uint256",
                    "_endTime": "uint256",
                    "_softCap": "uint256",
                    "_hardCap": "uint256",
                    "_rate": "uint256",
                    "_overLimit": "uint256",
                    "_minPay": "uint256",
                    "_minProfit": "uint256",
                    "_maxProfit": "uint256",
                    "_stepProfit": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "changePeriod(uint256,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endDiscountTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "changeTargets(uint256,uint256)": {
                "argument": {
                    "_softCap": "uint256",
                    "_hardCap": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "changeRate(uint256,uint256,uint256)": {
                "argument": {
                    "_rate": "uint256",
                    "_overLimit": "uint256",
                    "_minPay": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "changeDiscount(uint256,uint256,uint256)": {
                "argument": {
                    "_minProfit": "uint256",
                    "_maxProfit": "uint256",
                    "_stepProfit": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "weiRaised()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "weiTotalRaised()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "getProfitPercent()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "getProfitPercentForData(uint256)": {
                "argument": {
                    "timeNow": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "fastICO(uint256)": {
                "argument": {
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "tokenUnpause()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "tokenPause()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "crowdsalePause()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "crowdsaleUnpause()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "unpausedWallet(address)": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "moveTokens(address)": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "changeWallet(Crowdsale.Roles,address)": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "distructVault()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "paymentsInOtherCurrency(uint256,uint256)": {
                "argument": {
                    "_token": "uint256",
                    "_value": "uint256"
                },
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "maxProfit": "uint256",
                    "minProfit": "uint256",
                    "stepProfit": "uint256",
                    "startTime": "uint256",
                    "endDiscountTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "softCap": "uint256",
                    "hardCap": "uint256",
                    "overLimit": "uint256",
                    "minPay": "uint256",
                    "ethWeiRaised": "uint256",
                    "nonEthWeiRaised": "uint256",
                    "weiPreSale": "uint256",
                    "tokenReserved": "uint256",
                    "allToken": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block1450_1": [
                "token.transfer(restricted, restrictedTokens)"
            ],
            "block1450_0": [
                "token.transfer(restricted, restrictedTokens)"
            ],
            "jump1113": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "jump403_0": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "block403_1": [
                "multisig.transfer(msg.value)"
            ],
            "block403_0": [
                "multisig.transfer(msg.value)"
            ],
            "block403": [
                "multisig.transfer(msg.value)"
            ],
            "jump1450": [
                "token.transfer(restricted, restrictedTokens)",
                "token.transfer(restricted, restrictedTokens)"
            ],
            "jump403_1": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "jump403": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "block1450": [
                "token.transfer(restricted, restrictedTokens)"
            ],
            "jump1450_1": [
                "token.transfer(restricted, restrictedTokens)",
                "token.transfer(restricted, restrictedTokens)"
            ],
            "jump1450_0": [
                "token.transfer(restricted, restrictedTokens)",
                "token.transfer(restricted, restrictedTokens)"
            ],
            "jump1113_1": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "jump1113_0": [
                "token.transfer(msg.sender, tokensWithBonus)",
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block1113_1": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block1113_0": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ],
            "block1113": [
                "token.transfer(msg.sender, tokensWithBonus)"
            ]
        }
    },
    "SVTAllocation": {
        "function_list": [
            "SVTAllocation(Token,address)",
            "unlock()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "SVTAllocation(Token,address)": {
                "argument": {},
                "contract": {
                    "unlockedAt": "uint256",
                    "tokensCreated": "uint256"
                }
            },
            "unlock()": {
                "argument": {},
                "contract": {
                    "unlockedAt": "uint256",
                    "tokensCreated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "unlock()": [
                233,
                119
            ]
        },
        "block_CALL_mapping": {
            "block880": [
                "token.transfer(owner,token.balanceOf(this))"
            ],
            "jump880": [
                "token.transfer(owner,token.balanceOf(this))",
                "token.transfer(owner,token.balanceOf(this))"
            ],
            "jump688": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block688": [
                "token.balanceOf(this)"
            ]
        }
    }
}