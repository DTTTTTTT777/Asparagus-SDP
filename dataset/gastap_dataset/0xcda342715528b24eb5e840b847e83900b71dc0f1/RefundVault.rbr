jump0(s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	lt(s(1), s(0))
	call(block175())

jump0(s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	geq(s(1), s(0))
	call(block13(g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block0(g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block13(g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 342664497
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block180(s(0),g(round), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block65(s(0),g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

jump65(s(2), s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block229(s(0),g(state), g(deposited), g(owner), caller, callvalue))

jump65(s(2), s(1), s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block76(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block65(s(0), g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 519271773
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(state), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1207567902
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block252(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump76(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block87(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

jump87(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block352(s(0),g(deposited), g(owner), l(l0), caller, callvalue))

jump87(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block98(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block87(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2354240577
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block375(s(0),g(owner), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block109(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block109(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3117083636
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block462(s(0),g(owner), calldatasize, caller, callvalue, wallet))

jump109(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block120(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block120(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump120(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block529(s(0),g(deposited), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block131(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))

block131(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3342889889
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	eq(s(2), s(1))
	call(block586(s(0),g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, wallet))

jump131(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, investor, newOwner, returndatasize, wallet)=>
	neq(s(2), s(1))
	call(block142(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, newOwner, returndatasize))

jump142(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, newOwner, returndatasize)=>
	eq(s(2), s(1))
	call(block653(s(0),g(owner), calldatasize, caller, callvalue, newOwner))

jump142(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, newOwner, returndatasize)=>
	neq(s(2), s(1))
	call(block153(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, returndatasize))

block142(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, newOwner, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, newOwner, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump153(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, returndatasize)=>
	eq(s(2), s(1))
	call(block720(s(0),g(deposited), g(round), g(owner), l(l3), l(l2), calldatasize, caller, callvalue, investor))

jump153(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, returndatasize)=>
	neq(s(2), s(1))
	call(block164(s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize))

block153(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4081121793
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, investor, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	eq(s(2), s(1))
	call(block774(s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize))

jump164(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	neq(s(2), s(1))
	call(block175_0(s(0)))

block164(s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4203298842
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block180(s(0), g(round), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump180(s(2),s(1),s(0),g(round), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump180(s(2), s(1), s(0), g(round), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block192(s(1), s(0),g(round), l(l1), l(l0)))

jump180(s(2), s(1), s(0), g(round), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block188(s(1), s(0)))

block188(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block192(s(1), s(0), g(round), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 201
	nop(PUSH2)
	s(2) = 841
	nop(PUSH2)
	call(block841(s(1),s(0),g(round), l(l1), l(l0)))
	nop(JUMP)

block201(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block229(s(0), g(state), g(deposited), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump229(s(2),s(1),s(0),g(state), g(deposited), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump229(s(2), s(1), s(0), g(state), g(deposited), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block241(s(1), s(0),g(state), g(deposited), g(owner), caller))

jump229(s(2), s(1), s(0), g(state), g(deposited), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block237(s(1), s(0)))

block237(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block241(s(1), s(0), g(state), g(deposited), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 250
	nop(PUSH2)
	s(2) = 860
	nop(PUSH2)
	call(block860(s(1),s(0),g(state), g(deposited), g(owner), caller))
	nop(JUMP)

block250(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump252(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block264(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump252(s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block260(s(1), s(0)))

block252(s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump252(s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block260(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block264(s(1), s(0), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 330
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = calldataload
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 1086
	nop(PUSH2)
	call(block1086(s(3),s(2),s(1),s(0), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block330(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump352(s(2), s(1), s(0), g(deposited), g(owner), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block364(s(1), s(0),g(deposited), g(owner), l(l0), caller))

jump352(s(2), s(1), s(0), g(deposited), g(owner), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block360(s(1), s(0)))

block352(s(0), g(deposited), g(owner), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump352(s(2),s(1),s(0),g(deposited), g(owner), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block360(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block364(s(1), s(0), g(deposited), g(owner), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 373
	nop(PUSH2)
	s(2) = 1123
	nop(PUSH2)
	call(block1123(s(1),s(0),g(deposited), g(owner), l(l0), caller))
	nop(JUMP)

block373(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump375(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block387(s(1), s(0),g(owner), l(l1), l(l0)))

jump375(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block383(s(1), s(0)))

block375(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump375(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block383(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block387(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 396
	nop(PUSH2)
	s(2) = 1348
	nop(PUSH2)
	call(block1348(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block396(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block462(s(0), g(owner), calldatasize, caller, callvalue, wallet)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump462(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, wallet))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump462(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, wallet)=>
	eq(s(2), 0)
	call(block474(s(1), s(0),g(owner), calldatasize, caller, wallet))

jump462(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, wallet)=>
	neq(s(2), 0)
	call(block470(s(1), s(0)))

block470(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block474(s(1), s(0), g(owner), calldatasize, caller, wallet)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 527
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = wallet
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1385
	nop(PUSH2)
	call(block1385(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block529(s(0), g(deposited), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump529(s(2),s(1),s(0),g(deposited), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump529(s(2), s(1), s(0), g(deposited), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block541(s(1), s(0),g(deposited), l(l1), l(l0)))

jump529(s(2), s(1), s(0), g(deposited), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block537(s(1), s(0)))

block537(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block541(s(1), s(0), g(deposited), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 550
	nop(PUSH2)
	s(2) = 1501
	nop(PUSH2)
	call(block1501(s(1),s(0),g(deposited), l(l1), l(l0)))
	nop(JUMP)

block550(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump550(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block566(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump550(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block565(s(5), s(4), s(3), s(2), s(1), s(0)))

block565(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block566(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block586(s(0), g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, wallet)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump586(s(2),s(1),s(0),g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, wallet))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump586(s(2), s(1), s(0), g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, wallet)=>
	eq(s(2), 0)
	call(block598(s(1), s(0),g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, returndatasize, wallet))

jump586(s(2), s(1), s(0), g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, callvalue, returndatasize, wallet)=>
	neq(s(2), 0)
	call(block594(s(1), s(0)))

block594(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block598(s(1), s(0), g(deposited), g(owner), l(l0), address, balance, calldatasize, caller, returndatasize, wallet)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 651
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = wallet
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1520
	nop(PUSH2)
	call(block1520(s(2),s(1),s(0),g(deposited), g(owner), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block651(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block653(s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump653(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump653(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block665(s(1), s(0),g(owner), calldatasize, caller, newOwner))

jump653(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block661(s(1), s(0)))

block661(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block665(s(1), s(0), g(owner), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 718
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1877
	nop(PUSH2)
	call(block1877(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block718(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block720(s(0), g(deposited), g(round), g(owner), l(l3), l(l2), calldatasize, caller, callvalue, investor)=>
	nop(JUMPDEST)
	s(1) = 772
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investor
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2095
	nop(PUSH2)
	call(block2095(s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), caller, callvalue))
	nop(JUMP)

block772(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump774(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	eq(s(2), 0)
	call(block786(s(1), s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, investor, returndatasize))

jump774(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	neq(s(2), 0)
	call(block782(s(1), s(0)))

block774(s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump774(s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, callvalue, investor, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block782(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block786(s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), calldatasize, investor, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 839
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investor
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 2464
	nop(PUSH2)
	call(block2464(s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))
	nop(JUMP)

block839(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block841(s(1), s(0), g(round), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(round)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block201(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block860(s(1), s(0), g(state), g(deposited), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump860(s(3),s(2),s(1),s(0),g(state), g(deposited), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump860(s(3), s(2), s(1), s(0), g(state), g(deposited), g(owner), caller)=>
	eq(s(3), s(2))
	call(block951(s(1), s(0),g(state), g(deposited)))

jump860(s(3), s(2), s(1), s(0), g(state), g(deposited), g(owner), caller)=>
	neq(s(3), s(2))
	call(block947(s(1), s(0)))

block947(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump951(s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	leq(s(4), s(3))
	call(block963(s(2), s(1), s(0),g(state), g(deposited)))

jump951(s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	gt(s(4), s(3))
	call(block962(s(2), s(1), s(0)))

block951(s(1), s(0), g(state), g(deposited))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	nop(DUP2)
	call(jump951(s(4),s(3),s(2),s(1),s(0),g(state), g(deposited)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block962(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump963(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	leq(s(5), s(4))
	call(block990(s(3), s(2), s(1), s(0),g(state), g(deposited)))

jump963(s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	gt(s(5), s(4))
	call(block989(s(3), s(2), s(1), s(0)))

block963(s(2), s(1), s(0), g(state), g(deposited))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(deposited)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump963(s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(deposited)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block989(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block990(s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	nop(JUMPDEST)
	call(jump990(s(3),s(2),s(1),s(0),g(state), g(deposited)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump990(s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	eq(s(3), s(2))
	call(block1002(s(1), s(0),g(state), g(deposited)))

jump990(s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	neq(s(3), s(2))
	call(block998(s(1), s(0)))

block998(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1002(s(1), s(0), g(state), g(deposited))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(state)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(state) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(deposited)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 2
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1002(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), g(deposited)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	leq(s(8), s(7))
	call(block1079(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(deposited)))

jump1002(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), g(deposited))=>
	gt(s(8), s(7))
	call(block1078(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1078(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1079(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited))=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(deposited) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block250(s(0)))
	nop(JUMP)

block1086(s(3), s(2), s(1), s(0), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 32
	nop(PUSH1)
	l(l2) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	l(l3) = s(4)
	nop(MSTORE)
	s(4) = 64
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block330(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump1123(s(3), s(2), s(1), s(0), g(deposited), g(owner), l(l0), caller)=>
	eq(s(3), s(2))
	call(block1214(s(1), s(0),g(deposited), l(l0)))

jump1123(s(3), s(2), s(1), s(0), g(deposited), g(owner), l(l0), caller)=>
	neq(s(3), s(2))
	call(block1210(s(1), s(0)))

block1123(s(1), s(0), g(deposited), g(owner), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump1123(s(3),s(2),s(1),s(0),g(deposited), g(owner), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1210(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump1214(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	leq(s(4), s(3))
	call(block1227(s(2), s(1), s(0),g(deposited), l(l0)))

jump1214(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	gt(s(4), s(3))
	call(block1226(s(2), s(1), s(0)))

block1214(s(1), s(0), g(deposited), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	call(jump1214(s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1226(s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1227(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	leq(s(5), s(4))
	call(block1254(s(3), s(2), s(1), s(0),g(deposited), l(l0)))

jump1227(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	gt(s(5), s(4))
	call(block1253(s(3), s(2), s(1), s(0)))

block1227(s(2), s(1), s(0), g(deposited), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(deposited)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump1227(s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1253(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1254(s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	nop(JUMPDEST)
	call(jump1254(s(3),s(2),s(1),s(0),g(deposited), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1254(s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	eq(s(3), s(2))
	call(block1266(s(1), s(0),g(deposited), l(l0)))

jump1254(s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	neq(s(3), s(2))
	call(block1262(s(1), s(0)))

block1262(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump1266(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	leq(s(8), s(7))
	call(block1297(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(deposited), l(l0)))

jump1266(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	gt(s(8), s(7))
	call(block1296(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1266(s(1), s(0), g(deposited), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(deposited)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 2
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1266(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1296(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1297(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(deposited) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 40534221001338828463654408705283367095986095053836202805174804562473988533129
	nop(PUSH32)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(LOG1)
	call(block373(s(0)))
	nop(JUMP)

block1348(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block396(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1385(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump1385(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1385(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block1476(s(2), s(1), s(0)))

jump1385(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block1472(s(2), s(1), s(0)))

block1472(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1476(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	nop(SUICIDE)

block1501(s(1), s(0), g(deposited), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(deposited)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block550(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump1520(s(4), s(3), s(2), s(1), s(0), g(deposited), g(owner), l(l0), address, balance, caller, returndatasize)=>
	eq(s(4), s(3))
	call(block1611(s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1520(s(4), s(3), s(2), s(1), s(0), g(deposited), g(owner), l(l0), address, balance, caller, returndatasize)=>
	neq(s(4), s(3))
	call(block1607(s(2), s(1), s(0)))

block1520(s(2), s(1), s(0), g(deposited), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump1520(s(4),s(3),s(2),s(1),s(0),g(deposited), g(owner), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1607(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1611(s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump1611(s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1611(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	leq(s(5), s(4))
	call(block1624(s(3), s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1611(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	gt(s(5), s(4))
	call(block1623(s(3), s(2), s(1), s(0)))

block1623(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1624(s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(deposited)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump1624(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1624(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	leq(s(6), s(5))
	call(block1651(s(4), s(3), s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1624(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	gt(s(6), s(5))
	call(block1650(s(4), s(3), s(2), s(1), s(0)))

block1650(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1651(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	eq(s(4), s(3))
	call(block1663(s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1651(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	neq(s(4), s(3))
	call(block1659(s(2), s(1), s(0)))

block1651(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	call(jump1651(s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1659(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump1663(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	neq(s(4), s(3))
	call(block1701(s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1663(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	eq(s(4), s(3))
	call(block1697(s(2), s(1), s(0)))

block1663(s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump1663(s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1697(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1701(s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 2
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(deposited)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 2
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1701(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1701(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	leq(s(9), s(8))
	call(block1731(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(deposited), l(l0), address, balance, returndatasize))

jump1701(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	gt(s(9), s(8))
	call(block1730(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1730(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1731(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	eq(s(4), 0)
	call(block1873(s(3), s(2), s(1), s(0)))

jump1731(s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	neq(s(4), 0)
	call(block1864(s(3), s(2), s(1), s(0), returndatasize))

block1731(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(deposited) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 13056823691455831782821551932387165572531722618262030974974745115047928634682
	nop(PUSH32)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump1731(s(4),s(3),s(2),s(1),s(0),g(deposited), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1864(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block1873(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block651(s(0)))
	nop(JUMP)

block1877(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump1877(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1877(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block1968(s(2), s(1), s(0),g(owner)))

jump1877(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block1964(s(2), s(1), s(0)))

block1964(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1968(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump1968(s(4),s(3),s(2),s(1),s(0),g(owner)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1968(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	neq(s(4), s(3))
	call(block2028(s(2), s(1), s(0),g(owner)))

jump1968(s(4), s(3), s(2), s(1), s(0), g(owner))=>
	eq(s(4), s(3))
	call(block2024(s(2), s(1), s(0)))

block2024(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block2028(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block718(s(0)))
	nop(JUMP)

block2095(s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), caller, callvalue)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump2095(s(4),s(3),s(2),s(1),s(0),g(deposited), g(round), g(owner), l(l3), l(l2), caller, callvalue))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2095(s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), caller, callvalue)=>
	eq(s(4), s(3))
	call(block2186(s(2), s(1), s(0),g(deposited), g(round), l(l3), l(l2), callvalue))

jump2095(s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), g(owner), l(l3), l(l2), caller, callvalue)=>
	neq(s(4), s(3))
	call(block2182(s(2), s(1), s(0)))

block2182(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump2186(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	leq(s(5), s(4))
	call(block2199(s(3), s(2), s(1), s(0),g(deposited), g(round), l(l3), l(l2), callvalue))

jump2186(s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	gt(s(5), s(4))
	call(block2198(s(3), s(2), s(1), s(0)))

block2186(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	call(jump2186(s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2198(s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2199(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	leq(s(6), s(5))
	call(block2226(s(4), s(3), s(2), s(1), s(0),g(round), l(l3), l(l2), callvalue))

jump2199(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	gt(s(6), s(5))
	call(block2225(s(4), s(3), s(2), s(1), s(0)))

block2199(s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), callvalue)=>
	nop(JUMPDEST)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(deposited)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 255
	nop(PUSH1)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2199(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), callvalue))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2225(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2226(s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), callvalue)=>
	eq(s(4), s(3))
	call(block2238(s(2), s(1), s(0),g(round), l(l3), l(l2), callvalue))

jump2226(s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), callvalue)=>
	neq(s(4), s(3))
	call(block2234(s(2), s(1), s(0)))

block2226(s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), callvalue)=>
	nop(JUMPDEST)
	call(jump2226(s(4),s(3),s(2),s(1),s(0),g(round), l(l3), l(l2), callvalue))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2234(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block2238(s(2), s(1), s(0), g(round), l(l3), l(l2), callvalue)=>
	nop(JUMPDEST)
	s(3) = 2357
	nop(PUSH2)
	s(4) = callvalue
	nop(CALLVALUE)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(round)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = 2880
	nop(PUSH2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(block2880(s(5),s(4),s(3),s(2),s(1),s(0),g(round), l(l3), l(l2)))
	nop(JUMP)

block2357(s(3), s(2), s(1), s(0), g(round), l(l3), l(l2))=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 20
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(round)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block772(s(0)))
	nop(JUMP)

block2464(s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	call(jump2464(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2464(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	leq(s(6), s(5))
	call(block2479(s(4), s(3), s(2), s(1), s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))

jump2464(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	gt(s(6), s(5))
	call(block2478(s(4), s(3), s(2), s(1), s(0)))

block2478(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2479(s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(deposited)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump2479(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2479(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	leq(s(7), s(6))
	call(block2506(s(5), s(4), s(3), s(2), s(1), s(0),g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))

jump2479(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(deposited), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	gt(s(7), s(6))
	call(block2505(s(5), s(4), s(3), s(2), s(1), s(0)))

block2505(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2506(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump2506(s(5),s(4),s(3),s(2),s(1),s(0),g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2506(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	eq(s(5), s(4))
	call(block2518(s(3), s(2), s(1), s(0),g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))

jump2506(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	neq(s(5), s(4))
	call(block2514(s(3), s(2), s(1), s(0)))

block2514(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

jump2518(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	eq(s(5), 0)
	call(block2797(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump2518(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	neq(s(5), 0)
	call(block2788(s(4), s(3), s(2), s(1), s(0), returndatasize))

block2518(s(3), s(2), s(1), s(0), g(round), l(l3), l(l2), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 20
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(round)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l3) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l2) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(round)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2300
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 0
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(6)
	nop(DUP6)
	s(13) = s(4)
	nop(DUP9)
	s(14) = s(5)
	nop(DUP9)
	s(8) = 1
	nop(CALL)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(4)
	nop(DUP1)
	call(jump2518(s(5),s(4),s(3),s(2),s(1),s(0),g(round), l(l3), l(l2), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2788(s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	nop(REVERT)

block2797(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 97641065312751534436410382034919844513384695502837741376481856288402673829457
	nop(PUSH32)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG2)
	nop(POP)
	nop(POP)
	call(block839(s(0)))
	nop(JUMP)

jump2880(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2))=>
	geq(s(9), s(8))
	call(block2900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(round), l(l3), l(l2)))

jump2880(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2))=>
	lt(s(9), s(8))
	call(block2899(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2880(s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	call(jump2880(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(round), l(l3), l(l2)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2899(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2900(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(round), l(l3), l(l2))=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2357(s(3),s(2),s(1),s(0),g(round), l(l3), l(l2)))
	nop(JUMP)

block175_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

