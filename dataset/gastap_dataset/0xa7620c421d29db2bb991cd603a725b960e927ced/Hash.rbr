block0(g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	lt(s(1), s(0))
	call(block76(callvalue))

jump0(s(1), s(0), g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	geq(s(1), s(0))
	call(block13(g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString))

block13(g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2629345898
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	eq(s(2), s(1))
	call(block94(s(0),g(owner), caller, callvalue))

jump13(s(2), s(1), s(0), g(owner), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, dataString)=>
	neq(s(2), s(1))
	call(block65(s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString))

jump65(s(2), s(1), s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	eq(s(2), s(1))
	call(block117(s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString))

jump65(s(2), s(1), s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	neq(s(2), s(1))
	call(block76_0(s(0), callvalue))

block65(s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3021074068
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(callvalue)=>
	nop(JUMPDEST)
	s(0) = callvalue
	nop(CALLVALUE)
	s(1) = s(0)
	nop(DUP1)
	call(jump76(s(1),s(0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(1), s(0), callvalue)=>
	eq(s(1), 0)
	call(block88(s(0)))

jump76(s(1), s(0), callvalue)=>
	neq(s(1), 0)
	call(block84(s(0)))

block84(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block88(s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block94(s(0), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump94(s(2),s(1),s(0),g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump94(s(2), s(1), s(0), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block106(s(1), s(0),g(owner), caller))

jump94(s(2), s(1), s(0), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block102(s(1), s(0)))

block102(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block106(s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 115
	nop(PUSH2)
	s(2) = 250
	nop(PUSH2)
	call(block250(s(1),s(0),g(owner), caller))
	nop(JUMP)

block115(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump117(s(2), s(1), s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	eq(s(2), 0)
	call(block129(s(1), s(0), l(l2), l(l1), l(l0), calldatasize, dataString))

jump117(s(2), s(1), s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	neq(s(2), 0)
	call(block125(s(1), s(0)))

block117(s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump117(s(2),s(1),s(0), l(l2), l(l1), l(l0), calldatasize, callvalue, dataString))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block125(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block129(s(1), s(0), l(l2), l(l1), l(l0), calldatasize, dataString)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 220
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = dataString
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(3)
	nop(DUP3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(5)
	nop(DUP1)
	s(6) = dataString
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 31
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 64
	nop(PUSH1)
	l(l0) = s(9)
	nop(MSTORE)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	nop(CALLDATACOPY)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 395
	nop(PUSH2)
	call(block395(s(2),s(1),s(0), l(l2), l(l1), l(l0)))
	nop(JUMP)

block220(s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	ls(1) = s(4)
	ls(2) = s(5)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump250(s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(3), s(2))
	call(block393(s(1), s(0)))

jump250(s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(3), s(2))
	call(block336(s(1), s(0),g(owner)))

block250(s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump250(s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block336(s(1), s(0), g(owner))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	nop(SUICIDE)

block393(s(1), s(0))=>
	nop(JUMPDEST)
	call(block115(s(0)))
	nop(JUMP)

block395(s(2), s(1), s(0), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(7)
	nop(DUP4)
	call(block414(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))

jump414(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	lt(s(13), s(12))
	call(block451(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

jump414(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	geq(s(13), s(12))
	call(block425(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0)))

block414(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(9)
	nop(DUP4)
	call(jump414(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block425(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(12) = l(l2)
	nop(MLOAD)
	s(13) = s(10)
	nop(DUP3)
	ls(1) = s(12)
	ls(2) = s(13)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 414
	nop(PUSH2)
	call(block414(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l2), l(l0)))
	nop(JUMP)

block451(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l2), l(l0))=>
	nop(JUMPDEST)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(12)
	nop(DUP1)
	s(13) = not(s(13))
	nop(NOT)
	s(14) = s(11)
	nop(DUP3)
	s(14) = l(l2)
	nop(MLOAD)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(10)
	nop(DUP5)
	ll = s(15)
	s(15) = fresh(0)
	nop(MLOAD)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(10)
	nop(DUP6)
	ls(1) = s(15)
	ls(2) = s(16)
	nop(MSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block220(s(1),s(0), l(l0)))
	nop(JUMP)

block76_0(s(0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump76_0(s(2),s(1),s(0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump76_0(s(2), s(1), s(0), callvalue)=>
	eq(s(2), 0)
	call(block88_0(s(1), s(0)))

jump76_0(s(2), s(1), s(0), callvalue)=>
	neq(s(2), 0)
	call(block84_0(s(1), s(0)))

block84_0(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block88_0(s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

