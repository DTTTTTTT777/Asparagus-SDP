{
    "StandardTokenProtocol": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "totalSupply()": [
                248,
                97
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "GUPToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "GUPToken(address,uint256)",
            "fallback()",
            "createToken(address,uint256)",
            "createIlliquidToken(address,uint256)",
            "makeLiquid()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "GUPToken(address,uint256)": {
                "argument": {
                    "_endMintingTime": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "createToken(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "createIlliquidToken(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "makeLiquid()": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "LOCKOUT_PERIOD": "uint256",
                    "endMintingTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                466,
                119
            ],
            "createToken(address,uint256)": [
                930,
                251
            ],
            "createIlliquidToken(address,uint256)": [
                610,
                163
            ],
            "makeLiquid()": [
                1612,
                405
            ],
            "totalSupply()": [
                567,
                141
            ],
            "balanceOf(address)": [
                1031,
                273
            ],
            "transferFrom(address,address,uint256)": [
                711,
                185
            ],
            "allowance(address,address)": [
                1493,
                383
            ],
            "transfer(address,uint256)": [
                1349,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "assert(bool)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Contribution": {
        "function_list": [
            "assert(bool)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "Contribution()",
            "toggleHalt(bool)",
            "getPriceRate()",
            "processPurchase(uint256,uint256)",
            "preBuy()",
            "fallback()",
            "drain()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "Contribution()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "toggleHalt(bool)": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "getPriceRate()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "processPurchase(uint256,uint256)": {
                "argument": {
                    "_rate": "uint256",
                    "_remaining": "uint256"
                },
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "preBuy()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "STAGE_ONE_TIME_END": "uint256",
                    "STAGE_TWO_TIME_END": "uint256",
                    "STAGE_THREE_TIME_END": "uint256",
                    "STAGE_FOUR_TIME_END": "uint256",
                    "PRICE_STAGE_ONE": "uint256",
                    "PRICE_STAGE_TWO": "uint256",
                    "PRICE_STAGE_THREE": "uint256",
                    "PRICE_STAGE_FOUR": "uint256",
                    "PRICE_BTCS": "uint256",
                    "MAX_SUPPLY": "uint256",
                    "ALLOC_ILLIQUID_TEAM": "uint256",
                    "ALLOC_LIQUID_TEAM": "uint256",
                    "ALLOC_BOUNTIES": "uint256",
                    "ALLOC_NEW_USERS": "uint256",
                    "ALLOC_CROWDSALE": "uint256",
                    "BTCS_PORTION_MAX": "uint256",
                    "publicStartTime": "uint256",
                    "privateStartTime": "uint256",
                    "publicEndTime": "uint256",
                    "etherRaised": "uint256",
                    "gupSold": "uint256",
                    "btcsPortionTotal": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump10605": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump7865": [
                "aix.controller()",
                "aix.controller()"
            ],
            "block10272": [
                "aix.controller()"
            ],
            "jump10272": [
                "aix.controller()",
                "aix.controller()"
            ],
            "jump12448": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "block8091": [
                "aix.decimals()"
            ],
            "block5895": [
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))"
            ],
            "jump5537": [
                "aix.totalSupply()",
                "aix.totalSupply()"
            ],
            "jump10894": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump10548": [
                "aix.claimTokens(_token)",
                "aix.claimTokens(_token)"
            ],
            "jump6224": [
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))",
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))"
            ],
            "jump12856": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "block10548": [
                "aix.claimTokens(_token)"
            ],
            "jump12448_1": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "jump12448_0": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "block12378_1": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block6224": [
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))"
            ],
            "jump7640": [
                "aix.totalSupply()",
                "aix.totalSupply()"
            ],
            "jump12856_0": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump12856_1": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump12378_1": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump12378_0": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block7640": [
                "aix.totalSupply()"
            ],
            "block5537": [
                "aix.totalSupply()"
            ],
            "block10894": [
                "token.balanceOf(this)"
            ],
            "block12856": [
                "_th.transfer(toReturn)"
            ],
            "block11151": [
                "token.transfer(controller, balance)"
            ],
            "block12448": [
                "contributionWallet.transfer(toFund)"
            ],
            "block12856_0": [
                "_th.transfer(toReturn)"
            ],
            "block12856_1": [
                "_th.transfer(toReturn)"
            ],
            "jump12378": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump5895": [
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))",
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))"
            ],
            "block5333": [
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))"
            ],
            "jump9284": [
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))",
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))"
            ],
            "jump5333": [
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))",
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))"
            ],
            "jump8091": [
                "aix.decimals()",
                "aix.decimals()"
            ],
            "jump9000": [
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)",
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)"
            ],
            "block9000": [
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)"
            ],
            "block12448_1": [
                "contributionWallet.transfer(toFund)"
            ],
            "block12448_0": [
                "contributionWallet.transfer(toFund)"
            ],
            "block7865": [
                "aix.controller()"
            ],
            "block12378_0": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block9284": [
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))"
            ],
            "block10605": [
                "controller.transfer(this.balance)"
            ],
            "block12378": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump11151": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ]
        }
    }
}