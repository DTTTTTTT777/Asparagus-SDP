{
    "Lottery": {
        "function_list": [
            "buyTicket(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "buyTicket(uint256)": {
                "argument": {
                    "_blindRandom": "uint256"
                },
                "contract": {
                    "limit": "uint256",
                    "count": "uint256",
                    "senders": "address[]",
                    "secretSum": "uint256",
                    "secrets": "uint256[]",
                    "tickets": "mapping(address => Lottery.Ticket[])"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump3982": [
                "winner.transfer(total_user_eth * (100 - host_percentage) / 100)",
                "winner.transfer(total_user_eth * (100 - host_percentage) / 100)"
            ],
            "block2988": [
                "host.transfer(total_user_eth * host_percentage / (num_hosts * 100))"
            ],
            "jump2226": [
                "msg.sender.transfer(total_user_eth)",
                "msg.sender.transfer(total_user_eth)"
            ],
            "jump2988": [
                "host.transfer(total_user_eth * host_percentage / (num_hosts * 100))",
                "host.transfer(total_user_eth * host_percentage / (num_hosts * 100))"
            ],
            "block3982": [
                "winner.transfer(total_user_eth * (100 - host_percentage) / 100)"
            ],
            "block2226": [
                "msg.sender.transfer(total_user_eth)"
            ],
            "block1910": [
                "msg.sender.transfer(total_user_eth)"
            ],
            "block2567": [
                "user.transfer(eth_to_withdraw)"
            ],
            "jump1910": [
                "msg.sender.transfer(total_user_eth)",
                "msg.sender.transfer(total_user_eth)"
            ],
            "jump2567": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ]
        }
    }
}