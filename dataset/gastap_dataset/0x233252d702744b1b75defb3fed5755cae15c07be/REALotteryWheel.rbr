block0(g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	lt(s(1), s(0))
	call(block120(g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))

jump0(s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	geq(s(1), s(0))
	call(block13(g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp))

block13(g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1305404128
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump13(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	eq(s(2), s(1))
	call(block134(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump13(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, i, number, s, timestamp)=>
	neq(s(2), s(1))
	call(block65(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, s, timestamp))

jump65(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, s, timestamp)=>
	eq(s(2), s(1))
	call(block211(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, number, s, timestamp))

jump65(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, s, timestamp)=>
	neq(s(2), s(1))
	call(block76(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp))

block65(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, s, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2012516244
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, s, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2718098550
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	eq(s(2), s(1))
	call(block260(s(0),g(last_hash), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	neq(s(2), s(1))
	call(block87(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp))

jump87(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	eq(s(2), s(1))
	call(block311(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, i))

jump87(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	neq(s(2), s(1))
	call(block98(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))

block87(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2810422513
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, i, number, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block98(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3430500782
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	eq(s(2), s(1))
	call(block388(s(0),g(round_count), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	neq(s(2), s(1))
	call(block109(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))

block109(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4152117137
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	eq(s(2), s(1))
	call(block439(s(0),g(controller), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	neq(s(2), s(1))
	call(block120_0(s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp))

block120(g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	nop(JUMPDEST)
	s(0) = 132
	nop(PUSH2)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = 1
	nop(PUSH1)
	s(1) = s(2)*s(1)
	nop(MUL)
	s(2) = 526
	nop(PUSH2)
	call(block526(s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(JUMP)

block132()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump134(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block146(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize))

jump134(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block142(s(1), s(0)))

block134(s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump134(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block142(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block146(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 181
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 776
	nop(PUSH2)
	call(block776(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block181(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block211(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, number, s, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump211(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, number, s, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump211(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, number, s, timestamp)=>
	eq(s(2), 0)
	call(block223(s(1), s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, number, s, timestamp))

jump211(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, number, s, timestamp)=>
	neq(s(2), 0)
	call(block219(s(1), s(0)))

block219(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block223(s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, number, s, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 258
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = s
	nop(CALLDATALOAD)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 526
	nop(PUSH2)
	call(block526_0(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(JUMP)

block258(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block260(s(0), g(last_hash), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump260(s(2),s(1),s(0),g(last_hash), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump260(s(2), s(1), s(0), g(last_hash), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block272(s(1), s(0),g(last_hash), l(l1), l(l0)))

jump260(s(2), s(1), s(0), g(last_hash), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block268(s(1), s(0)))

block268(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block272(s(1), s(0), g(last_hash), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 281
	nop(PUSH2)
	s(2) = 800
	nop(PUSH2)
	call(block800(s(1),s(0),g(last_hash), l(l1), l(l0)))
	nop(JUMP)

block281(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump311(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, i)=>
	eq(s(2), 0)
	call(block323(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, i))

jump311(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, i)=>
	neq(s(2), 0)
	call(block319(s(1), s(0)))

block311(s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, i)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump311(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, callvalue, i))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block319(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block323(s(1), s(0), l(l5), l(l4), l(l1), l(l0), calldatasize, i)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 358
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = i
	nop(CALLDATALOAD)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 806
	nop(PUSH2)
	call(block806(s(2),s(1),s(0), l(l5), l(l4), l(l1), l(l0)))
	nop(JUMP)

block358(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump388(s(2), s(1), s(0), g(round_count), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block400(s(1), s(0),g(round_count), l(l1), l(l0)))

jump388(s(2), s(1), s(0), g(round_count), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block396(s(1), s(0)))

block388(s(0), g(round_count), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump388(s(2),s(1),s(0),g(round_count), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block396(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block400(s(1), s(0), g(round_count), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 409
	nop(PUSH2)
	s(2) = 843
	nop(PUSH2)
	call(block843(s(1),s(0),g(round_count), l(l1), l(l0)))
	nop(JUMP)

block409(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block439(s(0), g(controller), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump439(s(2),s(1),s(0),g(controller), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump439(s(2), s(1), s(0), g(controller), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block451(s(1), s(0),g(controller), l(l1), l(l0)))

jump439(s(2), s(1), s(0), g(controller), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block447(s(1), s(0)))

block447(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block451(s(1), s(0), g(controller), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 460
	nop(PUSH2)
	s(2) = 862
	nop(PUSH2)
	call(block862(s(1),s(0),g(controller), l(l1), l(l0)))
	nop(JUMP)

block460(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block526(s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	nop(JUMPDEST)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(controller)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump526(s(3),s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump526(s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	eq(s(3), s(2))
	call(block618(s(1), s(0),g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp))

jump526(s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	neq(s(3), s(2))
	call(block614(s(1), s(0)))

block614(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block618(s(1), s(0), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp)=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(round_count)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 65535
	nop(PUSH2)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(2) = s(3)+s(2)
	nop(ADD)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(round_count)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 65535
	nop(PUSH2)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(round_count) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = number
	nop(NUMBER)
	s(3) = timestamp
	nop(TIMESTAMP)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	nop(DUP2)
	l(l2) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 0
	nop(PUSH1)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l3) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = sha3(s(3), s(2))
	nop(SHA3)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(last_hash) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(last_hash)
	nop(SLOAD)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(round_count)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 65535
	nop(PUSH2)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l4) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l5) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 0
	nop(PUSH1)
	s(5) = not(s(5))
	nop(NOT)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gs(1) = s(4)
	gs(2) = s(3)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block132())
	nop(JUMP)

block776(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l5) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l4) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block181(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block800(s(1), s(0), g(last_hash), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(2) = g(last_hash)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block281(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block806(s(2), s(1), s(0), l(l5), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block358(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block843(s(1), s(0), g(round_count), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(round_count)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 65535
	nop(PUSH2)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block409(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block862(s(1), s(0), g(controller), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(controller)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block460(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block120_0(s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, number, timestamp)=>
	nop(JUMPDEST)
	s(1) = 132
	nop(PUSH2)
	s(2) = callvalue
	nop(CALLVALUE)
	s(3) = 1
	nop(PUSH1)
	s(2) = s(3)*s(2)
	nop(MUL)
	s(3) = 526
	nop(PUSH2)
	call(block526_1(s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(JUMP)

block132_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block526_0(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(controller)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump526_0(s(4),s(3),s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump526_0(s(4), s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	eq(s(4), s(3))
	call(block618_0(s(2), s(1), s(0),g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp))

jump526_0(s(4), s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	neq(s(4), s(3))
	call(block614_0(s(2), s(1), s(0)))

jump526_1(s(4), s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	eq(s(4), s(3))
	call(block618_1(s(2), s(1), s(0),g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp))

jump526_1(s(4), s(3), s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	neq(s(4), s(3))
	call(block614_1(s(2), s(1), s(0)))

block526_1(s(2), s(1), s(0), g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp)=>
	nop(JUMPDEST)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(controller)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump526_1(s(4),s(3),s(2),s(1),s(0),g(controller), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), caller, number, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block614_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block614_1(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block618_0(s(2), s(1), s(0), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp)=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(round_count)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(round_count)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 65535
	nop(PUSH2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 65535
	nop(PUSH2)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(round_count) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = number
	nop(NUMBER)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(last_hash) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(last_hash)
	nop(SLOAD)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(round_count)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block258(s(0)))
	nop(JUMP)

block618_1(s(2), s(1), s(0), g(last_hash), g(round_count), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), number, timestamp)=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(round_count)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 65535
	nop(PUSH2)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(round_count)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 65535
	nop(PUSH2)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 65535
	nop(PUSH2)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(round_count) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = number
	nop(NUMBER)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 1
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(last_hash) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(last_hash)
	nop(SLOAD)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(round_count)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 65535
	nop(PUSH2)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l4) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l5) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 0
	nop(PUSH1)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block132_0(s(0)))
	nop(JUMP)

