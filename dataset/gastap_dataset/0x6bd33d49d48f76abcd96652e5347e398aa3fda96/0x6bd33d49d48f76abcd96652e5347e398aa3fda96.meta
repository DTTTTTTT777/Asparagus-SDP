{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1059,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdsaleController": {
        "function_list": [
            "contributeETH()"
        ],
        "initial_state": {
            "contributeETH()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "contributeETH()": [
                481,
                119
            ]
        },
        "block_CALL_mapping": {
            "block6549_2": [
                "token.owner()"
            ],
            "block6549_1": [
                "token.owner()"
            ],
            "block6549_0": [
                "token.owner()"
            ],
            "block6549": [
                "token.owner()"
            ],
            "block7258": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block5320": [
                "token.owner()"
            ],
            "block6691_1": [
                "beneficiary.send(msg.value)"
            ],
            "block3636": [
                "token.issue(_to, _amount)"
            ],
            "jump7258_2": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump3636": [
                "token.issue(_to, _amount)",
                "token.issue(_to, _amount)"
            ],
            "block7003_2": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block7003_1": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block7003_0": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump6691_1": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "jump6691_0": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "jump6691_2": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block2655": [
                "token.transferOwnership(_newOwner)"
            ],
            "block7258_0": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump5320": [
                "token.owner()",
                "token.owner()"
            ],
            "block7258_2": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block4211": [
                "_token.transfer(_to, _amount)"
            ],
            "block6691_2": [
                "beneficiary.send(msg.value)"
            ],
            "jump6549": [
                "token.owner()",
                "token.owner()"
            ],
            "block6691_0": [
                "beneficiary.send(msg.value)"
            ],
            "block5005": [
                "token.disableTransfers(_disable)"
            ],
            "block7003": [
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump6691": [
                "beneficiary.send(msg.value)",
                "beneficiary.send(msg.value)"
            ],
            "block5988": [
                "token.destroy(_from, _amount)"
            ],
            "block6691": [
                "beneficiary.send(msg.value)"
            ],
            "block7258_1": [
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump7258_1": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump7258_0": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "block2916": [
                "token.acceptOwnership()"
            ],
            "jump2655": [
                "token.transferOwnership(_newOwner)",
                "token.transferOwnership(_newOwner)"
            ],
            "jump2916": [
                "token.acceptOwnership()",
                "token.acceptOwnership()"
            ],
            "jump7003_1": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump7003_0": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump5988": [
                "token.destroy(_from, _amount)",
                "token.destroy(_from, _amount)"
            ],
            "jump7003_2": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "jump5005": [
                "token.disableTransfers(_disable)",
                "token.disableTransfers(_disable)"
            ],
            "jump6549_0": [
                "token.owner()",
                "token.owner()"
            ],
            "jump7003": [
                "token.issue(msg.sender, tokenAmount)",
                "token.issue(msg.sender, tokenAmount)"
            ],
            "block3317": [
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump4211": [
                "_token.transfer(_to, _amount)",
                "_token.transfer(_to, _amount)"
            ],
            "jump6549_1": [
                "token.owner()",
                "token.owner()"
            ],
            "jump7258": [
                "token.issue(beneficiary, tokenAmount)",
                "token.issue(beneficiary, tokenAmount)"
            ],
            "jump3317": [
                "token.withdrawTokens(_token, _to, _amount)",
                "token.withdrawTokens(_token, _to, _amount)"
            ],
            "jump6549_2": [
                "token.owner()",
                "token.owner()"
            ]
        }
    },
    "BancorBuyer": {
        "function_list": [
            "withdraw()",
            "add_reward()",
            "buy()",
            "default_helper()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "withdraw()": {
                "argument": {},
                "contract": {
                    "reward": "uint256",
                    "time_bought": "uint256"
                }
            },
            "add_reward()": {
                "argument": {},
                "contract": {
                    "reward": "uint256",
                    "time_bought": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "reward": "uint256",
                    "time_bought": "uint256"
                }
            },
            "default_helper()": {
                "argument": {},
                "contract": {
                    "reward": "uint256",
                    "time_bought": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "reward": "uint256",
                    "time_bought": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "default_helper()": [
                315,
                163
            ],
            "add_reward()": [
                305,
                141
            ],
            "withdraw()": [
                282,
                119
            ],
            "buy()": [
                372,
                207
            ]
        },
        "block_CALL_mapping": {
            "block913": [
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "jump1854": [
                "msg.sender.transfer(reward)",
                "msg.sender.transfer(reward)"
            ],
            "jump1204_0": [
                "ERC20(token).transfer(developer, fee)",
                "ERC20(token).transfer(developer, fee)"
            ],
            "jump1204_1": [
                "ERC20(token).transfer(developer, fee)",
                "ERC20(token).transfer(developer, fee)"
            ],
            "jump1370": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block1854": [
                "msg.sender.transfer(reward)"
            ],
            "block913_1": [
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "block913_0": [
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "block1811": [
                "CrowdsaleController(sale).contributeETH.value(this.balance - reward)()"
            ],
            "jump913_1": [
                "ERC20(token).transfer(msg.sender, amount - fee)",
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "jump1246_1": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump913": [
                "ERC20(token).transfer(msg.sender, amount - fee)",
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "block1204": [
                "ERC20(token).transfer(developer, fee)"
            ],
            "jump1204": [
                "ERC20(token).transfer(developer, fee)",
                "ERC20(token).transfer(developer, fee)"
            ],
            "block1246": [
                "msg.sender.transfer(msg.value)"
            ],
            "block1204_0": [
                "ERC20(token).transfer(developer, fee)"
            ],
            "block1204_1": [
                "ERC20(token).transfer(developer, fee)"
            ],
            "jump1246": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block1370": [
                "msg.sender.transfer(amount)"
            ],
            "jump1246_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump913_0": [
                "ERC20(token).transfer(msg.sender, amount - fee)",
                "ERC20(token).transfer(msg.sender, amount - fee)"
            ],
            "block1246_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block1246_1": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump1811": [
                "CrowdsaleController(sale).contributeETH.value(this.balance - reward)()",
                "CrowdsaleController(sale).contributeETH.value(this.balance - reward)()"
            ]
        }
    }
}