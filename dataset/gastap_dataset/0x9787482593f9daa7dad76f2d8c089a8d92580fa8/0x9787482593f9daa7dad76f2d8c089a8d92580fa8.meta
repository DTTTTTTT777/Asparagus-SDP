{
    "ElementhToken": {
        "function_list": [
            "mint(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "mint(address,uint256)": [
                128,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "addOwner(address)",
            "removeOwner(address)",
            "isOwner()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "isOwner()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "addOwner(address)": [
                159,
                97
            ],
            "isOwner()": [
                226,
                119
            ],
            "removeOwner(address)": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)",
            "validPurchase(bool)",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "validPurchase(bool)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                395,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)",
            "validPurchase(bool)",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase(bool)",
            "hasEnded()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase(bool)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                717,
                273
            ]
        },
        "block_CALL_mapping": {
            "block1629": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block2143_1": [
                "token.mint(reserve, reserveAmount)"
            ],
            "block2143_0": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1886_0": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump1886_1": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "block1886": [
                "token.mint(team, teamAmount)"
            ],
            "jump2648": [
                "token.mint(_to, mintAmount)",
                "token.mint(_to, mintAmount)"
            ],
            "jump2143": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump1372": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1886_0": [
                "token.mint(team, teamAmount)"
            ],
            "block1886_1": [
                "token.mint(team, teamAmount)"
            ],
            "block3343_0": [
                "wallet.transfer(msg.value)"
            ],
            "block3343_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump3343_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3343_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2143": [
                "token.mint(reserve, reserveAmount)"
            ],
            "jump3343": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1629_1": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block1629_0": [
                "token.mint(bounty, bountyAmount)"
            ],
            "block3343": [
                "wallet.transfer(msg.value)"
            ],
            "jump1372_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1372_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1886": [
                "token.mint(team, teamAmount)",
                "token.mint(team, teamAmount)"
            ],
            "jump2143_1": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "jump2143_0": [
                "token.mint(reserve, reserveAmount)",
                "token.mint(reserve, reserveAmount)"
            ],
            "block1372_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1372_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629_1": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "jump1629_0": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ],
            "block2648": [
                "token.mint(_to, mintAmount)"
            ],
            "block1372": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1629": [
                "token.mint(bounty, bountyAmount)",
                "token.mint(bounty, bountyAmount)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Ownable()",
            "addOwner(address)",
            "removeOwner(address)",
            "isOwner()",
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)",
            "validPurchase(bool)",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "isOwner()": {
                "argument": {},
                "contract": {}
            },
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "validPurchase(bool)": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                179,
                97
            ],
            "hasEnded()": [
                379,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Ownable()",
            "addOwner(address)",
            "removeOwner(address)",
            "isOwner()",
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)",
            "validPurchase(bool)",
            "hasEnded()",
            "RefundableCrowdsale(uint256)",
            "claimRefund()",
            "goalReached()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "isOwner()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase(bool)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                513,
                229
            ],
            "finalize()": [
                266,
                119
            ],
            "hasEnded()": [
                536,
                251
            ],
            "goalReached()": [
                332,
                163
            ]
        },
        "block_CALL_mapping": {
            "block2008": [
                "vault.enableRefunds()"
            ],
            "jump1845": [
                "vault.close()",
                "vault.close()"
            ],
            "block1845": [
                "vault.close()"
            ],
            "jump2008": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump1281": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block1281": [
                "vault.refund(msg.sender)"
            ]
        }
    },
    "ElementhCrowdsale": {
        "function_list": [
            "RefundableCrowdsale(uint256)",
            "claimRefund()",
            "goalReached()",
            "finalize()",
            "finalization()",
            "Ownable()",
            "addOwner(address)",
            "removeOwner(address)",
            "isOwner()",
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)",
            "validPurchase(bool)",
            "hasEnded()",
            "CappedCrowdsale(uint256)",
            "validPurchase(bool)",
            "hasEnded()",
            "ElementhCrowdsale(uint256,uint256,uint256,uint256,uint256,address,uint256,ElementhToken)",
            "setStartTime(uint256)",
            "setEndTime(uint256)",
            "setRate(uint256)",
            "setGoalETH(uint256)",
            "setCapETH(uint256)",
            "setStage(uint8)",
            "setBTCRate(uint256)",
            "setWallet(address)",
            "setBonuses(uint256,uint256,uint256)",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "addBTCTransaction(uint256,bytes16,address)",
            "getTokenAmount(uint256)",
            "withdraw()",
            "deposit()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "isOwner()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "validPurchase(bool)": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "ElementhCrowdsale(uint256,uint256,uint256,uint256,uint256,address,uint256,ElementhToken)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_capETH": "uint256",
                    "_goalETH": "uint256",
                    "_BTCRate": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setStartTime(uint256)": {
                "argument": {
                    "_startTime": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setEndTime(uint256)": {
                "argument": {
                    "_endTime": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setGoalETH(uint256)": {
                "argument": {
                    "_goalETH": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setCapETH(uint256)": {
                "argument": {
                    "_capETH": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setStage(uint8)": {
                "argument": {
                    "_stage": "uint8"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setBTCRate(uint256)": {
                "argument": {
                    "_BTCRate": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "setBonuses(uint256,uint256,uint256)": {
                "argument": {
                    "_bonusStage1": "uint256",
                    "_bonusStage2FirstDay": "uint256",
                    "_bonusStage2SecondDay": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "addBTCTransaction(uint256,bytes16,address)": {
                "argument": {
                    "_amountSatoshi": "uint256",
                    "_hashTransaction": "bytes16"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "getTokenAmount(uint256)": {
                "argument": {
                    "_weiAmount": "uint256"
                },
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "stage": "uint8",
                    "bonusStage1": "uint256",
                    "bonusStage2FirstDay": "uint256",
                    "bonusStage2SecondDay": "uint256",
                    "satoshiRaised": "uint256",
                    "BTCRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setBTCRate(uint256)": [
                652,
                97
            ],
            "setStage(uint8)": [
                2068,
                735
            ],
            "setGoalETH(uint256)": [
                697,
                119
            ],
            "hasEnded()": [
                2247,
                823
            ],
            "addOwner(address)": [
                1549,
                493
            ],
            "claimRefund()": [
                1886,
                647
            ],
            "setRate(uint256)": [
                1046,
                273
            ],
            "getTokenAmount(uint256)": [
                1958,
                691
            ],
            "setWallet(address)": [
                2126,
                779
            ],
            "setEndTime(uint256)": [
                2023,
                713
            ],
            "goalReached()": [
                1659,
                537
            ],
            "setCapETH(uint256)": [
                1504,
                471
            ],
            "removeOwner(address)": [
                828,
                185
            ],
            "addBTCTransaction(uint256,bytes16,address)": [
                1288,
                405
            ],
            "withdraw()": [
                1134,
                317
            ],
            "deposit()": [
                2116,
                757
            ],
            "isOwner()": [
                1796,
                603
            ],
            "finalize()": [
                1394,
                427
            ],
            "setBonuses(uint256,uint256,uint256)": [
                938,
                229
            ],
            "setStartTime(uint256)": [
                1157,
                339
            ],
            "buyTokens(address)": [
                2193,
                801
            ]
        },
        "block_CALL_mapping": {
            "jump4967": [
                "token.mint(_walletETH, tokens)",
                "token.mint(_walletETH, tokens)"
            ],
            "block7314_0": [
                "wallet.transfer(msg.value)"
            ],
            "block4967": [
                "token.mint(_walletETH, tokens)"
            ],
            "block7314": [
                "wallet.transfer(msg.value)"
            ],
            "block7314_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump2881_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump6065": [
                "msg.sender.send(refund)",
                "msg.sender.send(refund)"
            ],
            "block6065": [
                "msg.sender.send(refund)"
            ],
            "jump7314_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump7314_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2881_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump3923": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block2881_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2881": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block2881_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block3923": [
                "wallet.transfer(this.balance)"
            ],
            "block2881": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump7314": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    }
}