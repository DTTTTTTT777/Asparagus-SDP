{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "TokenBase": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "_supply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "_supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Migrable": {
        "function_list": [
            "Owned()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "migrate()",
            "migrate_participant(address)",
            "setMigrationAgent(address)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "migrate()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "migrate_participant(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalMigrated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                457,
                141
            ],
            "totalSupply()": [
                281,
                97
            ],
            "allowance(address,address)": [
                952,
                295
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "migrate()": [
                785,
                229
            ],
            "transfer(address,uint256)": [
                851,
                273
            ],
            "setMigrationAgent(address)": [
                544,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3755": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)",
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ],
            "block3755": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ]
        }
    },
    "ProspectorsGoldToken": {
        "function_list": [
            "migrate()",
            "migrate_participant(address)",
            "setMigrationAgent(address)",
            "Owned()",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ProspectorsGoldToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "unlock()",
            "init_crowdsale(address)",
            "init_bounty_program(address)",
            "init_dev_and_presale_allocation(address,address)",
            "migrate_game_balance()",
            "mint_for(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "migrate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "migrate_participant(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "ProspectorsGoldToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "unlock()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "init_crowdsale(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "init_bounty_program(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "init_dev_and_presale_allocation(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "migrate_game_balance()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "mint_for(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "game_allocation": "uint256",
                    "dev_allocation": "uint256",
                    "crowdfunding_allocation": "uint256",
                    "bounty_allocation": "uint256",
                    "presale_allocation": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "init_crowdsale(address)": [
                2354,
                669
            ],
            "migrate_game_balance()": [
                1613,
                449
            ],
            "transfer(address,uint256)": [
                2044,
                581
            ],
            "balanceOf(address)": [
                1262,
                339
            ],
            "totalSupply()": [
                722,
                163
            ],
            "allowance(address,address)": [
                2235,
                647
            ],
            "transferFrom(address,address,uint256)": [
                808,
                207
            ],
            "unlock()": [
                1997,
                559
            ],
            "approve(address,uint256)": [
                511,
                97
            ],
            "migrate()": [
                1590,
                427
            ],
            "setMigrationAgent(address)": [
                1349,
                361
            ],
            "init_dev_and_presale_allocation(address,address)": [
                1076,
                295
            ],
            "init_bounty_program(address)": [
                612,
                119
            ]
        },
        "block_CALL_mapping": {
            "block4505": [
                "crowdsale.is_success()"
            ],
            "block7120": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ],
            "jump7120_0": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)",
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ],
            "block7120_0": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ],
            "jump4505": [
                "crowdsale.is_success()",
                "crowdsale.is_success()"
            ],
            "jump7120": [
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)",
                "MigrationAgent(migrationAgent).migrateFrom(_participant, _value)"
            ]
        }
    },
    "ProspectorsCrowdsale": {
        "function_list": [
            "is_success()"
        ],
        "initial_state": {
            "is_success()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "is_success()": [
                968,
                405
            ]
        },
        "block_CALL_mapping": {
            "block3373": [
                "token.unlock()"
            ],
            "block3632": [
                "token.transfer(0xb1, my_token_balance())"
            ],
            "jump3918": [
                "dev_multisig.transfer(this.balance)",
                "dev_multisig.transfer(this.balance)"
            ],
            "jump3632": [
                "token.transfer(0xb1, my_token_balance())",
                "token.transfer(0xb1, my_token_balance())"
            ],
            "block2240_0": [
                "token.transfer(msg.sender, buy_amount)"
            ],
            "block2529_1": [
                "token.balanceOf(this)"
            ],
            "block2529_0": [
                "token.balanceOf(this)"
            ],
            "block2529_3": [
                "token.balanceOf(this)"
            ],
            "block2529_2": [
                "token.balanceOf(this)"
            ],
            "block2529_5": [
                "token.balanceOf(this)"
            ],
            "block2529_4": [
                "token.balanceOf(this)"
            ],
            "block2529_7": [
                "token.balanceOf(this)"
            ],
            "block2529_6": [
                "token.balanceOf(this)"
            ],
            "block2529_9": [
                "token.balanceOf(this)"
            ],
            "block2529_8": [
                "token.balanceOf(this)"
            ],
            "block2739": [
                "msg.sender.transfer(amount)"
            ],
            "jump2240_0": [
                "token.transfer(msg.sender, buy_amount)",
                "token.transfer(msg.sender, buy_amount)"
            ],
            "jump2529_5": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2240": [
                "token.transfer(msg.sender, buy_amount)",
                "token.transfer(msg.sender, buy_amount)"
            ],
            "jump2529_12": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_11": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_10": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3918": [
                "dev_multisig.transfer(this.balance)"
            ],
            "jump2739": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block2529": [
                "token.balanceOf(this)"
            ],
            "jump2529": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2529_11": [
                "token.balanceOf(this)"
            ],
            "jump2529_3": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_2": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_1": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_0": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_7": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_6": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2240": [
                "token.transfer(msg.sender, buy_amount)"
            ],
            "jump2529_4": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_9": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2529_8": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3373": [
                "token.unlock()",
                "token.unlock()"
            ],
            "block2529_10": [
                "token.balanceOf(this)"
            ],
            "block2529_12": [
                "token.balanceOf(this)"
            ]
        }
    }
}