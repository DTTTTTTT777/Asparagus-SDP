{
    "ERC223ReceivingContract": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "allowance(address,address)": [
                9964,
                961
            ],
            "transferFrom(address,address,uint256)": [
                914,
                207
            ],
            "approve(address,uint256)": [
                533,
                97
            ],
            "balanceOf(address)": [
                7218,
                929
            ],
            "transfer(address,uint256)": [
                2423,
                625
            ]
        },
        "block_CALL_mapping": {
            "block7218": [
                "controller.balanceOf(a)"
            ],
            "block5997": [
                "controller.decreaseApproval(msg.sender, _spender, _subtractedValue)"
            ],
            "jump3560": [
                "controller.totalSupply()",
                "controller.totalSupply()"
            ],
            "block6767": [
                "token.balanceOf(this)"
            ],
            "jump6767": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block9232": [
                "controller.increaseApproval(msg.sender, _spender, _addedValue)"
            ],
            "jump6302": [
                "controller.allowance(msg.sender, _spender)",
                "controller.allowance(msg.sender, _spender)"
            ],
            "jump5997": [
                "controller.decreaseApproval(msg.sender, _spender, _subtractedValue)",
                "controller.decreaseApproval(msg.sender, _spender, _subtractedValue)"
            ],
            "block6959": [
                "token.transfer(_to, token.balanceOf(this))"
            ],
            "jump7218": [
                "controller.balanceOf(a)",
                "controller.balanceOf(a)"
            ],
            "jump8723_0": [
                "controller.transfer(msg.sender, _to, _value)",
                "controller.transfer(msg.sender, _to, _value)"
            ],
            "jump5017": [
                "controller.burn(msg.sender, _amount)",
                "controller.burn(msg.sender, _amount)"
            ],
            "jump6959": [
                "token.transfer(_to, token.balanceOf(this))",
                "token.transfer(_to, token.balanceOf(this))"
            ],
            "jump8723": [
                "controller.transfer(msg.sender, _to, _value)",
                "controller.transfer(msg.sender, _to, _value)"
            ],
            "block3560": [
                "controller.totalSupply()"
            ],
            "jump9232": [
                "controller.increaseApproval(msg.sender, _spender, _addedValue)",
                "controller.increaseApproval(msg.sender, _spender, _addedValue)"
            ],
            "block6302": [
                "controller.allowance(msg.sender, _spender)"
            ],
            "jump9964": [
                "controller.allowance(_owner, _spender)",
                "controller.allowance(_owner, _spender)"
            ],
            "block9964": [
                "controller.allowance(_owner, _spender)"
            ],
            "jump4480": [
                "controller.transferFrom(msg.sender, _from, _to, _value)",
                "controller.transferFrom(msg.sender, _from, _to, _value)"
            ],
            "block9537": [
                "controller.allowance(msg.sender, _spender)"
            ],
            "block8723": [
                "controller.transfer(msg.sender, _to, _value)"
            ],
            "block4480": [
                "controller.transferFrom(msg.sender, _from, _to, _value)"
            ],
            "jump9537": [
                "controller.allowance(msg.sender, _spender)",
                "controller.allowance(msg.sender, _spender)"
            ],
            "block5017": [
                "controller.burn(msg.sender, _amount)"
            ],
            "jump3238": [
                "controller.approve(msg.sender, _spender, _value)",
                "controller.approve(msg.sender, _spender, _value)"
            ],
            "block3238": [
                "controller.approve(msg.sender, _spender, _value)"
            ],
            "block8723_0": [
                "controller.transfer(msg.sender, _to, _value)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                772,
                207
            ],
            "transfer(address,uint256,bytes)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                500,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3197": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3197": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "RaidenToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256,bytes)",
            "RaidenToken(address,address,uint256)",
            "burn(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "RaidenToken(address,address,uint256)": {
                "argument": {
                    "initial_supply": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "num": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "multiplier": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                324,
                97
            ],
            "burn(uint256)": [
                650,
                185
            ],
            "balanceOf(address)": [
                695,
                207
            ],
            "transfer(address,uint256,bytes)": [
                1027,
                273
            ],
            "transferFrom(address,address,uint256)": [
                468,
                141
            ],
            "allowance(address,address)": [
                1198,
                295
            ],
            "transfer(address,uint256)": [
                926,
                251
            ]
        },
        "block_CALL_mapping": {
            "block4242": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump4242": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "DutchAuction": {
        "function_list": [
            "DutchAuction(address,address,uint256,uint256,uint32)",
            "fallback()",
            "setup(address)",
            "changeSettings(uint256,uint256,uint32)",
            "addToWhitelist(address[])",
            "removeFromWhitelist(address[])",
            "startAuction()",
            "finalizeAuction()",
            "bid()",
            "claimTokens()",
            "proxyClaimTokens(address)",
            "price()",
            "missingFundsToEndAuction()",
            "calcTokenPrice()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "DutchAuction(address,address,uint256,uint256,uint32)": {
                "argument": {
                    "_price_start": "uint256",
                    "_price_constant": "uint256",
                    "_price_exponent": "uint32"
                },
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "setup(address)": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "changeSettings(uint256,uint256,uint32)": {
                "argument": {
                    "_price_start": "uint256",
                    "_price_constant": "uint256",
                    "_price_exponent": "uint32"
                },
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "addToWhitelist(address[])": {
                "argument": {
                    "_bidder_addresses": "address[]"
                },
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "removeFromWhitelist(address[])": {
                "argument": {
                    "_bidder_addresses": "address[]"
                },
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "startAuction()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "finalizeAuction()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "bid()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "claimTokens()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "proxyClaimTokens(address)": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "price()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "missingFundsToEndAuction()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "calcTokenPrice()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "token_claim_waiting_period": "uint256",
                    "bid_threshold": "uint256",
                    "price_start": "uint256",
                    "price_constant": "uint256",
                    "price_exponent": "uint32",
                    "start_time": "uint256",
                    "end_time": "uint256",
                    "start_block": "uint256",
                    "received_wei": "uint256",
                    "funds_claimed": "uint256",
                    "token_multiplier": "uint256",
                    "num_tokens_auctioned": "uint256",
                    "final_price": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimTokens()": [
                814,
                273
            ],
            "startAuction()": [
                1247,
                405
            ],
            "setup(address)": [
                1180,
                383
            ],
            "proxyClaimTokens(address)": [
                1722,
                581
            ],
            "addToWhitelist(address[])": [
                1313,
                449
            ],
            "finalizeAuction()": [
                2043,
                691
            ],
            "price()": [
                1679,
                559
            ],
            "bid()": [
                632,
                163
            ],
            "removeFromWhitelist(address[])": [
                991,
                339
            ],
            "missingFundsToEndAuction()": [
                1913,
                647
            ]
        },
        "block_CALL_mapping": {
            "jump3690": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block5213_0": [
                "token.balanceOf(address(this))"
            ],
            "block3690": [
                "token.balanceOf(address(this))"
            ],
            "jump6060_0": [
                "token.balanceOf(receiver_address)",
                "token.balanceOf(receiver_address)"
            ],
            "block5630_0": [
                "token.transfer(receiver_address, num)"
            ],
            "jump6060": [
                "token.balanceOf(receiver_address)",
                "token.balanceOf(receiver_address)"
            ],
            "block2497": [
                "wallet_address.transfer(msg.value)"
            ],
            "jump5630": [
                "token.transfer(receiver_address, num)",
                "token.transfer(receiver_address, num)"
            ],
            "block5630": [
                "token.transfer(receiver_address, num)"
            ],
            "jump5213_0": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump2497_1": [
                "wallet_address.transfer(msg.value)",
                "wallet_address.transfer(msg.value)"
            ],
            "jump2497_0": [
                "wallet_address.transfer(msg.value)",
                "wallet_address.transfer(msg.value)"
            ],
            "block3888": [
                "token.decimals()"
            ],
            "jump2497": [
                "wallet_address.transfer(msg.value)",
                "wallet_address.transfer(msg.value)"
            ],
            "block5213": [
                "token.balanceOf(address(this))"
            ],
            "jump5213": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block2497_1": [
                "wallet_address.transfer(msg.value)"
            ],
            "block2497_0": [
                "wallet_address.transfer(msg.value)"
            ],
            "jump3888": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump5630_0": [
                "token.transfer(receiver_address, num)",
                "token.transfer(receiver_address, num)"
            ],
            "block6060_0": [
                "token.balanceOf(receiver_address)"
            ],
            "block6060": [
                "token.balanceOf(receiver_address)"
            ]
        }
    }
}