{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "DisbursableToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "disburse()",
            "updatePoints(address)",
            "claimable(address)",
            "claim(uint256)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "disburse()": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "updatePoints(address)": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "claimable(address)": {
                "argument": {},
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            },
            "claim(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "pointMultiplier": "uint256",
                    "totalPointsPerToken": "uint256",
                    "unclaimedDisbursement": "uint256",
                    "totalDisbursement": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                260,
                97
            ],
            "mint(address,uint256)": [
                669,
                207
            ],
            "balanceOf(address)": [
                770,
                229
            ],
            "claimable(address)": [
                582,
                185
            ],
            "finishMinting()": [
                857,
                251
            ],
            "disburse()": [
                1092,
                317
            ],
            "allowance(address,address)": [
                1102,
                339
            ],
            "transferFrom(address,address,uint256)": [
                404,
                141
            ],
            "transfer(address,uint256)": [
                991,
                295
            ],
            "claim(uint256)": [
                537,
                163
            ],
            "transferOwnership(address)": [
                1221,
                361
            ]
        },
        "block_CALL_mapping": {
            "block2041": [
                "msg.sender.send(_amount)"
            ],
            "jump2041": [
                "msg.sender.send(_amount)",
                "msg.sender.send(_amount)"
            ]
        }
    },
    "HeroToken": {
        "function_list": [
            "disburse()",
            "updatePoints(address)",
            "claimable(address)",
            "claim(uint256)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "startTrading()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "disburse()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "updatePoints(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "claimable(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "claim(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "startTrading()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                464,
                119
            ],
            "mint(address,uint256)": [
                939,
                273
            ],
            "finishMinting()": [
                1174,
                339
            ],
            "transferOwnership(address)": [
                1682,
                471
            ],
            "balanceOf(address)": [
                1087,
                317
            ],
            "startTrading()": [
                741,
                185
            ],
            "disburse()": [
                1553,
                427
            ],
            "transferFrom(address,address,uint256)": [
                608,
                163
            ],
            "claimable(address)": [
                852,
                251
            ],
            "allowance(address,address)": [
                1563,
                449
            ],
            "transfer(address,uint256)": [
                1452,
                405
            ],
            "claim(uint256)": [
                807,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump3026": [
                "msg.sender.send(_amount)",
                "msg.sender.send(_amount)"
            ],
            "block3026": [
                "msg.sender.send(_amount)"
            ]
        }
    },
    "MainSale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "createTokens(address)",
            "bonusTokens(uint256)",
            "authorizedCreateTokens(address,uint256)",
            "setStart(uint256)",
            "setMinimum(uint256)",
            "setHardcap(uint256)",
            "setAltDeposits(uint256)",
            "setMultisigVault(address)",
            "setExchangeRate(uint256)",
            "setSaleOngoing(bool)",
            "finishMinting()",
            "retrieveTokens(address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "createTokens(address)": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "bonusTokens(uint256)": {
                "argument": {
                    "base": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "authorizedCreateTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setMinimum(uint256)": {
                "argument": {
                    "_minimum": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setHardcap(uint256)": {
                "argument": {
                    "_hardcap": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setAltDeposits(uint256)": {
                "argument": {
                    "totalAltDeposits": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setMultisigVault(address)": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setExchangeRate(uint256)": {
                "argument": {
                    "_exchangeRate": "uint256"
                },
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "setSaleOngoing(bool)": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "hardcap": "uint256",
                    "exchangeRate": "uint256",
                    "minimum": "uint256",
                    "altDeposits": "uint256",
                    "start": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "retrieveTokens(address)": [
                939,
                339
            ],
            "setStart(uint256)": [
                1390,
                515
            ],
            "bonusTokens(uint256)": [
                509,
                163
            ],
            "transferOwnership(address)": [
                1323,
                493
            ],
            "setHardcap(uint256)": [
                1278,
                471
            ],
            "setMultisigVault(address)": [
                307,
                75
            ],
            "finishMinting()": [
                4068,
                886
            ],
            "setAltDeposits(uint256)": [
                894,
                317
            ],
            "setExchangeRate(uint256)": [
                1233,
                449
            ],
            "createTokens(address)": [
                1092,
                405
            ],
            "setSaleOngoing(bool)": [
                737,
                251
            ],
            "setMinimum(uint256)": [
                374,
                97
            ],
            "authorizedCreateTokens(address,uint256)": [
                617,
                207
            ]
        },
        "block_CALL_mapping": {
            "block2013_1": [
                "token.decimals()"
            ],
            "block2013_0": [
                "token.decimals()"
            ],
            "jump2013": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump2355": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "jump3546": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "block4872": [
                "foreignToken.balanceOf(this)"
            ],
            "jump1792_0": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "jump1792_1": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "jump1792": [
                "token.mintingFinished()",
                "token.mintingFinished()"
            ],
            "block2355_0": [
                "token.mint(recipient, tokens)"
            ],
            "block2355_1": [
                "token.mint(recipient, tokens)"
            ],
            "jump2013_1": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump2013_0": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump2397": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "jump2355_0": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "jump2355_1": [
                "token.mint(recipient, tokens)",
                "token.mint(recipient, tokens)"
            ],
            "block1792": [
                "token.mintingFinished()"
            ],
            "block3546": [
                "token.mint(recipient, tokens)"
            ],
            "block4350": [
                "token.transferOwnership(owner)"
            ],
            "block5064": [
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))"
            ],
            "jump2397_0": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "jump2397_1": [
                "multisigVault.send(msg.value)",
                "multisigVault.send(msg.value)"
            ],
            "block4068": [
                "token.finishMinting()"
            ],
            "jump5064": [
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))",
                "foreignToken.transfer(multisigVault, foreignToken.balanceOf(this))"
            ],
            "jump4068": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block2397_0": [
                "multisigVault.send(msg.value)"
            ],
            "block2397_1": [
                "multisigVault.send(msg.value)"
            ],
            "jump4350": [
                "token.transferOwnership(owner)",
                "token.transferOwnership(owner)"
            ],
            "block2355": [
                "token.mint(recipient, tokens)"
            ],
            "block2013": [
                "token.decimals()"
            ],
            "block2397": [
                "multisigVault.send(msg.value)"
            ],
            "block1792_0": [
                "token.mintingFinished()"
            ],
            "block1792_1": [
                "token.mintingFinished()"
            ],
            "jump4872": [
                "foreignToken.balanceOf(this)",
                "foreignToken.balanceOf(this)"
            ]
        }
    }
}