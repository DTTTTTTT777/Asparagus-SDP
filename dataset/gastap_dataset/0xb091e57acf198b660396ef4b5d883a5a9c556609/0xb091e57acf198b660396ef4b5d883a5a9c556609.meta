{
    "BMToken": {
        "function_list": [
            "totalSupply()",
            "mintTokens(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "mintTokens(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "mintTokens(address,uint256)": [
                1392,
                361
            ],
            "totalSupply()": [
                501,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "BMICOAffiliateProgramm": {
        "function_list": [
            "refferalPreICOBonus(address)",
            "partnerPreICOBonus(address)",
            "add_referral(address,string,uint256)"
        ],
        "initial_state": {
            "refferalPreICOBonus(address)": {
                "argument": {},
                "contract": {}
            },
            "partnerPreICOBonus(address)": {
                "argument": {},
                "contract": {}
            },
            "add_referral(address,string,uint256)": {
                "argument": {
                    "promo": "string",
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump5151": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ],
            "block6346": [
                "ecrecover(hash, v, r, s)"
            ],
            "block5151": [
                "ecrecover(hash, v, r, s)"
            ],
            "jump6346": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ]
        }
    },
    "BM_ICO": {
        "function_list": [
            "BM_ICO()",
            "changeOwner(address)",
            "addExchange(address)",
            "cast(uint256)",
            "etherToTokens(uint256,uint256)",
            "tokensToEther(uint256,uint256)",
            "periodNow()",
            "claim_PreICOTokens(address)",
            "claim_partnerPreICOTokens(address)",
            "buy(string)",
            "fallback()",
            "collect()",
            "ownerEmit()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "BM_ICO()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "addExchange(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "etherToTokens(uint256,uint256)": {
                "argument": {
                    "etherAmount": "uint256",
                    "tokenPrice": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "tokensToEther(uint256,uint256)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "tokenPrice": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "periodNow()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "claim_PreICOTokens(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "claim_partnerPreICOTokens(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "buy(string)": {
                "argument": {
                    "promo": "string"
                },
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "collect()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            },
            "ownerEmit()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "endDate": "uint256",
                    "icoTokenSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokensToEther(uint256,uint256)": [
                1531,
                493
            ],
            "claim_partnerPreICOTokens(address)": [
                839,
                251
            ],
            "periodNow()": [
                497,
                141
            ],
            "claim_PreICOTokens(address)": [
                430,
                119
            ],
            "collect()": [
                1508,
                471
            ],
            "ownerEmit()": [
                816,
                229
            ],
            "buy(string)": [
                724,
                207
            ],
            "etherToTokens(uint256,uint256)": [
                355,
                97
            ],
            "changeOwner(address)": [
                1061,
                317
            ],
            "addExchange(address)": [
                1128,
                339
            ]
        },
        "block_CALL_mapping": {
            "block1980": [
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "block5951": [
                "contractTokens.mintTokens(msg.sender, dev_emit)"
            ],
            "jump3110_0": [
                "contractTokens.mintTokens(msg.sender, reward)",
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "jump2375": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)",
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ],
            "block4871": [
                "contractTokens.mintTokens(exchangesOwner, reward)"
            ],
            "jump1980_0": [
                "msg.sender.transfer(msg.value - amount_invest)",
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "block2375_0": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ],
            "jump2375_0": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)",
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ],
            "jump5096": [
                "contractTokens.mintTokens(holder, reward)",
                "contractTokens.mintTokens(holder, reward)"
            ],
            "jump3110": [
                "contractTokens.mintTokens(msg.sender, reward)",
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "jump4056": [
                "contractPreICO.getDataHolders(holder)",
                "contractPreICO.getDataHolders(holder)"
            ],
            "jump6561": [
                "contractTokens.mintTokens(partner, reward)",
                "contractTokens.mintTokens(partner, reward)"
            ],
            "block2798_1": [
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "block2798_0": [
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "jump2798_1": [
                "contractTokens.mintTokens(partner_address, p_bonus)",
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "jump2798_0": [
                "contractTokens.mintTokens(partner_address, p_bonus)",
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "block4056": [
                "contractPreICO.getDataHolders(holder)"
            ],
            "jump3581": [
                "contractMKPreICO.getDataHolders(holder)",
                "contractMKPreICO.getDataHolders(holder)"
            ],
            "jump6263": [
                "contractAffiliate.partnerPreICOBonus(partner)",
                "contractAffiliate.partnerPreICOBonus(partner)"
            ],
            "block4359": [
                "contractAffiliate.refferalPreICOBonus(holder)"
            ],
            "block1980_1": [
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "block1980_0": [
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "block2798": [
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "jump2798": [
                "contractTokens.mintTokens(partner_address, p_bonus)",
                "contractTokens.mintTokens(partner_address, p_bonus)"
            ],
            "jump5951": [
                "contractTokens.mintTokens(msg.sender, dev_emit)",
                "contractTokens.mintTokens(msg.sender, dev_emit)"
            ],
            "block3110": [
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "block3110_0": [
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "block3110_1": [
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "block5096": [
                "contractTokens.mintTokens(holder, reward)"
            ],
            "block3581": [
                "contractMKPreICO.getDataHolders(holder)"
            ],
            "jump1980": [
                "msg.sender.transfer(msg.value - amount_invest)",
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "jump7610": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ],
            "jump5663": [
                "contractTokens.totalSupply()",
                "contractTokens.totalSupply()"
            ],
            "block6263": [
                "contractAffiliate.partnerPreICOBonus(partner)"
            ],
            "jump1980_1": [
                "msg.sender.transfer(msg.value - amount_invest)",
                "msg.sender.transfer(msg.value - amount_invest)"
            ],
            "jump4359": [
                "contractAffiliate.refferalPreICOBonus(holder)",
                "contractAffiliate.refferalPreICOBonus(holder)"
            ],
            "block7610": [
                "msg.sender.transfer(this.balance)"
            ],
            "jump2375_1": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)",
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ],
            "block5663": [
                "contractTokens.totalSupply()"
            ],
            "block2375": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ],
            "block6561": [
                "contractTokens.mintTokens(partner, reward)"
            ],
            "jump4871": [
                "contractTokens.mintTokens(exchangesOwner, reward)",
                "contractTokens.mintTokens(exchangesOwner, reward)"
            ],
            "jump3110_1": [
                "contractTokens.mintTokens(msg.sender, reward)",
                "contractTokens.mintTokens(msg.sender, reward)"
            ],
            "block2375_1": [
                "contractAffiliate.add_referral(msg.sender, promo, amount_invest)"
            ]
        }
    }
}