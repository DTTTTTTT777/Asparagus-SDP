{
    "MaptPresale2Token": {
        "function_list": [
            "MaptPresale2Token(address,address)",
            "calculatePrice(uint256)",
            "fallback()",
            "burnTokens(address)",
            "balanceOf(address)",
            "setPresalePhaseUInt(uint256)",
            "setPresalePhase(MaptPresale2Token.Phase)",
            "_setPresalePhase(MaptPresale2Token.Phase)",
            "setCrowdsaleManager(address)",
            "buyTokens(address)",
            "withdrawWei(uint256)",
            "withdrawEther(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MaptPresale2Token(address,address)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "calculatePrice(uint256)": {
                "argument": {
                    "valueWei": "uint256"
                },
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "burnTokens(address)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setPresalePhaseUInt(uint256)": {
                "argument": {
                    "phase": "uint256"
                },
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setPresalePhase(MaptPresale2Token.Phase)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "_setPresalePhase(MaptPresale2Token.Phase)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "setCrowdsaleManager(address)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "withdrawWei(uint256)": {
                "argument": {
                    "balWei": "uint256"
                },
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "withdrawEther(uint256)": {
                "argument": {
                    "sumEther": "uint256"
                },
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAPT_IN_ETH": "uint256",
                    "MIN_TRANSACTION_AMOUNT_ETH": "uint256",
                    "PRESALE_START_DATE": "uint256",
                    "PRESALE_END_DATE": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_SUPPLY_LIMIT": "uint256",
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "buyTokens(address)": [
                1516,
                449
            ],
            "withdrawEther(uint256)": [
                891,
                273
            ],
            "setPresalePhaseUInt(uint256)": [
                1110,
                339
            ],
            "withdrawWei(uint256)": [
                475,
                119
            ],
            "balanceOf(address)": [
                1023,
                317
            ],
            "setCrowdsaleManager(address)": [
                956,
                295
            ],
            "burnTokens(address)": [
                1299,
                383
            ]
        },
        "block_CALL_mapping": {
            "block2246": [
                "escrow.transfer(balWei)"
            ],
            "block2838": [
                "escrow.transfer(sumWei)"
            ],
            "jump2246": [
                "escrow.transfer(balWei)",
                "escrow.transfer(balWei)"
            ],
            "jump2838": [
                "escrow.transfer(sumWei)",
                "escrow.transfer(sumWei)"
            ]
        }
    }
}