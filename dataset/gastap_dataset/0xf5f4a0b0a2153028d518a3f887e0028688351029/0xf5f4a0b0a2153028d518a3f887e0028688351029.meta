{
    "tickets": {
        "function_list": [
            "tickets(uint256[],uint256,string)",
            "reserveSeats(uint256[],uint256)",
            "resetReservations(address,bool)",
            "resetReservationsInternal()",
            "revokeTickets(address,bool)",
            "InvokeTransfer(address,uint256[],uint256)",
            "removeTransfer(uint256)",
            "finishTransfer(uint256)",
            "getTransfer(address,address)",
            "returnTickets(uint256)",
            "changePrice(uint256[],uint256)",
            "setHash(bytes32)",
            "checkHash(address,string)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "tickets(uint256[],uint256,string)": {
                "argument": {
                    "ticks": "uint256[]",
                    "nOfSeats": "uint256",
                    "n": "string"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "reserveSeats(uint256[],uint256)": {
                "argument": {
                    "seats": "uint256[]",
                    "nOfSeats": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "resetReservations(address,bool)": {
                "argument": {},
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "resetReservationsInternal()": {
                "argument": {},
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "revokeTickets(address,bool)": {
                "argument": {},
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "InvokeTransfer(address,uint256[],uint256)": {
                "argument": {
                    "ticks": "uint256[]",
                    "amount": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "removeTransfer(uint256)": {
                "argument": {
                    "transferID": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "finishTransfer(uint256)": {
                "argument": {
                    "transferID": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "getTransfer(address,address)": {
                "argument": {},
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "returnTickets(uint256)": {
                "argument": {
                    "ticketID": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "changePrice(uint256[],uint256)": {
                "argument": {
                    "seats": "uint256[]",
                    "nOfSeats": "uint256"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "setHash(bytes32)": {
                "argument": {
                    "hash": "bytes32"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "checkHash(address,string)": {
                "argument": {
                    "password": "string"
                },
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ticketsOwners": "mapping(address => uint256[])",
                    "noOfSeats": "uint256",
                    "reservations": "mapping(address => uint256[])",
                    "lowestAddressReserving": "uint256",
                    "highestAddressReserving": "uint256",
                    "ticketTransfers": "mapping(uint256 => uint256[])",
                    "ticketTransfersAmount": "uint256",
                    "ticketTransferers": "mapping(address => uint256[])",
                    "ticketTransferees": "mapping(address => uint256[])",
                    "name": "string",
                    "secondsToHold": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishTransfer(uint256)": [
                2049,
                339
            ],
            "reserveSeats(uint256[],uint256)": [
                3125,
                625
            ],
            "changePrice(uint256[],uint256)": [
                2873,
                559
            ],
            "setHash(bytes32)": [
                1459,
                163
            ],
            "checkHash(address,string)": [
                3346,
                669
            ],
            "returnTickets(uint256)": [
                2300,
                427
            ],
            "revokeTickets(address,bool)": [
                1154,
                97
            ],
            "removeTransfer(uint256)": [
                2081,
                361
            ],
            "resetReservations(address,bool)": [
                3907,
                823
            ],
            "getTransfer(address,address)": [
                2489,
                471
            ],
            "InvokeTransfer(address,uint256[],uint256)": [
                2345,
                449
            ]
        },
        "block_CALL_mapping": {
            "block889": [
                "owner.send(msg.value)"
            ],
            "block7499": [
                "msg.sender.send(ticketPrices[ticketID])"
            ],
            "block5559": [
                "revokee.send(price)"
            ],
            "block889_0": [
                "owner.send(msg.value)"
            ]
        }
    }
}