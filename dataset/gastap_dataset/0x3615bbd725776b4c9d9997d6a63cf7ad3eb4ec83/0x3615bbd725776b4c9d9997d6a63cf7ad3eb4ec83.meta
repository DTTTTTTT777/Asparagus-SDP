{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "setNewOwner(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setNewOwner(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "LockEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Lockable": {
        "function_list": [
            "Ownable()",
            "setNewOwner(address)",
            "Lockable()",
            "unlock()",
            "lock()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "Lockable()": {
                "argument": {},
                "contract": {}
            },
            "unlock()": {
                "argument": {},
                "contract": {}
            },
            "lock()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "lock()": [
                386,
                163
            ],
            "setNewOwner(address)": [
                295,
                141
            ],
            "unlock()": [
                201,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "TimedVaultEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "TimedVault": {
        "function_list": [
            "Ownable()",
            "setNewOwner(address)",
            "setVaultLock(address,uint256)",
            "getVaultLock(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setVaultLock(address,uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {}
            },
            "getVaultLock(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setNewOwner(address)": [
                266,
                119
            ],
            "getVaultLock(address)": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Events": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "IdiotToken": {
        "function_list": [
            "setVaultLock(address,uint256)",
            "getVaultLock(address)",
            "Ownable()",
            "setNewOwner(address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "Lockable()",
            "unlock()",
            "lock()",
            "IdiotToken()",
            "transfer(address,uint256)",
            "transferInitialAllocation(address,uint256)",
            "transferInitialAllocationWithTimedLock(address,uint256,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setVaultLock(address,uint256)": {
                "argument": {
                    "timestamp": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "getVaultLock(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "Lockable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "unlock()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "lock()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "IdiotToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "transferInitialAllocation(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "transferInitialAllocationWithTimedLock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_timestamp": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "MULTIPLIER": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                390,
                97
            ],
            "lock()": [
                1732,
                427
            ],
            "setNewOwner(address)": [
                1540,
                383
            ],
            "transfer(address,uint256)": [
                1273,
                317
            ],
            "totalSupply()": [
                491,
                119
            ],
            "transferInitialAllocationWithTimedLock(address,uint256,uint256)": [
                710,
                185
            ],
            "balanceOf(address)": [
                908,
                229
            ],
            "transferInitialAllocation(address,uint256)": [
                1631,
                405
            ],
            "transferFrom(address,address,uint256)": [
                534,
                141
            ],
            "getVaultLock(address)": [
                821,
                207
            ],
            "allowance(address,address)": [
                1421,
                361
            ],
            "unlock()": [
                1226,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "IdiotTokenSale": {
        "function_list": [
            "Ownable()",
            "setNewOwner(address)",
            "IdiotTokenSale()",
            "setup()",
            "buyToken()",
            "finalizeCrowdsale()",
            "forceEnd()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "setNewOwner(address)": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "IdiotTokenSale()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "setup()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "buyToken()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "forceEnd()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "tokenCap": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "rate": "uint256",
                    "totalContribution": "uint256",
                    "MULTIPLIER": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setup()": [
                1039,
                361
            ],
            "setNewOwner(address)": [
                1215,
                449
            ],
            "forceEnd()": [
                674,
                229
            ],
            "finalizeCrowdsale()": [
                320,
                97
            ],
            "buyToken()": [
                1029,
                339
            ]
        },
        "block_CALL_mapping": {
            "jump1855": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "jump4760": [
                "token.transferInitialAllocation(angelPool, 6840000*MULTIPLIER)",
                "token.transferInitialAllocation(angelPool, 6840000*MULTIPLIER)"
            ],
            "jump4150": [
                "token.transferInitialAllocationWithTimedLock(founder1, 7600000*MULTIPLIER, now + 365 days)",
                "token.transferInitialAllocationWithTimedLock(founder1, 7600000*MULTIPLIER, now + 365 days)"
            ],
            "jump1855_1": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "jump3838": [
                "token.transferInitialAllocation(owner, 22800000*MULTIPLIER)",
                "token.transferInitialAllocation(owner, 22800000*MULTIPLIER)"
            ],
            "block5322": [
                "token.balanceOf(this)"
            ],
            "jump4462": [
                "token.transferInitialAllocationWithTimedLock(founder2, 7600000*MULTIPLIER, now + 365 days)",
                "token.transferInitialAllocationWithTimedLock(founder2, 7600000*MULTIPLIER, now + 365 days)"
            ],
            "block1813_0": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ],
            "block1813_1": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ],
            "block4760": [
                "token.transferInitialAllocation(angelPool, 6840000*MULTIPLIER)"
            ],
            "jump5322": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block1855": [
                "owner.send(msg.value)"
            ],
            "jump5058": [
                "token.transferInitialAllocation(advisoryPool, 760000*MULTIPLIER)",
                "token.transferInitialAllocation(advisoryPool, 760000*MULTIPLIER)"
            ],
            "block1813": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ],
            "jump2488": [
                "token.transferInitialAllocation(owner, tokenCap)",
                "token.transferInitialAllocation(owner, tokenCap)"
            ],
            "block1855_0": [
                "owner.send(msg.value)"
            ],
            "block1855_1": [
                "owner.send(msg.value)"
            ],
            "jump1813_0": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)",
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ],
            "jump1813_1": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)",
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ],
            "block2488": [
                "token.transferInitialAllocation(owner, tokenCap)"
            ],
            "block3838": [
                "token.transferInitialAllocation(owner, 22800000*MULTIPLIER)"
            ],
            "jump1855_0": [
                "owner.send(msg.value)",
                "owner.send(msg.value)"
            ],
            "block4462": [
                "token.transferInitialAllocationWithTimedLock(founder2, 7600000*MULTIPLIER, now + 365 days)"
            ],
            "block5058": [
                "token.transferInitialAllocation(advisoryPool, 760000*MULTIPLIER)"
            ],
            "jump2781": [
                "token.setNewOwner(owner)",
                "token.setNewOwner(owner)"
            ],
            "block4150": [
                "token.transferInitialAllocationWithTimedLock(founder1, 7600000*MULTIPLIER, now + 365 days)"
            ],
            "block2781": [
                "token.setNewOwner(owner)"
            ],
            "jump1813": [
                "token.transferInitialAllocation(msg.sender, purchasedToken)",
                "token.transferInitialAllocation(msg.sender, purchasedToken)"
            ]
        }
    }
}