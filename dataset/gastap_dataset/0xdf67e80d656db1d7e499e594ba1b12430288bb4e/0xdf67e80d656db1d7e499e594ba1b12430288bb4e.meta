{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "totalSupply()": [
                281,
                97
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                9936,
                26
            ],
            "claimTokens(address)": [
                2804,
                537
            ],
            "totalSupply()": [
                931,
                141
            ],
            "allowance(address,address)": [
                2685,
                515
            ],
            "transferFrom(address,address,uint256)": [
                974,
                163
            ],
            "approve(address,uint256)": [
                787,
                97
            ],
            "totalSupplyAt(uint256)": [
                9936,
                26
            ],
            "enableTransfers(bool)": [
                2958,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1464,
                273
            ],
            "changeController(address)": [
                6043,
                889
            ],
            "balanceOf(address)": [
                8450,
                847
            ],
            "generateTokens(address,uint256)": [
                1912,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2413,
                471
            ],
            "destroyTokens(address,uint256)": [
                2584,
                493
            ],
            "transfer(address,uint256)": [
                8707,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump6043": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "block8450": [
                "token.balanceOf(this)"
            ],
            "block3634": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5056_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5056_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3634": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5056_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7539": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump5056_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5056_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8161": [
                "controller.transfer(this.balance)"
            ],
            "jump5056": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5056_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump8450": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block5827": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump8161": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump8707": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block7025_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7025": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3634_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block9558_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump7025_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7539": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "jump7025_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5056_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9558_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7025_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9558": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block8707": [
                "token.transfer(controller, balance)"
            ],
            "block3634_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block9558": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block6043": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump5827": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "jump570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block5056_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7025_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7025_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7025": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5056_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ]
        }
    },
    "Contribution": {
        "function_list": [
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "Controlled()",
            "changeController(address)",
            "Contribution(address)",
            "initialize(address,address,address,address,address,address,address,uint256,uint256,uint256,uint256)",
            "blacklistAddresses(address[])",
            "whitelistAddresses(address[])",
            "whitelist(address)",
            "blacklist(address)",
            "exchangeRate()",
            "tokensToGenerate(uint256)",
            "fallback()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "allowTransfers(bool)",
            "doBuy(address)",
            "finalize()",
            "weiToCollect()",
            "weiToCollectByInvestor(address)",
            "getBlockNumber()",
            "getBlockTimestamp()",
            "claimTokens(address)",
            "pauseContribution(bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "Contribution(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "initialize(address,address,address,address,address,address,address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_collectorWeiCap": "uint256",
                    "_totalWeiCap": "uint256",
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "blacklistAddresses(address[])": {
                "argument": {
                    "_investors": "address[]"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "whitelistAddresses(address[])": {
                "argument": {
                    "_investors": "address[]"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "whitelist(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "blacklist(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "exchangeRate()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "tokensToGenerate(uint256)": {
                "argument": {
                    "toFund": "uint256"
                },
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "allowTransfers(bool)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "doBuy(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "weiToCollect()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "weiToCollectByInvestor(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "getBlockTimestamp()": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            },
            "pauseContribution(bool)": {
                "argument": {},
                "contract": {
                    "collectorWeiCap": "uint256",
                    "collectorWeiCollected": "uint256",
                    "totalWeiCap": "uint256",
                    "totalWeiCollected": "uint256",
                    "weiPreCollected": "uint256",
                    "notCollectedAmountAfter24Hours": "uint256",
                    "twentyPercentWithBonus": "uint256",
                    "thirtyPercentWithBonus": "uint256",
                    "minimumPerTransaction": "uint256",
                    "numWhitelistedInvestors": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "initializedTime": "uint256",
                    "finalizedTime": "uint256",
                    "initializedBlock": "uint256",
                    "finalizedBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokensToGenerate(uint256)": [
                1618,
                427
            ],
            "proxyPayment(address)": [
                3397,
                955
            ],
            "claimTokens(address)": [
                10548,
                925
            ],
            "whitelist(address)": [
                2178,
                625
            ],
            "whitelistAddresses(address[])": [
                679,
                119
            ],
            "blacklistAddresses(address[])": [
                1726,
                471
            ],
            "exchangeRate()": [
                911,
                185
            ],
            "weiToCollectByInvestor(address)": [
                2893,
                823
            ],
            "pauseContribution(bool)": [
                632,
                97
            ],
            "onApprove(address,address,uint256)": [
                2980,
                845
            ],
            "initialize(address,address,address,address,address,address,address,uint256,uint256,uint256,uint256)": [
                2464,
                757
            ],
            "allowTransfers(bool)": [
                2331,
                691
            ],
            "changeController(address)": [
                954,
                207
            ],
            "onTransfer(address,address,uint256)": [
                1155,
                273
            ],
            "weiToCollect()": [
                1958,
                537
            ],
            "blacklist(address)": [
                3605,
                1021
            ],
            "finalize()": [
                1288,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump10605": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump7865": [
                "aix.controller()",
                "aix.controller()"
            ],
            "block10272": [
                "aix.controller()"
            ],
            "jump10272": [
                "aix.controller()",
                "aix.controller()"
            ],
            "jump12448": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "block8091": [
                "aix.decimals()"
            ],
            "block5895": [
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))"
            ],
            "jump5537": [
                "aix.totalSupply()",
                "aix.totalSupply()"
            ],
            "jump10894": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump10548": [
                "aix.claimTokens(_token)",
                "aix.claimTokens(_token)"
            ],
            "jump6224": [
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))",
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))"
            ],
            "jump12856": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "block10548": [
                "aix.claimTokens(_token)"
            ],
            "jump12448_1": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "jump12448_0": [
                "contributionWallet.transfer(toFund)",
                "contributionWallet.transfer(toFund)"
            ],
            "block12378_1": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block6224": [
                "aix.generateTokens(communityHolder, tokenCap.mul(29).div(100))"
            ],
            "jump7640": [
                "aix.totalSupply()",
                "aix.totalSupply()"
            ],
            "jump12856_0": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump12856_1": [
                "_th.transfer(toReturn)",
                "_th.transfer(toReturn)"
            ],
            "jump12378_1": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump12378_0": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block7640": [
                "aix.totalSupply()"
            ],
            "block5537": [
                "aix.totalSupply()"
            ],
            "block10894": [
                "token.balanceOf(this)"
            ],
            "block12856": [
                "_th.transfer(toReturn)"
            ],
            "block11151": [
                "token.transfer(controller, balance)"
            ],
            "block12448": [
                "contributionWallet.transfer(toFund)"
            ],
            "block12856_0": [
                "_th.transfer(toReturn)"
            ],
            "block12856_1": [
                "_th.transfer(toReturn)"
            ],
            "jump12378": [
                "aix.generateTokens(_th, tokensGenerated)",
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump5895": [
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))",
                "aix.generateTokens(devHolder, tokenCap.mul(20).div(100))"
            ],
            "block5333": [
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))"
            ],
            "jump9284": [
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))",
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))"
            ],
            "jump5333": [
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))",
                "aix.generateTokens(remainderHolder, weiToCollect().mul(2000))"
            ],
            "jump8091": [
                "aix.decimals()",
                "aix.decimals()"
            ],
            "jump9000": [
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)",
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)"
            ],
            "block9000": [
                "MiniMeToken(_apt).totalSupplyAt(initializedBlock)"
            ],
            "block12448_1": [
                "contributionWallet.transfer(toFund)"
            ],
            "block12448_0": [
                "contributionWallet.transfer(toFund)"
            ],
            "block7865": [
                "aix.controller()"
            ],
            "block12378_0": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "block9284": [
                "aix.generateTokens(_exchanger, weiPreCollected.mul(2500))"
            ],
            "block10605": [
                "controller.transfer(this.balance)"
            ],
            "block12378": [
                "aix.generateTokens(_th, tokensGenerated)"
            ],
            "jump11151": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ]
        }
    },
    "CommunityTokenHolder": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "CommunityTokenHolder(address,address,address)",
            "collectTokens()",
            "extractableFraction()",
            "months(uint256)",
            "getTime()",
            "claimTokens(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "CommunityTokenHolder(address,address,address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "collectTokens()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "extractableFraction()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "months(uint256)": {
                "argument": {
                    "m": "uint256"
                },
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "getTime()": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "collectedTokens": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimTokens(address)": [
                497,
                207
            ],
            "changeController(address)": [
                147,
                75
            ],
            "extractableFraction()": [
                367,
                163
            ],
            "collectTokens()": [
                344,
                141
            ]
        },
        "block_CALL_mapping": {
            "block2829": [
                "token.transfer(controller, balance)"
            ],
            "block2283": [
                "controller.transfer(this.balance)"
            ],
            "block1561": [
                "aix.transfer(controller, canExtract)"
            ],
            "jump2572": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump1886_0": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "jump1886": [
                "contribution.finalizedTime()",
                "contribution.finalizedTime()"
            ],
            "jump2283": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block1886": [
                "contribution.finalizedTime()"
            ],
            "block1138": [
                "aix.balanceOf(address(this))"
            ],
            "block2572": [
                "token.balanceOf(this)"
            ],
            "jump1138": [
                "aix.balanceOf(address(this))",
                "aix.balanceOf(address(this))"
            ],
            "jump1561": [
                "aix.transfer(controller, canExtract)",
                "aix.transfer(controller, canExtract)"
            ],
            "block1886_0": [
                "contribution.finalizedTime()"
            ],
            "jump2829": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ]
        }
    }
}