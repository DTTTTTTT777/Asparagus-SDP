{
    "tokenRecipient": {
        "function_list": [
            "receiveApproval(address,uint256,address,bytes)"
        ],
        "initial_state": {
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "receiveApproval(address,uint256,address,bytes)": [
                174,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump573": [
                "t.transferFrom(_from, this, _value)",
                "t.transferFrom(_from, this, _value)"
            ],
            "block573": [
                "t.transferFrom(_from, this, _value)"
            ]
        }
    },
    "MyToken": {
        "function_list": [
            "MyToken(uint256,string,uint8,string)",
            "_transfer(address,address,uint256)",
            "balanceOf(address)",
            "balanceOfOld(address)",
            "_transferAndLock(address,address,uint256,uint256)",
            "transfer(address,uint256)",
            "transferAndLock(address,uint256,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "approveAndCall(address,uint256,bytes)",
            "burn(uint256)",
            "burnFrom(address,uint256)"
        ],
        "initial_state": {
            "MyToken(uint256,string,uint8,string)": {
                "argument": {
                    "initialSupply": "uint256",
                    "tokenName": "string",
                    "decimalUnits": "uint8",
                    "tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "balanceOfOld(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "_transferAndLock(address,address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_time": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "transferAndLock(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_time": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            },
            "burnFrom(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "lockedBalanceOf": "mapping(address => MyToken.locked_balances_info[])"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "transferAndLock(address,uint256,uint256)": [
                1038,
                273
            ],
            "burn(uint256)": [
                781,
                207
            ],
            "balanceOf(address)": [
                850,
                229
            ],
            "burnFrom(address,uint256)": [
                937,
                251
            ],
            "transferFrom(address,address,uint256)": [
                512,
                141
            ],
            "approveAndCall(address,uint256,bytes)": [
                1450,
                361
            ],
            "transfer(address,uint256)": [
                1373,
                339
            ],
            "balanceOfOld(address)": [
                645,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4106": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4106": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    }
}