{
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "assert(bool)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1493_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1493": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1493": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "transfer(address,uint256)": [
                717,
                207
            ],
            "balanceOf(address)": [
                630,
                185
            ],
            "allowance(address,address)": [
                818,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "totalSupply()": [
                248,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "min(uint256,uint256)",
            "max(uint256,uint256)",
            "hadd(uint128,uint128)",
            "hsub(uint128,uint128)",
            "hmul(uint128,uint128)",
            "hdiv(uint128,uint128)",
            "hmin(uint128,uint128)",
            "hmax(uint128,uint128)",
            "imin(int256,int256)",
            "imax(int256,int256)",
            "wadd(uint128,uint128)",
            "wsub(uint128,uint128)",
            "wmul(uint128,uint128)",
            "wdiv(uint128,uint128)",
            "wmin(uint128,uint128)",
            "wmax(uint128,uint128)",
            "radd(uint128,uint128)",
            "rsub(uint128,uint128)",
            "rmul(uint128,uint128)",
            "rdiv(uint128,uint128)",
            "rpow(uint128,uint64)",
            "rmin(uint128,uint128)",
            "rmax(uint128,uint128)",
            "cast(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "max(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "hmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "imax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wadd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "wmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "radd(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rsub(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmul(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rdiv(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rpow(uint128,uint64)": {
                "argument": {
                    "x": "uint128",
                    "n": "uint64"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmin(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "rmax(uint128,uint128)": {
                "argument": {
                    "x": "uint128",
                    "y": "uint128"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "cast(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint128",
                    "RAY": "uint128"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    }
}