{
    "withOwners": {
        "function_list": [
            "addOwner(address)",
            "removeOwner(address)",
            "addManager(address)",
            "removeManager(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "ownersCount": "uint256",
                    "managersCount": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "ownersCount": "uint256",
                    "managersCount": "uint256"
                }
            },
            "addManager(address)": {
                "argument": {},
                "contract": {
                    "ownersCount": "uint256",
                    "managersCount": "uint256"
                }
            },
            "removeManager(address)": {
                "argument": {},
                "contract": {
                    "ownersCount": "uint256",
                    "managersCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addManager(address)": [
                305,
                119
            ],
            "removeOwner(address)": [
                238,
                97
            ],
            "removeManager(address)": [
                482,
                185
            ],
            "addOwner(address)": [
                415,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "withAccounts": {
        "function_list": [
            "addOwner(address)",
            "removeOwner(address)",
            "addManager(address)",
            "removeManager(address)",
            "depositFor(address)",
            "withdraw(uint256)",
            "checkTimeout(uint256)",
            "setDoNotAutoRefundTo(bool)",
            "updateDefaultTimeoutPeriod(uint256)",
            "collectRev()",
            "returnFund(address,uint256)",
            "deposit(address,uint256)",
            "createTx(uint256,address,uint256)",
            "settle(uint256,uint256)",
            "incrUserAvailBal(address,uint256,bool)",
            "incrUserOnholdBal(address,uint256,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "addManager(address)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "removeManager(address)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "depositFor(address)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "checkTimeout(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "setDoNotAutoRefundTo(bool)": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "updateDefaultTimeoutPeriod(uint256)": {
                "argument": {
                    "_defaultTimeoutPeriod": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "collectRev()": {
                "argument": {},
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "returnFund(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "deposit(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "createTx(uint256,address,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "settle(uint256,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_amountSpent": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "incrUserAvailBal(address,uint256,bool)": {
                "argument": {
                    "_by": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            },
            "incrUserOnholdBal(address,uint256,bool)": {
                "argument": {
                    "_by": "uint256"
                },
                "contract": {
                    "defaultTimeoutPeriod": "uint256",
                    "txCount": "uint256",
                    "availableBalance": "uint256",
                    "onholdBalance": "uint256",
                    "spentBalance": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "addOwner(address)": [
                951,
                317
            ],
            "removeManager(address)": [
                1115,
                383
            ],
            "checkTimeout(uint256)": [
                772,
                251
            ],
            "collectRev()": [
                749,
                229
            ],
            "updateDefaultTimeoutPeriod(uint256)": [
                1182,
                405
            ],
            "withdraw(uint256)": [
                614,
                163
            ],
            "addManager(address)": [
                547,
                141
            ],
            "setDoNotAutoRefundTo(bool)": [
                702,
                207
            ],
            "removeOwner(address)": [
                480,
                119
            ],
            "returnFund(address,uint256)": [
                403,
                97
            ],
            "depositFor(address)": [
                1018,
                339
            ]
        },
        "block_CALL_mapping": {
            "block3061": [
                "msg.sender.call.value(_amount)()"
            ],
            "jump2232": [
                "_user.call.value(_amount)()",
                "_user.call.value(_amount)()"
            ],
            "block3312": [
                "msg.sender.call.value(amount)()"
            ],
            "jump3061": [
                "msg.sender.call.value(_amount)()",
                "msg.sender.call.value(_amount)()"
            ],
            "jump3312": [
                "msg.sender.call.value(amount)()",
                "msg.sender.call.value(amount)()"
            ],
            "block2232": [
                "_user.call.value(_amount)()"
            ]
        }
    },
    "Notifier": {
        "function_list": [
            "depositFor(address)",
            "withdraw(uint256)",
            "checkTimeout(uint256)",
            "setDoNotAutoRefundTo(bool)",
            "updateDefaultTimeoutPeriod(uint256)",
            "collectRev()",
            "returnFund(address,uint256)",
            "deposit(address,uint256)",
            "createTx(uint256,address,uint256)",
            "settle(uint256,uint256)",
            "incrUserAvailBal(address,uint256,bool)",
            "incrUserOnholdBal(address,uint256,bool)",
            "addOwner(address)",
            "removeOwner(address)",
            "addManager(address)",
            "removeManager(address)",
            "Notifier(string)",
            "notify(uint8,string,string)",
            "xnotify(string)",
            "updateMinEthPerNotification(uint256)",
            "taskProcessedNoCosting(uint256)",
            "taskProcessedWithCosting(uint256,uint256)",
            "taskRejected(uint256,uint256)",
            "updateXIPFSPublicKey(string)",
            "updateState(uint256,uint8,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "depositFor(address)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "checkTimeout(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "setDoNotAutoRefundTo(bool)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "updateDefaultTimeoutPeriod(uint256)": {
                "argument": {
                    "_defaultTimeoutPeriod": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "collectRev()": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "returnFund(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "deposit(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "createTx(uint256,address,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "settle(uint256,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_amountSpent": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "incrUserAvailBal(address,uint256,bool)": {
                "argument": {
                    "_by": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "incrUserOnholdBal(address,uint256,bool)": {
                "argument": {
                    "_by": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "addManager(address)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "removeManager(address)": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "Notifier(string)": {
                "argument": {
                    "_xIPFSPublicKey": "string"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "notify(uint8,string,string)": {
                "argument": {
                    "_transport": "uint8",
                    "_destination": "string",
                    "_message": "string"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "xnotify(string)": {
                "argument": {
                    "_hash": "string"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "updateMinEthPerNotification(uint256)": {
                "argument": {
                    "_newMin": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "taskProcessedNoCosting(uint256)": {
                "argument": {
                    "_id": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "taskProcessedWithCosting(uint256,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_cost": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "taskRejected(uint256,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_cost": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "updateXIPFSPublicKey(string)": {
                "argument": {
                    "_publicKey": "string"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "updateState(uint256,uint8,uint256)": {
                "argument": {
                    "_id": "uint256",
                    "_state": "uint8",
                    "_cost": "uint256"
                },
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "xIPFSPublicKey": "string",
                    "minEthPerNotification": "uint256",
                    "tasksCount": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "updateDefaultTimeoutPeriod(uint256)": [
                2313,
                603
            ],
            "addOwner(address)": [
                1683,
                427
            ],
            "removeManager(address)": [
                2246,
                581
            ],
            "checkTimeout(uint256)": [
                1412,
                339
            ],
            "collectRev()": [
                1346,
                295
            ],
            "taskProcessedWithCosting(uint256,uint256)": [
                1201,
                229
            ],
            "depositFor(address)": [
                2149,
                537
            ],
            "updateXIPFSPublicKey(string)": [
                697,
                141
            ],
            "taskRejected(uint256,uint256)": [
                2094,
                515
            ],
            "notify(uint8,string,string)": [
                3036,
                823
            ],
            "withdraw(uint256)": [
                869,
                185
            ],
            "addManager(address)": [
                802,
                163
            ],
            "setDoNotAutoRefundTo(bool)": [
                1299,
                273
            ],
            "removeOwner(address)": [
                630,
                119
            ],
            "returnFund(address,uint256)": [
                553,
                97
            ],
            "updateMinEthPerNotification(uint256)": [
                2948,
                779
            ],
            "xnotify(string)": [
                1500,
                383
            ],
            "taskProcessedNoCosting(uint256)": [
                2049,
                493
            ]
        },
        "block_CALL_mapping": {
            "block3796": [
                "_user.call.value(_amount)()"
            ],
            "block4746": [
                "msg.sender.call.value(_amount)()"
            ],
            "jump5560": [
                "msg.sender.call.value(amount)()",
                "msg.sender.call.value(amount)()"
            ],
            "block5560": [
                "msg.sender.call.value(amount)()"
            ],
            "jump4746": [
                "msg.sender.call.value(_amount)()",
                "msg.sender.call.value(_amount)()"
            ],
            "jump3796": [
                "_user.call.value(_amount)()",
                "_user.call.value(_amount)()"
            ]
        }
    }
}