{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                427,
                97
            ],
            "allowance(address,address)": [
                1885,
                449
            ],
            "balanceOf(address)": [
                1060,
                273
            ],
            "transferFrom(address,address,uint256)": [
                571,
                141
            ],
            "transfer(address,uint256)": [
                1445,
                361
            ]
        },
        "block_CALL_mapping": {
            "block5621": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump5621": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "GVToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "GVToken(address,address)",
            "mint(address,uint256)",
            "unfreeze()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "migrate(uint256)",
            "setMigrationAgent(address)",
            "setMigrationMaster(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "GVToken(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "unfreeze()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "migrate(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "setMigrationMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256",
                    "totalMigrated": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "setMigrationMaster(address)": [
                689,
                163
            ],
            "migrate(uint256)": [
                923,
                251
            ],
            "balanceOf(address)": [
                1165,
                339
            ],
            "unfreeze()": [
                1142,
                317
            ],
            "transferFrom(address,address,uint256)": [
                556,
                141
            ],
            "mint(address,uint256)": [
                846,
                229
            ],
            "allowance(address,address)": [
                1694,
                471
            ],
            "transfer(address,uint256)": [
                1593,
                449
            ],
            "setMigrationAgent(address)": [
                1252,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump2979": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)",
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ],
            "block2979": [
                "MigrationAgent(migrationAgent).migrateFrom(msg.sender, value)"
            ]
        }
    },
    "GVOptionToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "GVOptionToken(address,string,string,uint256)",
            "buyOptions(address,uint256)",
            "remainingTokensCount()",
            "executeOption(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "GVOptionToken(address,string,string,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_TOKEN_LIMIT": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "buyOptions(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "remainingTokensCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "executeOption(address,uint256)": {
                "argument": {
                    "optionsCount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "TOKEN_LIMIT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                389,
                119
            ],
            "executeOption(address,uint256)": [
                533,
                163
            ],
            "buyOptions(address,uint256)": [
                1225,
                317
            ],
            "remainingTokensCount()": [
                202,
                75
            ],
            "balanceOf(address)": [
                806,
                229
            ],
            "transferFrom(address,address,uint256)": [
                630,
                185
            ],
            "allowance(address,address)": [
                1302,
                339
            ],
            "transfer(address,uint256)": [
                1037,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "GVOptionProgram": {
        "function_list": [
            "GVOptionProgram(address,address,address)",
            "getBalance()",
            "executeOptions(address,uint256,string)",
            "buyOptions(address,uint256,string)",
            "executeIfAvailable(address,uint256,string,GVOptionToken,uint8,uint256)",
            "buyIfAvailable(address,uint256,string,GVOptionToken,uint8,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "GVOptionProgram(address,address,address)": {
                "argument": {},
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "getBalance()": {
                "argument": {},
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "executeOptions(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "buyOptions(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "executeIfAvailable(address,uint256,string,GVOptionToken,uint8,uint256)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string",
                    "optionType": "uint8",
                    "optionPerCent": "uint256"
                },
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "buyIfAvailable(address,uint256,string,GVOptionToken,uint8,uint256)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string",
                    "optionType": "uint8",
                    "optionsPerCent": "uint256"
                },
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "option30perCent": "uint256",
                    "option20perCent": "uint256",
                    "option10perCent": "uint256",
                    "token30perCent": "uint256",
                    "token20perCent": "uint256",
                    "token10perCent": "uint256",
                    "option30name": "string",
                    "option20name": "string",
                    "option10name": "string",
                    "option30symbol": "string",
                    "option20symbol": "string",
                    "option10symbol": "string",
                    "option30_TOKEN_LIMIT": "uint256",
                    "option20_TOKEN_LIMIT": "uint256",
                    "option10_TOKEN_LIMIT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "executeOptions(address,uint256,string)": [
                1439,
                317
            ],
            "getBalance()": [
                458,
                119
            ],
            "buyOptions(address,uint256,string)": [
                311,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump3954_0": [
                "optionToken.remainingTokensCount()",
                "optionToken.remainingTokensCount()"
            ],
            "jump3954_1": [
                "optionToken.remainingTokensCount()",
                "optionToken.remainingTokensCount()"
            ],
            "block5091_1": [
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "jump4201_0": [
                "optionToken.buyOptions(buyer, tokens)",
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "jump5091": [
                "optionToken.executeOption(buyer, optionsAmount)",
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "jump4627": [
                "optionToken.buyOptions(buyer, availableTokens)",
                "optionToken.buyOptions(buyer, availableTokens)"
            ],
            "jump2486": [
                "gvOptionToken30.remainingTokensCount()",
                "gvOptionToken30.remainingTokensCount()"
            ],
            "block4201_0": [
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "block4201_1": [
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "jump3954": [
                "optionToken.remainingTokensCount()",
                "optionToken.remainingTokensCount()"
            ],
            "block3954_0": [
                "optionToken.remainingTokensCount()"
            ],
            "block3954_1": [
                "optionToken.remainingTokensCount()"
            ],
            "block2679": [
                "gvOptionToken20.remainingTokensCount()"
            ],
            "block4627": [
                "optionToken.buyOptions(buyer, availableTokens)"
            ],
            "block4627_0": [
                "optionToken.buyOptions(buyer, availableTokens)"
            ],
            "block4627_1": [
                "optionToken.buyOptions(buyer, availableTokens)"
            ],
            "jump5091_0": [
                "optionToken.executeOption(buyer, optionsAmount)",
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "jump5091_1": [
                "optionToken.executeOption(buyer, optionsAmount)",
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "block2486": [
                "gvOptionToken30.remainingTokensCount()"
            ],
            "jump4201": [
                "optionToken.buyOptions(buyer, tokens)",
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "block2872": [
                "gvOptionToken10.remainingTokensCount()"
            ],
            "jump2679": [
                "gvOptionToken20.remainingTokensCount()",
                "gvOptionToken20.remainingTokensCount()"
            ],
            "block5091": [
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "block3954": [
                "optionToken.remainingTokensCount()"
            ],
            "jump4201_1": [
                "optionToken.buyOptions(buyer, tokens)",
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "block5091_0": [
                "optionToken.executeOption(buyer, optionsAmount)"
            ],
            "block4201": [
                "optionToken.buyOptions(buyer, tokens)"
            ],
            "jump2872": [
                "gvOptionToken10.remainingTokensCount()",
                "gvOptionToken10.remainingTokensCount()"
            ],
            "jump4627_0": [
                "optionToken.buyOptions(buyer, availableTokens)",
                "optionToken.buyOptions(buyer, availableTokens)"
            ],
            "jump4627_1": [
                "optionToken.buyOptions(buyer, availableTokens)",
                "optionToken.buyOptions(buyer, availableTokens)"
            ]
        }
    },
    "ICO": {
        "function_list": [
            "ICO(address,address,address,address)",
            "initOptionProgram()",
            "startOptionsSelling()",
            "startIcoForOptionsHolders()",
            "startIco()",
            "pauseIco()",
            "resumeIco()",
            "finishIco(address,address)",
            "buyTokens(address,uint256,string)",
            "buyTokensByOptions(address,uint256,string)",
            "buyOptions(address,uint256,string)",
            "buyTokensInternal(address,uint256,string)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "ICO(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "initOptionProgram()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "startOptionsSelling()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "startIcoForOptionsHolders()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "pauseIco()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "resumeIco()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "finishIco(address,address)": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyTokens(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyTokensByOptions(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyOptions(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "buyTokensInternal(address,uint256,string)": {
                "argument": {
                    "usdCents": "uint256",
                    "txHash": "string"
                },
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOKENS_FOR_SALE": "uint256",
                    "tokensSold": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "block5369": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block2711": [
                "wallet.transfer(msg.value)"
            ],
            "jump5369": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block7726": [
                "token.mint(to, amount)"
            ],
            "jump7726": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block2711_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2711_1": [
                "wallet.transfer(msg.value)"
            ],
            "jump2711_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2711_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block7726_4": [
                "token.mint(to, amount)"
            ],
            "jump2711": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block7726_3": [
                "token.mint(to, amount)"
            ],
            "block7726_2": [
                "token.mint(to, amount)"
            ],
            "block7726_1": [
                "token.mint(to, amount)"
            ],
            "block7726_0": [
                "token.mint(to, amount)"
            ],
            "jump5177": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump4089": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block5177": [
                "token.balanceOf(this)"
            ],
            "jump7726_4": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "block4089": [
                "token.finishMinting()"
            ],
            "jump7726_1": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_0": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_3": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ],
            "jump7726_2": [
                "token.mint(to, amount)",
                "token.mint(to, amount)"
            ]
        }
    }
}