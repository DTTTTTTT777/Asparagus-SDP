{
    "NumberBoard": {
        "function_list": [
            "NumberBoard()",
            "isOwner(address,uint256)",
            "hasOwner(uint256)",
            "ownedNumbers(address)",
            "takeNumber(uint256)",
            "transferNumberOwnership(uint256,address,address)",
            "updateMessage(uint256,string)",
            "hasBuyNowOffer(uint256)",
            "canAcceptBuyNow(uint256,address)",
            "placeBuyNowOffer(uint256,uint256)",
            "cancelBuyNowOffer(uint256)",
            "acceptBuyNowOffer(uint256)",
            "cancelBuyNowOfferInternal(NumberBoard.ANumberCard)",
            "placeNewBid(uint256)",
            "cancelBid(uint256)",
            "cancelBidInternal(uint256)",
            "acceptBid(uint256)",
            "addEarnings(uint256,address)",
            "withdrawDeadBids()",
            "withdrawEarnings()",
            "withdrawHouseEarnings()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "NumberBoard()": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "isOwner(address,uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "hasOwner(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "ownedNumbers(address)": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "takeNumber(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "transferNumberOwnership(uint256,address,address)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "updateMessage(uint256,string)": {
                "argument": {
                    "theNum": "uint256",
                    "aMessage": "string"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "hasBuyNowOffer(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "canAcceptBuyNow(uint256,address)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "placeBuyNowOffer(uint256,uint256)": {
                "argument": {
                    "theNum": "uint256",
                    "price": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "cancelBuyNowOffer(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "acceptBuyNowOffer(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "cancelBuyNowOfferInternal(NumberBoard.ANumberCard)": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "placeNewBid(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "cancelBid(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "cancelBidInternal(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "acceptBid(uint256)": {
                "argument": {
                    "theNum": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "addEarnings(uint256,address)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "withdrawDeadBids()": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "withdrawEarnings()": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "withdrawHouseEarnings()": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ownershipLookup": "mapping(address => uint256[])",
                    "minPrice": "uint256",
                    "houseEarnings": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "acceptBuyNowOffer(uint256)": [
                1490,
                383
            ],
            "canAcceptBuyNow(uint256,address)": [
                1021,
                295
            ],
            "updateMessage(uint256,string)": [
                874,
                251
            ],
            "withdrawEarnings()": [
                1467,
                361
            ],
            "placeNewBid(uint256)": [
                989,
                273
            ],
            "acceptBid(uint256)": [
                453,
                97
            ],
            "hasOwner(uint256)": [
                1777,
                515
            ],
            "hasBuyNowOffer(uint256)": [
                498,
                119
            ],
            "withdrawDeadBids()": [
                1565,
                427
            ],
            "placeBuyNowOffer(uint256,uint256)": [
                722,
                207
            ],
            "takeNumber(uint256)": [
                567,
                141
            ],
            "cancelBid(uint256)": [
                1122,
                317
            ],
            "isOwner(address,uint256)": [
                1588,
                449
            ],
            "ownedNumbers(address)": [
                301,
                75
            ],
            "withdrawHouseEarnings()": [
                612,
                163
            ],
            "cancelBuyNowOffer(uint256)": [
                1732,
                493
            ]
        },
        "block_CALL_mapping": {
            "block4798": [
                "msg.sender.transfer(amount)"
            ],
            "jump4798": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block3425": [
                "msg.sender.transfer(amount)"
            ],
            "jump5247": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block5247": [
                "msg.sender.transfer(amount)"
            ],
            "jump3425": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ]
        }
    }
}