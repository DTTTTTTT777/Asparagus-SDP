{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "KairosToken": {
        "function_list": [
            "getExchangeRate()",
            "balanceOf(address)",
            "getOwner()",
            "getDecimals()",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "getExchangeRate()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "getOwner()": {
                "argument": {},
                "contract": {}
            },
            "getDecimals()": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                644,
                163
            ],
            "balanceOf(address)": [
                1119,
                295
            ],
            "getOwner()": [
                1437,
                383
            ],
            "getDecimals()": [
                2042,
                537
            ]
        },
        "block_CALL_mapping": {
            "jump5362": [
                "msg.sender.send(amount.mul(sellPrice))",
                "msg.sender.send(amount.mul(sellPrice))"
            ],
            "block5362": [
                "msg.sender.send(amount.mul(sellPrice))"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "Crowdsale()",
            "finalize()",
            "refund()",
            "fallback()",
            "calcBonus(uint256)",
            "getPercentage()",
            "calcLevel2Bonus(uint256)",
            "level2Bonus(uint256)"
        ],
        "initial_state": {
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "calcBonus(uint256)": {
                "argument": {
                    "_val": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "getPercentage()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "calcLevel2Bonus(uint256)": {
                "argument": {
                    "_val": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "level2Bonus(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "icoMinCap": "uint256",
                    "icoStartBlock": "uint256",
                    "icoEndBlock": "uint256",
                    "icoStartTime": "uint256",
                    "totalSupply": "uint256",
                    "exchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finalize()": [
                1230,
                185
            ],
            "refund()": [
                1340,
                229
            ]
        },
        "block_CALL_mapping": {
            "block662_0": [
                "token.getOwner()"
            ],
            "block907": [
                "token.transferFrom( token.getOwner(),msg.sender, tokens)"
            ],
            "block2413": [
                "token.getOwner()"
            ],
            "block907_0": [
                "token.transferFrom( token.getOwner(),msg.sender, tokens)"
            ],
            "block2048": [
                "ethOwner.send(this.balance)"
            ],
            "jump662": [
                "token.getOwner()",
                "token.getOwner()"
            ],
            "jump907": [
                "token.transferFrom( token.getOwner(),msg.sender, tokens)",
                "token.transferFrom( token.getOwner(),msg.sender, tokens)"
            ],
            "jump3294": [
                "msg.sender.send(userEthers)",
                "msg.sender.send(userEthers)"
            ],
            "jump3224": [
                "token.transferFrom(msg.sender,kairosOwner, userBalance)",
                "token.transferFrom(msg.sender,kairosOwner, userBalance)"
            ],
            "block3294": [
                "msg.sender.send(userEthers)"
            ],
            "block662": [
                "token.getOwner()"
            ],
            "jump2717": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block3224": [
                "token.transferFrom(msg.sender,kairosOwner, userBalance)"
            ],
            "jump2413": [
                "token.getOwner()",
                "token.getOwner()"
            ],
            "jump907_0": [
                "token.transferFrom( token.getOwner(),msg.sender, tokens)",
                "token.transferFrom( token.getOwner(),msg.sender, tokens)"
            ],
            "jump662_0": [
                "token.getOwner()",
                "token.getOwner()"
            ],
            "jump2048": [
                "ethOwner.send(this.balance)",
                "ethOwner.send(this.balance)"
            ],
            "block2717": [
                "token.balanceOf(msg.sender)"
            ]
        }
    }
}