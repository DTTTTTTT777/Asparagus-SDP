{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Distributable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "trust(address)",
            "distrust(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "trust(address)": {
                "argument": {},
                "contract": {}
            },
            "distrust(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "trust(address)": [
                205,
                97
            ],
            "distrust(address)": [
                359,
                141
            ],
            "transferOwnership(address)": [
                426,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "DistributionToken": {
        "function_list": [
            "trust(address)",
            "distrust(address)",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "burn(address,uint256)"
        ],
        "initial_state": {
            "trust(address)": {
                "argument": {},
                "contract": {}
            },
            "distrust(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "burn(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "trust(address)": [
                671,
                185
            ],
            "mint(address,uint256)": [
                570,
                163
            ],
            "balanceOf(address)": [
                738,
                207
            ],
            "distrust(address)": [
                1233,
                317
            ],
            "allowance(address,address)": [
                1114,
                295
            ],
            "burn(address,uint256)": [
                912,
                251
            ],
            "transferFrom(address,address,uint256)": [
                437,
                141
            ],
            "transfer(address,uint256)": [
                1013,
                273
            ],
            "transferOwnership(address)": [
                1300,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "EverFountainBeanSale": {
        "function_list": [
            "trust(address)",
            "distrust(address)",
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "EverFountainBeanSale(DistributionToken,uint256,address)",
            "balanceOf(address)",
            "calcFlexibleReward(uint256)",
            "calcFixedReward(uint256)",
            "calcReward(uint256)",
            "flexibleReward()",
            "nextFlexibleReward()",
            "setRate(uint256)",
            "destroy()",
            "changeWallet(address)",
            "trade(uint256,uint256,string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "trust(address)": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "distrust(address)": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "EverFountainBeanSale(DistributionToken,uint256,address)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "calcFlexibleReward(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "calcFixedReward(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "calcReward(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "flexibleReward()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "nextFlexibleReward()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "setRate(uint256)": {
                "argument": {
                    "_rate": "uint256"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "changeWallet(address)": {
                "argument": {},
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            },
            "trade(uint256,uint256,string)": {
                "argument": {
                    "amount": "uint256",
                    "consume": "uint256",
                    "order": "string"
                },
                "contract": {
                    "totalSales": "uint256",
                    "totalReward": "uint256",
                    "totalConsume": "uint256",
                    "flexibleRewardLevel": "EverFountainBeanSale.FlexibleReward[]",
                    "flexibleRewardIndex": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                6038,
                929
            ],
            "setRate(uint256)": [
                615,
                141
            ],
            "destroy()": [
                1285,
                383
            ],
            "flexibleReward()": [
                1583,
                493
            ],
            "calcFixedReward(uint256)": [
                1698,
                537
            ],
            "pause()": [
                1308,
                405
            ],
            "unpause()": [
                684,
                163
            ],
            "trade(uint256,uint256,string)": [
                345,
                75
            ],
            "changeWallet(address)": [
                1492,
                471
            ],
            "distrust(address)": [
                1763,
                559
            ],
            "nextFlexibleReward()": [
                1355,
                427
            ],
            "calcFlexibleReward(uint256)": [
                1633,
                515
            ],
            "transferOwnership(address)": [
                1830,
                581
            ],
            "calcReward(uint256)": [
                928,
                251
            ],
            "trust(address)": [
                774,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump3430": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2316": [
                "token.balanceOf(msg.sender)"
            ],
            "jump3349": [
                "token.mint(msg.sender, gain)",
                "token.mint(msg.sender, gain)"
            ],
            "block4528": [
                "token.burn(msg.sender, consume)"
            ],
            "jump6038": [
                "token.balanceOf(_owner)",
                "token.balanceOf(_owner)"
            ],
            "block3349": [
                "token.mint(msg.sender, gain)"
            ],
            "jump4271": [
                "token.mint(msg.sender, gain)",
                "token.mint(msg.sender, gain)"
            ],
            "jump4528": [
                "token.burn(msg.sender, consume)",
                "token.burn(msg.sender, consume)"
            ],
            "jump2316": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "jump2616": [
                "token.burn(msg.sender, consume)",
                "token.burn(msg.sender, consume)"
            ],
            "jump3950": [
                "token.balanceOf(msg.sender)",
                "token.balanceOf(msg.sender)"
            ],
            "block4609": [
                "wallet.transfer(msg.value)"
            ],
            "block3430": [
                "wallet.transfer(msg.value)"
            ],
            "block4271": [
                "token.mint(msg.sender, gain)"
            ],
            "block2616": [
                "token.burn(msg.sender, consume)"
            ],
            "block6038": [
                "token.balanceOf(_owner)"
            ],
            "block3950": [
                "token.balanceOf(msg.sender)"
            ],
            "jump4609": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    }
}