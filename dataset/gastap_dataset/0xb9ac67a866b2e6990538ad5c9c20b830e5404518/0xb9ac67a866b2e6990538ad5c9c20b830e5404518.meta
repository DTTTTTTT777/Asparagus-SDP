{
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Burnable": {
        "function_list": [
            "burnTokens(address,uint256)"
        ],
        "initial_state": {
            "burnTokens(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Mintable": {
        "function_list": [
            "mintInternal(address,uint256)"
        ],
        "initial_state": {
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "mintInternal(address,uint256)",
            "burnTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "burnTokens(address,uint256)",
            "mintInternal(address,uint256)"
        ],
        "initial_state": {
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "addedValue": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "subtractedValue": "uint256"
                },
                "contract": {
                    "total_supply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "subApproval(address,uint256)": [
                832,
                229
            ],
            "balanceOf(address)": [
                424,
                141
            ],
            "totalSupply()": [
                248,
                97
            ],
            "addApproval(address,uint256)": [
                612,
                185
            ],
            "allowance(address,address)": [
                713,
                207
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                511,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReleasableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "totalSupply()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "burnTokens(address,uint256)",
            "mintInternal(address,uint256)",
            "mintInternal(address,uint256)",
            "burnTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "subtractedValue": "uint256"
                },
                "contract": {}
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                314,
                97
            ],
            "setTransferAgent(address,bool)": [
                235,
                75
            ],
            "releaseTokenTransfer()": [
                658,
                185
            ],
            "subApproval(address,uint256)": [
                1401,
                383
            ],
            "balanceOf(address)": [
                681,
                207
            ],
            "totalSupply()": [
                415,
                119
            ],
            "addApproval(address,uint256)": [
                1094,
                317
            ],
            "transferFrom(address,address,uint256)": [
                458,
                141
            ],
            "setReleaseAgent(address)": [
                591,
                163
            ],
            "allowance(address,address)": [
                1282,
                361
            ],
            "transfer(address,uint256)": [
                993,
                295
            ],
            "transferOwnership(address)": [
                1502,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "burnTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "changeUpgradeMaster(address)",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "burnTokens(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "changeUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                501,
                141
            ],
            "approve(address,uint256)": [
                224,
                75
            ],
            "setUpgradeAgent(address)": [
                1055,
                317
            ],
            "balanceOf(address)": [
                720,
                207
            ],
            "canUpgrade()": [
                864,
                251
            ],
            "allowance(address,address)": [
                1122,
                339
            ],
            "transferFrom(address,address,uint256)": [
                368,
                119
            ],
            "totalSupply()": [
                325,
                97
            ],
            "transfer(address,uint256)": [
                911,
                273
            ],
            "setUpgradeMaster(address)": [
                1288,
                383
            ],
            "getUpgradeState()": [
                807,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump2935": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump4395": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block4188": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump4188": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block4395": [
                "upgradeAgent.originalSupply()"
            ],
            "block2935": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "mintInternal(address,uint256)",
            "MintableToken(uint256,address,bool)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "MintableToken(uint256,address,bool)": {
                "argument": {
                    "initialSupply": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "mint(address,uint256)": [
                615,
                185
            ],
            "transferOwnership(address)": [
                1446,
                383
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdsaleToken": {
        "function_list": [
            "getLostAndFoundMaster()",
            "enableLostAndFound(address,uint256,EIP20Token)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "changeUpgradeMaster(address)",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "burnTokens(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "MintableToken(uint256,address,bool)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "mintInternal(address,uint256)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "totalSupply()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "burnTokens(address,uint256)",
            "mintInternal(address,uint256)",
            "CrowdsaleToken(uint256,uint8,address,bool,address)",
            "releaseTokenTransfer()",
            "canUpgrade()",
            "getLostAndFoundMaster()",
            "burn(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "getLostAndFoundMaster()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "enableLostAndFound(address,uint256,EIP20Token)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "changeUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "MintableToken(uint256,address,bool)": {
                "argument": {
                    "initialSupply": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "mintInternal(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "CrowdsaleToken(uint256,uint8,address,bool,address)": {
                "argument": {
                    "initial_supply": "uint256",
                    "token_decimals": "uint8"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                1309,
                317
            ],
            "upgrade(uint256)": [
                1388,
                339
            ],
            "setTransferAgent(address,bool)": [
                433,
                75
            ],
            "totalSupply()": [
                804,
                163
            ],
            "allowance(address,address)": [
                2785,
                735
            ],
            "transferFrom(address,address,uint256)": [
                847,
                185
            ],
            "subApproval(address,uint256)": [
                2904,
                757
            ],
            "approve(address,uint256)": [
                5533,
                860
            ],
            "changeUpgradeMaster(address)": [
                3005,
                779
            ],
            "addApproval(address,uint256)": [
                2487,
                647
            ],
            "balanceOf(address)": [
                1739,
                449
            ],
            "setUpgradeAgent(address)": [
                2718,
                713
            ],
            "setReleaseAgent(address)": [
                980,
                207
            ],
            "transferOwnership(address)": [
                3072,
                801
            ],
            "releaseTokenTransfer()": [
                1629,
                405
            ],
            "mint(address,uint256)": [
                1096,
                251
            ],
            "canUpgrade()": [
                2252,
                581
            ],
            "burn(uint256)": [
                1173,
                273
            ],
            "transfer(address,uint256)": [
                2386,
                625
            ],
            "getUpgradeState()": [
                1826,
                471
            ]
        },
        "block_CALL_mapping": {
            "block7621": [
                "upgradeAgent.originalSupply()"
            ],
            "block5076": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump5076": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump5533": [
                "token_contract.approve(agent, tokens)",
                "token_contract.approve(agent, tokens)"
            ],
            "block5533": [
                "token_contract.approve(agent, tokens)"
            ],
            "block7409": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump7621": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "jump7409": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ]
        }
    },
    "TokenTranchePricing": {
        "function_list": [
            "getTranchesLength()",
            "TokenTranchePricing(uint256[])",
            "getCurrentTranche(uint256)",
            "getCurrentPrice(uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "getTranchesLength()": {
                "argument": {},
                "contract": {
                    "amount_offset": "uint256",
                    "start_offset": "uint256",
                    "end_offset": "uint256",
                    "price_offset": "uint256",
                    "tranche_size": "uint256",
                    "tranches": "TokenTranchePricing.Tranche[]"
                }
            },
            "TokenTranchePricing(uint256[])": {
                "argument": {
                    "init_tranches": "uint256[]"
                },
                "contract": {
                    "amount_offset": "uint256",
                    "start_offset": "uint256",
                    "end_offset": "uint256",
                    "price_offset": "uint256",
                    "tranche_size": "uint256",
                    "tranches": "TokenTranchePricing.Tranche[]"
                }
            },
            "getCurrentTranche(uint256)": {
                "argument": {
                    "tokensSold": "uint256"
                },
                "contract": {
                    "amount_offset": "uint256",
                    "start_offset": "uint256",
                    "end_offset": "uint256",
                    "price_offset": "uint256",
                    "tranche_size": "uint256",
                    "tranches": "TokenTranchePricing.Tranche[]"
                }
            },
            "getCurrentPrice(uint256)": {
                "argument": {
                    "tokensSold": "uint256"
                },
                "contract": {
                    "amount_offset": "uint256",
                    "start_offset": "uint256",
                    "end_offset": "uint256",
                    "price_offset": "uint256",
                    "tranche_size": "uint256",
                    "tranches": "TokenTranchePricing.Tranche[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "amount_offset": "uint256",
                    "start_offset": "uint256",
                    "end_offset": "uint256",
                    "price_offset": "uint256",
                    "tranche_size": "uint256",
                    "tranches": "TokenTranchePricing.Tranche[]"
                }
            }
        },
        "function_block_mapping": {
            "getTranchesLength()": [
                167,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "DeploymentInfo": {
        "function_list": [
            "DeploymentInfo()",
            "getDeploymentBlock()"
        ],
        "initial_state": {
            "DeploymentInfo()": {
                "argument": {},
                "contract": {
                    "deployed_on": "uint256"
                }
            },
            "getDeploymentBlock()": {
                "argument": {},
                "contract": {
                    "deployed_on": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getDeploymentBlock()": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "DeploymentInfo()",
            "getDeploymentBlock()",
            "getTranchesLength()",
            "TokenTranchePricing(uint256[])",
            "getCurrentTranche(uint256)",
            "getCurrentPrice(uint256)",
            "getLostAndFoundMaster()",
            "enableLostAndFound(address,uint256,EIP20Token)",
            "GenericCrowdsale(address,uint256,uint256)",
            "fallback()",
            "investInternal(address,uint128)",
            "preallocate(address,uint256,uint256)",
            "updateInvestorFunds(uint256,uint256,address,uint128)",
            "buyOnBehalfWithSignedAddress(address,uint128,uint8,bytes32,bytes32)",
            "buyOnBehalfWithCustomerId(address,uint128)",
            "buyOnBehalf(address)",
            "setInvestmentGateway(address)",
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "finalize()",
            "setRequireCustomerId(bool)",
            "setRequireSignedAddress(bool,address)",
            "setEarlyParticipantWhitelist(address,bool)",
            "setMultisig(address)",
            "getState()",
            "assignTokens(address,uint256)",
            "isCrowdsaleFull()",
            "returnExcedent(uint256,address)",
            "calculateTokenAmount(uint256,address)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,address,uint256,uint256,address,uint256[])",
            "assignTokens(address,uint256)",
            "calculateTokenAmount(uint256,address)",
            "isCrowdsaleFull()",
            "getLostAndFoundMaster()",
            "setMinimumBuyValue(uint256)",
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "finalize()",
            "setStartingTime(uint256)",
            "setEndingTime(uint256)",
            "enableLostAndFound(address,uint256,EIP20Token)",
            "updateEursPerEth(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "DeploymentInfo()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getDeploymentBlock()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getTranchesLength()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "TokenTranchePricing(uint256[])": {
                "argument": {
                    "init_tranches": "uint256[]"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getCurrentTranche(uint256)": {
                "argument": {
                    "tokensSold": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getCurrentPrice(uint256)": {
                "argument": {
                    "tokensSold": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getLostAndFoundMaster()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "enableLostAndFound(address,uint256,EIP20Token)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "GenericCrowdsale(address,uint256,uint256)": {
                "argument": {
                    "start": "uint256",
                    "end": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "investInternal(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "preallocate(address,uint256,uint256)": {
                "argument": {
                    "fullTokens": "uint256",
                    "weiPrice": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "updateInvestorFunds(uint256,uint256,address,uint128)": {
                "argument": {
                    "tokenAmount": "uint256",
                    "weiAmount": "uint256",
                    "customerId": "uint128"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buyOnBehalfWithSignedAddress(address,uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buyOnBehalfWithCustomerId(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buyOnBehalf(address)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setInvestmentGateway(address)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buyWithCustomerId(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setRequireSignedAddress(bool,address)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setEarlyParticipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "returnExcedent(uint256,address)": {
                "argument": {
                    "excedent": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "calculateTokenAmount(uint256,address)": {
                "argument": {
                    "weiAmount": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "Crowdsale(uint256,address,uint256,uint256,address,uint256[])": {
                "argument": {
                    "eth_price_in_eurs": "uint256",
                    "start": "uint256",
                    "end": "uint256",
                    "init_tranches": "uint256[]"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setMinimumBuyValue(uint256)": {
                "argument": {
                    "newValue": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setStartingTime(uint256)": {
                "argument": {
                    "startingTime": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "setEndingTime(uint256)": {
                "argument": {
                    "endingTime": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "updateEursPerEth(uint256)": {
                "argument": {
                    "milieurs_amount": "uint256"
                },
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "token_decimals": "uint8",
                    "token_initial_supply": "uint256",
                    "sellable_tokens": "uint256",
                    "minimum_buy_value": "uint256",
                    "milieurs_per_eth": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setEarlyParticipantWhitelist(address,bool)": [
                1611,
                427
            ],
            "getDeploymentBlock()": [
                1978,
                581
            ],
            "setRequireSignedAddress(bool,address)": [
                2782,
                911
            ],
            "getTranchesLength()": [
                3019,
                977
            ],
            "buy()": [
                2332,
                691
            ],
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)": [
                2928,
                955
            ],
            "buyOnBehalfWithSignedAddress(address,uint128,uint8,bytes32,bytes32)": [
                920,
                207
            ],
            "setRequireCustomerId(bool)": [
                1931,
                559
            ],
            "setEndingTime(uint256)": [
                1216,
                273
            ],
            "setStartingTime(uint256)": [
                1348,
                317
            ],
            "preallocate(address,uint256,uint256)": [
                1129,
                251
            ],
            "transferOwnership(address)": [
                2861,
                933
            ],
            "buyWithCustomerId(uint128)": [
                2282,
                669
            ],
            "updateEursPerEth(uint256)": [
                1886,
                537
            ],
            "buyOnBehalf(address)": [
                2638,
                845
            ],
            "finalize()": [
                1545,
                383
            ],
            "setMinimumBuyValue(uint256)": [
                2593,
                823
            ],
            "halt()": [
                1820,
                493
            ],
            "setInvestmentGateway(address)": [
                627,
                119
            ],
            "getState()": [
                694,
                141
            ],
            "unhalt()": [
                2570,
                801
            ],
            "buyOnBehalfWithCustomerId(address,uint128)": [
                838,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump6042": [
                "token.burn(unsoldTokens.div(2))",
                "token.burn(unsoldTokens.div(2))"
            ],
            "jump4587": [
                "token.decimals()",
                "token.decimals()"
            ],
            "block3766_0": [
                "sha256(receiver)"
            ],
            "block9557_6": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block9557_5": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block9557_4": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block11166": [
                "receiver.transfer(excedent)"
            ],
            "jump11438_3": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "block9557_1": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block9557_0": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump3766": [
                "sha256(receiver)",
                "sha256(receiver)"
            ],
            "block11438_6": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11166_3": [
                "receiver.transfer(excedent)"
            ],
            "block11166_2": [
                "receiver.transfer(excedent)"
            ],
            "jump10503": [
                "token_contract.approve(agent, tokens)",
                "token_contract.approve(agent, tokens)"
            ],
            "block11166_0": [
                "receiver.transfer(excedent)"
            ],
            "block11166_1": [
                "receiver.transfer(excedent)"
            ],
            "block11166_5": [
                "receiver.transfer(excedent)"
            ],
            "block11166_4": [
                "receiver.transfer(excedent)"
            ],
            "block10503": [
                "token_contract.approve(agent, tokens)"
            ],
            "jump3893": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ],
            "jump11166_3": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "block11166_6": [
                "receiver.transfer(excedent)"
            ],
            "jump11166_1": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump11166_0": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump11166": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump11166_2": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump11166_5": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump11166_4": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump5817": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump9557_5": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump9557_4": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump9557_6": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "block4587": [
                "token.decimals()"
            ],
            "jump9557_0": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump9557_3": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump9557_2": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump11438_1": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_0": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_2": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_5": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_4": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_7": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump11438_6": [
                "token.transfer(receiver, tokenAmount)",
                "token.transfer(receiver, tokenAmount)"
            ],
            "block9557_3": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump11166_6": [
                "receiver.transfer(excedent)",
                "receiver.transfer(excedent)"
            ],
            "jump3893_0": [
                "ecrecover(hash, v, r, s)",
                "ecrecover(hash, v, r, s)"
            ],
            "block9557_2": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "block3766": [
                "sha256(receiver)"
            ],
            "jump6318": [
                "token.transfer(multisigWallet, unsoldTokens - unsoldTokens.div(2))",
                "token.transfer(multisigWallet, unsoldTokens - unsoldTokens.div(2))"
            ],
            "block11438_7": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "jump5604": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "block11438_5": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438_4": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438_3": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438_2": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438_1": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438_0": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block11438": [
                "token.transfer(receiver, tokenAmount)"
            ],
            "block5604": [
                "token.releaseTokenTransfer()"
            ],
            "block9557": [
                "multisigWallet.transfer(weiAmount)"
            ],
            "jump9557_1": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "block6042": [
                "token.burn(unsoldTokens.div(2))"
            ],
            "jump9557": [
                "multisigWallet.transfer(weiAmount)",
                "multisigWallet.transfer(weiAmount)"
            ],
            "block3893_0": [
                "ecrecover(hash, v, r, s)"
            ],
            "block3893": [
                "ecrecover(hash, v, r, s)"
            ],
            "jump3766_0": [
                "sha256(receiver)",
                "sha256(receiver)"
            ],
            "block6318": [
                "token.transfer(multisigWallet, unsoldTokens - unsoldTokens.div(2))"
            ],
            "block5817": [
                "token.balanceOf(address(this))"
            ]
        }
    }
}