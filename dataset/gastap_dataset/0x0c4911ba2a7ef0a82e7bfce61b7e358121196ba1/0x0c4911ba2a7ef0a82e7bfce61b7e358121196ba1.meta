{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ImmlaToken": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ImmlaToken(address)",
            "burnTokens(address,uint256)",
            "emitTokens(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "ImmlaToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "emitTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "supplyLimit": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "emitTokens(address,uint256)": [
                1324,
                339
            ],
            "totalSupply()": [
                524,
                141
            ],
            "burnTokens(address,uint256)": [
                447,
                119
            ],
            "balanceOf(address)": [
                786,
                229
            ],
            "transferFrom(address,address,uint256)": [
                610,
                185
            ],
            "allowance(address,address)": [
                1205,
                317
            ],
            "transfer(address,uint256)": [
                1017,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "ImmlaIco": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "mulByFraction(uint256,uint256,uint256)",
            "ImmlaIco(address,address,uint256,uint256,uint256)",
            "init(address,address,address,address,address,address)",
            "setNewManager(address)",
            "setNewTokenImporter(address)",
            "importTokens(address)",
            "stopIco()",
            "withdrawEther()",
            "returnFundsFor(address)",
            "countTokens(uint256)",
            "removeTokens(uint256)",
            "buyTokens(address)",
            "fallback()",
            "burnTokens(address,uint256)",
            "setStateMigrated()",
            "sendTokensToFounders()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "mulByFraction(uint256,uint256,uint256)": {
                "argument": {
                    "number": "uint256",
                    "numerator": "uint256",
                    "denominator": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "ImmlaIco(address,address,uint256,uint256,uint256)": {
                "argument": {
                    "_icoStart": "uint256",
                    "_icoDeadline": "uint256",
                    "_foundersRewardTime": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "init(address,address,address,address,address,address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "setNewManager(address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "setNewTokenImporter(address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "importTokens(address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "stopIco()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "withdrawEther()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "returnFundsFor(address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "countTokens(uint256)": {
                "argument": {
                    "_weis": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "removeTokens(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "burnTokens(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "setStateMigrated()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "sendTokensToFounders()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "teamsReward": "uint256",
                    "bountyOwnersTokens": "uint256",
                    "BASE": "uint256",
                    "defaultIcoStart": "uint256",
                    "icoStart": "uint256",
                    "defaultIcoDeadline": "uint256",
                    "icoDeadline": "uint256",
                    "defaultFoundersRewardTime": "uint256",
                    "foundersRewardTime": "uint256",
                    "minIcoTokenLimit": "uint256",
                    "maxIcoTokenLimit": "uint256",
                    "importedTokens": "uint256",
                    "soldTokensOnIco": "uint256",
                    "soldTokensOnPreIco": "uint256",
                    "tokenPrice1": "uint256",
                    "tokenSupply1": "uint256",
                    "tokenPrice2": "uint256",
                    "tokenSupply2": "uint256",
                    "tokenPrice3": "uint256",
                    "tokenSupply3": "uint256",
                    "tokenPrice4": "uint256",
                    "tokenSupply4": "uint256",
                    "tokenPrices": "uint256[]",
                    "tokenSupplies": "uint256[]"
                }
            }
        },
        "function_block_mapping": {
            "setStateMigrated()": [
                2620,
                801
            ],
            "burnTokens(address,uint256)": [
                4039,
                946
            ],
            "returnFundsFor(address)": [
                1584,
                493
            ],
            "stopIco()": [
                1518,
                449
            ],
            "setNewManager(address)": [
                2510,
                757
            ],
            "withdrawEther()": [
                1452,
                405
            ],
            "importTokens(address)": [
                2730,
                845
            ],
            "setNewTokenImporter(address)": [
                2797,
                867
            ],
            "sendTokensToFounders()": [
                988,
                229
            ],
            "init(address,address,address,address,address,address)": [
                1998,
                625
            ]
        },
        "block_CALL_mapping": {
            "block3411_0": [
                "immlaToken.emitTokens(_buyer, boughtTokens)"
            ],
            "jump4646": [
                "immlaToken.emitTokens(founder1, founder1Reward)",
                "immlaToken.emitTokens(founder1, founder1Reward)"
            ],
            "block6438": [
                "_account.transfer(balances[_account])"
            ],
            "jump5698": [
                "escrow.transfer(this.balance)",
                "escrow.transfer(this.balance)"
            ],
            "block3411": [
                "immlaToken.emitTokens(_buyer, boughtTokens)"
            ],
            "jump4039": [
                "immlaToken.burnTokens(_from, _value)",
                "immlaToken.burnTokens(_from, _value)"
            ],
            "block9151": [
                "preIcoToken.balanceOf(_account)"
            ],
            "block8100": [
                "immlaToken.emitTokens(bountyOwner, bountyOwnersTokens)"
            ],
            "jump9151": [
                "preIcoToken.balanceOf(_account)",
                "preIcoToken.balanceOf(_account)"
            ],
            "jump6438": [
                "_account.transfer(balances[_account])",
                "_account.transfer(balances[_account])"
            ],
            "block4039": [
                "immlaToken.burnTokens(_from, _value)"
            ],
            "block7835": [
                "immlaToken.emitTokens(team, teamsReward)"
            ],
            "block4646": [
                "immlaToken.emitTokens(founder1, founder1Reward)"
            ],
            "jump8100": [
                "immlaToken.emitTokens(bountyOwner, bountyOwnersTokens)",
                "immlaToken.emitTokens(bountyOwner, bountyOwnersTokens)"
            ],
            "block5698": [
                "escrow.transfer(this.balance)"
            ],
            "jump3411_0": [
                "immlaToken.emitTokens(_buyer, boughtTokens)",
                "immlaToken.emitTokens(_buyer, boughtTokens)"
            ],
            "jump9417": [
                "immlaToken.emitTokens(_account, preIcoBalance)",
                "immlaToken.emitTokens(_account, preIcoBalance)"
            ],
            "jump4900": [
                "immlaToken.emitTokens(founder2, founder2Reward)",
                "immlaToken.emitTokens(founder2, founder2Reward)"
            ],
            "block4900": [
                "immlaToken.emitTokens(founder2, founder2Reward)"
            ],
            "jump7835": [
                "immlaToken.emitTokens(team, teamsReward)",
                "immlaToken.emitTokens(team, teamsReward)"
            ],
            "jump3411": [
                "immlaToken.emitTokens(_buyer, boughtTokens)",
                "immlaToken.emitTokens(_buyer, boughtTokens)"
            ],
            "jump5154": [
                "immlaToken.emitTokens(founder3, founder3Reward)",
                "immlaToken.emitTokens(founder3, founder3Reward)"
            ],
            "block9417": [
                "immlaToken.emitTokens(_account, preIcoBalance)"
            ],
            "block6438_0": [
                "_account.transfer(balances[_account])"
            ],
            "block5154": [
                "immlaToken.emitTokens(founder3, founder3Reward)"
            ],
            "jump6438_0": [
                "_account.transfer(balances[_account])",
                "_account.transfer(balances[_account])"
            ]
        }
    }
}