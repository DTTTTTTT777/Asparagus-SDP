{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transfer(address,uint256)": [
                1385,
                361
            ],
            "allowance(address,address)": [
                1704,
                427
            ],
            "balanceOf(address)": [
                1044,
                273
            ],
            "transferFrom(address,address,uint256)": [
                588,
                163
            ]
        },
        "block_CALL_mapping": {
            "block3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "OpportyToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "OpportyToken()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "OpportyToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "INITIAL_SUPPLY": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                335,
                97
            ],
            "increaseApproval(address,uint256)": [
                1137,
                295
            ],
            "balanceOf(address)": [
                805,
                229
            ],
            "decreaseApproval(address,uint256)": [
                704,
                207
            ],
            "transferFrom(address,address,uint256)": [
                479,
                141
            ],
            "allowance(address,address)": [
                1238,
                317
            ],
            "transfer(address,uint256)": [
                1036,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "HoldPresaleContract": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "HoldPresaleContract(address)",
            "setPresaleCont(address)",
            "addHolder(address,uint256,uint8,uint256)",
            "getBalance()",
            "unlockTokens()",
            "addAssetsOwner(address)",
            "removeAssetsOwner(address)",
            "getAssetsOwners(uint256)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "HoldPresaleContract(address)": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "setPresaleCont(address)": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "addHolder(address,uint256,uint8,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "timed": "uint8",
                    "timest": "uint256"
                },
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "getBalance()": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "unlockTokens()": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "addAssetsOwner(address)": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "removeAssetsOwner(address)": {
                "argument": {},
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            },
            "getAssetsOwners(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {
                    "assetOwnersIndexes": "uint256",
                    "holderIndex": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "removeAssetsOwner(address)": [
                626,
                185
            ],
            "addAssetsOwner(address)": [
                1013,
                317
            ],
            "getBalance()": [
                320,
                97
            ],
            "setPresaleCont(address)": [
                363,
                119
            ],
            "unlockTokens()": [
                990,
                295
            ],
            "addHolder(address,uint256,uint8,uint256)": [
                823,
                251
            ],
            "getAssetsOwners(uint256)": [
                430,
                141
            ],
            "transferOwnership(address)": [
                923,
                273
            ]
        },
        "block_CALL_mapping": {
            "block1364": [
                "OppToken.balanceOf(this)"
            ],
            "jump1364": [
                "OppToken.balanceOf(this)",
                "OppToken.balanceOf(this)"
            ],
            "jump4004": [
                "OppToken.transfer( msg.sender, holderList[contributor].tokens )",
                "OppToken.transfer( msg.sender, holderList[contributor].tokens )"
            ],
            "block4004": [
                "OppToken.transfer( msg.sender, holderList[contributor].tokens )"
            ]
        }
    },
    "OpportyPresale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "OpportyPresale(address,address,uint256,uint256,address)",
            "startPresale()",
            "endPresale()",
            "addToWhitelist(address,uint256,uint8,uint8)",
            "fallback()",
            "getBalanceContract()",
            "sendTokensToHold()",
            "getTokensBack()",
            "withdrawEth()",
            "setEndSaleDate(uint256)",
            "setEndDate(uint256)",
            "getTokenBalance()",
            "getEthRaised()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "OpportyPresale(address,address,uint256,uint256,address)": {
                "argument": {
                    "end": "uint256",
                    "endSale": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "startPresale()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "endPresale()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "addToWhitelist(address,uint256,uint8,uint8)": {
                "argument": {
                    "amount": "uint256",
                    "holdPeriod": "uint8",
                    "bonus": "uint8"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "getBalanceContract()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "sendTokensToHold()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "getTokensBack()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "setEndSaleDate(uint256)": {
                "argument": {
                    "date": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "setEndDate(uint256)": {
                "argument": {
                    "date": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "getTokenBalance()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            },
            "getEthRaised()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "sendTokensToHold()": [
                1706,
                97
            ],
            "addToWhitelist(address,uint256,uint8,uint8)": [
                2117,
                273
            ],
            "pause()": [
                2333,
                361
            ],
            "unpause()": [
                2002,
                207
            ],
            "startPresale()": [
                1683,
                75
            ],
            "withdrawEth()": [
                2530,
                427
            ],
            "getTokensBack()": [
                2267,
                317
            ],
            "endPresale()": [
                2553,
                449
            ],
            "getTokenBalance()": [
                2290,
                339
            ],
            "transferOwnership(address)": [
                2719,
                537
            ],
            "setEndSaleDate(uint256)": [
                2025,
                229
            ],
            "getEthRaised()": [
                1772,
                141
            ],
            "setEndDate(uint256)": [
                1957,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump1410": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)",
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump7960": [
                "wallet.transfer(bal)",
                "wallet.transfer(bal)"
            ],
            "jump8991": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block7158": [
                "token.transfer(msg.sender, balance)"
            ],
            "block1410_0": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "block561_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block8991_0": [
                "token.balanceOf(this)"
            ],
            "block561": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump561_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump1410_0": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)",
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump7412": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump561": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block7412": [
                "token.balanceOf(this)"
            ],
            "block8991": [
                "token.balanceOf(this)"
            ],
            "block3637": [
                "token.transfer(holdContract, tokenRaised )"
            ],
            "jump8991_0": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3637": [
                "token.transfer(holdContract, tokenRaised )",
                "token.transfer(holdContract, tokenRaised )"
            ],
            "block7960": [
                "wallet.transfer(bal)"
            ],
            "block1410": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump7158": [
                "token.transfer(msg.sender, balance)",
                "token.transfer(msg.sender, balance)"
            ]
        }
    },
    "OpportyPresale2": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "OpportyPresale2(address,address,uint256,uint256,address,address)",
            "startPresale()",
            "endPresale()",
            "addToWhitelist(address,uint256,uint8,uint8)",
            "fallback()",
            "forwardFunds()",
            "getBalanceContract()",
            "sendTokensToHold()",
            "getTokensBack()",
            "withdrawEth()",
            "setEndSaleDate(uint256)",
            "setEndDate(uint256)",
            "setMinimalContribution(uint256)",
            "getTokenBalance()",
            "getEthRaised()",
            "addAssetsOwner(address)",
            "removeAssetsOwner(address)",
            "getAssetsOwners(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "OpportyPresale2(address,address,uint256,uint256,address,address)": {
                "argument": {
                    "end": "uint256",
                    "endSale": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "startPresale()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "endPresale()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "addToWhitelist(address,uint256,uint8,uint8)": {
                "argument": {
                    "amount": "uint256",
                    "holdPeriod": "uint8",
                    "bonus": "uint8"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "getBalanceContract()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "sendTokensToHold()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "getTokensBack()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "setEndSaleDate(uint256)": {
                "argument": {
                    "date": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "setEndDate(uint256)": {
                "argument": {
                    "date": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "setMinimalContribution(uint256)": {
                "argument": {
                    "minimumAmount": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "getTokenBalance()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "getEthRaised()": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "addAssetsOwner(address)": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "removeAssetsOwner(address)": {
                "argument": {},
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            },
            "getAssetsOwners(uint256)": {
                "argument": {
                    "_index": "uint256"
                },
                "contract": {
                    "endDate": "uint256",
                    "endSaleDate": "uint256",
                    "minimalContribution": "uint256",
                    "ethRaised": "uint256",
                    "price": "uint256",
                    "tokenRaised": "uint256",
                    "whitelistIndex": "uint256",
                    "assetOwnersIndexes": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "sendTokensToHold()": [
                1831,
                119
            ],
            "endPresale()": [
                2897,
                537
            ],
            "addToWhitelist(address,uint256,uint8,uint8)": [
                2418,
                339
            ],
            "pause()": [
                2634,
                427
            ],
            "removeAssetsOwner(address)": [
                2351,
                317
            ],
            "unpause()": [
                2236,
                251
            ],
            "startPresale()": [
                1763,
                75
            ],
            "withdrawEth()": [
                2874,
                515
            ],
            "getTokensBack()": [
                2568,
                383
            ],
            "setMinimalContribution(uint256)": [
                1786,
                97
            ],
            "getAssetsOwners(uint256)": [
                1854,
                141
            ],
            "getTokenBalance()": [
                2591,
                405
            ],
            "transferOwnership(address)": [
                3193,
                669
            ],
            "addAssetsOwner(address)": [
                3260,
                691
            ],
            "setEndSaleDate(uint256)": [
                2259,
                273
            ],
            "getEthRaised()": [
                4991,
                892
            ],
            "setEndDate(uint256)": [
                2191,
                229
            ]
        },
        "block_CALL_mapping": {
            "block8927": [
                "token.balanceOf(this)"
            ],
            "block633": [
                "msg.sender.transfer(msg.value)"
            ],
            "block9481": [
                "wallet.transfer(bal)"
            ],
            "jump3543": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3543_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block8673": [
                "token.transfer(msg.sender, balance)"
            ],
            "jump8673": [
                "token.transfer(msg.sender, balance)",
                "token.transfer(msg.sender, balance)"
            ],
            "block3543_0": [
                "wallet.transfer(msg.value)"
            ],
            "block1482_0": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump8927": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block10823_0": [
                "token.balanceOf(this)"
            ],
            "block4459": [
                "token.transfer(holdContract, tokenRaised )"
            ],
            "block3543": [
                "wallet.transfer(msg.value)"
            ],
            "jump9481": [
                "wallet.transfer(bal)",
                "wallet.transfer(bal)"
            ],
            "block1482": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump1482_0": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)",
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump4459": [
                "token.transfer(holdContract, tokenRaised )",
                "token.transfer(holdContract, tokenRaised )"
            ],
            "block10823": [
                "token.balanceOf(this)"
            ],
            "block4991": [
                "preSaleContract.getEthRaised()"
            ],
            "block633_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump633_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump633": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump10823": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump4991": [
                "preSaleContract.getEthRaised()",
                "preSaleContract.getEthRaised()"
            ],
            "jump1482": [
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)",
                "holdContract.addHolder(msg.sender, tokenAmount, contrib.holdPeriod, contrib.holdTimestamp)"
            ],
            "jump10823_0": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ]
        }
    }
}