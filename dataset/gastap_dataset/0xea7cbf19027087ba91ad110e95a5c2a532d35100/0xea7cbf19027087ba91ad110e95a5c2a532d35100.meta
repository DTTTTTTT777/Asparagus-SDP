{
    "ZiberToken": {
        "function_list": [
            "ZiberToken()",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "loadRefund()",
            "refund()",
            "transfer(address,uint256)",
            "activate_kill_switch()",
            "withdraw()",
            "add_to_bounty()",
            "claim_bounty()",
            "withdrawEth()",
            "kill()",
            "default_helper()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "ZiberToken()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "activate_kill_switch()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "add_to_bounty()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "claim_bounty()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "default_helper()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "bounty": "uint256",
                    "time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_bounty": "uint256",
                    "ETH_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "claim_bounty()": [
                284,
                75
            ],
            "kill()": [
                610,
                185
            ],
            "default_helper()": [
                724,
                229
            ],
            "loadRefund()": [
                901,
                339
            ],
            "withdraw()": [
                587,
                163
            ],
            "transfer(address,uint256)": [
                3537,
                1042
            ],
            "add_to_bounty()": [
                734,
                251
            ],
            "withdrawEth()": [
                1145,
                427
            ],
            "activate_kill_switch()": [
                791,
                295
            ]
        },
        "block_CALL_mapping": {
            "block3537": [
                "token.transfer(developer_address, fee)"
            ],
            "block2859_0": [
                "msg.sender.transfer(eth_amount)"
            ],
            "jump3807_1": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump3807_0": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump3807_2": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump2371": [
                "token.proxyPayment.value(this.balance - bounty)(address(this))",
                "token.proxyPayment.value(this.balance - bounty)(address(this))"
            ],
            "jump4701": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ],
            "jump2553": [
                "msg.sender.transfer(bounty)",
                "msg.sender.transfer(bounty)"
            ],
            "block3807_2": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3807_1": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3807_0": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3807": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump1756_0": [
                "token.totalEthers()",
                "token.totalEthers()"
            ],
            "jump1756_1": [
                "token.totalEthers()",
                "token.totalEthers()"
            ],
            "jump3537_1": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "jump3537_0": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "block4701": [
                "msg.sender.transfer(this.balance)"
            ],
            "jump1756": [
                "token.totalEthers()",
                "token.totalEthers()"
            ],
            "block2430": [
                "msg.sender.transfer(bounty)"
            ],
            "block3537_1": [
                "token.transfer(developer_address, fee)"
            ],
            "block3537_0": [
                "token.transfer(developer_address, fee)"
            ],
            "block2553": [
                "msg.sender.transfer(bounty)"
            ],
            "block3537_2": [
                "token.transfer(developer_address, fee)"
            ],
            "block2859_1": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block1563": [
                "token.CAP()"
            ],
            "block2859": [
                "msg.sender.transfer(eth_amount)"
            ],
            "jump2430": [
                "msg.sender.transfer(bounty)",
                "msg.sender.transfer(bounty)"
            ],
            "jump3537": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "block1756": [
                "token.totalEthers()"
            ],
            "jump3807": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump2859_2": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump2859_1": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump2859_0": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "block1756_0": [
                "token.totalEthers()"
            ],
            "block1756_1": [
                "token.totalEthers()"
            ],
            "jump3537_2": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "block2859_2": [
                "msg.sender.transfer(eth_amount)"
            ],
            "jump1563_0": [
                "token.CAP()",
                "token.CAP()"
            ],
            "jump1563_1": [
                "token.CAP()",
                "token.CAP()"
            ],
            "block1563_0": [
                "token.CAP()"
            ],
            "block1563_1": [
                "token.CAP()"
            ],
            "block2371": [
                "token.proxyPayment.value(this.balance - bounty)(address(this))"
            ],
            "jump2859": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump1563": [
                "token.CAP()",
                "token.CAP()"
            ]
        }
    }
}