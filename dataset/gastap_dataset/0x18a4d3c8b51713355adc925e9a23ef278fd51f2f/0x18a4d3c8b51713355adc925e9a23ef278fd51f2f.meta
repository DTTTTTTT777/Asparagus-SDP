{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "ERC20()",
            "allocate(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "ERC20()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allocate(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "increaseApproval(address,uint256)": [
                1293,
                317
            ],
            "allocate(address,uint256)": [
                1192,
                295
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "decreaseApproval(address,uint256)": [
                672,
                185
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "LitmusCrowdsale": {
        "function_list": [
            "LitmusCrowdsale()",
            "createTokenContract()",
            "timeElapsed()",
            "goalReached()",
            "icoFunded()",
            "validPurchase()",
            "accruedBonus(uint256,uint256)",
            "buyTokens()",
            "claimRefund()",
            "finalise()",
            "init()",
            "mop()",
            "verifyYourBalance(address)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "LitmusCrowdsale()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "timeElapsed()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "icoFunded()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "accruedBonus(uint256,uint256)": {
                "argument": {
                    "senderWei": "uint256",
                    "_tokens": "uint256"
                },
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "finalise()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "init()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "mop()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "verifyYourBalance(address)": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "weiRaised": "uint256",
                    "rate": "uint256",
                    "goal": "uint256",
                    "cap": "uint256",
                    "startTime": "uint256",
                    "bonusTime": "uint256",
                    "endTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finalise()": [
                695,
                273
            ],
            "verifyYourBalance(address)": [
                565,
                229
            ],
            "mop()": [
                542,
                207
            ],
            "buyTokens()": [
                831,
                361
            ],
            "init()": [
                841,
                383
            ],
            "claimRefund()": [
                765,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump2288": [
                "issuer.transfer(this.balance)",
                "issuer.transfer(this.balance)"
            ],
            "jump1784": [
                "issuer.transfer(this.balance)",
                "issuer.transfer(this.balance)"
            ],
            "block1280_0": [
                "token.allocate(backer, tokens)"
            ],
            "block3091": [
                "token.allocate(issuer, 5750000)"
            ],
            "block1784": [
                "issuer.transfer(this.balance)"
            ],
            "jump1280_1": [
                "token.allocate(backer, tokens)",
                "token.allocate(backer, tokens)"
            ],
            "jump1280": [
                "token.allocate(backer, tokens)",
                "token.allocate(backer, tokens)"
            ],
            "block1280": [
                "token.allocate(backer, tokens)"
            ],
            "block2105": [
                "token.balanceOf(_YourWallet)"
            ],
            "block1280_1": [
                "token.allocate(backer, tokens)"
            ],
            "jump1280_0": [
                "token.allocate(backer, tokens)",
                "token.allocate(backer, tokens)"
            ],
            "jump2560": [
                "investor.transfer(invested)",
                "investor.transfer(invested)"
            ],
            "jump3091": [
                "token.allocate(issuer, 5750000)",
                "token.allocate(issuer, 5750000)"
            ],
            "block2288": [
                "issuer.transfer(this.balance)"
            ],
            "jump2105": [
                "token.balanceOf(_YourWallet)",
                "token.balanceOf(_YourWallet)"
            ],
            "block2560": [
                "investor.transfer(invested)"
            ]
        }
    }
}