{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ReentrancyGuard": {
        "function_list": [
            "slitherConstructorVariables()"
        ],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                354,
                141
            ],
            "allowance(address,address)": [
                518,
                185
            ],
            "transferFrom(address,address,uint256)": [
                245,
                119
            ],
            "transfer(address,uint256)": [
                441,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Mineable": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "resolve_block_hash(uint256)",
            "current_external_block()",
            "external_to_internal_block_number(uint256)",
            "get_internal_block_number()",
            "getContractState()",
            "getBlockData(uint256)",
            "getMiningAttempt(uint256,address)",
            "checkMiningActive()",
            "burn(uint256)",
            "mine()",
            "calculate_difficulty_attempt(uint256,uint256,uint256)",
            "calculate_range_attempt(uint256,uint256)",
            "calculate_proportional_reward(uint256,uint256,uint256)",
            "calculate_base_mining_reward(uint256)",
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)",
            "adjust_difficulty()",
            "calculate_reward(uint256,address,uint256)",
            "claim(uint256,address)",
            "isBlockRedeemed(uint256)",
            "targetBlockNumber(uint256)",
            "checkBlockMature(uint256,uint256)",
            "checkRedemptionWindow(uint256,uint256)",
            "checkMiningAttempt(uint256,address)",
            "checkWinning(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "resolve_block_hash(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "current_external_block()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "external_to_internal_block_number(uint256)": {
                "argument": {
                    "_externalBlockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "get_internal_block_number()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "getContractState()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "getBlockData(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "getMiningAttempt(uint256,address)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "checkMiningActive()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "mine()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_difficulty_attempt(uint256,uint256,uint256)": {
                "argument": {
                    "targetDifficultyWei": "uint256",
                    "totalMiningWei": "uint256",
                    "value": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_range_attempt(uint256,uint256)": {
                "argument": {
                    "difficulty": "uint256",
                    "offset": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_proportional_reward(uint256,uint256,uint256)": {
                "argument": {
                    "_baseReward": "uint256",
                    "_userContributionWei": "uint256",
                    "_totalCommittedWei": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_base_mining_reward(uint256)": {
                "argument": {
                    "_totalBlocksMined": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_totalWeiCommitted": "uint256",
                    "_totalWeiExpected": "uint256",
                    "_minimumDifficultyThresholdWei": "uint256",
                    "_difficultyScaleMultiplierLimit": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "adjust_difficulty()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "calculate_reward(uint256,address,uint256)": {
                "argument": {
                    "_totalBlocksMined": "uint256",
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "claim(uint256,address)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "isBlockRedeemed(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "targetBlockNumber(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "checkBlockMature(uint256,uint256)": {
                "argument": {
                    "_blockNum": "uint256",
                    "_externalblock": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "checkRedemptionWindow(uint256,uint256)": {
                "argument": {
                    "_blockNum": "uint256",
                    "_externalblock": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "checkMiningAttempt(uint256,address)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "checkWinning(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "divisible_units": "uint256",
                    "decimals": "uint256",
                    "initial_reward": "uint256",
                    "maximumSupply": "uint256",
                    "currentDifficultyWei": "uint256",
                    "minimumDifficultyThresholdWei": "uint256",
                    "blockCreationRate": "uint256",
                    "difficultyAdjustmentPeriod": "uint256",
                    "lastDifficultyAdjustmentEthereumBlock": "uint256",
                    "difficultyScaleMultiplierLimit": "uint256",
                    "totalBlocksMined": "uint256",
                    "rewardAdjustmentPeriod": "uint256",
                    "totalWeiCommitted": "uint256",
                    "totalWeiExpected": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "current_external_block()": [
                554,
                75
            ],
            "claim(uint256,address)": [
                3510,
                955
            ],
            "checkWinning(uint256)": [
                3441,
                933
            ],
            "balanceOf(address)": [
                1906,
                515
            ],
            "getMiningAttempt(uint256,address)": [
                2636,
                691
            ],
            "allowance(address,address)": [
                3322,
                911
            ],
            "transferFrom(address,address,uint256)": [
                1120,
                273
            ],
            "resolve_block_hash(uint256)": [
                1726,
                471
            ],
            "approve(address,uint256)": [
                640,
                119
            ],
            "external_to_internal_block_number(uint256)": [
                3723,
                1021
            ],
            "calculate_difficulty_attempt(uint256,uint256,uint256)": [
                2517,
                647
            ],
            "targetBlockNumber(uint256)": [
                1446,
                361
            ],
            "isBlockRedeemed(uint256)": [
                3654,
                999
            ],
            "checkRedemptionWindow(uint256,uint256)": [
                3157,
                845
            ],
            "mine()": [
                2602,
                669
            ],
            "get_internal_block_number()": [
                3279,
                889
            ],
            "checkMiningActive()": [
                1679,
                449
            ],
            "getBlockData(uint256)": [
                868,
                207
            ],
            "checkBlockMature(uint256,uint256)": [
                1367,
                339
            ],
            "getContractState()": [
                2246,
                581
            ],
            "checkMiningAttempt(uint256,address)": [
                2416,
                625
            ],
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)": [
                1229,
                295
            ],
            "calculate_range_attempt(uint256,uint256)": [
                1554,
                405
            ],
            "calculate_base_mining_reward(uint256)": [
                760,
                163
            ],
            "calculate_reward(uint256,address,uint256)": [
                1799,
                493
            ],
            "calculate_proportional_reward(uint256,uint256,uint256)": [
                3072,
                823
            ],
            "transfer(address,uint256)": [
                2909,
                757
            ]
        },
        "block_CALL_mapping": {
            "jump11193": [
                "burnAddress.send(value)",
                "burnAddress.send(value)"
            ],
            "block11193": [
                "burnAddress.send(value)"
            ]
        }
    },
    "Bitcoineum": {
        "function_list": [
            "transmute(address,uint256)",
            "resolve_block_hash(uint256)",
            "current_external_block()",
            "external_to_internal_block_number(uint256)",
            "get_internal_block_number()",
            "getContractState()",
            "getBlockData(uint256)",
            "getMiningAttempt(uint256,address)",
            "checkMiningActive()",
            "burn(uint256)",
            "mine()",
            "calculate_difficulty_attempt(uint256,uint256,uint256)",
            "calculate_range_attempt(uint256,uint256)",
            "calculate_proportional_reward(uint256,uint256,uint256)",
            "calculate_base_mining_reward(uint256)",
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)",
            "adjust_difficulty()",
            "calculate_reward(uint256,address,uint256)",
            "claim(uint256,address)",
            "isBlockRedeemed(uint256)",
            "targetBlockNumber(uint256)",
            "checkBlockMature(uint256,uint256)",
            "checkRedemptionWindow(uint256,uint256)",
            "checkMiningAttempt(uint256,address)",
            "checkWinning(uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Bitcoineum()",
            "transmute(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transmute(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "resolve_block_hash(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "current_external_block()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "external_to_internal_block_number(uint256)": {
                "argument": {
                    "_externalBlockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "get_internal_block_number()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "getContractState()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "getBlockData(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "getMiningAttempt(uint256,address)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "checkMiningActive()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "mine()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_difficulty_attempt(uint256,uint256,uint256)": {
                "argument": {
                    "targetDifficultyWei": "uint256",
                    "totalMiningWei": "uint256",
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_range_attempt(uint256,uint256)": {
                "argument": {
                    "difficulty": "uint256",
                    "offset": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_proportional_reward(uint256,uint256,uint256)": {
                "argument": {
                    "_baseReward": "uint256",
                    "_userContributionWei": "uint256",
                    "_totalCommittedWei": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_base_mining_reward(uint256)": {
                "argument": {
                    "_totalBlocksMined": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_totalWeiCommitted": "uint256",
                    "_totalWeiExpected": "uint256",
                    "_minimumDifficultyThresholdWei": "uint256",
                    "_difficultyScaleMultiplierLimit": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "adjust_difficulty()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "calculate_reward(uint256,address,uint256)": {
                "argument": {
                    "_totalBlocksMined": "uint256",
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "claim(uint256,address)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "isBlockRedeemed(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "targetBlockNumber(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "checkBlockMature(uint256,uint256)": {
                "argument": {
                    "_blockNum": "uint256",
                    "_externalblock": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "checkRedemptionWindow(uint256,uint256)": {
                "argument": {
                    "_blockNum": "uint256",
                    "_externalblock": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "checkMiningAttempt(uint256,address)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "checkWinning(uint256)": {
                "argument": {
                    "_blockNum": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "Bitcoineum()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "INITIAL_SUPPLY": "uint256",
                    "MAX_SUPPLY": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "current_external_block()": [
                609,
                75
            ],
            "claim(uint256,address)": [
                3939,
                1043
            ],
            "checkMiningAttempt(uint256,address)": [
                2701,
                691
            ],
            "checkWinning(uint256)": [
                3870,
                1021
            ],
            "getMiningAttempt(uint256,address)": [
                3065,
                779
            ],
            "allowance(address,address)": [
                3751,
                999
            ],
            "transferFrom(address,address,uint256)": [
                1319,
                295
            ],
            "resolve_block_hash(uint256)": [
                2011,
                537
            ],
            "approve(address,uint256)": [
                839,
                141
            ],
            "external_to_internal_block_number(uint256)": [
                4260,
                1131
            ],
            "calculate_difficulty_attempt(uint256,uint256,uint256)": [
                2802,
                713
            ],
            "targetBlockNumber(uint256)": [
                1731,
                427
            ],
            "isBlockRedeemed(uint256)": [
                4191,
                1109
            ],
            "checkRedemptionWindow(uint256,uint256)": [
                3586,
                933
            ],
            "mine()": [
                3031,
                757
            ],
            "get_internal_block_number()": [
                3708,
                977
            ],
            "checkMiningActive()": [
                1964,
                515
            ],
            "getBlockData(uint256)": [
                1067,
                229
            ],
            "checkBlockMature(uint256,uint256)": [
                1652,
                405
            ],
            "getContractState()": [
                2531,
                647
            ],
            "balanceOf(address)": [
                2191,
                581
            ],
            "calculate_next_expected_wei(uint256,uint256,uint256,uint256)": [
                1428,
                317
            ],
            "calculate_range_attempt(uint256,uint256)": [
                1839,
                471
            ],
            "transmute(address,uint256)": [
                4083,
                1087
            ],
            "calculate_base_mining_reward(uint256)": [
                959,
                185
            ],
            "calculate_reward(uint256,address,uint256)": [
                2084,
                559
            ],
            "calculate_proportional_reward(uint256,uint256,uint256)": [
                3501,
                911
            ],
            "transfer(address,uint256)": [
                3338,
                845
            ]
        },
        "block_CALL_mapping": {
            "block12048": [
                "target.transmuted(value)"
            ],
            "jump12652": [
                "burnAddress.send(value)",
                "burnAddress.send(value)"
            ],
            "jump12048": [
                "target.transmuted(value)",
                "target.transmuted(value)"
            ],
            "block12652": [
                "burnAddress.send(value)"
            ]
        }
    }
}