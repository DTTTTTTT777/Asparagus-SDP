{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Killable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "kill()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "kill()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                202,
                119
            ],
            "kill()": [
                92,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "ZiberToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "mint(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "ZiberToken()",
            "fallback()",
            "mint(address,uint256)",
            "setCrowdsaleAgent(address)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "ZiberToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "setCrowdsaleAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "FROZEN_TOKENS": "uint256",
                    "FREEZE_PERIOD": "uint256",
                    "crowdSaleOverTimestamp": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "releaseTokenTransfer()": [
                1049,
                295
            ],
            "mint(address,uint256)": [
                929,
                251
            ],
            "balanceOf(address)": [
                1072,
                317
            ],
            "setCrowdsaleAgent(address)": [
                862,
                229
            ],
            "transferFrom(address,address,uint256)": [
                686,
                185
            ],
            "transferOwnership(address)": [
                1700,
                471
            ],
            "allowance(address,address)": [
                1581,
                449
            ],
            "transfer(address,uint256)": [
                1480,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "ZiberCrowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "kill()",
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()",
            "Crowdsale(address,uint256)",
            "fallback()",
            "investInternal(address)",
            "invest(address)",
            "buy()",
            "finalize()",
            "withdraw()",
            "finalizeCrowdsale()",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isCrowdsaleFull()",
            "getState()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "Crowdsale(address,uint256)": {
                "argument": {
                    "_start": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "investInternal(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TOTAL_ICO_TOKENS": "uint256",
                    "MIN_ICO_GOAL": "uint256",
                    "MAX_ICO_GOAL": "uint256",
                    "maxGoalReachedAt": "uint256",
                    "ICO_DURATION": "uint256",
                    "AFTER_MAX_GOAL_DURATION": "uint256",
                    "startsAt": "uint256",
                    "weiRaised": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "investments": "ZiberCrowdsale.Investment[]"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                878,
                295
            ],
            "buy()": [
                1241,
                471
            ],
            "isMinimumGoalReached()": [
                1010,
                383
            ],
            "invest(address)": [
                405,
                75
            ],
            "transferOwnership(address)": [
                1630,
                691
            ],
            "Crowdsale(address,uint256)": [
                459,
                97
            ],
            "withdraw()": [
                680,
                163
            ],
            "isCrowdsaleFull()": [
                1540,
                647
            ],
            "loadRefund()": [
                1057,
                405
            ],
            "finalize()": [
                812,
                251
            ],
            "kill()": [
                746,
                207
            ],
            "halt()": [
                944,
                339
            ],
            "getState()": [
                536,
                119
            ],
            "unhalt()": [
                1517,
                625
            ]
        },
        "block_CALL_mapping": {
            "block6048": [
                "token.mint(receiver, tokenAmount)"
            ],
            "block5662": [
                "token.releaseTokenTransfer()"
            ],
            "jump5662": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "jump6048": [
                "token.mint(receiver, tokenAmount)",
                "token.mint(receiver, tokenAmount)"
            ],
            "block5102": [
                "token.decimals()"
            ],
            "jump5102": [
                "token.decimals()",
                "token.decimals()"
            ],
            "jump6048_0": [
                "token.mint(receiver, tokenAmount)",
                "token.mint(receiver, tokenAmount)"
            ],
            "jump3226": [
                "msg.sender.transfer(weiValue)",
                "msg.sender.transfer(weiValue)"
            ],
            "block3226": [
                "msg.sender.transfer(weiValue)"
            ],
            "block6048_0": [
                "token.mint(receiver, tokenAmount)"
            ],
            "jump2476": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block2476": [
                "owner.transfer(this.balance)"
            ]
        }
    }
}