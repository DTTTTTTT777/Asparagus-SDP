{
    "strings": {
        "function_list": [
            "memcpy(uint256,uint256,uint256)",
            "toSlice(string)",
            "len(bytes32)",
            "toSliceB32(bytes32)",
            "copy(strings.slice)",
            "toString(strings.slice)",
            "len(strings.slice)",
            "empty(strings.slice)",
            "compare(strings.slice,strings.slice)",
            "equals(strings.slice,strings.slice)",
            "nextRune(strings.slice,strings.slice)",
            "nextRune(strings.slice)",
            "ord(strings.slice)",
            "keccak(strings.slice)",
            "startsWith(strings.slice,strings.slice)",
            "beyond(strings.slice,strings.slice)",
            "endsWith(strings.slice,strings.slice)",
            "until(strings.slice,strings.slice)",
            "findPtr(uint256,uint256,uint256,uint256)",
            "rfindPtr(uint256,uint256,uint256,uint256)",
            "find(strings.slice,strings.slice)",
            "rfind(strings.slice,strings.slice)",
            "split(strings.slice,strings.slice,strings.slice)",
            "split(strings.slice,strings.slice)",
            "rsplit(strings.slice,strings.slice,strings.slice)",
            "rsplit(strings.slice,strings.slice)",
            "count(strings.slice,strings.slice)",
            "contains(strings.slice,strings.slice)",
            "concat(strings.slice,strings.slice)",
            "join(strings.slice,strings.slice[])"
        ],
        "initial_state": {
            "memcpy(uint256,uint256,uint256)": {
                "argument": {
                    "dest": "uint256",
                    "src": "uint256",
                    "len": "uint256"
                },
                "contract": {}
            },
            "toSlice(string)": {
                "argument": {
                    "self": "string"
                },
                "contract": {}
            },
            "len(bytes32)": {
                "argument": {
                    "self": "bytes32"
                },
                "contract": {}
            },
            "toSliceB32(bytes32)": {
                "argument": {
                    "self": "bytes32"
                },
                "contract": {}
            },
            "copy(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "toString(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "len(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "empty(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "compare(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "equals(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "nextRune(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "rune": "strings.slice"
                },
                "contract": {}
            },
            "nextRune(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "ord(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "keccak(strings.slice)": {
                "argument": {
                    "self": "strings.slice"
                },
                "contract": {}
            },
            "startsWith(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "beyond(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "endsWith(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "until(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "findPtr(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "selflen": "uint256",
                    "selfptr": "uint256",
                    "needlelen": "uint256",
                    "needleptr": "uint256"
                },
                "contract": {}
            },
            "rfindPtr(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "selflen": "uint256",
                    "selfptr": "uint256",
                    "needlelen": "uint256",
                    "needleptr": "uint256"
                },
                "contract": {}
            },
            "find(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "rfind(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "split(strings.slice,strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice",
                    "token": "strings.slice"
                },
                "contract": {}
            },
            "split(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "rsplit(strings.slice,strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice",
                    "token": "strings.slice"
                },
                "contract": {}
            },
            "rsplit(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "count(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "contains(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "needle": "strings.slice"
                },
                "contract": {}
            },
            "concat(strings.slice,strings.slice)": {
                "argument": {
                    "self": "strings.slice",
                    "other": "strings.slice"
                },
                "contract": {}
            },
            "join(strings.slice,strings.slice[])": {
                "argument": {
                    "self": "strings.slice",
                    "parts": "strings.slice[]"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "cens": {
        "function_list": [
            "cens()",
            "enableRegistration()",
            "read(string)",
            "getNameOwner(string)",
            "getAmountRegistered()",
            "deleteContract()",
            "send(string)",
            "changeAddress(string,address)",
            "transferOwnership(string,address)",
            "register(string,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "cens()": {
                "argument": {},
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "enableRegistration()": {
                "argument": {},
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "read(string)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "getNameOwner(string)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "getAmountRegistered()": {
                "argument": {},
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "deleteContract()": {
                "argument": {},
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "send(string)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "changeAddress(string,address)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "transferOwnership(string,address)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            },
            "register(string,address)": {
                "argument": {
                    "name": "string"
                },
                "contract": {
                    "numEntries": "uint256",
                    "maxEntries": "uint256",
                    "compare": "string"
                }
            }
        },
        "function_block_mapping": {
            "read(string)": [
                487,
                141
            ],
            "transferOwnership(string,address)": [
                928,
                229
            ],
            "getAmountRegistered()": [
                885,
                207
            ],
            "deleteContract()": [
                464,
                119
            ],
            "getNameOwner(string)": [
                295,
                97
            ],
            "register(string,address)": [
                158,
                75
            ],
            "changeAddress(string,address)": [
                748,
                185
            ],
            "enableRegistration()": [
                1065,
                251
            ],
            "send(string)": [
                656,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump3466": [
                "msg.sender.send(msg.value)",
                "msg.sender.send(msg.value)"
            ],
            "block2867": [
                "e.directTo.send(msg.value)"
            ],
            "block3466": [
                "msg.sender.send(msg.value)"
            ],
            "jump2867": [
                "e.directTo.send(msg.value)",
                "e.directTo.send(msg.value)"
            ]
        }
    }
}