{
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(MiniMeToken.Checkpoint[],uint256)",
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "MiniMeToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "getValueAt(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(MiniMeToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "MiniMeToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "balances": "mapping(address => MiniMeToken.Checkpoint[])",
                    "totalSupplyHistory": "MiniMeToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                10086,
                26
            ],
            "claimTokens(address)": [
                2804,
                537
            ],
            "totalSupply()": [
                931,
                141
            ],
            "allowance(address,address)": [
                2685,
                515
            ],
            "transferFrom(address,address,uint256)": [
                974,
                163
            ],
            "approve(address,uint256)": [
                787,
                97
            ],
            "totalSupplyAt(uint256)": [
                10086,
                26
            ],
            "enableTransfers(bool)": [
                2958,
                581
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                1464,
                273
            ],
            "changeController(address)": [
                6193,
                889
            ],
            "balanceOf(address)": [
                8600,
                847
            ],
            "generateTokens(address,uint256)": [
                1912,
                339
            ],
            "approveAndCall(address,uint256,bytes)": [
                2413,
                471
            ],
            "destroyTokens(address,uint256)": [
                2584,
                493
            ],
            "transfer(address,uint256)": [
                8857,
                996
            ]
        },
        "block_CALL_mapping": {
            "jump5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )",
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8857": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block5977": [
                "tokenFactory.createCloneToken(\n            this,\n            _snapshotBlock,\n            _cloneTokenName,\n            _cloneDecimalUnits,\n            _cloneTokenSymbol,\n            _transfersEnabled\n            )"
            ],
            "block5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump9708_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block5206": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8857": [
                "token.transfer(controller, balance)"
            ],
            "jump3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump5206_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump5206_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9708": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block3784_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block3784": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block6193": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7175_1": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block7175_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7175_2": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump7689": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n            msg.sender,\n            _amount,\n            this,\n            _extraData\n        )"
            ],
            "block8600": [
                "token.balanceOf(this)"
            ],
            "jump8311": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "jump8600": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block8311": [
                "controller.transfer(this.balance)"
            ],
            "block7175": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6193": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ],
            "jump570_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump570": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ]
        }
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "proposeOwnership(address)",
            "acceptOwnership()",
            "changeOwnership(address)",
            "removeOwnership(uint256)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "proposeOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "changeOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "removeOwnership(uint256)": {
                "argument": {
                    "_dac": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "proposeOwnership(address)": [
                192,
                97
            ],
            "removeOwnership(uint256)": [
                456,
                185
            ],
            "changeOwnership(address)": [
                125,
                75
            ],
            "acceptOwnership()": [
                259,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Escapable": {
        "function_list": [
            "Owned()",
            "proposeOwnership(address)",
            "acceptOwnership()",
            "changeOwnership(address)",
            "removeOwnership(uint256)",
            "Escapable(address,address)",
            "blacklistEscapeToken(address)",
            "isTokenEscapable(address)",
            "escapeHatch(address)",
            "changeHatchEscapeCaller(address)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "proposeOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "changeOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "removeOwnership(uint256)": {
                "argument": {
                    "_dac": "uint256"
                },
                "contract": {}
            },
            "Escapable(address,address)": {
                "argument": {},
                "contract": {}
            },
            "blacklistEscapeToken(address)": {
                "argument": {},
                "contract": {}
            },
            "isTokenEscapable(address)": {
                "argument": {},
                "contract": {}
            },
            "escapeHatch(address)": {
                "argument": {},
                "contract": {}
            },
            "changeHatchEscapeCaller(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "proposeOwnership(address)": [
                334,
                119
            ],
            "removeOwnership(uint256)": [
                756,
                251
            ],
            "changeHatchEscapeCaller(address)": [
                801,
                273
            ],
            "changeOwnership(address)": [
                267,
                97
            ],
            "escapeHatch(address)": [
                602,
                207
            ],
            "isTokenEscapable(address)": [
                424,
                163
            ],
            "acceptOwnership()": [
                401,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump2553": [
                "escapeHatchDestination.transfer(balance)",
                "escapeHatchDestination.transfer(balance)"
            ],
            "block2953": [
                "token.balanceOf(this)"
            ],
            "block2553": [
                "escapeHatchDestination.transfer(balance)"
            ],
            "jump2953": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump3211": [
                "token.transfer(escapeHatchDestination, balance)",
                "token.transfer(escapeHatchDestination, balance)"
            ],
            "block3211": [
                "token.transfer(escapeHatchDestination, balance)"
            ]
        }
    },
    "GivethCampaign": {
        "function_list": [
            "Escapable(address,address)",
            "blacklistEscapeToken(address)",
            "isTokenEscapable(address)",
            "escapeHatch(address)",
            "changeHatchEscapeCaller(address)",
            "Owned()",
            "proposeOwnership(address)",
            "acceptOwnership()",
            "changeOwnership(address)",
            "removeOwnership(uint256)",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "GivethCampaign(address,address,uint256,uint256,uint256,address,address)",
            "fallback()",
            "proxyPayment(address)",
            "onTransfer(address,address,uint256)",
            "onApprove(address,address,uint256)",
            "doPayment(address)",
            "finalizeFunding()",
            "setVault(address)"
        ],
        "initial_state": {
            "Escapable(address,address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "blacklistEscapeToken(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "isTokenEscapable(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "escapeHatch(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "changeHatchEscapeCaller(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "proposeOwnership(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "changeOwnership(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "removeOwnership(uint256)": {
                "argument": {
                    "_dac": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "onTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "onApprove(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "GivethCampaign(address,address,uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startFundingTime": "uint256",
                    "_endFundingTime": "uint256",
                    "_maximumFunding": "uint256"
                },
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "doPayment(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "finalizeFunding()": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            },
            "setVault(address)": {
                "argument": {},
                "contract": {
                    "startFundingTime": "uint256",
                    "endFundingTime": "uint256",
                    "maximumFunding": "uint256",
                    "totalCollected": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proposeOwnership(address)": [
                835,
                207
            ],
            "proxyPayment(address)": [
                1697,
                515
            ],
            "setVault(address)": [
                768,
                185
            ],
            "onApprove(address,address,uint256)": [
                1478,
                449
            ],
            "removeOwnership(uint256)": [
                1366,
                405
            ],
            "changeHatchEscapeCaller(address)": [
                1411,
                427
            ],
            "onTransfer(address,address,uint256)": [
                548,
                141
            ],
            "changeOwnership(address)": [
                394,
                97
            ],
            "isTokenEscapable(address)": [
                925,
                251
            ],
            "escapeHatch(address)": [
                1146,
                317
            ],
            "finalizeFunding()": [
                1213,
                339
            ],
            "acceptOwnership()": [
                902,
                229
            ]
        },
        "block_CALL_mapping": {
            "block4799": [
                "token.balanceOf(this)"
            ],
            "jump5415": [
                "tokenContract.changeController(0)",
                "tokenContract.changeController(0)"
            ],
            "jump2032_0": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "block2163_0": [
                "vaultAddress.send(msg.value)"
            ],
            "jump2032": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump2163": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "block2163_1": [
                "vaultAddress.send(msg.value)"
            ],
            "block4399": [
                "escapeHatchDestination.transfer(balance)"
            ],
            "jump2163_1": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "jump2163_0": [
                "vaultAddress.send(msg.value)",
                "vaultAddress.send(msg.value)"
            ],
            "block2163": [
                "vaultAddress.send(msg.value)"
            ],
            "jump5057": [
                "token.transfer(escapeHatchDestination, balance)",
                "token.transfer(escapeHatchDestination, balance)"
            ],
            "jump2474_0": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump2474_1": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block2474_0": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block2474_1": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block5415": [
                "tokenContract.changeController(0)"
            ],
            "jump2474": [
                "tokenContract.generateTokens(_owner, msg.value)",
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "block2474": [
                "tokenContract.generateTokens(_owner, msg.value)"
            ],
            "jump2032_1": [
                "tokenContract.controller()",
                "tokenContract.controller()"
            ],
            "jump4399": [
                "escapeHatchDestination.transfer(balance)",
                "escapeHatchDestination.transfer(balance)"
            ],
            "block2032_0": [
                "tokenContract.controller()"
            ],
            "block2032_1": [
                "tokenContract.controller()"
            ],
            "jump4799": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block2032": [
                "tokenContract.controller()"
            ],
            "block5057": [
                "token.transfer(escapeHatchDestination, balance)"
            ]
        }
    },
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    }
}