{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "confirmOwner()": [
                257,
                119
            ],
            "changeOwner(address)": [
                190,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Blocked": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "PayloadSize": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                276,
                141
            ],
            "balanceOf(address)": [
                146,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                644,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                543,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "BurnableToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "balanceOf(address)": [
                469,
                163
            ],
            "burn(uint256)": [
                424,
                141
            ],
            "allowance(address,address)": [
                700,
                229
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                599,
                207
            ]
        },
        "block_CALL_mapping": {}
    },
    "PreNTFToken": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "burn(uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PreNTFToken(uint256,uint256)",
            "manualTransfer(address,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "PreNTFToken(uint256,uint256)": {
                "argument": {
                    "initialSupply": "uint256",
                    "unblockTime": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "manualTransfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                379,
                97
            ],
            "confirmOwner()": [
                1386,
                361
            ],
            "transfer(address,uint256)": [
                1285,
                339
            ],
            "burn(uint256)": [
                711,
                185
            ],
            "balanceOf(address)": [
                857,
                229
            ],
            "transferFrom(address,address,uint256)": [
                523,
                141
            ],
            "allowance(address,address)": [
                1496,
                405
            ],
            "manualTransfer(address,uint256)": [
                756,
                207
            ],
            "changeOwner(address)": [
                1175,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "confirmOwner()",
            "Crowdsale()",
            "isFinished()",
            "fallback()",
            "manualTransferTokensTo(address,uint256,uint256,uint256)",
            "addCurrency(uint256)",
            "transferTokensTo(address,uint256)",
            "finishCrowdsale()",
            "takeBountyTokens()",
            "giveTokensTo(address,uint256)",
            "getAmountByCurrency(uint256)",
            "withdraw()",
            "setAmountForDeal(uint256)",
            "withdrawAmount(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "confirmOwner()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "isFinished()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "manualTransferTokensTo(address,uint256,uint256,uint256)": {
                "argument": {
                    "givenTokens": "uint256",
                    "currency": "uint256",
                    "amount": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "addCurrency(uint256)": {
                "argument": {
                    "currency": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "transferTokensTo(address,uint256)": {
                "argument": {
                    "givenTokens": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "takeBountyTokens()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "giveTokensTo(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "getAmountByCurrency(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "setAmountForDeal(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "withdrawAmount(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "preICOstartTime": "uint256",
                    "preICOendTime": "uint256",
                    "blockUntil": "uint256",
                    "maxTokenAmount": "uint256",
                    "bountyTokenAmount": "uint256",
                    "givenBountyTokens": "uint256",
                    "leftTokens": "uint256",
                    "totalAmount": "uint256",
                    "transactionCounter": "uint256",
                    "tokenPrice": "uint256",
                    "minAmountForDeal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                1735,
                515
            ],
            "manualTransferTokensTo(address,uint256,uint256,uint256)": [
                1826,
                581
            ],
            "withdrawAmount(uint256)": [
                756,
                97
            ],
            "confirmOwner()": [
                1758,
                537
            ],
            "getAmountByCurrency(uint256)": [
                2160,
                669
            ],
            "changeOwner(address)": [
                1625,
                471
            ],
            "giveTokensTo(address,uint256)": [
                801,
                119
            ],
            "setAmountForDeal(uint256)": [
                1078,
                229
            ],
            "withdraw()": [
                1210,
                273
            ],
            "takeBountyTokens()": [
                988,
                185
            ],
            "addCurrency(uint256)": [
                1781,
                559
            ],
            "isFinished()": [
                1362,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump2576": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump3683": [
                "token.manualTransfer(msg.sender, allowance)",
                "token.manualTransfer(msg.sender, allowance)"
            ],
            "block3683": [
                "token.manualTransfer(msg.sender, allowance)"
            ],
            "block581": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "jump4549": [
                "token.burn(leftTokens)",
                "token.burn(leftTokens)"
            ],
            "jump581_0": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()",
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "jump2576_1": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump2576_0": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "block2889": [
                "msg.sender.call.gas(3000000).value(givenAmount)()"
            ],
            "block581_0": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "block3983": [
                "msg.sender.call.gas(3000000).value(this.balance)()"
            ],
            "block2576": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump3983": [
                "msg.sender.call.gas(3000000).value(this.balance)()",
                "msg.sender.call.gas(3000000).value(this.balance)()"
            ],
            "jump2889": [
                "msg.sender.call.gas(3000000).value(givenAmount)()",
                "msg.sender.call.gas(3000000).value(givenAmount)()"
            ],
            "block2576_1": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "block2576_0": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "block4549": [
                "token.burn(leftTokens)"
            ],
            "jump581": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()",
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ]
        }
    }
}