{
    "Spineth": {
        "function_list": [
            "Spineth()",
            "changeAuthority(address)",
            "changeBetLimits(uint256,uint256)",
            "arrayAdd(uint256[],uint256)",
            "arrayRemove(uint256[],uint256)",
            "getNextGameId(address)",
            "createWheelBetHash(uint256,uint256,uint256)",
            "createGame(uint256,uint256)",
            "cancelGame(uint256)",
            "joinGame(uint256,uint256)",
            "expireGame(uint256)",
            "revealBet(uint256,uint256)",
            "getWheelDistance(uint256,uint256)",
            "calculateEarnings(uint256)",
            "withdrawEarnings(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Spineth()": {
                "argument": {},
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "changeAuthority(address)": {
                "argument": {},
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "changeBetLimits(uint256,uint256)": {
                "argument": {
                    "minBet": "uint256",
                    "maxBet": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "arrayAdd(uint256[],uint256)": {
                "argument": {
                    "array": "uint256[]",
                    "element": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "arrayRemove(uint256[],uint256)": {
                "argument": {
                    "array": "uint256[]",
                    "element": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "getNextGameId(address)": {
                "argument": {},
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "createWheelBetHash(uint256,uint256,uint256)": {
                "argument": {
                    "gameId": "uint256",
                    "wheelBet": "uint256",
                    "playerSecret": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "createGame(uint256,uint256)": {
                "argument": {
                    "gameId": "uint256",
                    "wheelPositionHash": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "cancelGame(uint256)": {
                "argument": {
                    "gameId": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "joinGame(uint256,uint256)": {
                "argument": {
                    "gameId": "uint256",
                    "wheelBet": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "expireGame(uint256)": {
                "argument": {
                    "gameId": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "revealBet(uint256,uint256)": {
                "argument": {
                    "gameId": "uint256",
                    "playerSecret": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "getWheelDistance(uint256,uint256)": {
                "argument": {
                    "value1": "uint256",
                    "value2": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "calculateEarnings(uint256)": {
                "argument": {
                    "gameId": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "withdrawEarnings(uint256)": {
                "argument": {
                    "gameId": "uint256"
                },
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WHEEL_SIZE": "uint256",
                    "WIN_PERCENT_PER_DISTANCE": "uint256",
                    "FEE_PERCENT": "uint256",
                    "minBetWei": "uint256",
                    "maxBetWei": "uint256",
                    "maxRevealSeconds": "uint256",
                    "openGames": "uint256[]",
                    "playerActiveGames": "mapping(address => uint256[])",
                    "playerCompleteGames": "mapping(address => uint256[])"
                }
            }
        },
        "function_block_mapping": {
            "joinGame(uint256,uint256)": [
                1328,
                405
            ],
            "getNextGameId(address)": [
                869,
                229
            ],
            "calculateEarnings(uint256)": [
                454,
                141
            ],
            "cancelGame(uint256)": [
                1043,
                295
            ],
            "withdrawEarnings(uint256)": [
                1088,
                317
            ],
            "createGame(uint256,uint256)": [
                956,
                251
            ],
            "changeAuthority(address)": [
                301,
                75
            ],
            "revealBet(uint256,uint256)": [
                1273,
                383
            ],
            "expireGame(uint256)": [
                998,
                273
            ],
            "changeBetLimits(uint256,uint256)": [
                814,
                207
            ],
            "createWheelBetHash(uint256,uint256,uint256)": [
                1597,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump5053": [
                "authority.transfer(feeWei)",
                "authority.transfer(feeWei)"
            ],
            "block4188": [
                "msg.sender.transfer(game.betAmountInWei)"
            ],
            "block5158": [
                "msg.sender.transfer(withdrawAmount)"
            ],
            "jump5158": [
                "msg.sender.transfer(withdrawAmount)",
                "msg.sender.transfer(withdrawAmount)"
            ],
            "block5053": [
                "authority.transfer(feeWei)"
            ],
            "jump4188": [
                "msg.sender.transfer(game.betAmountInWei)",
                "msg.sender.transfer(game.betAmountInWei)"
            ]
        }
    }
}