{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                184,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                294,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                614,
                207
            ],
            "approve(address,uint256)": [
                180,
                75
            ],
            "unpause()": [
                457,
                141
            ],
            "balanceOf(address)": [
                527,
                185
            ],
            "allowance(address,address)": [
                825,
                273
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "transferOwnership(address)": [
                944,
                295
            ],
            "transfer(address,uint256)": [
                724,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "VestedToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferableTokens(address,uint64)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)",
            "revokeTokenGrant(address,uint256)",
            "transferableTokens(address,uint64)",
            "tokenGrantsCount(address)",
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)",
            "tokenGrant(address,uint256)",
            "vestedTokens(VestedToken.TokenGrant,uint64)",
            "nonVestedTokens(VestedToken.TokenGrant,uint64)",
            "lastTokenIsTransferableDate(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "transferableTokens(address,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": {
                "argument": {
                    "_value": "uint256",
                    "_start": "uint64",
                    "_cliff": "uint64",
                    "_vesting": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "revokeTokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "tokenGrantsCount(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "time": "uint256",
                    "start": "uint256",
                    "cliff": "uint256",
                    "vesting": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "tokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "vestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "nonVestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            },
            "lastTokenIsTransferableDate(address)": {
                "argument": {},
                "contract": {
                    "MAX_GRANTS_PER_ADDRESS": "uint256",
                    "grants": "mapping(address => VestedToken.TokenGrant[])"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                300,
                97
            ],
            "tokenGrant(address,uint256)": [
                828,
                185
            ],
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": [
                1280,
                251
            ],
            "tokenGrantsCount(address)": [
                213,
                75
            ],
            "revokeTokenGrant(address,uint256)": [
                1873,
                361
            ],
            "balanceOf(address)": [
                1193,
                229
            ],
            "allowance(address,address)": [
                1649,
                317
            ],
            "transferableTokens(address,uint64)": [
                1542,
                295
            ],
            "lastTokenIsTransferableDate(address)": [
                1086,
                207
            ],
            "transferFrom(address,address,uint256)": [
                444,
                141
            ],
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": [
                1768,
                339
            ],
            "transfer(address,uint256)": [
                1441,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "BurnableToken": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "burn(uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                458,
                163
            ],
            "burn(uint256)": [
                413,
                141
            ],
            "allowance(address,address)": [
                646,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                545,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "PLC": {
        "function_list": [
            "burn(uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)",
            "revokeTokenGrant(address,uint256)",
            "transferableTokens(address,uint64)",
            "tokenGrantsCount(address)",
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)",
            "tokenGrant(address,uint256)",
            "vestedTokens(VestedToken.TokenGrant,uint64)",
            "nonVestedTokens(VestedToken.TokenGrant,uint64)",
            "lastTokenIsTransferableDate(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transferableTokens(address,uint64)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": {
                "argument": {
                    "_value": "uint256",
                    "_start": "uint64",
                    "_cliff": "uint64",
                    "_vesting": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "revokeTokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferableTokens(address,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "tokenGrantsCount(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tokens": "uint256",
                    "time": "uint256",
                    "start": "uint256",
                    "cliff": "uint256",
                    "vesting": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "tokenGrant(address,uint256)": {
                "argument": {
                    "_grantId": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "vestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "nonVestedTokens(VestedToken.TokenGrant,uint64)": {
                "argument": {
                    "time": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "lastTokenIsTransferableDate(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokenGrantsCount(address)": [
                345,
                75
            ],
            "allowance(address,address)": [
                2532,
                559
            ],
            "transferableTokens(address,uint64)": [
                2425,
                537
            ],
            "transferFrom(address,address,uint256)": [
                767,
                185
            ],
            "pause()": [
                1909,
                427
            ],
            "approve(address,uint256)": [
                623,
                141
            ],
            "unpause()": [
                1194,
                251
            ],
            "calculateVestedTokens(uint256,uint256,uint256,uint256,uint256)": [
                2651,
                581
            ],
            "tokenGrant(address,uint256)": [
                1410,
                339
            ],
            "grantVestedTokens(address,uint256,uint64,uint64,uint64,bool,bool)": [
                2163,
                493
            ],
            "revokeTokenGrant(address,uint256)": [
                2756,
                603
            ],
            "finishMinting()": [
                1862,
                405
            ],
            "balanceOf(address)": [
                1775,
                383
            ],
            "transferOwnership(address)": [
                2833,
                625
            ],
            "mint(address,uint256)": [
                1217,
                273
            ],
            "burn(uint256)": [
                1318,
                295
            ],
            "lastTokenIsTransferableDate(address)": [
                1668,
                361
            ],
            "transfer(address,uint256)": [
                2324,
                515
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address,address[])",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "RefundVault(address,address[])": {
                "argument": {
                    "_reserveWallet": "address[]"
                },
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "deposit(address)": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "close()": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            },
            "refund(address)": {
                "argument": {},
                "contract": {
                    "reserveWallet": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                290,
                119
            ],
            "refund(address)": [
                861,
                295
            ],
            "close()": [
                180,
                75
            ],
            "deposit(address)": [
                807,
                273
            ],
            "transferOwnership(address)": [
                740,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump1176": [
                "devMultisig.transfer(devAmount)",
                "devMultisig.transfer(devAmount)"
            ],
            "jump2916": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "jump1503": [
                "reserveWallet[i].transfer(reserveAmountForEach)",
                "reserveWallet[i].transfer(reserveAmountForEach)"
            ],
            "block1176": [
                "devMultisig.transfer(devAmount)"
            ],
            "block1503": [
                "reserveWallet[i].transfer(reserveAmountForEach)"
            ],
            "block2916": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "KYC": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "KYC()",
            "setAdmin(address)",
            "isRegistered(address)",
            "register(address)",
            "registerByList(address[])",
            "unregister(address)",
            "unregisterByList(address[])",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "KYC()": {
                "argument": {},
                "contract": {}
            },
            "setAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "isRegistered(address)": {
                "argument": {},
                "contract": {}
            },
            "register(address)": {
                "argument": {},
                "contract": {}
            },
            "registerByList(address[])": {
                "argument": {
                    "_addrs": "address[]"
                },
                "contract": {}
            },
            "unregister(address)": {
                "argument": {},
                "contract": {}
            },
            "unregisterByList(address[])": {
                "argument": {
                    "_addrs": "address[]"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                666,
                229
            ],
            "isRegistered(address)": [
                867,
                295
            ],
            "unregisterByList(address[])": [
                958,
                317
            ],
            "unregister(address)": [
                202,
                75
            ],
            "unpause()": [
                269,
                97
            ],
            "registerByList(address[])": [
                406,
                163
            ],
            "transferOwnership(address)": [
                1060,
                339
            ],
            "setAdmin(address)": [
                599,
                207
            ],
            "register(address)": [
                292,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "PLCCrowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "PLCCrowdsale(address,address,address,address,address[],uint64[6],uint256,uint256)",
            "fallback()",
            "pushBuyerList(address)",
            "registerPresale(address,uint256,uint256,bool)",
            "unregisterPresale(address)",
            "buyDeferredPresaleTokens(address)",
            "buyPresaleTokens(address)",
            "buyTokens()",
            "getRate()",
            "getBuyerNumber()",
            "forwardFunds(uint256)",
            "validPurchase()",
            "buy(address,uint256,uint256,uint256,bool)",
            "distributeToken(uint256,uint256,bool)",
            "distributeEther(uint256,uint256)",
            "hasEnded()",
            "finalize()",
            "finalization()",
            "finalizeWhenForked()",
            "refundAll(uint256)",
            "claimRefund(address)",
            "maxReached()",
            "minReached()",
            "burnUnpaidTokens()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "PLCCrowdsale(address,address,address,address,address[],uint64[6],uint256,uint256)": {
                "argument": {
                    "_reserveWallet": "address[]",
                    "_timelines": "uint64[6]",
                    "_maxEtherCap": "uint256",
                    "_minEtherCap": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "pushBuyerList(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "registerPresale(address,uint256,uint256,bool)": {
                "argument": {
                    "presaleAmount": "uint256",
                    "_presaleRate": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "unregisterPresale(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "buyDeferredPresaleTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "buyPresaleTokens(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "getRate()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "getBuyerNumber()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "toFund": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "buy(address,uint256,uint256,uint256,bool)": {
                "argument": {
                    "_tokens": "uint256",
                    "_toFund": "uint256",
                    "_toReturn": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "distributeToken(uint256,uint256,bool)": {
                "argument": {
                    "devAmount": "uint256",
                    "reserveAmount": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "distributeEther(uint256,uint256)": {
                "argument": {
                    "devAmount": "uint256",
                    "reserveAmount": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "finalizeWhenForked()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "refundAll(uint256)": {
                "argument": {
                    "numToRefund": "uint256"
                },
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "claimRefund(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "maxReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "minReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "burnUnpaidTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint64",
                    "endTime": "uint64",
                    "deadlines": "uint64[5]",
                    "rates": "uint8[5]",
                    "weiRaised": "uint256",
                    "maxGuaranteedLimit": "uint256",
                    "deferredTotalTokens": "uint256",
                    "maxCallFrequency": "uint256",
                    "maxEtherCap": "uint256",
                    "minEtherCap": "uint256",
                    "buyerList": "address[]",
                    "refundCompleted": "uint256",
                    "reserveWallet": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                2619,
                845
            ],
            "burnUnpaidTokens()": [
                2137,
                647
            ],
            "pause()": [
                1769,
                493
            ],
            "getRate()": [
                1422,
                383
            ],
            "unpause()": [
                972,
                185
            ],
            "minReached()": [
                2160,
                669
            ],
            "finalizeWhenForked()": [
                2114,
                625
            ],
            "getBuyerNumber()": [
                1038,
                229
            ],
            "claimRefund(address)": [
                2292,
                713
            ],
            "maxReached()": [
                1980,
                581
            ],
            "refundAll(uint256)": [
                2574,
                823
            ],
            "buyPresaleTokens(address)": [
                1191,
                295
            ],
            "registerPresale(address,uint256,uint256,bool)": [
                1670,
                471
            ],
            "finalize()": [
                1168,
                273
            ],
            "unregisterPresale(address)": [
                2507,
                801
            ],
            "buyTokens()": [
                2426,
                757
            ],
            "buyDeferredPresaleTokens(address)": [
                1926,
                559
            ],
            "transferOwnership(address)": [
                2666,
                867
            ]
        },
        "block_CALL_mapping": {
            "jump14425": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump12248": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump13731": [
                "reserveWallet[i].transfer(eachReserveAmount)",
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "jump7271": [
                "token.mint(address(this), totalAmount)",
                "token.mint(address(this), totalAmount)"
            ],
            "block10857": [
                "vault.refund(buyerList[i])"
            ],
            "block9131": [
                "vault.refund(investor)"
            ],
            "block8594": [
                "token.balanceOf(address(this))"
            ],
            "block13129": [
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "jump10857": [
                "vault.refund(buyerList[i])",
                "vault.refund(buyerList[i])"
            ],
            "block12821_0": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "block12821_1": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "block13485": [
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "jump13129": [
                "token.transfer(reserveWallet[i], eachReserveAmount)",
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "jump14086_4": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block11805_1": [
                "token.mint(address(this), _tokens)"
            ],
            "block14425": [
                "token.totalSupply()"
            ],
            "block11805_7": [
                "token.mint(address(this), _tokens)"
            ],
            "jump14086_0": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block14954": [
                "vault.enableRefunds()"
            ],
            "block13485_1": [
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "block8800": [
                "token.burn(unpaidTokens)"
            ],
            "jump14086_3": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block13485_0": [
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "jump14086_2": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block13485_2": [
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "block15113": [
                "token.finishMinting()"
            ],
            "block14267": [
                "vault.close()"
            ],
            "block12248_1": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_0": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_3": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_2": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_5": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_4": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_7": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block12248_6": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump15396": [
                "token.transferOwnership(newTokenOwner)",
                "token.transferOwnership(newTokenOwner)"
            ],
            "block8223": [
                "token.finishMinting()"
            ],
            "block4995_0": [
                "kyc.isRegistered(_addr)"
            ],
            "jump8223": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "block14743": [
                "token.mint(address(this), devAmount)"
            ],
            "jump4995_1": [
                "kyc.isRegistered(_addr)",
                "kyc.isRegistered(_addr)"
            ],
            "block11805_3": [
                "token.mint(address(this), _tokens)"
            ],
            "block11805_2": [
                "token.mint(address(this), _tokens)"
            ],
            "block12248": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block11805_0": [
                "token.mint(address(this), _tokens)"
            ],
            "jump8800": [
                "token.burn(unpaidTokens)",
                "token.burn(unpaidTokens)"
            ],
            "block11805_6": [
                "token.mint(address(this), _tokens)"
            ],
            "block11805_5": [
                "token.mint(address(this), _tokens)"
            ],
            "block11805_4": [
                "token.mint(address(this), _tokens)"
            ],
            "block13585": [
                "devMultisig.transfer(devAmount)"
            ],
            "jump11805_5": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_4": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_7": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_6": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_1": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_0": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump11805_3": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "jump12821": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)",
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "jump14086": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block8065": [
                "vault.enableRefunds()"
            ],
            "jump13485_1": [
                "token.mint(reserveWallet[j], eachReserveAmount)",
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "jump11805_2": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "block12282_3": [
                "msg.sender.transfer(_toReturn)"
            ],
            "block12282_2": [
                "msg.sender.transfer(_toReturn)"
            ],
            "jump14954": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block12282_0": [
                "msg.sender.transfer(_toReturn)"
            ],
            "block12282_7": [
                "msg.sender.transfer(_toReturn)"
            ],
            "block12282_6": [
                "msg.sender.transfer(_toReturn)"
            ],
            "jump11805": [
                "token.mint(address(this), _tokens)",
                "token.mint(address(this), _tokens)"
            ],
            "block12282_4": [
                "msg.sender.transfer(_toReturn)"
            ],
            "block11805": [
                "token.mint(address(this), _tokens)"
            ],
            "block4995": [
                "kyc.isRegistered(_addr)"
            ],
            "block7271": [
                "token.mint(address(this), totalAmount)"
            ],
            "jump10310": [
                "token.burn(totalAmount)",
                "token.burn(totalAmount)"
            ],
            "block14086": [
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block12821": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "jump13585": [
                "devMultisig.transfer(devAmount)",
                "devMultisig.transfer(devAmount)"
            ],
            "jump13485_2": [
                "token.mint(reserveWallet[j], eachReserveAmount)",
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "jump13585_0": [
                "devMultisig.transfer(devAmount)",
                "devMultisig.transfer(devAmount)"
            ],
            "jump9131": [
                "vault.refund(investor)",
                "vault.refund(investor)"
            ],
            "jump13485_0": [
                "token.mint(reserveWallet[j], eachReserveAmount)",
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "jump13731_1": [
                "reserveWallet[i].transfer(eachReserveAmount)",
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "jump13731_0": [
                "reserveWallet[i].transfer(eachReserveAmount)",
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "block12282": [
                "msg.sender.transfer(_toReturn)"
            ],
            "jump13585_1": [
                "devMultisig.transfer(devAmount)",
                "devMultisig.transfer(devAmount)"
            ],
            "jump12282_5": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12282_4": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump8594": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump12282_6": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12282_1": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "block12282_1": [
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12282_3": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12282_2": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump15113": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump13129_0": [
                "token.transfer(reserveWallet[i], eachReserveAmount)",
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "jump13129_1": [
                "token.transfer(reserveWallet[i], eachReserveAmount)",
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "jump13129_2": [
                "token.transfer(reserveWallet[i], eachReserveAmount)",
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "jump14743": [
                "token.mint(address(this), devAmount)",
                "token.mint(address(this), devAmount)"
            ],
            "block12282_5": [
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12282": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12248_7": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_6": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_5": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_4": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_3": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_2": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_1": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "jump12248_0": [
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)",
                "token.grantVestedTokens(\n      _beneficiary,\n      _tokens,\n      uint64(endTime),\n      uint64(endTime + 1 weeks),\n      uint64(endTime + 1 weeks),\n      false,\n      false)"
            ],
            "block10310": [
                "token.burn(totalAmount)"
            ],
            "jump14086_1": [
                "vault.deposit.value(toFund)(msg.sender)",
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "jump14267": [
                "vault.close()",
                "vault.close()"
            ],
            "block13129_2": [
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "block13129_0": [
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "block13129_1": [
                "token.transfer(reserveWallet[i], eachReserveAmount)"
            ],
            "block15396": [
                "token.transferOwnership(newTokenOwner)"
            ],
            "block12821_2": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "block13731": [
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "jump13485": [
                "token.mint(reserveWallet[j], eachReserveAmount)",
                "token.mint(reserveWallet[j], eachReserveAmount)"
            ],
            "block13585_0": [
                "devMultisig.transfer(devAmount)"
            ],
            "block13585_1": [
                "devMultisig.transfer(devAmount)"
            ],
            "block14086_4": [
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "jump4995_0": [
                "kyc.isRegistered(_addr)",
                "kyc.isRegistered(_addr)"
            ],
            "jump8065": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump12282_7": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "jump12821_2": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)",
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "jump12821_0": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)",
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "jump12821_1": [
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)",
                "token.grantVestedTokens(\n      devMultisig,\n      devAmount,\n      uint64(endTime),\n      uint64(endTime),\n      uint64(endTime + 1 years),\n      false,\n      false)"
            ],
            "jump12282_0": [
                "msg.sender.transfer(_toReturn)",
                "msg.sender.transfer(_toReturn)"
            ],
            "block4995_1": [
                "kyc.isRegistered(_addr)"
            ],
            "block13731_1": [
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "block13731_0": [
                "reserveWallet[i].transfer(eachReserveAmount)"
            ],
            "jump4995": [
                "kyc.isRegistered(_addr)",
                "kyc.isRegistered(_addr)"
            ],
            "block14086_3": [
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block14086_2": [
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block14086_1": [
                "vault.deposit.value(toFund)(msg.sender)"
            ],
            "block14086_0": [
                "vault.deposit.value(toFund)(msg.sender)"
            ]
        }
    }
}