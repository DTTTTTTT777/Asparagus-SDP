{
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "execute(address,uint256,bytes)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "execute(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "execute(address,uint256,bytes)": [
                291,
                141
            ],
            "changeOwner(address)": [
                224,
                119
            ],
            "acceptOwnership()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {
            "block1114": [
                "_dst.call.value(_value)(_data)"
            ]
        }
    },
    "Marriage": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "execute(address,uint256,bytes)",
            "Marriage(address)",
            "numberOfMajorEvents()",
            "numberOfMessages()",
            "createMarriage(string,string,string,string)",
            "setStatus(string,string)",
            "setMajorEvent(string,string,string)",
            "sendMessage(string,string,string)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "execute(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "Marriage(address)": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "numberOfMajorEvents()": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "numberOfMessages()": {
                "argument": {},
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "createMarriage(string,string,string,string)": {
                "argument": {
                    "_partner1": "string",
                    "_partner2": "string",
                    "_vows": "string",
                    "url": "string"
                },
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "setStatus(string,string)": {
                "argument": {
                    "status": "string",
                    "url": "string"
                },
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "setMajorEvent(string,string,string)": {
                "argument": {
                    "name": "string",
                    "description": "string",
                    "url": "string"
                },
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            },
            "sendMessage(string,string,string)": {
                "argument": {
                    "nameFrom": "string",
                    "text": "string",
                    "url": "string"
                },
                "contract": {
                    "partner1": "string",
                    "partner2": "string",
                    "marriageDate": "uint256",
                    "marriageStatus": "string",
                    "vows": "string",
                    "majorEvents": "Marriage.Event[]",
                    "messages": "Marriage.Message[]"
                }
            }
        },
        "function_block_mapping": {
            "sendMessage(string,string,string)": [
                653,
                97
            ],
            "setStatus(string,string)": [
                2174,
                317
            ],
            "createMarriage(string,string,string,string)": [
                2767,
                427
            ],
            "numberOfMajorEvents()": [
                2724,
                405
            ],
            "execute(address,uint256,bytes)": [
                2027,
                295
            ],
            "numberOfMessages()": [
                3082,
                449
            ],
            "setMajorEvent(string,string,string)": [
                1317,
                163
            ],
            "changeOwner(address)": [
                1960,
                273
            ],
            "acceptOwnership()": [
                1562,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump3840": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block3840": [
                "owner.transfer(this.balance)"
            ],
            "block6808": [
                "_dst.call.value(_value)(_data)"
            ]
        }
    }
}