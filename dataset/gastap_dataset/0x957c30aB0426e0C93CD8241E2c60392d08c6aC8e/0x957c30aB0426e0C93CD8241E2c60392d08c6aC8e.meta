{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ModumToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ModumToken()",
            "transferOwnership(address)",
            "votingProposal(string,bytes32,uint256)",
            "vote(bool)",
            "showVotes(address)",
            "claimVotingProposal()",
            "isProposalActive()",
            "isVoteOngoing()",
            "isVotingPhaseOver()",
            "mint(address[],uint256[])",
            "setMintDone()",
            "updateAccount(address,ModumToken.UpdateMode)",
            "fallback()",
            "payBonus(address[])",
            "payout(uint256)",
            "showBonus(address)",
            "claimBonus()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "ModumToken()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "votingProposal(string,bytes32,uint256)": {
                "argument": {
                    "_addr": "string",
                    "_hash": "bytes32",
                    "_value": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "vote(bool)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "showVotes(address)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "claimVotingProposal()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "isProposalActive()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "isVoteOngoing()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "isVotingPhaseOver()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "mint(address[],uint256[])": {
                "argument": {
                    "_recipient": "address[]",
                    "_value": "uint256[]"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "setMintDone()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "updateAccount(address,ModumToken.UpdateMode)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "payBonus(address[])": {
                "argument": {
                    "_addr": "address[]"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "payout(uint256)": {
                "argument": {
                    "valueWei": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "showBonus(address)": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "claimBonus()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalDropPerUnlockedToken": "uint256",
                    "rounding": "uint256",
                    "lockedTokens": "uint256",
                    "maxTokens": "uint256",
                    "redistributionTimeout": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "votingDuration": "uint256",
                    "lastNegativeVoting": "uint256",
                    "blockingDuration": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "showBonus(address)": [
                2783,
                669
            ],
            "showVotes(address)": [
                1400,
                295
            ],
            "setMintDone()": [
                2666,
                603
            ],
            "allowance(address,address)": [
                3014,
                735
            ],
            "decreaseApproval(address,uint256)": [
                1838,
                405
            ],
            "transferFrom(address,address,uint256)": [
                965,
                185
            ],
            "isProposalActive()": [
                2244,
                493
            ],
            "vote(bool)": [
                1487,
                317
            ],
            "approve(address,uint256)": [
                735,
                97
            ],
            "increaseApproval(address,uint256)": [
                2913,
                713
            ],
            "payBonus(address[])": [
                2155,
                471
            ],
            "mint(address[],uint256[])": [
                3133,
                757
            ],
            "isVoteOngoing()": [
                3431,
                845
            ],
            "votingProposal(string,bytes32,uint256)": [
                2026,
                449
            ],
            "claimBonus()": [
                1554,
                339
            ],
            "balanceOf(address)": [
                1939,
                427
            ],
            "isVotingPhaseOver()": [
                2689,
                625
            ],
            "transferOwnership(address)": [
                3478,
                867
            ],
            "claimVotingProposal()": [
                1098,
                207
            ],
            "transfer(address,uint256)": [
                2522,
                559
            ]
        },
        "block_CALL_mapping": {
            "block6210": [
                "msg.sender.transfer(sendValue)"
            ],
            "jump6210": [
                "msg.sender.transfer(sendValue)",
                "msg.sender.transfer(sendValue)"
            ]
        }
    }
}