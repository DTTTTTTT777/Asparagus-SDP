{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                302,
                97
            ],
            "balanceOf(address)": [
                622,
                185
            ],
            "transferFrom(address,address,uint256)": [
                446,
                141
            ],
            "allowance(address,address)": [
                954,
                251
            ],
            "transfer(address,uint256)": [
                853,
                229
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Fish": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "Fish()",
            "fallback()",
            "setGrowth(uint32)",
            "buy()",
            "sell(uint256)",
            "issueTo(address,uint256)",
            "referral(address)",
            "assignBountryToReferals(address,uint256)",
            "assignBounty(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "Fish()": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "setGrowth(uint32)": {
                "argument": {
                    "_newGrowth_ppm": "uint32"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "issueTo(address,uint256)": {
                "argument": {
                    "_amount_tkns": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "referral(address)": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "assignBountryToReferals(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "assignBounty(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "TermsOfUSe": "string",
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "dailyGrowth_ppm": "uint32",
                    "dailyGrowthUpdated_date": "uint256",
                    "dailyGrowthMin_ppm": "uint32",
                    "dailyGrowthMax_ppm": "uint32",
                    "sell_ppc": "uint32",
                    "sellPrice_wie": "uint256",
                    "buyPrice_wie": "uint256",
                    "landingDiscount_ppc": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                578,
                119
            ],
            "setGrowth(uint32)": [
                1634,
                427
            ],
            "balanceOf(address)": [
                1115,
                273
            ],
            "buy()": [
                1523,
                383
            ],
            "sell(uint256)": [
                1926,
                515
            ],
            "referral(address)": [
                1202,
                295
            ],
            "transferFrom(address,address,uint256)": [
                722,
                163
            ],
            "assignBounty(address,uint256)": [
                904,
                207
            ],
            "allowance(address,address)": [
                1807,
                493
            ],
            "transfer(address,uint256)": [
                1533,
                405
            ]
        },
        "block_CALL_mapping": {
            "jump6458": [
                "msg.sender.send(moneyWorth)",
                "msg.sender.send(moneyWorth)"
            ],
            "block6458": [
                "msg.sender.send(moneyWorth)"
            ]
        }
    }
}