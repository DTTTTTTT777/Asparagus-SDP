{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                320,
                141
            ],
            "balanceOf(address)": [
                233,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                158,
                75
            ],
            "increaseApproval(address,uint256)": [
                811,
                229
            ],
            "transfer(address,uint256)": [
                710,
                207
            ],
            "balanceOf(address)": [
                623,
                185
            ],
            "allowance(address,address)": [
                912,
                251
            ],
            "decreaseApproval(address,uint256)": [
                522,
                163
            ],
            "transferFrom(address,address,uint256)": [
                302,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ChargCoinContract": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "ChargCoinContract()",
            "fallback()",
            "checkCrowdsaleState()",
            "refundTransaction(bool)",
            "createTokens(address)",
            "transferToContributor(address,uint256)",
            "calculateEthToChargcoin(uint256)",
            "getAmountBonus(uint256)",
            "getPrice()",
            "batchReturnEthIfFailed(uint256)",
            "setMultisigAddress(address)",
            "registerNode(uint256,uint256)",
            "blockNode(address)",
            "updateChargingRate(uint256)",
            "updateParkingRate(uint256)",
            "chargeOn(address,uint256)",
            "chargeOff(address)",
            "parkingOn(address,uint256)",
            "parkingOff(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "ChargCoinContract()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "checkCrowdsaleState()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "refundTransaction(bool)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "createTokens(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "transferToContributor(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "calculateEthToChargcoin(uint256)": {
                "argument": {
                    "_eth": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "getAmountBonus(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "getPrice()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "batchReturnEthIfFailed(uint256)": {
                "argument": {
                    "_numberOfReturns": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "setMultisigAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "registerNode(uint256,uint256)": {
                "argument": {
                    "chargingRate": "uint256",
                    "parkingRate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "blockNode(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "updateChargingRate(uint256)": {
                "argument": {
                    "rate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "updateParkingRate(uint256)": {
                "argument": {
                    "rate": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "chargeOn(address,uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "chargeOff(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "parkingOn(address,uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "parkingOff(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "standard": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "PRICE": "uint256",
                    "nextContributorIndex": "uint256",
                    "BEGIN_TIME": "uint256",
                    "END_TIME": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "crowdsaleTokenCap": "uint256",
                    "foundersAndTeamTokens": "uint256",
                    "slushFundTokens": "uint256",
                    "nextContributorToClaim": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferToContributor(address,uint256)": [
                1441,
                273
            ],
            "transfer(address,uint256)": [
                3488,
                801
            ],
            "chargeOff(address)": [
                2986,
                669
            ],
            "allowance(address,address)": [
                4061,
                977
            ],
            "decreaseApproval(address,uint256)": [
                2666,
                581
            ],
            "transferFrom(address,address,uint256)": [
                1221,
                229
            ],
            "approve(address,uint256)": [
                912,
                119
            ],
            "increaseApproval(address,uint256)": [
                3960,
                955
            ],
            "chargeOn(address,uint256)": [
                3589,
                823
            ],
            "parkingOff(address)": [
                1013,
                141
            ],
            "getPrice()": [
                3378,
                757
            ],
            "updateChargingRate(uint256)": [
                2305,
                471
            ],
            "batchReturnEthIfFailed(uint256)": [
                2941,
                647
            ],
            "transferOwnership(address)": [
                4237,
                1021
            ],
            "calculateEthToChargcoin(uint256)": [
                2350,
                493
            ],
            "registerNode(uint256,uint256)": [
                1166,
                207
            ],
            "parkingOn(address,uint256)": [
                2589,
                559
            ],
            "balanceOf(address)": [
                2767,
                603
            ],
            "updateParkingRate(uint256)": [
                3861,
                911
            ],
            "getAmountBonus(uint256)": [
                3753,
                867
            ],
            "createTokens(address)": [
                3906,
                933
            ],
            "blockNode(address)": [
                3421,
                779
            ],
            "setMultisigAddress(address)": [
                701,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump5519": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump5407_1": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "block11851": [
                "currentParticipantAddress.send(contribution)"
            ],
            "jump5407": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "jump11851": [
                "currentParticipantAddress.send(contribution)",
                "currentParticipantAddress.send(contribution)"
            ],
            "jump5407_0": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "jump5519_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block5519_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "block5407": [
                "multisig.send(msg.value)"
            ],
            "block5407_1": [
                "multisig.send(msg.value)"
            ],
            "block5407_0": [
                "multisig.send(msg.value)"
            ],
            "block5519": [
                "msg.sender.transfer(msg.value)"
            ]
        }
    },
    "ChgUsdConverter": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "setETHUSDPrice(uint256)",
            "setCHGUSDPrice(uint256)",
            "calculateCHGAmountToEther(uint256)",
            "balances(address)",
            "currentBalance()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "setETHUSDPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "setCHGUSDPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "calculateCHGAmountToEther(uint256)": {
                "argument": {
                    "etherAmount": "uint256"
                },
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "balances(address)": {
                "argument": {},
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "currentBalance()": {
                "argument": {},
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ETHUSDPRICE": "uint256",
                    "CHGUSDPRICE": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculateCHGAmountToEther(uint256)": [
                920,
                229
            ],
            "setCHGUSDPrice(uint256)": [
                832,
                185
            ],
            "setETHUSDPrice(uint256)": [
                700,
                141
            ],
            "currentBalance()": [
                985,
                251
            ],
            "transferOwnership(address)": [
                1028,
                273
            ],
            "balances(address)": [
                1407,
                939
            ]
        },
        "block_CALL_mapping": {
            "block1705": [
                "c.balances(a)"
            ],
            "jump1407": [
                "c.balances(address(this))",
                "c.balances(address(this))"
            ],
            "jump409": [
                "c.transfer(msg.sender, calculatedAmount)",
                "c.transfer(msg.sender, calculatedAmount)"
            ],
            "block1407_1": [
                "c.balances(address(this))"
            ],
            "block1407_0": [
                "c.balances(address(this))"
            ],
            "jump1407_1": [
                "c.balances(address(this))",
                "c.balances(address(this))"
            ],
            "jump1407_0": [
                "c.balances(address(this))",
                "c.balances(address(this))"
            ],
            "block409": [
                "c.transfer(msg.sender, calculatedAmount)"
            ],
            "jump409_0": [
                "c.transfer(msg.sender, calculatedAmount)",
                "c.transfer(msg.sender, calculatedAmount)"
            ],
            "block409_0": [
                "c.transfer(msg.sender, calculatedAmount)"
            ],
            "block1407": [
                "c.balances(address(this))"
            ],
            "jump1705": [
                "c.balances(a)",
                "c.balances(a)"
            ]
        }
    }
}