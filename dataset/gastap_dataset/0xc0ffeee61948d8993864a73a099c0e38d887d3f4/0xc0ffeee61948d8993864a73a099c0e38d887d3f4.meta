{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                412,
                97
            ],
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "allowance(address,address)": [
                1802,
                449
            ],
            "balanceOf(address)": [
                1055,
                273
            ],
            "transferFrom(address,address,uint256)": [
                599,
                163
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "MultiSigTokenWallet": {
        "function_list": [
            "fallback()",
            "constructor(address[],uint256)",
            "depositToken(address,bytes)",
            "deposit(address,uint256,address,bytes)",
            "watch(address)",
            "setMyTokenList(address[])",
            "setTokenList(address[])",
            "tokenFallback(address,uint256,bytes)",
            "receiveApproval(address,uint256,address,bytes)",
            "addOwner(address)",
            "removeOwner(address)",
            "replaceOwner(address,address)",
            "releaseWallet(address)",
            "changeRequirement(uint256)",
            "submitTransaction(address,uint256,bytes)",
            "confirmTransaction(uint256)",
            "revokeConfirmation(uint256)",
            "executeTransaction(uint256)",
            "withdrawEverything(address)",
            "withdrawAllTokens(address)",
            "withdrawToken(address,address,uint256)",
            "isConfirmed(uint256)",
            "addTransaction(address,uint256,bytes)",
            "_deposited(address,uint256,address,bytes)",
            "getConfirmationCount(uint256)",
            "getTransactionCount(bool,bool)",
            "getOwners()",
            "getTokenList()",
            "getConfirmations(uint256)",
            "getTransactionIds(uint256,uint256,bool,bool)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "fallback()": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "constructor(address[],uint256)": {
                "argument": {
                    "_owners": "address[]",
                    "_required": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "depositToken(address,bytes)": {
                "argument": {
                    "_data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "deposit(address,uint256,address,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "watch(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "setMyTokenList(address[])": {
                "argument": {
                    "_tokenList": "address[]"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "setTokenList(address[])": {
                "argument": {
                    "_tokenList": "address[]"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "addOwner(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "removeOwner(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "replaceOwner(address,address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "releaseWallet(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "changeRequirement(uint256)": {
                "argument": {
                    "_required": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "submitTransaction(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "confirmTransaction(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "revokeConfirmation(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "executeTransaction(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "withdrawEverything(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "withdrawAllTokens(address)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "withdrawToken(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "isConfirmed(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "addTransaction(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "_deposited(address,uint256,address,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "bytes": "bytes"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getConfirmationCount(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getTransactionCount(bool,bool)": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getOwners()": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getTokenList()": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getConfirmations(uint256)": {
                "argument": {
                    "transactionId": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "getTransactionIds(uint256,uint256,bool,bool)": {
                "argument": {
                    "from": "uint256",
                    "to": "uint256"
                },
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "owners": "address[]",
                    "tokens": "address[]",
                    "transactionCount": "uint256",
                    "userList": "mapping(address => address[])",
                    "required": "uint256",
                    "nonce": "uint256",
                    "MAX_OWNER_COUNT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawAllTokens(address)": [
                2752,
                537
            ],
            "getConfirmationCount(uint256)": [
                2165,
                449
            ],
            "addOwner(address)": [
                2029,
                405
            ],
            "getTransactionIds(uint256,uint256,bool,bool)": [
                2819,
                559
            ],
            "tokenFallback(address,uint256,bytes)": [
                3356,
                713
            ],
            "submitTransaction(address,uint256,bytes)": [
                3503,
                735
            ],
            "withdrawToken(address,address,uint256)": [
                562,
                75
            ],
            "changeRequirement(uint256)": [
                3266,
                669
            ],
            "receiveApproval(address,uint256,address,bytes)": [
                2230,
                471
            ],
            "watch(address)": [
                1962,
                383
            ],
            "getOwners()": [
                2644,
                515
            ],
            "setMyTokenList(address[])": [
                1406,
                273
            ],
            "revokeConfirmation(uint256)": [
                847,
                141
            ],
            "removeOwner(address)": [
                780,
                119
            ],
            "confirmTransaction(uint256)": [
                3311,
                691
            ],
            "depositToken(address,bytes)": [
                3996,
                845
            ],
            "constructor(address[],uint256)": [
                1294,
                251
            ],
            "getConfirmations(uint256)": [
                3026,
                603
            ],
            "isConfirmed(uint256)": [
                2096,
                427
            ],
            "getTransactionCount(bool,bool)": [
                1883,
                361
            ],
            "deposit(address,uint256,address,bytes)": [
                1617,
                317
            ],
            "getTokenList()": [
                892,
                163
            ],
            "releaseWallet(address)": [
                3199,
                647
            ],
            "replaceOwner(address,address)": [
                3897,
                823
            ],
            "setTokenList(address[])": [
                1192,
                229
            ],
            "withdrawEverything(address)": [
                4178,
                889
            ],
            "executeTransaction(uint256)": [
                4133,
                867
            ]
        },
        "block_CALL_mapping": {
            "block10031": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "jump13643": [
                "txx.destination.call.value(txx.value)(txx.data)",
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "block13907": [
                "_dest.transfer(this.balance)"
            ],
            "jump13643_1": [
                "txx.destination.call.value(txx.value)(txx.data)",
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "jump13643_0": [
                "txx.destination.call.value(txx.value)(txx.data)",
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "block7080_0": [
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ],
            "block7080_1": [
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ],
            "block7080": [
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ],
            "block14482": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump7667": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block10031_0": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "block7667": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump10031_0": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)",
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "jump10031": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)",
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "jump13907": [
                "_dest.transfer(this.balance)",
                "_dest.transfer(this.balance)"
            ],
            "jump4674": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)",
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "jump14482_1": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump14482_0": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump14482_3": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump13280": [
                "ERC20(_token).allowance(sender, this)",
                "ERC20(_token).allowance(sender, this)"
            ],
            "block13280": [
                "ERC20(_token).allowance(sender, this)"
            ],
            "block13643": [
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "jump7080": [
                "ERC20(_token).transferFrom(_from, this, _amount)",
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ],
            "jump14482_2": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block14482_2": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block14482_3": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block14482_1": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "jump14482": [
                "ERC20(_tokenAddr).balanceOf(this)",
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block14482_0": [
                "ERC20(_tokenAddr).balanceOf(this)"
            ],
            "block4674": [
                "ERC20(_tokenAddr).transfer(_dest, _amount)"
            ],
            "block13643_1": [
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "block13643_0": [
                "txx.destination.call.value(txx.value)(txx.data)"
            ],
            "jump7080_0": [
                "ERC20(_token).transferFrom(_from, this, _amount)",
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ],
            "jump7080_1": [
                "ERC20(_token).transferFrom(_from, this, _amount)",
                "ERC20(_token).transferFrom(_from, this, _amount)"
            ]
        }
    }
}