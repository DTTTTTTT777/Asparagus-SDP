{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                208,
                119
            ],
            "unpause()": [
                114,
                75
            ],
            "transferOwnership(address)": [
                342,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                346,
                97
            ],
            "balanceOf(address)": [
                773,
                207
            ],
            "transferFrom(address,address,uint256)": [
                490,
                141
            ],
            "allowance(address,address)": [
                1394,
                339
            ],
            "transfer(address,uint256)": [
                1091,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PausableToken": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                638,
                207
            ],
            "approve(address,uint256)": [
                180,
                75
            ],
            "unpause()": [
                457,
                141
            ],
            "balanceOf(address)": [
                551,
                185
            ],
            "allowance(address,address)": [
                873,
                273
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "transferOwnership(address)": [
                992,
                295
            ],
            "transfer(address,uint256)": [
                772,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "PallyCoin": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "PallyCoin()",
            "setCrowdsaleAddress(address)",
            "distributePresaleTokens(address,uint256)",
            "distributeICOTokens(address,uint256)",
            "refundTokens(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "PallyCoin()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "setCrowdsaleAddress(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "distributePresaleTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "distributeICOTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "refundTokens(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "tokensDistributedPresale": "uint256",
                    "tokensDistributedCrowdsale": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "pause()": [
                1239,
                339
            ],
            "approve(address,uint256)": [
                511,
                119
            ],
            "balanceOf(address)": [
                1152,
                317
            ],
            "distributePresaleTokens(address,uint256)": [
                290,
                75
            ],
            "unpause()": [
                981,
                251
            ],
            "setCrowdsaleAddress(address)": [
                732,
                185
            ],
            "distributeICOTokens(address,uint256)": [
                612,
                141
            ],
            "refundTokens(address,uint256)": [
                1028,
                273
            ],
            "transferFrom(address,address,uint256)": [
                799,
                207
            ],
            "allowance(address,address)": [
                1748,
                471
            ],
            "transfer(address,uint256)": [
                1647,
                449
            ],
            "transferOwnership(address)": [
                1910,
                515
            ]
        },
        "block_CALL_mapping": {}
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "deposit(address)": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "close()": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            },
            "refund(address)": {
                "argument": {},
                "contract": {
                    "weiBalance": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                322,
                141
            ],
            "refund(address)": [
                697,
                273
            ],
            "close()": [
                212,
                97
            ],
            "deposit(address)": [
                643,
                251
            ],
            "transferOwnership(address)": [
                576,
                229
            ]
        },
        "block_CALL_mapping": {
            "block944": [
                "wallet.transfer(weiBalance)"
            ],
            "jump2293": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "jump944": [
                "wallet.transfer(weiBalance)",
                "wallet.transfer(weiBalance)"
            ],
            "block2293": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "Crowdsale": {
        "function_list": [
            "pause()",
            "unpause()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,address,uint256,uint256)",
            "fallback()",
            "buyTokens()",
            "forwardFunds(uint256)",
            "calculateExcessBalance()",
            "setTierRates(uint256,uint256,uint256,uint256)",
            "checkCompletedCrowdsale()",
            "claimRefund()",
            "calculateExcessTokens(uint256,uint256,uint256,uint256)",
            "calculateTokensTier(uint256,uint256)",
            "validPurchase()",
            "goalReached()",
            "hasEnded()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "pause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "Crowdsale(address,address,uint256,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "forwardFunds(uint256)": {
                "argument": {
                    "amountPaid": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "calculateExcessBalance()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "setTierRates(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "tier1": "uint256",
                    "tier2": "uint256",
                    "tier3": "uint256",
                    "tier4": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "checkCompletedCrowdsale()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "amount": "uint256",
                    "tokensThisTier": "uint256",
                    "tierSelected": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "calculateTokensTier(uint256,uint256)": {
                "argument": {
                    "weiPaid": "uint256",
                    "tierSelected": "uint256"
                },
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "rate": "uint256",
                    "rateTier2": "uint256",
                    "rateTier3": "uint256",
                    "rateTier4": "uint256",
                    "weiRaised": "uint256",
                    "tokensRaised": "uint256",
                    "maxTokensRaised": "uint256",
                    "minPurchase": "uint256",
                    "maxPurchase": "uint256",
                    "minimumGoal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "calculateExcessTokens(uint256,uint256,uint256,uint256)": [
                1127,
                383
            ],
            "hasEnded()": [
                1777,
                669
            ],
            "claimRefund()": [
                1658,
                581
            ],
            "checkCompletedCrowdsale()": [
                1014,
                317
            ],
            "pause()": [
                1312,
                449
            ],
            "unpause()": [
                794,
                229
            ],
            "goalReached()": [
                1265,
                427
            ],
            "transferOwnership(address)": [
                1824,
                691
            ],
            "buyTokens()": [
                1767,
                647
            ],
            "setTierRates(uint256,uint256,uint256,uint256)": [
                1446,
                493
            ]
        },
        "block_CALL_mapping": {
            "block6993_0": [
                "wallet.transfer(amountPaid)"
            ],
            "jump4257_6": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block6993": [
                "wallet.transfer(amountPaid)"
            ],
            "block3656": [
                "vault.enableRefunds()"
            ],
            "block6706_1": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump3656": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block6993_1": [
                "wallet.transfer(amountPaid)"
            ],
            "jump6787_1": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block6787_0": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block4257_8": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257_7": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257_6": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257_5": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4257_2": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump2830_0": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump2830_1": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump4257": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump6993": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "block3656_2": [
                "vault.enableRefunds()"
            ],
            "jump3946_0": [
                "vault.close()",
                "vault.close()"
            ],
            "block4257_4": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3946": [
                "vault.close()"
            ],
            "jump4257_8": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4257_5": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257_3": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4257_7": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3946_2": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4257_1": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4257_0": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4257_3": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257_2": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block6787_1": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block3946_0": [
                "vault.close()"
            ],
            "jump6993_0": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "block4257_1": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4257": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7291": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4257_0": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump6993_1": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4257_4": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump3656_2": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump3946_1": [
                "vault.close()",
                "vault.close()"
            ],
            "jump6787": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block3656_1": [
                "vault.enableRefunds()"
            ],
            "block3656_0": [
                "vault.enableRefunds()"
            ],
            "jump3656_1": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump3656_0": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump5463": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])",
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block2830_1": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump7291_0": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump7291_1": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block2830": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump6706": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "block5463": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block6706_0": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block6787": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump3946": [
                "vault.close()",
                "vault.close()"
            ],
            "block7291_0": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7291_1": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump5179": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block5179": [
                "vault.refund(msg.sender)"
            ],
            "block3946_2": [
                "vault.close()"
            ],
            "block3946_1": [
                "vault.close()"
            ],
            "block7291": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump6706_0": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump6706_1": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "block2830_0": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump2830": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block6706": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump6787_0": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ]
        }
    }
}