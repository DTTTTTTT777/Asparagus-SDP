{
    "Governable": {
        "function_list": [
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)"
        ],
        "initial_state": {
            "Governable()": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "admins": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "addAdmin(address)": [
                268,
                119
            ],
            "removeAdmin(address)": [
                201,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StorageEnabled": {
        "function_list": [
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)"
        ],
        "initial_state": {
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "outstandingPower()": [
                649,
                229
            ],
            "powerBalanceOf(address)": [
                158,
                75
            ],
            "downs(address)": [
                288,
                119
            ],
            "activeSupply()": [
                606,
                207
            ],
            "babzBalanceOf(address)": [
                476,
                163
            ],
            "powerPool()": [
                245,
                97
            ],
            "authorizedPower()": [
                692,
                251
            ],
            "burnPool()": [
                563,
                185
            ]
        },
        "block_CALL_mapping": {
            "block3076": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block1946": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump2794": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump2230": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block965": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump1249": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block2794": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump1946": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump3076": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block1249": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump1547": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump965": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block2512": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block2230": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump2512": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block1547": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ]
        }
    },
    "Pausable": {
        "function_list": [
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "pause()",
            "unpause()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "pause()": [
                438,
                185
            ],
            "unpause()": [
                301,
                119
            ],
            "addAdmin(address)": [
                371,
                163
            ],
            "removeAdmin(address)": [
                234,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ],
            "totalSupply()": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "transfer(address,uint256,bytes)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "activeSupply()",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "value": "uint256",
                    "data": "bytes"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "totalSupply()": [
                303,
                97
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Power": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "totalSupply()",
            "activeSupply()",
            "slashPower(address,uint256,bytes32)",
            "powerUp(address,uint256)",
            "transfer(address,uint256)",
            "downtime()",
            "downTick(address)",
            "downs(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "powerUp(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "downtime()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "downTick(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "downs(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "slashPower(address,uint256,bytes32)": [
                357,
                97
            ],
            "downtime()": [
                1241,
                339
            ],
            "downs(address)": [
                2097,
                935
            ],
            "activeSupply()": [
                1198,
                317
            ],
            "balanceOf(address)": [
                635,
                185
            ],
            "totalSupply()": [
                448,
                119
            ],
            "downTick(address)": [
                1131,
                295
            ],
            "transfer(address,uint256)": [
                1030,
                273
            ],
            "transferOwnership(address)": [
                1284,
                361
            ],
            "powerUp(address,uint256)": [
                722,
                207
            ]
        },
        "block_CALL_mapping": {
            "jump2379": [
                "ControllerInterface(owner).powerBalanceOf(_holder)",
                "ControllerInterface(owner).powerBalanceOf(_holder)"
            ],
            "jump3425": [
                "ControllerInterface(owner).downTick(_owner, now)",
                "ControllerInterface(owner).downTick(_owner, now)"
            ],
            "block2097": [
                "ControllerInterface(owner).downs(_owner)"
            ],
            "block3093": [
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)"
            ],
            "block1834": [
                "ControllerInterface(owner).powerTotalSupply()"
            ],
            "jump3587": [
                "ControllerInterface(owner).outstandingPower()",
                "ControllerInterface(owner).outstandingPower()"
            ],
            "block3425": [
                "ControllerInterface(owner).downTick(_owner, now)"
            ],
            "jump3093": [
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)",
                "ControllerInterface(owner).createDownRequest(msg.sender, _amountPower)"
            ],
            "jump1834": [
                "ControllerInterface(owner).powerTotalSupply()",
                "ControllerInterface(owner).powerTotalSupply()"
            ],
            "jump2097": [
                "ControllerInterface(owner).downs(_owner)",
                "ControllerInterface(owner).downs(_owner)"
            ],
            "block2379": [
                "ControllerInterface(owner).powerBalanceOf(_holder)"
            ],
            "block3587": [
                "ControllerInterface(owner).outstandingPower()"
            ]
        }
    },
    "Storage": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "setUInt(bytes32,bytes32,uint256)",
            "getUInt(bytes32,bytes32)",
            "setAddress(bytes32,bytes32,address)",
            "getAddress(bytes32,bytes32)",
            "setBool(bytes32,bytes32,bool)",
            "getBool(bytes32,bytes32)",
            "setBal(bytes32,address,uint256)",
            "getBal(bytes32,address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setUInt(bytes32,bytes32,uint256)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "getUInt(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setAddress(bytes32,bytes32,address)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "getAddress(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setBool(bytes32,bytes32,bool)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "getBool(bytes32,bytes32)": {
                "argument": {
                    "_crate": "bytes32",
                    "_key": "bytes32"
                },
                "contract": {}
            },
            "setBal(bytes32,address,uint256)": {
                "argument": {
                    "_crate": "bytes32",
                    "_value": "uint256"
                },
                "contract": {}
            },
            "getBal(bytes32,address)": {
                "argument": {
                    "_crate": "bytes32"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "getBool(bytes32,bytes32)": [
                699,
                207
            ],
            "setUInt(bytes32,bytes32,uint256)": [
                444,
                141
            ],
            "setBal(bytes32,address,uint256)": [
                270,
                97
            ],
            "getUInt(bytes32,bytes32)": [
                361,
                119
            ],
            "getBal(bytes32,address)": [
                169,
                75
            ],
            "getAddress(bytes32,bytes32)": [
                786,
                229
            ],
            "setBool(bytes32,bytes32,bool)": [
                913,
                251
            ],
            "setAddress(bytes32,bytes32,address)": [
                517,
                163
            ],
            "transferOwnership(address)": [
                988,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "NutzEnabled": {
        "function_list": [
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "completeSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "completeSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                567,
                119
            ],
            "downs(address)": [
                939,
                251
            ],
            "approve(address,address,uint256)": [
                1810,
                493
            ],
            "totalSupply()": [
                830,
                185
            ],
            "allowance(address,address)": [
                1691,
                471
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1040,
                273
            ],
            "pause()": [
                1365,
                339
            ],
            "unpause()": [
                916,
                229
            ],
            "addAdmin(address)": [
                1298,
                317
            ],
            "burnPool()": [
                1562,
                405
            ],
            "outstandingPower()": [
                1919,
                515
            ],
            "activeSupply()": [
                1605,
                427
            ],
            "transfer(address,address,uint256,bytes)": [
                388,
                97
            ],
            "removeAdmin(address)": [
                763,
                163
            ],
            "completeSupply()": [
                1648,
                449
            ],
            "powerPool()": [
                873,
                207
            ],
            "authorizedPower()": [
                1962,
                537
            ],
            "babzBalanceOf(address)": [
                1475,
                383
            ]
        },
        "block_CALL_mapping": {
            "block5917_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5917_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block6994": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block3843": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block7620_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5635_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump6994": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block7620_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block7620_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump7620": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5917_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump5635": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block7620": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump6712": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block2411": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block5635": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump7620_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump2411": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump5917": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block6712": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump5917_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5635_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump3316_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5351_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5351_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5351_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump7620_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump3843": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump7620_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5351": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5351": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5351_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5351_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5351_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5351_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block5917": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block3316": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5351_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block3316_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump3316": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ]
        }
    },
    "ERC223ReceivingContract": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "PullPayment": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "paymentOf(address)",
            "changeDailyLimit(uint256)",
            "changeWithdrawalDate(address,uint256)",
            "asyncSend(address)",
            "withdraw()",
            "isUnderLimit(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "paymentOf(address)": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "changeDailyLimit(uint256)": {
                "argument": {
                    "_dailyLimit": "uint256"
                },
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "changeWithdrawalDate(address,uint256)": {
                "argument": {
                    "_newDate": "uint256"
                },
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "asyncSend(address)": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            },
            "isUnderLimit(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "dailyLimit": "uint256",
                    "lastDay": "uint256",
                    "spentToday": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "changeDailyLimit(uint256)": [
                594,
                229
            ],
            "balanceOf(address)": [
                366,
                163
            ],
            "asyncSend(address)": [
                453,
                185
            ],
            "paymentOf(address)": [
                639,
                251
            ],
            "transferOwnership(address)": [
                776,
                295
            ],
            "changeWithdrawalDate(address,uint256)": [
                180,
                75
            ],
            "withdraw()": [
                257,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump1924": [
                "ControllerInterface(owner).nutzAddr()",
                "ControllerInterface(owner).nutzAddr()"
            ],
            "block1924": [
                "ControllerInterface(owner).nutzAddr()"
            ],
            "jump1546": [
                "untrustedRecipient.call.gas(1000).value(amountWei)()",
                "untrustedRecipient.call.gas(1000).value(amountWei)()"
            ],
            "jump1240": [
                "ControllerInterface(owner).paused()",
                "ControllerInterface(owner).paused()"
            ],
            "block1546": [
                "untrustedRecipient.call.gas(1000).value(amountWei)()"
            ],
            "block1240": [
                "ControllerInterface(owner).paused()"
            ]
        }
    },
    "Nutz": {
        "function_list": [
            "activeSupply()",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256,bytes)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "totalSupply()",
            "activeSupply()",
            "allowance(address,address)",
            "floor()",
            "ceiling()",
            "powerPool()",
            "_checkDestination(address,address,uint256,bytes)",
            "powerDown(address,address,uint256)",
            "asyncSend(address,address,uint256)",
            "approve(address,uint256)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transData(address,uint256,bytes)",
            "transferFrom(address,address,uint256,bytes)",
            "transferFrom(address,address,uint256)",
            "fallback()",
            "purchase(uint256)",
            "sell(uint256,uint256)",
            "powerUp(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "floor()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "ceiling()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "powerPool()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "_checkDestination(address,address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "powerDown(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "asyncSend(address,address,uint256)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transData(address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "purchase(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "sell(uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "powerUp(uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                1336,
                273
            ],
            "totalSupply()": [
                3747,
                889
            ],
            "allowance(address,address)": [
                7703,
                961
            ],
            "transferFrom(address,address,uint256)": [
                837,
                163
            ],
            "approve(address,uint256)": [
                674,
                97
            ],
            "purchase(uint256)": [
                2543,
                537
            ],
            "asyncSend(address,address,uint256)": [
                1466,
                317
            ],
            "powerUp(uint256)": [
                1806,
                383
            ],
            "floor()": [
                4389,
                889
            ],
            "transferFrom(address,address,uint256,bytes)": [
                1952,
                427
            ],
            "activeSupply()": [
                6564,
                889
            ],
            "transfer(address,uint256,bytes)": [
                2198,
                471
            ],
            "transferOwnership(address)": [
                2575,
                559
            ],
            "powerDown(address,address,uint256)": [
                1013,
                207
            ],
            "transData(address,uint256,bytes)": [
                1165,
                251
            ],
            "powerPool()": [
                3946,
                889
            ],
            "transfer(address,uint256)": [
                1851,
                405
            ],
            "sell(uint256,uint256)": [
                2369,
                493
            ],
            "ceiling()": [
                442,
                1448
            ]
        },
        "block_CALL_mapping": {
            "block8279_7": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6280_0": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump4665": [
                "ControllerInterface(owner).babzBalanceOf(_owner)",
                "ControllerInterface(owner).babzBalanceOf(_owner)"
            ],
            "block442": [
                "ControllerInterface(owner).ceiling()"
            ],
            "jump6280": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump442_0": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump3747": [
                "ControllerInterface(owner).totalSupply()",
                "ControllerInterface(owner).totalSupply()"
            ],
            "block2865": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump6564": [
                "ControllerInterface(owner).activeSupply()",
                "ControllerInterface(owner).activeSupply()"
            ],
            "jump4389": [
                "ControllerInterface(owner).floor()",
                "ControllerInterface(owner).floor()"
            ],
            "block6280": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "block8279_3": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block8279_2": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump3483": [
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)",
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)"
            ],
            "block8279_0": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block3946": [
                "ControllerInterface(owner).powerPool()"
            ],
            "block8279_6": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block8279_5": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block7703": [
                "ControllerInterface(owner).allowance(_owner, _spender)"
            ],
            "block4665": [
                "ControllerInterface(owner).babzBalanceOf(_owner)"
            ],
            "jump7703": [
                "ControllerInterface(owner).allowance(_owner, _spender)",
                "ControllerInterface(owner).allowance(_owner, _spender)"
            ],
            "block3483": [
                "ControllerInterface(owner).approve(msg.sender, _spender, _amountBabz)"
            ],
            "jump442": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump8279_7": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_6": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump7355": [
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)",
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)"
            ],
            "block6280_0": [
                "ControllerInterface(owner).transferFrom(msg.sender, _from, _to, _amountBabz, _data)"
            ],
            "jump8279_3": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_2": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump5818": [
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)",
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)"
            ],
            "block6987_0": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "jump2865_0": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump2865_1": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump4866": [
                "ControllerInterface(owner).ceiling()",
                "ControllerInterface(owner).ceiling()"
            ],
            "jump2865": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)",
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "jump8279_0": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6987_1": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block4866": [
                "ControllerInterface(owner).ceiling()"
            ],
            "block2865_0": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "block2865_1": [
                "ControllerInterface(owner).purchase(msg.sender, msg.value, _price)"
            ],
            "block6987": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block3747": [
                "ControllerInterface(owner).totalSupply()"
            ],
            "block8279_1": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block6987_1": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block4389": [
                "ControllerInterface(owner).floor()"
            ],
            "jump8279": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_1": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump6987": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block5211": [
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)"
            ],
            "jump8279_5": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump3946": [
                "ControllerInterface(owner).powerPool()",
                "ControllerInterface(owner).powerPool()"
            ],
            "jump5211": [
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)",
                "PullPayInterface(_pullAddr).asyncSend.value(_amountWei)(_dest)"
            ],
            "block8279_4": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block5818": [
                "ControllerInterface(owner).powerUp(msg.sender, msg.sender, _amountBabz)"
            ],
            "jump6987_0": [
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)",
                "ControllerInterface(owner).transfer(msg.sender, _to, _amountBabz, _data)"
            ],
            "block442_0": [
                "ControllerInterface(owner).ceiling()"
            ],
            "block8279": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "jump8279_4": [
                "untrustedReceiver.tokenFallback(_from, _value, _data)",
                "untrustedReceiver.tokenFallback(_from, _value, _data)"
            ],
            "block7355": [
                "ControllerInterface(owner).sell(msg.sender, _price, _amountBabz)"
            ],
            "block6564": [
                "ControllerInterface(owner).activeSupply()"
            ]
        }
    },
    "MarketEnabled": {
        "function_list": [
            "NutzEnabled(address,address)",
            "totalSupply()",
            "completeSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "completeSupply()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "burnPool()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "powerPool()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "downs(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "Governable()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "ceiling()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "floor()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "INFINITY": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                655,
                119
            ],
            "downs(address)": [
                1147,
                295
            ],
            "approve(address,address,uint256)": [
                2432,
                669
            ],
            "totalSupply()": [
                918,
                185
            ],
            "moveCeiling(uint256)": [
                1680,
                405
            ],
            "ceiling()": [
                1792,
                449
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1248,
                317
            ],
            "outstandingPower()": [
                2541,
                691
            ],
            "pause()": [
                1835,
                471
            ],
            "allocateEther(uint256,address)": [
                1070,
                273
            ],
            "unpause()": [
                1004,
                229
            ],
            "addAdmin(address)": [
                1725,
                427
            ],
            "sell(address,uint256,uint256)": [
                1593,
                383
            ],
            "burnPool()": [
                2139,
                559
            ],
            "floor()": [
                1027,
                251
            ],
            "activeSupply()": [
                2182,
                581
            ],
            "moveFloor(uint256)": [
                2268,
                625
            ],
            "transfer(address,address,uint256,bytes)": [
                476,
                97
            ],
            "removeAdmin(address)": [
                851,
                163
            ],
            "purchase(address,uint256,uint256)": [
                1945,
                515
            ],
            "completeSupply()": [
                2225,
                603
            ],
            "powerPool()": [
                961,
                207
            ],
            "authorizedPower()": [
                2584,
                713
            ],
            "babzBalanceOf(address)": [
                2052,
                537
            ],
            "allowance(address,address)": [
                2313,
                647
            ]
        },
        "block_CALL_mapping": {
            "block3938_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3938_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3938_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump8857": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block6682": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump8857_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump11499_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8575": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump11499_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11499_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11499_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11499_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump8857_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump3938_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump8291_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump11236": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump3033": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump5344": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump3938_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block8291_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump3938": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block11499_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11499": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11236_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block11499_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11499_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block5344": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block11499_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8857_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8575": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8857": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8857_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5080": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "block10011": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump10011": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block8857_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8857_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8575_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8857_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8575_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8857_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8857_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8857_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block3033": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump8857_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block11236": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block8857_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump8575_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8575_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8291_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8291_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump5080": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "block8291_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8291_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8291_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block11499": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump10985": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block8857_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump3938_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block3938": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump8291_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8291_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8291_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8291_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump8857_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block8857_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block10293": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block11499_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8857_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump10293": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump11236_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump8291": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block8575_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block8575_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump8291_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block10985": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump6682": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "block10985_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block8291": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump10985_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ]
        }
    },
    "PowerEnabled": {
        "function_list": [
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "completeSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "PowerEnabled(address,address,address,address)",
            "setMaxPower(uint256)",
            "setDowntime(uint256)",
            "minimumPowerUpSizeBabz()",
            "dilutePower(uint256,uint256)",
            "_slashPower(address,uint256,bytes32)",
            "slashPower(address,uint256,bytes32)",
            "slashDownRequest(uint256,address,uint256,bytes32)",
            "powerUp(address,address,uint256)",
            "powerTotalSupply()",
            "_vestedDown(uint256,uint256,uint256,uint256)",
            "createDownRequest(address,uint256)",
            "downTick(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "ceiling()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "floor()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "completeSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "activeSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "burnPool()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "powerPool()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "downs(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "pause()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "unpause()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "Governable()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "PowerEnabled(address,address,address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "setMaxPower(uint256)": {
                "argument": {
                    "_maxPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "setDowntime(uint256)": {
                "argument": {
                    "_downtime": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "minimumPowerUpSizeBabz()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "dilutePower(uint256,uint256)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_amountPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "slashDownRequest(uint256,address,uint256,bytes32)": {
                "argument": {
                    "_pos": "uint256",
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "powerUp(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "powerTotalSupply()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "_vestedDown(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_total": "uint256",
                    "_left": "uint256",
                    "_start": "uint256",
                    "_now": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "createDownRequest(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "downTick(address,uint256)": {
                "argument": {
                    "_now": "uint256"
                },
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "MIN_SHARE_OF_POWER": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                809,
                119
            ],
            "downs(address)": [
                1392,
                317
            ],
            "createDownRequest(address,uint256)": [
                2313,
                559
            ],
            "approve(address,address,uint256)": [
                3445,
                955
            ],
            "totalSupply()": [
                1163,
                207
            ],
            "moveCeiling(uint256)": [
                2158,
                493
            ],
            "powerUp(address,address,uint256)": [
                2511,
                647
            ],
            "ceiling()": [
                2390,
                581
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1580,
                361
            ],
            "outstandingPower()": [
                3554,
                977
            ],
            "setMaxPower(uint256)": [
                1878,
                405
            ],
            "slashDownRequest(uint256,address,uint256,bytes32)": [
                1970,
                449
            ],
            "pause()": [
                2488,
                625
            ],
            "allocateEther(uint256,address)": [
                1315,
                295
            ],
            "slashPower(address,uint256,bytes32)": [
                15803,
                984
            ],
            "unpause()": [
                1249,
                251
            ],
            "addAdmin(address)": [
                2203,
                515
            ],
            "purchase(address,uint256,uint256)": [
                2707,
                691
            ],
            "sell(address,uint256,uint256)": [
                2071,
                471
            ],
            "burnPool()": [
                3064,
                801
            ],
            "downTick(address,uint256)": [
                2814,
                713
            ],
            "floor()": [
                1272,
                273
            ],
            "activeSupply()": [
                3150,
                845
            ],
            "minimumPowerUpSizeBabz()": [
                3021,
                779
            ],
            "moveFloor(uint256)": [
                3281,
                911
            ],
            "setDowntime(uint256)": [
                3193,
                867
            ],
            "transfer(address,address,uint256,bytes)": [
                630,
                97
            ],
            "powerTotalSupply()": [
                2891,
                735
            ],
            "dilutePower(uint256,uint256)": [
                2433,
                603
            ],
            "removeAdmin(address)": [
                1096,
                185
            ],
            "completeSupply()": [
                3238,
                889
            ],
            "powerPool()": [
                1206,
                229
            ],
            "authorizedPower()": [
                3597,
                999
            ],
            "babzBalanceOf(address)": [
                2934,
                757
            ],
            "allowance(address,address)": [
                3326,
                933
            ]
        },
        "block_CALL_mapping": {
            "jump16182": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block16718_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block16718_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block16718_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump12560_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block6625": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump16182_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block5219_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump16182_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump14842": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block6625_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block6625_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block6625_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6361": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump16467_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump13223": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump15803": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump16467_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump16467_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump16467_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16182": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump16718_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block13223_13": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_12": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_13": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_12": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5219": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block16981_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16467": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16981_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block12935_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12935_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12560_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12560_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12935_6": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12935_7": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12935_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12935_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block12560_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12560_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12560_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12935_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block17484": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "block12935_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump5219_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump12560_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump14560": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump12560_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block16182_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block16182_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block12238": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "jump12560_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block16467_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16467_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16467_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16467_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump4089": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump12935_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_6": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_7": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump12935_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block17735": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block6361": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "block15803": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump16981_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump16981_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block8469": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump15803_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block12560_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block4089_0": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block4089_1": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block4089_2": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump16467": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block16718": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump12560_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump16718_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump17484": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)",
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "jump4089_2": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump4089_0": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump4089_1": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block17233_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block16981": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump11018": [
                "Power(powerAddr).powerUp(_from, amountPow)",
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "jump15444_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump15444_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump5219_10": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump14560_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14560_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14560_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14560_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump14560_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump13223_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block15444_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block15444_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block17735_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block17735_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block17735_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block14842": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump13223_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13223_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block15803_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump12560": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12935": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump16718": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block15444": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump17735": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block13223_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13223_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump6625": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump15444": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block5219_10": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump6625_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6625_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6625_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump17233": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block12560": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block14842_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14842_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14842_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14842_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14842_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block14842_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump14842_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block16981_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block11018": [
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "jump12935": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block16981_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16981_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16981_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block16981_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5219_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump16718_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump5219_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump16981": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5219_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5219_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block16467_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump12238": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)",
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "block17233": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block14560": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump16467_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block13223": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block5219_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump17735_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17735_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17735_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17233_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump8469": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump5219": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block14560_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14560_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14560_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14560_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block14560_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block5219_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5219_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block4089": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ]
        }
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Controller": {
        "function_list": [
            "PowerEnabled(address,address,address,address)",
            "setMaxPower(uint256)",
            "setDowntime(uint256)",
            "minimumPowerUpSizeBabz()",
            "dilutePower(uint256,uint256)",
            "_slashPower(address,uint256,bytes32)",
            "slashPower(address,uint256,bytes32)",
            "slashDownRequest(uint256,address,uint256,bytes32)",
            "powerUp(address,address,uint256)",
            "powerTotalSupply()",
            "_vestedDown(uint256,uint256,uint256,uint256)",
            "createDownRequest(address,uint256)",
            "downTick(address,uint256)",
            "MarketEnabled(address,address,address)",
            "ceiling()",
            "floor()",
            "moveCeiling(uint256)",
            "moveFloor(uint256)",
            "purchase(address,uint256,uint256)",
            "sell(address,uint256,uint256)",
            "allocateEther(uint256,address)",
            "NutzEnabled(address,address)",
            "totalSupply()",
            "completeSupply()",
            "allowance(address,address)",
            "approve(address,address,uint256)",
            "_transfer(address,address,uint256,bytes)",
            "transfer(address,address,uint256,bytes)",
            "transferFrom(address,address,address,uint256,bytes)",
            "StorageEnabled(address)",
            "babzBalanceOf(address)",
            "_setBabzBalanceOf(address,uint256)",
            "activeSupply()",
            "_setActiveSupply(uint256)",
            "burnPool()",
            "_setBurnPool(uint256)",
            "powerPool()",
            "_setPowerPool(uint256)",
            "powerBalanceOf(address)",
            "_setPowerBalanceOf(address,uint256)",
            "outstandingPower()",
            "_setOutstandingPower(uint256)",
            "authorizedPower()",
            "_setAuthorizedPower(uint256)",
            "downs(address)",
            "_setDownRequest(address,uint256,uint256,uint256)",
            "pause()",
            "unpause()",
            "Governable()",
            "addAdmin(address)",
            "removeAdmin(address)",
            "Controller(address,address,address,address)",
            "setContracts(address,address,address,address)",
            "changeDailyLimit(uint256)",
            "kill(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "PowerEnabled(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "setMaxPower(uint256)": {
                "argument": {
                    "_maxPower": "uint256"
                },
                "contract": {}
            },
            "setDowntime(uint256)": {
                "argument": {
                    "_downtime": "uint256"
                },
                "contract": {}
            },
            "minimumPowerUpSizeBabz()": {
                "argument": {},
                "contract": {}
            },
            "dilutePower(uint256,uint256)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_amountPower": "uint256"
                },
                "contract": {}
            },
            "_slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "slashPower(address,uint256,bytes32)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "slashDownRequest(uint256,address,uint256,bytes32)": {
                "argument": {
                    "_pos": "uint256",
                    "_value": "uint256",
                    "_data": "bytes32"
                },
                "contract": {}
            },
            "powerUp(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "powerTotalSupply()": {
                "argument": {},
                "contract": {}
            },
            "_vestedDown(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_total": "uint256",
                    "_left": "uint256",
                    "_start": "uint256",
                    "_now": "uint256"
                },
                "contract": {}
            },
            "createDownRequest(address,uint256)": {
                "argument": {
                    "_amountPower": "uint256"
                },
                "contract": {}
            },
            "downTick(address,uint256)": {
                "argument": {
                    "_now": "uint256"
                },
                "contract": {}
            },
            "MarketEnabled(address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "ceiling()": {
                "argument": {},
                "contract": {}
            },
            "floor()": {
                "argument": {},
                "contract": {}
            },
            "moveCeiling(uint256)": {
                "argument": {
                    "_newPurchasePrice": "uint256"
                },
                "contract": {}
            },
            "moveFloor(uint256)": {
                "argument": {
                    "_newSalePrice": "uint256"
                },
                "contract": {}
            },
            "purchase(address,uint256,uint256)": {
                "argument": {
                    "_value": "uint256",
                    "_price": "uint256"
                },
                "contract": {}
            },
            "sell(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "allocateEther(uint256,address)": {
                "argument": {
                    "_amountWei": "uint256"
                },
                "contract": {}
            },
            "NutzEnabled(address,address)": {
                "argument": {},
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "completeSupply()": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "_amountBabz": "uint256"
                },
                "contract": {}
            },
            "_transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferFrom(address,address,address,uint256,bytes)": {
                "argument": {
                    "_amountBabz": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "StorageEnabled(address)": {
                "argument": {},
                "contract": {}
            },
            "babzBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setBabzBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "activeSupply()": {
                "argument": {},
                "contract": {}
            },
            "_setActiveSupply(uint256)": {
                "argument": {
                    "_newActiveSupply": "uint256"
                },
                "contract": {}
            },
            "burnPool()": {
                "argument": {},
                "contract": {}
            },
            "_setBurnPool(uint256)": {
                "argument": {
                    "_newBurnPool": "uint256"
                },
                "contract": {}
            },
            "powerPool()": {
                "argument": {},
                "contract": {}
            },
            "_setPowerPool(uint256)": {
                "argument": {
                    "_newPowerPool": "uint256"
                },
                "contract": {}
            },
            "powerBalanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "_setPowerBalanceOf(address,uint256)": {
                "argument": {
                    "_newValue": "uint256"
                },
                "contract": {}
            },
            "outstandingPower()": {
                "argument": {},
                "contract": {}
            },
            "_setOutstandingPower(uint256)": {
                "argument": {
                    "_newOutstandingPower": "uint256"
                },
                "contract": {}
            },
            "authorizedPower()": {
                "argument": {},
                "contract": {}
            },
            "_setAuthorizedPower(uint256)": {
                "argument": {
                    "_newAuthorizedPower": "uint256"
                },
                "contract": {}
            },
            "downs(address)": {
                "argument": {},
                "contract": {}
            },
            "_setDownRequest(address,uint256,uint256,uint256)": {
                "argument": {
                    "total": "uint256",
                    "left": "uint256",
                    "start": "uint256"
                },
                "contract": {}
            },
            "pause()": {
                "argument": {},
                "contract": {}
            },
            "unpause()": {
                "argument": {},
                "contract": {}
            },
            "Governable()": {
                "argument": {},
                "contract": {}
            },
            "addAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "removeAdmin(address)": {
                "argument": {},
                "contract": {}
            },
            "Controller(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "setContracts(address,address,address,address)": {
                "argument": {},
                "contract": {}
            },
            "changeDailyLimit(uint256)": {
                "argument": {
                    "_dailyLimit": "uint256"
                },
                "contract": {}
            },
            "kill(address)": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "powerBalanceOf(address)": [
                842,
                119
            ],
            "downs(address)": [
                1425,
                317
            ],
            "createDownRequest(address,uint256)": [
                2346,
                559
            ],
            "approve(address,address,uint256)": [
                3753,
                1021
            ],
            "totalSupply()": [
                1196,
                207
            ],
            "moveCeiling(uint256)": [
                2191,
                493
            ],
            "powerUp(address,address,uint256)": [
                2544,
                647
            ],
            "ceiling()": [
                2423,
                581
            ],
            "transferFrom(address,address,address,uint256,bytes)": [
                1613,
                361
            ],
            "outstandingPower()": [
                3862,
                1043
            ],
            "setMaxPower(uint256)": [
                1911,
                405
            ],
            "slashDownRequest(uint256,address,uint256,bytes32)": [
                2003,
                449
            ],
            "pause()": [
                2521,
                625
            ],
            "allocateEther(uint256,address)": [
                1348,
                295
            ],
            "slashPower(address,uint256,bytes32)": [
                18350,
                984
            ],
            "unpause()": [
                1282,
                251
            ],
            "changeDailyLimit(uint256)": [
                16053,
                914
            ],
            "addAdmin(address)": [
                2236,
                515
            ],
            "purchase(address,uint256,uint256)": [
                2740,
                691
            ],
            "sell(address,uint256,uint256)": [
                2104,
                471
            ],
            "burnPool()": [
                3097,
                801
            ],
            "downTick(address,uint256)": [
                2847,
                713
            ],
            "floor()": [
                1305,
                273
            ],
            "activeSupply()": [
                3183,
                845
            ],
            "minimumPowerUpSizeBabz()": [
                3054,
                779
            ],
            "setContracts(address,address,address,address)": [
                3271,
                889
            ],
            "setDowntime(uint256)": [
                3226,
                867
            ],
            "transfer(address,address,uint256,bytes)": [
                663,
                97
            ],
            "powerTotalSupply()": [
                2924,
                735
            ],
            "dilutePower(uint256,uint256)": [
                2466,
                603
            ],
            "moveFloor(uint256)": [
                3589,
                977
            ],
            "kill(address)": [
                3477,
                933
            ],
            "removeAdmin(address)": [
                1129,
                185
            ],
            "completeSupply()": [
                3434,
                911
            ],
            "powerPool()": [
                1239,
                229
            ],
            "authorizedPower()": [
                3905,
                1065
            ],
            "babzBalanceOf(address)": [
                2967,
                757
            ],
            "allowance(address,address)": [
                3634,
                999
            ]
        },
        "block_CALL_mapping": {
            "jump15085": [
                "Ownable(pullAddr).transferOwnership(msg.sender)",
                "Ownable(pullAddr).transferOwnership(msg.sender)"
            ],
            "jump19265": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block12868": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump4397_2": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump13531_13": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_12": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump14783": [
                "Ownable(powerAddr).transferOwnership(msg.sender)",
                "Ownable(powerAddr).transferOwnership(msg.sender)"
            ],
            "jump19528_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19528_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19528_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump19014": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump18350_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump5527_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block17389": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump20031": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)",
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "block13531_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump19528_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5527_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5527_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump19528_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump5527_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block4397_2": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump5527_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump5527_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump19265_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump19265_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump5527_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump19265_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)",
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump13531": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump19528_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block6933_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block12868_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block17991_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block17991_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump16053": [
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)",
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)"
            ],
            "block13531_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block18350": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "jump5527": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump6669": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "block13531_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block20031": [
                "Storage(storageAddr).setUInt('Nutz', 'burnPool', _newBurnPool)"
            ],
            "jump5527_10": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block6933_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block13243": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump17107": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block5527_10": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump19780_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block5527": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block19265_1": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block19265_0": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "block18729": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block6933_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump18350": [
                "Power(powerAddr).slashPower(_holder, _value, _data)",
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block17107_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block17107_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block17107_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block17107_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block17107_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block19780_0": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block8777": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "jump5527_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump17389_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block4397_0": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block4397_1": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block19265_2": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump17107_4": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump17107_0": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump17107_1": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump17107_2": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump17107_3": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')",
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "block19528_2": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump17389_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17389_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump17389_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump15387": [
                "Ownable(nutzAddr).transferOwnership(msg.sender)",
                "Ownable(nutzAddr).transferOwnership(msg.sender)"
            ],
            "jump11326": [
                "Power(powerAddr).powerUp(_from, amountPow)",
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "jump17389_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "jump18729_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump18729_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block5527_6": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block19014_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump20282_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump20282_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump13531_7": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_6": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_5": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_4": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_1": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13531_0": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump12868_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_1": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump12868_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12546": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "block12868_5": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12868_4": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12868_7": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12868_6": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump19528": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block12868_0": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12868_3": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block12868_2": [
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "jump13243_7": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_6": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump13243_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block6933": [
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block19528_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19528_0": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19528_3": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump17389_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block19528_5": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19528_4": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block19528_6": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block13243_5": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_4": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_7": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_6": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_1": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_0": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_3": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block13243_2": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "jump19528_1": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)",
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "block13531_11": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_10": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_13": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_12": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block13531_3": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump19014_3": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump19014_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump19014_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump19014_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block15387": [
                "Ownable(nutzAddr).transferOwnership(msg.sender)"
            ],
            "jump6933_2": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6933_0": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump6933_1": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "jump15687": [
                "Ownable(storageAddr).transferOwnership(msg.sender)",
                "Ownable(storageAddr).transferOwnership(msg.sender)"
            ],
            "jump5527_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "jump20282": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block20282": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump17389": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')",
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block19014_2": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block6669": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _beneficiary, _amountWei)"
            ],
            "jump5527_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')",
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_8": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_9": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_2": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_3": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_0": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_1": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block17991": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block5527_7": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_4": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block5527_5": [
                "Storage(storageAddr).getUInt('Nutz', 'powerPool')"
            ],
            "block18729_0": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump19780": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)",
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "block19265": [
                "Storage(storageAddr).setUInt('Nutz', 'activeSupply', _newActiveSupply)"
            ],
            "jump20282_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)",
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block11326": [
                "Power(powerAddr).powerUp(_from, amountPow)"
            ],
            "block14783": [
                "Ownable(powerAddr).transferOwnership(msg.sender)"
            ],
            "jump19014_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump18729": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)",
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "block4397": [
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block18350_0": [
                "Power(powerAddr).slashPower(_holder, _value, _data)"
            ],
            "block13531": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "jump13243": [
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')",
                "Storage(storageAddr).getUInt('Nutz', 'burnPool')"
            ],
            "block20282_2": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block20282_0": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "block20282_1": [
                "Storage(storageAddr).setUInt('Power', 'outstandingPower', _newOutstandingPower)"
            ],
            "jump6933": [
                "Storage(storageAddr).getBal('PowerDown', _user)",
                "Storage(storageAddr).getBal('PowerDown', _user)"
            ],
            "block17389_2": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17389_3": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17389_0": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17389_1": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block15687": [
                "Ownable(storageAddr).transferOwnership(msg.sender)"
            ],
            "block19014": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "block17389_4": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block17389_5": [
                "Storage(storageAddr).getUInt('Power', 'authorizedPower')"
            ],
            "block18729_1": [
                "Storage(storageAddr).setBal('PowerDown', _holder, result)"
            ],
            "jump4397_0": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump4397_1": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "block19780": [
                "Storage(storageAddr).setUInt('Power', 'authorizedPower', _newAuthorizedPower)"
            ],
            "jump17991_0": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump12546": [
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)",
                "Nutz(nutzAddr).powerDown(powerAddr, _holder, amountBabz)"
            ],
            "block19528": [
                "Storage(storageAddr).setBal('Nutz', _owner, _newValue)"
            ],
            "jump4397": [
                "Storage(storageAddr).getBal('Power', _owner)",
                "Storage(storageAddr).getBal('Power', _owner)"
            ],
            "jump12868": [
                "Storage(storageAddr).getBal('Nutz', _owner)",
                "Storage(storageAddr).getBal('Nutz', _owner)"
            ],
            "block17107": [
                "Storage(storageAddr).getUInt('Power', 'outstandingPower')"
            ],
            "jump17991": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "block15085": [
                "Ownable(pullAddr).transferOwnership(msg.sender)"
            ],
            "block13531_2": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block19014_4": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump8777": [
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)",
                "Nutz(nutzAddr).asyncSend(pullAddr, _from, amountWei)"
            ],
            "block16053": [
                "PullPayment(pullAddr).changeDailyLimit(_dailyLimit)"
            ],
            "jump17991_1": [
                "Storage(storageAddr).setBal('Power', _owner, _newValue)",
                "Storage(storageAddr).setBal('Power', _owner, _newValue)"
            ],
            "jump13531_9": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block19014_1": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ],
            "jump13531_8": [
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')",
                "Storage(storageAddr).getUInt('Nutz', 'activeSupply')"
            ],
            "block19014_0": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', _newPowerPool)"
            ]
        }
    },
    "UpgradeEventCompact": {
        "function_list": [
            "UpgradeEventCompact(address,address,address)",
            "upgrade()"
        ],
        "initial_state": {
            "UpgradeEventCompact(address,address,address)": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            },
            "upgrade()": {
                "argument": {},
                "contract": {
                    "maxPower": "uint256",
                    "downtime": "uint256",
                    "purchasePrice": "uint256",
                    "salePrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade()": [
                345,
                141
            ]
        },
        "block_CALL_mapping": {
            "block5852": [
                "next.setMaxPower(maxPower)"
            ],
            "jump6127": [
                "next.moveFloor(salePrice)",
                "next.moveFloor(salePrice)"
            ],
            "jump2547": [
                "old.downtime()",
                "old.downtime()"
            ],
            "jump1936": [
                "old.nutzAddr()",
                "old.nutzAddr()"
            ],
            "block6264": [
                "next.moveCeiling(purchasePrice)"
            ],
            "jump3545": [
                "old.activeSupply()",
                "old.activeSupply()"
            ],
            "jump742": [
                "old.pause()",
                "old.pause()"
            ],
            "jump901": [
                "old.admins(1)",
                "old.admins(1)"
            ],
            "jump6388": [
                "next.unpause()",
                "next.unpause()"
            ],
            "block5210": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', newPowerPool)"
            ],
            "block3718": [
                "old.outstandingPower()"
            ],
            "block4961": [
                "Ownable(powerAddr).transferOwnership(nextController)"
            ],
            "block2712": [
                "old.ceiling()"
            ],
            "jump4254": [
                "old.setContracts(powerAddr, nextPullPayment, nutzAddr, storageAddr)",
                "old.setContracts(powerAddr, nextPullPayment, nutzAddr, storageAddr)"
            ],
            "jump4961": [
                "Ownable(powerAddr).transferOwnership(nextController)",
                "Ownable(powerAddr).transferOwnership(nextController)"
            ],
            "jump4467": [
                "old.kill(nextController)",
                "old.kill(nextController)"
            ],
            "jump6264": [
                "next.moveCeiling(purchasePrice)",
                "next.moveCeiling(purchasePrice)"
            ],
            "block4254": [
                "old.setContracts(powerAddr, nextPullPayment, nutzAddr, storageAddr)"
            ],
            "jump5852": [
                "next.setMaxPower(maxPower)",
                "next.setMaxPower(maxPower)"
            ],
            "block6388": [
                "next.unpause()"
            ],
            "block742": [
                "old.pause()"
            ],
            "block3048": [
                "old.outstandingPower()"
            ],
            "jump4714": [
                "Ownable(nutzAddr).transferOwnership(nextController)",
                "Ownable(nutzAddr).transferOwnership(nextController)"
            ],
            "block1936": [
                "old.nutzAddr()"
            ],
            "jump1713": [
                "old.storageAddr()",
                "old.storageAddr()"
            ],
            "block2382": [
                "old.maxPower()"
            ],
            "block3207": [
                "old.authorizedPower()"
            ],
            "block3545": [
                "old.activeSupply()"
            ],
            "block1343": [
                "next.admins(1)"
            ],
            "block5704": [
                "Ownable(nextPullPayment).transferOwnership(nextController)"
            ],
            "block901": [
                "old.admins(1)"
            ],
            "block5990": [
                "next.setDowntime(downtime)"
            ],
            "jump1098": [
                "old.paused()",
                "old.paused()"
            ],
            "block1713": [
                "old.storageAddr()"
            ],
            "jump2712": [
                "old.ceiling()",
                "old.ceiling()"
            ],
            "block3386": [
                "old.burnPool()"
            ],
            "jump3718": [
                "old.outstandingPower()",
                "old.outstandingPower()"
            ],
            "jump3207": [
                "old.authorizedPower()",
                "old.authorizedPower()"
            ],
            "jump5457": [
                "Ownable(storageAddr).transferOwnership(nextController)",
                "Ownable(storageAddr).transferOwnership(nextController)"
            ],
            "block1540": [
                "next.paused()"
            ],
            "block2877": [
                "old.floor()"
            ],
            "jump2382": [
                "old.maxPower()",
                "old.maxPower()"
            ],
            "jump3386": [
                "old.burnPool()",
                "old.burnPool()"
            ],
            "jump3048": [
                "old.outstandingPower()",
                "old.outstandingPower()"
            ],
            "jump2159": [
                "old.powerAddr()",
                "old.powerAddr()"
            ],
            "jump5990": [
                "next.setDowntime(downtime)",
                "next.setDowntime(downtime)"
            ],
            "jump5704": [
                "Ownable(nextPullPayment).transferOwnership(nextController)",
                "Ownable(nextPullPayment).transferOwnership(nextController)"
            ],
            "jump6567": [
                "next.removeAdmin(address(this))",
                "next.removeAdmin(address(this))"
            ],
            "jump1343": [
                "next.admins(1)",
                "next.admins(1)"
            ],
            "block6127": [
                "next.moveFloor(salePrice)"
            ],
            "jump5210": [
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', newPowerPool)",
                "Storage(storageAddr).setUInt('Nutz', 'powerPool', newPowerPool)"
            ],
            "block2159": [
                "old.powerAddr()"
            ],
            "block6567": [
                "next.removeAdmin(address(this))"
            ],
            "block4467": [
                "old.kill(nextController)"
            ],
            "block1098": [
                "old.paused()"
            ],
            "jump1540": [
                "next.paused()",
                "next.paused()"
            ],
            "block4714": [
                "Ownable(nutzAddr).transferOwnership(nextController)"
            ],
            "block5457": [
                "Ownable(storageAddr).transferOwnership(nextController)"
            ],
            "jump2877": [
                "old.floor()",
                "old.floor()"
            ],
            "block2547": [
                "old.downtime()"
            ]
        }
    }
}