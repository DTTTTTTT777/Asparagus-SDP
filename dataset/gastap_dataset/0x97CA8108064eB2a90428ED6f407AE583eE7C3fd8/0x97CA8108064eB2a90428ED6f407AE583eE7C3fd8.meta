{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ReleasableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                314,
                97
            ],
            "setTransferAgent(address,bool)": [
                235,
                75
            ],
            "releaseTokenTransfer()": [
                658,
                185
            ],
            "balanceOf(address)": [
                681,
                207
            ],
            "transferFrom(address,address,uint256)": [
                458,
                141
            ],
            "setReleaseAgent(address)": [
                591,
                163
            ],
            "allowance(address,address)": [
                1282,
                361
            ],
            "transfer(address,uint256)": [
                993,
                295
            ],
            "transferOwnership(address)": [
                1502,
                405
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                238,
                97
            ],
            "mint(address,uint256)": [
                560,
                185
            ],
            "balanceOf(address)": [
                661,
                207
            ],
            "finishMinting()": [
                748,
                229
            ],
            "allowance(address,address)": [
                983,
                295
            ],
            "transferFrom(address,address,uint256)": [
                427,
                163
            ],
            "transferOwnership(address)": [
                1102,
                317
            ],
            "transfer(address,uint256)": [
                882,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "balanceOf(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                501,
                141
            ],
            "approve(address,uint256)": [
                224,
                75
            ],
            "setUpgradeAgent(address)": [
                1055,
                317
            ],
            "balanceOf(address)": [
                720,
                207
            ],
            "allowance(address,address)": [
                1122,
                339
            ],
            "transferFrom(address,address,uint256)": [
                368,
                119
            ],
            "transfer(address,uint256)": [
                911,
                273
            ],
            "setUpgradeMaster(address)": [
                1288,
                383
            ],
            "getUpgradeState()": [
                807,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump4325": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block4325": [
                "upgradeAgent.originalSupply()"
            ],
            "block4118": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump2883": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump4118": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block2883": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address,address)",
            "fallback()",
            "buy()",
            "buyTokens(address)",
            "buyPresale(address)",
            "buySale(address)",
            "finalize()",
            "finalization()",
            "forwardFunds()",
            "updateWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "validPrePurchase()",
            "validPurchase()",
            "hasEnded()",
            "isPresale()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_presaleStartTime": "uint256",
                    "_startTime": "uint256",
                    "_endTime": "uint256"
                },
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buyPresale(address)": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "buySale(address)": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "updateWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "validPrePurchase()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            },
            "isPresale()": {
                "argument": {},
                "contract": {
                    "presaleStartTime": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "purchaserCount": "uint256",
                    "baseRate": "uint256",
                    "tierTwoRate": "uint256",
                    "tierThreeRate": "uint256",
                    "whitelistRate": "uint256",
                    "tierOnePurchase": "uint256",
                    "tierTwoPurchase": "uint256",
                    "tierThreePurchase": "uint256",
                    "weiRaised": "uint256",
                    "cap": "uint256",
                    "presaleCap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                2060,
                779
            ],
            "transferOwnership(address)": [
                2107,
                801
            ]
        },
        "block_CALL_mapping": {
            "block4716_3": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_2": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7254": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block4716_0": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_7": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_6": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_5": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])",
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block4716_8": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4347_2": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_1": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_0": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4716_4": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7254": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4347": [
                "vault.close()",
                "vault.close()"
            ],
            "jump7460_1": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_2": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4073": [
                "vault.enableRefunds()"
            ],
            "block5639": [
                "vault.refund(msg.sender)"
            ],
            "block4716_4": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5639": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump7173": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump4716_1": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_0": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347_0": [
                "vault.close()"
            ],
            "block4073_0": [
                "vault.enableRefunds()"
            ],
            "jump4716_5": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347": [
                "vault.close()"
            ],
            "jump4716_7": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_6": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073_1": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump4716_3": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "jump4073_0": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7460_0": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "block4716_1": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_1": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4716": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_0": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4347_1": [
                "vault.close()"
            ],
            "jump7758": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7173_1": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4347_2": [
                "vault.close()"
            ],
            "jump3048": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7460_1": [
                "wallet.transfer(amountPaid)"
            ],
            "block7173": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7460": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_8": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7254_0": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7173_0": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4073_2": [
                "vault.enableRefunds()"
            ],
            "block4073_1": [
                "vault.enableRefunds()"
            ],
            "block3048": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block4716": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7460": [
                "wallet.transfer(amountPaid)"
            ],
            "jump4073_2": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block7254_1": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7460_0": [
                "wallet.transfer(amountPaid)"
            ],
            "jump3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump7173_1": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7173_0": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7758": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ]
        }
    }
}