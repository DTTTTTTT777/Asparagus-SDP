{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SafeMathLib": {
        "function_list": [
            "times(uint256,uint256)",
            "minus(uint256,uint256)",
            "plus(uint256,uint256)"
        ],
        "initial_state": {
            "times(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "minus(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "plus(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "PricingStrategy": {
        "function_list": [
            "isPricingStrategy()",
            "isSane(address)",
            "isPresalePurchase(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {}
            },
            "isSane(address)": {
                "argument": {},
                "contract": {}
            },
            "isPresalePurchase(address)": {
                "argument": {},
                "contract": {}
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "isPricingStrategy()": [
                178,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256)",
            "fallback()",
            "investInternal(address,uint128)",
            "preallocate(address,uint256,uint256)",
            "investWithSignedAddress(address,uint128,uint8,bytes32,bytes32)",
            "investWithCustomerId(address,uint128)",
            "invest(address)",
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setRequireSignedAddress(bool,address)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "setMultisig(address)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "halt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investInternal(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "preallocate(address,uint256,uint256)": {
                "argument": {
                    "fullTokens": "uint256",
                    "weiPrice": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithSignedAddress(address,uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithCustomerId(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithCustomerId(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireSignedAddress(bool,address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "MAX_INVESTMENTS_BEFORE_MULTISIG_CHANGE": "uint256",
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "presaleWeiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                2107,
                801
            ]
        },
        "block_CALL_mapping": {
            "block4716_3": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_2": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7254": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block4716_0": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_7": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_6": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4716_5": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])",
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "block4716_8": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4347_2": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_1": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4347_0": [
                "vault.close()",
                "vault.close()"
            ],
            "jump4716_4": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7254": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4347": [
                "vault.close()",
                "vault.close()"
            ],
            "jump7460_1": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_2": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4073": [
                "vault.enableRefunds()"
            ],
            "block5639": [
                "vault.refund(msg.sender)"
            ],
            "block4716_4": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump5639": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump7173": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump4716_1": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_0": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347_0": [
                "vault.close()"
            ],
            "block4073_0": [
                "vault.enableRefunds()"
            ],
            "jump4716_5": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block4347": [
                "vault.close()"
            ],
            "jump4716_7": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4716_6": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump4073_1": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump4716_3": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block5923": [
                "token.refundTokens(msg.sender, tokensBought[msg.sender])"
            ],
            "jump4073_0": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "jump7460_0": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "block4716_1": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_1": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "jump4716": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "jump7254_0": [
                "msg.sender.transfer(exceedingBalance)",
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "jump7758_0": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7758_1": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block4347_1": [
                "vault.close()"
            ],
            "jump7758": [
                "vault.deposit.value(amountPaid)(msg.sender)",
                "vault.deposit.value(amountPaid)(msg.sender)"
            ],
            "block7173_1": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4347_2": [
                "vault.close()"
            ],
            "jump3048": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7460_1": [
                "wallet.transfer(amountPaid)"
            ],
            "block7173": [
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7460": [
                "wallet.transfer(amountPaid)",
                "wallet.transfer(amountPaid)"
            ],
            "jump4716_8": [
                "msg.sender.transfer(weiNextTier)",
                "msg.sender.transfer(weiNextTier)"
            ],
            "block3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7254_0": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7173_0": [
                "msg.sender.transfer(differenceWei)"
            ],
            "block4073_2": [
                "vault.enableRefunds()"
            ],
            "block4073_1": [
                "vault.enableRefunds()"
            ],
            "block3048": [
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block4716": [
                "msg.sender.transfer(weiNextTier)"
            ],
            "block7460": [
                "wallet.transfer(amountPaid)"
            ],
            "jump4073_2": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block7254_1": [
                "msg.sender.transfer(exceedingBalance)"
            ],
            "block7460_0": [
                "wallet.transfer(amountPaid)"
            ],
            "jump3048_1": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "jump7173_1": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump7173_0": [
                "msg.sender.transfer(differenceWei)",
                "msg.sender.transfer(differenceWei)"
            ],
            "jump3048_0": [
                "token.distributeICOTokens(msg.sender, tokens)",
                "token.distributeICOTokens(msg.sender, tokens)"
            ],
            "block7758": [
                "vault.deposit.value(amountPaid)(msg.sender)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "isToken()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "isToken()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "PreICOProxyBuyer": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "PreICOProxyBuyer(address,uint256,uint256,uint256,uint256)",
            "getToken()",
            "invest(uint128)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "buyForEverybody()",
            "getClaimAmount(address)",
            "getClaimLeft(address)",
            "claimAll()",
            "claim(uint256)",
            "refund()",
            "setCrowdsale(Crowdsale)",
            "forceRefund()",
            "loadRefund()",
            "getState()",
            "isPresale()",
            "fallback()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "PreICOProxyBuyer(address,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_freezeEndsAt": "uint256",
                    "_weiMinimumLimit": "uint256",
                    "_weiMaximumLimit": "uint256",
                    "_weiCap": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "getToken()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "invest(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "buyWithCustomerId(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "buyForEverybody()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "getClaimAmount(address)": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "getClaimLeft(address)": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "claimAll()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "claim(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "setCrowdsale(Crowdsale)": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "forceRefund()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "isPresale()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "investorCount": "uint256",
                    "weiRaised": "uint256",
                    "investors": "address[]",
                    "freezeEndsAt": "uint256",
                    "weiMinimumLimit": "uint256",
                    "weiMaximumLimit": "uint256",
                    "weiCap": "uint256",
                    "tokensBought": "uint256",
                    "claimCount": "uint256",
                    "totalClaimed": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                1069,
                273
            ],
            "buy()": [
                1613,
                537
            ],
            "getClaimLeft(address)": [
                763,
                185
            ],
            "transferOwnership(address)": [
                2155,
                823
            ],
            "forceRefund()": [
                1713,
                603
            ],
            "getClaimAmount(address)": [
                2068,
                801
            ],
            "buyWithCustomerId(uint128)": [
                1476,
                493
            ],
            "claimAll()": [
                1889,
                691
            ],
            "getToken()": [
                544,
                119
            ],
            "buyForEverybody()": [
                1912,
                713
            ],
            "unhalt()": [
                1823,
                647
            ],
            "loadRefund()": [
                1289,
                405
            ],
            "isPresale()": [
                1429,
                471
            ],
            "halt()": [
                1137,
                317
            ],
            "getState()": [
                487,
                97
            ],
            "claim(uint256)": [
                718,
                163
            ]
        },
        "block_CALL_mapping": {
            "block5658": [
                "getToken().balanceOf(address(this))"
            ],
            "block3119_0": [
                "getToken().transfer(investor, amount)"
            ],
            "jump3962": [
                "investor.call.value(amount)()",
                "investor.call.value(amount)()"
            ],
            "block5471": [
                "crowdsale.invest.value(weiRaised)(address(this))"
            ],
            "jump5658": [
                "getToken().balanceOf(address(this))",
                "getToken().balanceOf(address(this))"
            ],
            "block3747": [
                "crowdsale.isCrowdsale()"
            ],
            "block3119": [
                "getToken().transfer(investor, amount)"
            ],
            "jump3119_0": [
                "getToken().transfer(investor, amount)",
                "getToken().transfer(investor, amount)"
            ],
            "jump3747": [
                "crowdsale.isCrowdsale()",
                "crowdsale.isCrowdsale()"
            ],
            "block2513_2": [
                "crowdsale.token()"
            ],
            "jump2513_0": [
                "crowdsale.token()",
                "crowdsale.token()"
            ],
            "block2513": [
                "crowdsale.token()"
            ],
            "jump2513_2": [
                "crowdsale.token()",
                "crowdsale.token()"
            ],
            "jump5471": [
                "crowdsale.invest.value(weiRaised)(address(this))",
                "crowdsale.invest.value(weiRaised)(address(this))"
            ],
            "jump2513_1": [
                "crowdsale.token()",
                "crowdsale.token()"
            ],
            "block3962": [
                "investor.call.value(amount)()"
            ],
            "block2513_1": [
                "crowdsale.token()"
            ],
            "block2513_0": [
                "crowdsale.token()"
            ],
            "jump3119": [
                "getToken().transfer(investor, amount)",
                "getToken().transfer(investor, amount)"
            ],
            "jump2513": [
                "crowdsale.token()",
                "crowdsale.token()"
            ]
        }
    }
}