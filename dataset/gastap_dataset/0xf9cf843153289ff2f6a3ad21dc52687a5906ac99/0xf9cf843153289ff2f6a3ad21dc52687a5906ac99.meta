{
    "BTC": {
        "function_list": [
            "parseVarInt(bytes,uint256)",
            "getBytesLE(bytes,uint256,uint256)",
            "getFirstTwoOutputs(bytes)",
            "checkValueSent(bytes,bytes20,uint256)",
            "scanInputs(bytes,uint256,uint256)",
            "scanOutputs(bytes,uint256,uint256)",
            "sliceBytes20(bytes,uint256)",
            "isP2PKH(bytes,uint256,uint256)",
            "isP2SH(bytes,uint256,uint256)",
            "parseOutputScript(bytes,uint256,uint256)"
        ],
        "initial_state": {
            "parseVarInt(bytes,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256"
                },
                "contract": {}
            },
            "getBytesLE(bytes,uint256,uint256)": {
                "argument": {
                    "data": "bytes",
                    "pos": "uint256",
                    "bits": "uint256"
                },
                "contract": {}
            },
            "getFirstTwoOutputs(bytes)": {
                "argument": {
                    "txBytes": "bytes"
                },
                "contract": {}
            },
            "checkValueSent(bytes,bytes20,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "btcAddress": "bytes20",
                    "value": "uint256"
                },
                "contract": {}
            },
            "scanInputs(bytes,uint256,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256",
                    "stop": "uint256"
                },
                "contract": {}
            },
            "scanOutputs(bytes,uint256,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256",
                    "stop": "uint256"
                },
                "contract": {}
            },
            "sliceBytes20(bytes,uint256)": {
                "argument": {
                    "data": "bytes",
                    "start": "uint256"
                },
                "contract": {}
            },
            "isP2PKH(bytes,uint256,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256",
                    "script_len": "uint256"
                },
                "contract": {}
            },
            "isP2SH(bytes,uint256,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256",
                    "script_len": "uint256"
                },
                "contract": {}
            },
            "parseOutputScript(bytes,uint256,uint256)": {
                "argument": {
                    "txBytes": "bytes",
                    "pos": "uint256",
                    "script_len": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "sliceBytes20(bytes,uint256)": [
                1019,
                171
            ],
            "parseOutputScript(bytes,uint256,uint256)": [
                192,
                83
            ],
            "isP2PKH(bytes,uint256,uint256)": [
                509,
                127
            ],
            "parseVarInt(bytes,uint256)": [
                367,
                105
            ],
            "scanOutputs(bytes,uint256,uint256)": [
                658,
                149
            ],
            "isP2SH(bytes,uint256,uint256)": [
                1184,
                193
            ],
            "getBytesLE(bytes,uint256,uint256)": [
                1333,
                215
            ],
            "checkValueSent(bytes,bytes20,uint256)": [
                1901,
                281
            ],
            "scanInputs(bytes,uint256,uint256)": [
                1684,
                259
            ],
            "getFirstTwoOutputs(bytes)": [
                1478,
                237
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "Ownable1()",
            "Ownable2()",
            "Ownable3()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "Ownable1()": {
                "argument": {},
                "contract": {}
            },
            "Ownable2()": {
                "argument": {},
                "contract": {}
            },
            "Ownable3()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "Ownable2()": [
                344,
                141
            ],
            "Ownable3()": [
                454,
                185
            ],
            "Ownable1()": [
                147,
                75
            ],
            "transferOwnership(address)": [
                564,
                229
            ]
        },
        "block_CALL_mapping": {}
    },
    "Pausable": {
        "function_list": [
            "Ownable()",
            "Ownable1()",
            "Ownable2()",
            "Ownable3()",
            "transferOwnership(address)",
            "emergencyStop()",
            "release()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "Ownable1()": {
                "argument": {},
                "contract": {}
            },
            "Ownable2()": {
                "argument": {},
                "contract": {}
            },
            "Ownable3()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {}
            },
            "release()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "Ownable2()": [
                470,
                207
            ],
            "Ownable3()": [
                580,
                251
            ],
            "emergencyStop()": [
                290,
                119
            ],
            "Ownable1()": [
                180,
                75
            ],
            "transferOwnership(address)": [
                690,
                295
            ],
            "release()": [
                447,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Utils": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "emergencyStop()",
            "release()",
            "Ownable()",
            "Ownable1()",
            "Ownable2()",
            "Ownable3()",
            "transferOwnership(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "startTrading()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "investorsCount()",
            "Crowdsale(uint256,address,address)",
            "getState()",
            "getTokens(address)",
            "getStateFunding()",
            "calNewTokens(uint256)",
            "fallback()",
            "tokenAssignExchange(address,uint256)",
            "processTransaction(bytes,uint256,address,bytes20)",
            "changeExchangeRate(uint256,uint256)",
            "blacklist(address)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "emergencyStop()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "release()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "Ownable1()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "Ownable2()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "Ownable3()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "startTrading()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "investorsCount()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "Crowdsale(uint256,address,address)": {
                "argument": {
                    "_fundingStartBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "getTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "getStateFunding()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "calNewTokens(uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "tokenAssignExchange(address,uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "processTransaction(bytes,uint256,address,bytes20)": {
                "argument": {
                    "txn": "bytes",
                    "txHash": "uint256",
                    "btcaddr": "bytes20"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "changeExchangeRate(uint256,uint256)": {
                "argument": {
                    "eth": "uint256",
                    "btc": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "blacklist(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "version": "string",
                    "investmentETH": "uint256",
                    "investmentBTC": "uint256",
                    "initialSupply": "uint256",
                    "_totalSupply": "uint256",
                    "fundingStartBlock": "uint256",
                    "minBtcValue": "uint256",
                    "tokensPerEther": "uint256",
                    "tokensPerBTC": "uint256",
                    "tokenCreationMax": "uint256",
                    "investors": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                1875,
                669
            ],
            "emergencyStop()": [
                1091,
                383
            ],
            "release()": [
                1426,
                493
            ]
        },
        "block_CALL_mapping": {
            "jump4833": [
                "gxc.unlock()",
                "gxc.unlock()"
            ],
            "block7053": [
                "gxc.burn(msg.sender, value)"
            ],
            "jump2547": [
                "gxc.transfer(_backer, GXCToSend)",
                "gxc.transfer(_backer, GXCToSend)"
            ],
            "jump2547_0": [
                "gxc.transfer(_backer, GXCToSend)",
                "gxc.transfer(_backer, GXCToSend)"
            ],
            "block7498": [
                "payee.send(payment)"
            ],
            "jump4031": [
                "multisigETH.send(this.balance)",
                "multisigETH.send(this.balance)"
            ],
            "block4031": [
                "multisigETH.send(this.balance)"
            ],
            "block5306": [
                "gxc.burn(this, gxc.balanceOf(this))"
            ],
            "jump4629": [
                "gxc.transfer(team,  gxc.balanceOf(this))",
                "gxc.transfer(team,  gxc.balanceOf(this))"
            ],
            "jump3748": [
                "gxc.transfer(_devAddress,  gxc.balanceOf(this))",
                "gxc.transfer(_devAddress,  gxc.balanceOf(this))"
            ],
            "jump7498": [
                "payee.send(payment)",
                "payee.send(payment)"
            ],
            "jump5306": [
                "gxc.burn(this, gxc.balanceOf(this))",
                "gxc.burn(this, gxc.balanceOf(this))"
            ],
            "jump7053": [
                "gxc.burn(msg.sender, value)",
                "gxc.burn(msg.sender, value)"
            ],
            "block4437": [
                "gxc.balanceOf(this)"
            ],
            "block4629": [
                "gxc.transfer(team,  gxc.balanceOf(this))"
            ],
            "block3748": [
                "gxc.transfer(_devAddress,  gxc.balanceOf(this))"
            ],
            "jump3556": [
                "gxc.balanceOf(this)",
                "gxc.balanceOf(this)"
            ],
            "jump5114": [
                "gxc.balanceOf(this)",
                "gxc.balanceOf(this)"
            ],
            "block2547_0": [
                "gxc.transfer(_backer, GXCToSend)"
            ],
            "jump4437": [
                "gxc.balanceOf(this)",
                "gxc.balanceOf(this)"
            ],
            "jump6231": [
                "owner.send(this.balance)",
                "owner.send(this.balance)"
            ],
            "block6231": [
                "owner.send(this.balance)"
            ],
            "block5114": [
                "gxc.balanceOf(this)"
            ],
            "block4833": [
                "gxc.unlock()"
            ],
            "block3556": [
                "gxc.balanceOf(this)"
            ],
            "block2547": [
                "gxc.transfer(_backer, GXCToSend)"
            ]
        }
    }
}