{
    "ZiberToken": {
        "function_list": [
            "ZiberToken()",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "loadRefund()",
            "refund()",
            "transfer(address,uint256)",
            "activate_kill_switch()",
            "withdraw()",
            "add_to_ico()",
            "claim_ico()",
            "withdrawEth()",
            "kill()",
            "default_helper()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "ZiberToken()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "activate_kill_switch()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "add_to_ico()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "claim_ico()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "default_helper()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ico": "uint256",
                    "time_bought": "uint256",
                    "extra_time_bought": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "ZBR_per_eth": "uint256",
                    "ZBR_total_reserve": "uint256",
                    "ZBR_dev_reserved": "uint256",
                    "ZBR_for_selling": "uint256",
                    "ZBR_for_ico": "uint256",
                    "min_eth_to_end": "uint256",
                    "max_eth_to_end": "uint256",
                    "registredTo": "uint256",
                    "loadedRefund": "uint256",
                    "_supply": "uint256",
                    "_name": "string",
                    "_symbol": "string",
                    "_decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "kill()": [
                598,
                163
            ],
            "default_helper()": [
                755,
                229
            ],
            "withdrawEth()": [
                1189,
                427
            ],
            "loadRefund()": [
                988,
                361
            ],
            "add_to_ico()": [
                1289,
                471
            ],
            "withdraw()": [
                575,
                141
            ],
            "transfer(address,uint256)": [
                3025,
                1042
            ],
            "claim_ico()": [
                765,
                251
            ],
            "activate_kill_switch()": [
                878,
                317
            ]
        },
        "block_CALL_mapping": {
            "jump3025_1": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "jump3025_0": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "block3025_1": [
                "token.transfer(developer_address, fee)"
            ],
            "block3025_0": [
                "token.transfer(developer_address, fee)"
            ],
            "block3025": [
                "token.transfer(developer_address, fee)"
            ],
            "jump3295": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3926": [
                "msg.sender.transfer(ico)"
            ],
            "block3295": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3867": [
                "token.proxyPayment.value(this.balance - ico)(address(this))"
            ],
            "jump1617_0": [
                "token.CAP()",
                "token.CAP()"
            ],
            "jump1617_1": [
                "token.CAP()",
                "token.CAP()"
            ],
            "block1810_1": [
                "token.totalEthers()"
            ],
            "block2347_2": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block2347_1": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block2347_0": [
                "msg.sender.transfer(eth_amount)"
            ],
            "jump3295_1": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block2347": [
                "msg.sender.transfer(eth_amount)"
            ],
            "block1810_0": [
                "token.totalEthers()"
            ],
            "block1810": [
                "token.totalEthers()"
            ],
            "jump1810_0": [
                "token.totalEthers()",
                "token.totalEthers()"
            ],
            "block3025_2": [
                "token.transfer(developer_address, fee)"
            ],
            "jump1617": [
                "token.CAP()",
                "token.CAP()"
            ],
            "jump2347": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump3025_2": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "jump3295_2": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump3295_0": [
                "token.transfer(msg.sender, ZBR_amount - fee)",
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block1617": [
                "token.CAP()"
            ],
            "block3295_0": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3295_1": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "block3295_2": [
                "token.transfer(msg.sender, ZBR_amount - fee)"
            ],
            "jump4614": [
                "msg.sender.transfer(this.balance)",
                "msg.sender.transfer(this.balance)"
            ],
            "jump3025": [
                "token.transfer(developer_address, fee)",
                "token.transfer(developer_address, fee)"
            ],
            "jump3926": [
                "msg.sender.transfer(ico)",
                "msg.sender.transfer(ico)"
            ],
            "jump4064": [
                "msg.sender.transfer(ico)",
                "msg.sender.transfer(ico)"
            ],
            "block1617_0": [
                "token.CAP()"
            ],
            "block4064": [
                "msg.sender.transfer(ico)"
            ],
            "jump3867": [
                "token.proxyPayment.value(this.balance - ico)(address(this))",
                "token.proxyPayment.value(this.balance - ico)(address(this))"
            ],
            "block1617_1": [
                "token.CAP()"
            ],
            "jump1810_1": [
                "token.totalEthers()",
                "token.totalEthers()"
            ],
            "block4614": [
                "msg.sender.transfer(this.balance)"
            ],
            "jump2347_1": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump2347_0": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump2347_2": [
                "msg.sender.transfer(eth_amount)",
                "msg.sender.transfer(eth_amount)"
            ],
            "jump1810": [
                "token.totalEthers()",
                "token.totalEthers()"
            ]
        }
    }
}