{
    "OwnableExtended": {
        "function_list": [
            "OwnableExtended()",
            "transferOwnership(address)",
            "changeAdmin(address)"
        ],
        "initial_state": {
            "OwnableExtended()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeAdmin(address)": [
                190,
                97
            ],
            "transferOwnership(address)": [
                257,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "iChampion": {
        "function_list": [
            "buyTicket(address)",
            "startGame()",
            "finishCurrentGame()",
            "setGamePrize(uint256,uint256)"
        ],
        "initial_state": {
            "buyTicket(address)": {
                "argument": {},
                "contract": {
                    "currentGameBlockNumber": "uint256"
                }
            },
            "startGame()": {
                "argument": {},
                "contract": {
                    "currentGameBlockNumber": "uint256"
                }
            },
            "finishCurrentGame()": {
                "argument": {},
                "contract": {
                    "currentGameBlockNumber": "uint256"
                }
            },
            "setGamePrize(uint256,uint256)": {
                "argument": {
                    "": "uint256"
                },
                "contract": {
                    "currentGameBlockNumber": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "startGame()": [
                251,
                119
            ],
            "finishCurrentGame()": [
                298,
                141
            ],
            "setGamePrize(uint256,uint256)": [
                385,
                163
            ],
            "buyTicket(address)": [
                157,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ottolotto": {
        "function_list": [
            "OwnableExtended()",
            "transferOwnership(address)",
            "changeAdmin(address)",
            "Ottolotto()",
            "init(address)",
            "getLastGames()",
            "getGamePrize(uint256)",
            "getGameStartBlock(uint256)",
            "getGameCalculationProgress(uint256)",
            "getPlayersCount(uint256)",
            "getGameCalculatedStats(uint256)",
            "getPartner(address)",
            "getPartners(address)",
            "getBet(address,uint256)",
            "getWinners(uint256)",
            "betsArePayed(address,uint256)",
            "getGameBlocks(uint256)",
            "toBytes(uint8,uint8,uint8,uint8,uint8,uint8)",
            "modifyBet(bytes32,uint256)",
            "modifyBlock(uint256)",
            "equalNumber(bytes32,uint256,uint256)",
            "makeBet(uint8,uint8,uint8,uint8,uint8,uint8,address)",
            "startGame()",
            "getMatches(uint256,bytes3)",
            "getAllMatches(uint256)",
            "gameIsOver(uint256)",
            "gameIsCalculated(uint256)",
            "updateGameToCalculated(uint256)",
            "processGame(uint256,uint256)",
            "distributeRaisedWeiToJackpot(uint256)",
            "changeTicketPrice(uint256)",
            "distributeFunds(uint256,uint256,uint8,address)",
            "getPrize(address,uint256,bytes3,uint16)",
            "addPartner(address,address)",
            "startChampionGame()",
            "finishChampionGame()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "OwnableExtended()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "changeAdmin(address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "Ottolotto()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "init(address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getLastGames()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getGamePrize(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getGameStartBlock(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getGameCalculationProgress(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getPlayersCount(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getGameCalculatedStats(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getPartner(address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getPartners(address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getBet(address,uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getWinners(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "betsArePayed(address,uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getGameBlocks(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "toBytes(uint8,uint8,uint8,uint8,uint8,uint8)": {
                "argument": {
                    "n1": "uint8",
                    "n2": "uint8",
                    "n3": "uint8",
                    "n4": "uint8",
                    "n5": "uint8",
                    "n6": "uint8"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "modifyBet(bytes32,uint256)": {
                "argument": {
                    "_bet": "bytes32",
                    "_step": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "modifyBlock(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "equalNumber(bytes32,uint256,uint256)": {
                "argument": {
                    "_bet": "bytes32",
                    "_game": "uint256",
                    "_endBlock": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "makeBet(uint8,uint8,uint8,uint8,uint8,uint8,address)": {
                "argument": {
                    "n1": "uint8",
                    "n2": "uint8",
                    "n3": "uint8",
                    "n4": "uint8",
                    "n5": "uint8",
                    "n6": "uint8"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "startGame()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getMatches(uint256,bytes3)": {
                "argument": {
                    "_game": "uint256",
                    "_bet": "bytes3"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getAllMatches(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "gameIsOver(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "gameIsCalculated(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "updateGameToCalculated(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "processGame(uint256,uint256)": {
                "argument": {
                    "_game": "uint256",
                    "calculationStep": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "distributeRaisedWeiToJackpot(uint256)": {
                "argument": {
                    "_game": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "changeTicketPrice(uint256)": {
                "argument": {
                    "_newPrice": "uint256"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "distributeFunds(uint256,uint256,uint8,address)": {
                "argument": {
                    "weiWin": "uint256",
                    "_game": "uint256",
                    "matched": "uint8"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "getPrize(address,uint256,bytes3,uint16)": {
                "argument": {
                    "_game": "uint256",
                    "_bet": "bytes3",
                    "_index": "uint16"
                },
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "addPartner(address,address)": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "startChampionGame()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            },
            "finishChampionGame()": {
                "argument": {},
                "contract": {
                    "tickets": "mapping(address => mapping(uint256 => Ottolotto.TicketBet[]))",
                    "gameBets": "mapping(uint256 => Ottolotto.Bet[])",
                    "winners": "mapping(uint256 => Ottolotto.Winner[])",
                    "partners": "mapping(address => address[])",
                    "allGames": "uint256[]",
                    "jackpot": "uint256",
                    "gameNext": "uint256",
                    "gamePlayed": "uint256",
                    "gameDuration": "uint8",
                    "ticketPrice": "uint256",
                    "newPrice": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "gameIsOver(uint256)": [
                1846,
                493
            ],
            "getMatches(uint256,bytes3)": [
                2488,
                625
            ],
            "getPlayersCount(uint256)": [
                3120,
                801
            ],
            "getGameBlocks(uint256)": [
                1276,
                361
            ],
            "changeAdmin(address)": [
                1779,
                471
            ],
            "gameIsCalculated(uint256)": [
                951,
                273
            ],
            "init(address)": [
                509,
                97
            ],
            "startChampionGame()": [
                576,
                119
            ],
            "getGameCalculatedStats(uint256)": [
                2723,
                691
            ],
            "getGameStartBlock(uint256)": [
                886,
                251
            ],
            "processGame(uint256,uint256)": [
                2644,
                669
            ],
            "finishChampionGame()": [
                1406,
                383
            ],
            "startGame()": [
                2959,
                735
            ],
            "getWinners(uint256)": [
                1020,
                295
            ],
            "makeBet(uint8,uint8,uint8,uint8,uint8,uint8,address)": [
                1915,
                515
            ],
            "changeTicketPrice(uint256)": [
                751,
                185
            ],
            "betsArePayed(address,uint256)": [
                1591,
                427
            ],
            "getLastGames()": [
                1193,
                339
            ],
            "getAllMatches(uint256)": [
                3339,
                867
            ],
            "getPrize(address,uint256,bytes3,uint16)": [
                2331,
                603
            ],
            "getGamePrize(uint256)": [
                3055,
                779
            ],
            "getPartners(address)": [
                2114,
                559
            ],
            "transferOwnership(address)": [
                3185,
                823
            ],
            "getGameCalculationProgress(uint256)": [
                599,
                141
            ],
            "getBet(address,uint256)": [
                1429,
                405
            ],
            "getPartner(address)": [
                2828,
                713
            ]
        },
        "block_CALL_mapping": {
            "jump8971": [
                "champion.buyTicket(msg.sender)",
                "champion.buyTicket(msg.sender)"
            ],
            "jump15497": [
                "owner.transfer(toOwner - toPartner)",
                "owner.transfer(toOwner - toPartner)"
            ],
            "jump6067": [
                "champion.finishCurrentGame()",
                "champion.finishCurrentGame()"
            ],
            "block6522": [
                "owner.transfer(jackpot.div(5))"
            ],
            "jump15162": [
                "partner[_player].transfer(toPartner)",
                "partner[_player].transfer(toPartner)"
            ],
            "block15497": [
                "owner.transfer(toOwner - toPartner)"
            ],
            "jump5872": [
                "champion.currentGameBlockNumber()",
                "champion.currentGameBlockNumber()"
            ],
            "jump6522": [
                "owner.transfer(jackpot.div(5))",
                "owner.transfer(jackpot.div(5))"
            ],
            "jump6321": [
                "champion.setGamePrize(currentGame, jackpot)",
                "champion.setGamePrize(currentGame, jackpot)"
            ],
            "jump4461": [
                "champion.currentGameBlockNumber()",
                "champion.currentGameBlockNumber()"
            ],
            "block6321": [
                "champion.setGamePrize(currentGame, jackpot)"
            ],
            "jump6393": [
                "winner.transfer(jackpot - jackpot.div(5))",
                "winner.transfer(jackpot - jackpot.div(5))"
            ],
            "block8971": [
                "champion.buyTicket(msg.sender)"
            ],
            "block15162": [
                "partner[_player].transfer(toPartner)"
            ],
            "block6393": [
                "winner.transfer(jackpot - jackpot.div(5))"
            ],
            "jump15425": [
                "_player.transfer(weiWin - toOwner)",
                "_player.transfer(weiWin - toOwner)"
            ],
            "block15425": [
                "_player.transfer(weiWin - toOwner)"
            ],
            "jump4267": [
                "champion.startGame()",
                "champion.startGame()"
            ],
            "block4461": [
                "champion.currentGameBlockNumber()"
            ],
            "block6067": [
                "champion.finishCurrentGame()"
            ],
            "block5872": [
                "champion.currentGameBlockNumber()"
            ],
            "block4267": [
                "champion.startGame()"
            ]
        }
    }
}