{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Math": {
        "function_list": [
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "LRCLongTermHoldingContract": {
        "function_list": [
            "LRCLongTermHoldingContract(address,address)",
            "start()",
            "fallback()",
            "lrcBalance()",
            "depositLRC()",
            "withdrawLRC()",
            "getBonus(uint256)",
            "internalCalculateBonus(uint256,uint256,uint256)",
            "sqrt(uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "LRCLongTermHoldingContract(address,address)": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "lrcBalance()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "depositLRC()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "withdrawLRC()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "getBonus(uint256)": {
                "argument": {
                    "_lrcWithdrawalBase": "uint256"
                },
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "internalCalculateBonus(uint256,uint256,uint256)": {
                "argument": {
                    "_totalBonusRemaining": "uint256",
                    "_lrcDeposited": "uint256",
                    "_lrcWithdrawalBase": "uint256"
                },
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "sqrt(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "DEPOSIT_PERIOD": "uint256",
                    "WITHDRAWAL_DELAY": "uint256",
                    "WITHDRAWAL_SCALE": "uint256",
                    "lrcDeposited": "uint256",
                    "depositStartTime": "uint256",
                    "depositStopTime": "uint256",
                    "depositId": "uint256",
                    "withdrawId": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "depositLRC()": [
                921,
                361
            ],
            "getBonus(uint256)": [
                434,
                141
            ],
            "start()": [
                898,
                339
            ],
            "withdrawLRC()": [
                629,
                207
            ],
            "lrcBalance()": [
                348,
                97
            ]
        },
        "block_CALL_mapping": {
            "block3226_0": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump1287_1": [
                "lrcToken.allowance(msg.sender, address(this))",
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "jump1287_0": [
                "lrcToken.allowance(msg.sender, address(this))",
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "jump3226_4": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump1501_0": [
                "lrcToken\n            .balanceOf(msg.sender)",
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "jump1501_1": [
                "lrcToken\n            .balanceOf(msg.sender)",
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "jump2951_0": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)",
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "jump2951_1": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)",
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "jump3226_0": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump3226_5": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump3226_1": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump3226_2": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump2951": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)",
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "block2103_1": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "block2103_0": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "block2103": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "jump3226": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block1287": [
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "block1501": [
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "jump2103_1": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)",
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "jump2103_0": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)",
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "block3226_2": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block2951_0": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "jump2103": [
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)",
                "lrcToken.transferFrom(msg.sender, address(this), lrcAmount)"
            ],
            "block1501_1": [
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "block3226_6": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block3226_4": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block3226": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block2951_1": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "block1287_1": [
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "block1287_0": [
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "jump3226_6": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block2951": [
                "Token(lrcTokenAddress).transfer(msg.sender, lrcAmount)"
            ],
            "block1501_0": [
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "block3226_1": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block3226_3": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "jump1287": [
                "lrcToken.allowance(msg.sender, address(this))",
                "lrcToken.allowance(msg.sender, address(this))"
            ],
            "jump1501": [
                "lrcToken\n            .balanceOf(msg.sender)",
                "lrcToken\n            .balanceOf(msg.sender)"
            ],
            "jump3226_3": [
                "Token(lrcTokenAddress).balanceOf(address(this))",
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ],
            "block3226_5": [
                "Token(lrcTokenAddress).balanceOf(address(this))"
            ]
        }
    }
}