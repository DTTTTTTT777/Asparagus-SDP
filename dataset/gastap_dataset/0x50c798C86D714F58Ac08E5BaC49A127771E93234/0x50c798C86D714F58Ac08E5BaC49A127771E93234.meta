{
    "ERC20Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approveAndCall(address,uint256,bytes)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                658,
                141
            ],
            "allowance(address,address)": [
                1817,
                449
            ],
            "transferFrom(address,address,uint256)": [
                701,
                163
            ],
            "approve(address,uint256)": [
                456,
                97
            ],
            "balanceOf(address)": [
                940,
                229
            ],
            "transfer(address,uint256)": [
                1487,
                361
            ]
        },
        "block_CALL_mapping": {}
    },
    "Base": {
        "function_list": [
            "Base()",
            "transferOwnership(address)",
            "userRefund()",
            "userRefundTo(address)",
            "_userRefund(address,address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Base()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256"
                }
            },
            "userRefund()": {
                "argument": {},
                "contract": {
                    "createTime": "uint256"
                }
            },
            "userRefundTo(address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256"
                }
            },
            "_userRefund(address,address)": {
                "argument": {},
                "contract": {
                    "createTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "userRefundTo(address)": [
                114,
                75
            ],
            "userRefund()": [
                268,
                119
            ],
            "transferOwnership(address)": [
                378,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump807_0": [
                "_to.transfer(amount)",
                "_to.transfer(amount)"
            ],
            "jump807": [
                "_to.transfer(amount)",
                "_to.transfer(amount)"
            ],
            "block807_0": [
                "_to.transfer(amount)"
            ],
            "block807": [
                "_to.transfer(amount)"
            ]
        }
    },
    "Erc20TokenMarket": {
        "function_list": [
            "Base()",
            "transferOwnership(address)",
            "userRefund()",
            "userRefundTo(address)",
            "_userRefund(address,address)",
            "Erc20TokenMarket()",
            "addBadToken(address)",
            "removeBadToken(address)",
            "isBadToken(address)",
            "setSellerGuarantee(bool,uint256)",
            "checkSellerGuarantee(address)",
            "userRefundWithoutGuaranteeEther()",
            "receiveApproval(address,uint256,address,bytes)",
            "setSellingToken(address,uint256,uint256)",
            "cancelSellingToken(address)",
            "setIsBuying()",
            "buyTokenFrom(address,address,uint256)",
            "fallback()",
            "disToken(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Base()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "userRefund()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "userRefundTo(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "_userRefund(address,address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "Erc20TokenMarket()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "addBadToken(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "removeBadToken(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "isBadToken(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "setSellerGuarantee(bool,uint256)": {
                "argument": {
                    "_gurateeEther": "uint256"
                },
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "checkSellerGuarantee(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "userRefundWithoutGuaranteeEther()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "receiveApproval(address,uint256,address,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "setSellingToken(address,uint256,uint256)": {
                "argument": {
                    "_price": "uint256",
                    "_lineTime": "uint256"
                },
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "cancelSellingToken(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "setIsBuying()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "buyTokenFrom(address,address,uint256)": {
                "argument": {
                    "_buyerTokenPrice": "uint256"
                },
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            },
            "disToken(address)": {
                "argument": {},
                "contract": {
                    "sellerGuaranteeEther": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "disToken(address)": [
                628,
                141
            ],
            "userRefundTo(address)": [
                695,
                163
            ],
            "setSellerGuarantee(bool,uint256)": [
                1813,
                493
            ],
            "userRefundWithoutGuaranteeEther()": [
                956,
                229
            ],
            "setIsBuying()": [
                1636,
                427
            ],
            "userRefund()": [
                979,
                251
            ],
            "setSellingToken(address,uint256,uint256)": [
                849,
                207
            ],
            "addBadToken(address)": [
                1268,
                317
            ],
            "transferOwnership(address)": [
                1746,
                471
            ],
            "buyTokenFrom(address,address,uint256)": [
                1473,
                383
            ],
            "cancelSellingToken(address)": [
                1382,
                361
            ],
            "removeBadToken(address)": [
                363,
                75
            ],
            "receiveApproval(address,uint256,address,bytes)": [
                1089,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump3254": [
                "token.allowance(msg.sender,this)",
                "token.allowance(msg.sender,this)"
            ],
            "jump5419": [
                "token.allowance(msg.sender,this)",
                "token.allowance(msg.sender,this)"
            ],
            "block3254": [
                "token.allowance(msg.sender,this)"
            ],
            "jump7974": [
                "_seller.transfer(etherAmount)",
                "_seller.transfer(etherAmount)"
            ],
            "jump3744": [
                "msg.sender.transfer(amount)",
                "msg.sender.transfer(amount)"
            ],
            "block7839": [
                "token.transferFrom(_seller, msg.sender, canTokenAmount)"
            ],
            "block2826": [
                "token.transfer(owner, a1)"
            ],
            "block2297": [
                "token.balanceOf(this)"
            ],
            "jump4440": [
                "token.allowance(_from, this)",
                "token.allowance(_from, this)"
            ],
            "jump2297": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump2826": [
                "token.transfer(owner, a1)",
                "token.transfer(owner, a1)"
            ],
            "block5419": [
                "token.allowance(msg.sender,this)"
            ],
            "block2554": [
                "token.transfer(msg.sender, a1)"
            ],
            "block6557": [
                "token.balanceOf(_seller)"
            ],
            "jump2554": [
                "token.transfer(msg.sender, a1)",
                "token.transfer(msg.sender, a1)"
            ],
            "block3744": [
                "msg.sender.transfer(amount)"
            ],
            "jump8352": [
                "token.allowance(_seller, this)",
                "token.allowance(_seller, this)"
            ],
            "jump10428_0": [
                "_to.transfer(amount)",
                "_to.transfer(amount)"
            ],
            "block10428_0": [
                "_to.transfer(amount)"
            ],
            "jump7839": [
                "token.transferFrom(_seller, msg.sender, canTokenAmount)",
                "token.transferFrom(_seller, msg.sender, canTokenAmount)"
            ],
            "block8352": [
                "token.allowance(_seller, this)"
            ],
            "block7974": [
                "_seller.transfer(etherAmount)"
            ],
            "jump6215": [
                "token.allowance(_seller, this)",
                "token.allowance(_seller, this)"
            ],
            "jump6557": [
                "token.balanceOf(_seller)",
                "token.balanceOf(_seller)"
            ],
            "jump10428": [
                "_to.transfer(amount)",
                "_to.transfer(amount)"
            ],
            "block6215": [
                "token.allowance(_seller, this)"
            ],
            "block10428": [
                "_to.transfer(amount)"
            ],
            "block4440": [
                "token.allowance(_from, this)"
            ]
        }
    }
}