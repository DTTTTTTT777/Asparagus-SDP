block0(g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	lt(s(1), s(0))
	call(block197())

jump0(s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	geq(s(1), s(0))
	call(block13(g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))

jump13(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block202(s(0), l(l1), l(l0), address, balance, callvalue))

jump13(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))

block13(g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 302407648
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldataload, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block245(s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue))

jump65(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))

block65(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 396229619
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 581074747
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block316(s(0), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))

block87(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 813656850
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	eq(s(2), s(1))
	call(block403(s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value))

jump87(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

block98(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1005487910
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block468(s(0),g(arraysize), l(l1), l(l0), callvalue))

jump98(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block109(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

block109(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1201551676
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block511(s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))

jump109(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l7), l(l6), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, codesize, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block120(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

jump120(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block581(s(0),g(bettingprice), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block131(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

block120(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1907885294
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2001218328
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block624(s(0), l(l1), l(l0), address, balance, callvalue))

jump131(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block142(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

block142(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2017635821
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block667(s(0), l(l1), l(l0), address, balance, callvalue))

jump142(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block153(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))

jump153(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block710(s(0),g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, callvalue, contenders))

jump153(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block164(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block153(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2017932586
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, bettingprice, calldatasize, caller, callvalue, coinbase, contenders, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block765(s(0),g(state), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block175(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

block164(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3248329723
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3436291617
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block822(s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp))

jump175(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block186(s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))

jump186(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block854(s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))

jump186(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block197_0(s(0)))

block186(s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3580569737
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block197()=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block202(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump202(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump202(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block214(s(1), s(0), l(l1), l(l0), address, balance))

jump202(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block210(s(1), s(0)))

block210(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block214(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 223
	nop(PUSH2)
	s(2) = 877
	nop(PUSH2)
	call(block877(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block223(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block245(s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump245(s(2),s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump245(s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block257(s(1), s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump245(s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block253(s(1), s(0)))

block253(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block257(s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 266
	nop(PUSH2)
	s(2) = 908
	nop(PUSH2)
	call(block908(s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block266(s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(1)
	nop(DUP7)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(1)
	s(1) = s(7)
	s(7) = s(8)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump316(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block328(s(1), s(0), l(l1), l(l0)))

jump316(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block324(s(1), s(0)))

block316(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump316(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block324(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block328(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 337
	nop(PUSH2)
	s(2) = 998
	nop(PUSH2)
	call(block998(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block337(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump403(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	eq(s(2), 0)
	call(block415(s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, value))

jump403(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	neq(s(2), 0)
	call(block411(s(1), s(0)))

block403(s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump403(s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0), calldatasize, callvalue, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block411(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block415(s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0), calldatasize, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 446
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = value
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1041
	nop(PUSH2)
	call(block1041(s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block446(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block468(s(0), g(arraysize), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump468(s(2),s(1),s(0),g(arraysize), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump468(s(2), s(1), s(0), g(arraysize), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block480(s(1), s(0),g(arraysize), l(l1), l(l0)))

jump468(s(2), s(1), s(0), g(arraysize), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block476(s(1), s(0)))

block476(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block480(s(1), s(0), g(arraysize), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 489
	nop(PUSH2)
	s(2) = 1498
	nop(PUSH2)
	call(block1498(s(1),s(0),g(arraysize), l(l1), l(l0)))
	nop(JUMP)

block489(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block511(s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(1) = 519
	nop(PUSH2)
	s(2) = 1508
	nop(PUSH2)
	call(block1508(s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))
	nop(JUMP)

block519(s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = 20
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 0
	nop(PUSH1)
	call(block535(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

jump535(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	geq(s(11), s(10))
	call(block562(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump535(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	lt(s(11), s(10))
	call(block544(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block535(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump535(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block544(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(10) = l(l6)
	nop(MLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(11) = s(9)
	nop(DUP2)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 535
	nop(PUSH2)
	call(block535(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block562(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block581(s(0), g(bettingprice), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump581(s(2),s(1),s(0),g(bettingprice), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump581(s(2), s(1), s(0), g(bettingprice), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block593(s(1), s(0),g(bettingprice), l(l1), l(l0)))

jump581(s(2), s(1), s(0), g(bettingprice), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block589(s(1), s(0)))

block589(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block593(s(1), s(0), g(bettingprice), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 602
	nop(PUSH2)
	s(2) = 1603
	nop(PUSH2)
	call(block1603(s(1),s(0),g(bettingprice), l(l1), l(l0)))
	nop(JUMP)

block602(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump624(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block636(s(1), s(0), l(l1), l(l0), address, balance))

jump624(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block632(s(1), s(0)))

block624(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump624(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block632(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block636(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 645
	nop(PUSH2)
	s(2) = 1613
	nop(PUSH2)
	call(block1613_0(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block645(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump667(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	eq(s(2), 0)
	call(block679(s(1), s(0), l(l1), l(l0), address, balance))

jump667(s(2), s(1), s(0), l(l1), l(l0), address, balance, callvalue)=>
	neq(s(2), 0)
	call(block675(s(1), s(0)))

block667(s(0), l(l1), l(l0), address, balance, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump667(s(2),s(1),s(0), l(l1), l(l0), address, balance, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block675(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block679(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 688
	nop(PUSH2)
	s(2) = 1661
	nop(PUSH2)
	call(block1661_0(s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block688(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump710(s(2), s(1), s(0), g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, callvalue, contenders)=>
	eq(s(2), 0)
	call(block722(s(1), s(0),g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, contenders))

jump710(s(2), s(1), s(0), g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, callvalue, contenders)=>
	neq(s(2), 0)
	call(block718(s(1), s(0)))

block710(s(0), g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, callvalue, contenders)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump710(s(2),s(1),s(0),g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, callvalue, contenders))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block718(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block722(s(1), s(0), g(bettingprice), g(arraysize), bettingprice, calldatasize, caller, contenders)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 763
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = contenders
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = bettingprice
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 1745
	nop(PUSH2)
	call(block1745(s(3),s(2),s(1),s(0),g(bettingprice), g(arraysize), caller))
	nop(JUMP)

block763(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump765(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block777(s(1), s(0),g(state), l(l1), l(l0)))

jump765(s(2), s(1), s(0), g(state), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block773(s(1), s(0)))

block765(s(0), g(state), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump765(s(2),s(1),s(0),g(state), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block773(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block777(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 786
	nop(PUSH2)
	s(2) = 1879
	nop(PUSH2)
	call(block1879(s(1),s(0),g(state), l(l1), l(l0)))
	nop(JUMP)

block786(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump786(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(7), s(6))
	call(block802(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump786(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(7), s(6))
	call(block801(s(5), s(4), s(3), s(2), s(1), s(0)))

block801(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block802(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block822(s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, coinbase, difficulty, gas, guess, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 852
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = guess
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 1897
	nop(PUSH2)
	call(block1897(s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(JUMP)

block852(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block854(s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump854(s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump854(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block866(s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump854(s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block862(s(1), s(0)))

block862(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block866(s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 875
	nop(PUSH2)
	s(2) = 2458
	nop(PUSH2)
	call(block2458_0(s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block875(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block877(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = address
	nop(ADDRESS)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(3) = balance
	nop(BALANCE)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block223(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump908(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	leq(s(9), s(8))
	call(block942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump908(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	gt(s(9), s(8))
	call(block941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block908(s(1), s(0), g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump908(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), g(state), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block942(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = 2003
	nop(PUSH2)
	s(8) = g(2003)
	nop(SLOAD)
	s(9) = 954
	nop(PUSH2)
	s(10) = 1661
	nop(PUSH2)
	call(block1661(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block954(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 2
	nop(PUSH1)
	s(11) = g(bettingprice)
	nop(SLOAD)
	s(12) = s(6)
	s(6) = s(11)
	s(11) = s(12)
	nop(SWAP5)
	nop(POP)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	nop(POP)
	s(10) = s(4)
	s(4) = s(9)
	s(9) = s(10)
	nop(SWAP5)
	nop(POP)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	call(block266(s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block998(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 3028
	nop(PUSH2)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(3028_0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block337(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1041(s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 3027
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(3027) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 1000000
	nop(PUSH3)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	call(block1080(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1080(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 2003
	nop(PUSH2)
	s(8) = g(2003)
	nop(SLOAD)
	s(9) = s(5)
	nop(DUP4)
	call(jump1080(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1080(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block1217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1080(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block1092(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1092(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 3
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump1092(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1092(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1107(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1092(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1107(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = slt(s(9), s(8))
	nop(SLT)
	call(jump1107(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1107(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block1166(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1107(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block1129(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1129(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block1166(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1166(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	leq(s(9), s(8))
	call(block1204(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1166(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	gt(s(9), s(8))
	call(block1175(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1166(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	nop(DUP5)
	call(jump1166(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1175(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1190(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1175(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1189(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1175(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 3
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump1175(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1189(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1190(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	call(block1204(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1204(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(8) = 1080
	nop(PUSH2)
	call(block1080(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block1217(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	call(block1222(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1222(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block1486(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump1222(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block1234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1222(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 2003
	nop(PUSH2)
	s(8) = g(2003)
	nop(SLOAD)
	s(9) = s(5)
	nop(DUP4)
	call(jump1222(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1234(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 3
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump1234(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1234(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1249(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1234(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1248(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1248(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1249(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = g(numguesses)
	nop(SLOAD)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = slt(s(9), s(8))
	nop(SLT)
	call(jump1249(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1249(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block1308(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1249(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block1271(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1271(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block1308(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1308(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	neq(s(9), s(8))
	call(block1473(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1308(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	eq(s(9), s(8))
	call(block1317(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1308(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(4)
	nop(DUP5)
	call(jump1308(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1317(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(11), s(10))
	call(block1332(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1317(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(11), s(10))
	call(block1331(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1317(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	s(8) = 3
	nop(PUSH1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump1317(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1331(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1332(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 2
	nop(PUSH1)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(guesses)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2027
	nop(PUSH2)
	s(10) = 3027
	nop(PUSH2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(3027)
	nop(SLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	g(3027) = s(11)
	nop(SSTORE)
	s(11) = 1000
	nop(PUSH2)
	s(12) = s(10)
	nop(DUP2)
	call(jump1332(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1332(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	lt(s(12), s(11))
	call(block1406(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), l(l1), l(l0)))

jump1332(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	geq(s(12), s(11))
	call(block1405(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1405(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1406(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(2027)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2027) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block1473(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))

block1473(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(8) = 1222
	nop(PUSH2)
	call(block1222(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), l(l1), l(l0)))
	nop(JUMP)

block1486(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block446(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1498(s(1), s(0), g(arraysize), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(3) = g(arraysize)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block489(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1508(s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(2) = 1516
	nop(PUSH2)
	s(3) = 3198
	nop(PUSH2)
	call(block3198(s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize))
	nop(JUMP)

jump1516(s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	eq(s(4), s(3))
	call(block1535(s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1516(s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	neq(s(4), s(3))
	call(block1531(s(2), s(1), s(0)))

block1516(s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(4) = g(bettingprice)
	nop(SLOAD)
	s(3) = s(4)*s(3)
	nop(MUL)
	s(4) = callvalue
	nop(CALLVALUE)
	call(jump1516(s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1531(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block1535(s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(3) = 2006
	nop(PUSH2)
	s(4) = 20
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 64
	nop(PUSH1)
	l(l0) = s(6)
	nop(MSTORE)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	call(jump1535(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1535(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	eq(s(9), 0)
	call(block1593(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1535(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	neq(s(9), 0)
	call(block1567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block1567(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	call(block1573(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))

block1573(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(2006)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	call(jump1573(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l0)))
	nop(GT)
	nop(PUSH2)
	nop(JUMPI)

jump1573(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	gt(s(10), s(9))
	call(block1573(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

jump1573(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	leq(s(10), s(9))
	call(block1593(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0)))

block1593(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block519(s(1),s(0), l(l7), l(l6), l(l0)))
	nop(JUMP)

block1603(s(1), s(0), g(bettingprice), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 2
	nop(PUSH1)
	s(3) = g(bettingprice)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block602(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1613(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 100
	nop(PUSH1)
	s(17) = address
	nop(ADDRESS)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(17) = balance
	nop(BALANCE)
	s(18) = s(16)
	nop(DUP2)
	call(jump1613(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1613(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(18), 0)
	call(block1651(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1613(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(18), 0)
	call(block1650(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1650(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1651(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block1674(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1661(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = 1674
	nop(PUSH2)
	s(14) = 1613
	nop(PUSH2)
	call(block1613(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

jump1674(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	lt(s(14), s(13))
	call(block1696(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1674(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	geq(s(14), s(13))
	call(block1688(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

block1674(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(14) = 3027
	nop(PUSH2)
	s(14) = g(3027)
	nop(SLOAD)
	call(jump1674(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block1688(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	s(13) = 3027
	nop(PUSH2)
	s(13) = g(3027)
	nop(SLOAD)
	s(14) = 1699
	nop(PUSH2)
	call(block1699(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1696(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(13) = 1
	nop(PUSH1)
	call(block1699(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1699(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	neq(s(15), 0)
	call(block1734(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))

jump1699(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	eq(s(15), 0)
	call(block1733(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1699(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(14) = s(11)
	nop(DUP3)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(15) = balance
	nop(BALANCE)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	call(jump1699(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1733(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1734(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block954(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance))
	nop(JUMP)

block1745(s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize), caller)=>
	nop(JUMPDEST)
	s(4) = 3028
	nop(PUSH2)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(3028_0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump1745(s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), g(arraysize), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1745(s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize), caller)=>
	eq(s(5), s(4))
	call(block1838(s(3), s(2), s(1), s(0),g(bettingprice), g(arraysize)))

jump1745(s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize), caller)=>
	neq(s(5), s(4))
	call(block1834(s(3), s(2), s(1), s(0)))

block1834(s(3), s(2), s(1), s(0))=>
	s(4) = 1875
	nop(PUSH2)
	call(block1875(s(3),s(2),s(1),s(0)))
	nop(JUMP)

jump1838(s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize))=>
	leq(s(5), s(4))
	call(block1867(s(3), s(2), s(1), s(0),g(bettingprice)))

jump1838(s(5), s(4), s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize))=>
	gt(s(5), s(4))
	call(block1858(s(3), s(2), s(1), s(0),g(bettingprice), g(arraysize)))

block1838(s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize))=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(arraysize) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 1000
	nop(PUSH2)
	s(5) = 1
	nop(PUSH1)
	s(5) = g(arraysize)
	nop(SLOAD)
	call(jump1838(s(5),s(4),s(3),s(2),s(1),s(0),g(bettingprice), g(arraysize)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1858(s(3), s(2), s(1), s(0), g(bettingprice), g(arraysize))=>
	s(4) = 1000
	nop(PUSH2)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(arraysize) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block1867(s(3),s(2),s(1),s(0),g(bettingprice)))

block1867(s(3), s(2), s(1), s(0), g(bettingprice))=>
	nop(JUMPDEST)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 2
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(bettingprice) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block1875(s(3),s(2),s(1),s(0)))

block1875(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block763(s(0)))
	nop(JUMP)

block1879(s(1), s(0), g(state), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(state)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block786(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump1897(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block1914(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1897(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block1913(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1897(s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	call(jump1897(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1913(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump1914(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	leq(s(9), s(8))
	call(block1940(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1914(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	gt(s(9), s(8))
	call(block1939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1914(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(state)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump1914(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1939(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1940(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump1940(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1940(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block1952(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))

jump1940(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block1948(s(5), s(4), s(3), s(2), s(1), s(0)))

block1948(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump1952(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(7), s(6))
	call(block1968(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))

jump1952(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(7), s(6))
	call(block1964(s(5), s(4), s(3), s(2), s(1), s(0)))

block1952(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(6) = g(bettingprice)
	nop(SLOAD)
	s(7) = callvalue
	nop(CALLVALUE)
	call(jump1952(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(bettingprice), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, callvalue, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1964(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block1968(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 2005
	nop(PUSH2)
	s(6) = g(2005)
	nop(SLOAD)
	s(7) = 1000000
	nop(PUSH3)
	s(8) = s(6)
	nop(DUP2)
	call(jump1968(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1968(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block1985(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))

jump1968(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block1984(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1984(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1985(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 2
	nop(PUSH1)
	s(7) = timestamp
	nop(TIMESTAMP)
	s(8) = coinbase
	nop(COINBASE)
	s(9) = difficulty
	nop(DIFFICULTY)
	s(10) = 2004
	nop(PUSH2)
	s(10) = g(2004)
	nop(SLOAD)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(12)
	nop(DUP2)
	l(l1) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 79228162514264337593543950336
	nop(PUSH13)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	l(l2) = s(13)
	nop(MSTORE)
	s(13) = 20
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	l(l8) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 0
	nop(PUSH1)
	s(14) = not(s(14))
	nop(NOT)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l9) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(7)
	s(7) = s(12)
	s(12) = s(13)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(6)
	nop(DUP7)
	s(14) = gas
	nop(GAS)
	s(8) = 1
	nop(CALL)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump1985(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1985(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block2129(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump1985(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l9), l(l8), l(l2), l(l1), l(l0), address, balance, caller, coinbase, difficulty, gas, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block2120(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2120(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

jump2129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block2150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump2129(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block2146(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2129(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump2129(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2146(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(REVERT)

block2150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(8)
	nop(DUP1)
	s(9) = l(l1)
	nop(MLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 2004
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 0
	nop(PUSH1)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(2004) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(6) = g(arraysize)
	nop(SLOAD)
	s(7) = 1
	nop(PUSH1)
	s(8) = 2003
	nop(PUSH2)
	s(8) = g(2003)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	call(jump2150(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	gt(s(7), s(6))
	call(block2452(s(5), s(4), s(3), s(2), s(1), s(0)))

jump2150(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	leq(s(7), s(6))
	call(block2196(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

block2196(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	s(6) = 64
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	l(l0) = s(7)
	nop(MSTORE)
	s(7) = s(6)
	nop(DUP1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	nop(POP)
	s(7) = 3
	nop(PUSH1)
	s(8) = 2003
	nop(PUSH2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(2003)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(2003) = s(9)
	nop(SSTORE)
	s(9) = 1000
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	call(jump2196(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2196(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	lt(s(10), s(9))
	call(block2271(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump2196(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	geq(s(10), s(9))
	call(block2270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2270(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2271(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 32
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(8) = l(l2)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(6)
	nop(DUP2)
	call(jump2271(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2271(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(8), 0)
	call(block2370(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2271(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l2), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(8), 0)
	call(block2369(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2369(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump2370(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block2395(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2370(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block2386(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))

block2370(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 2005
	nop(PUSH2)
	s(6) = g(2005)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump2370(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2386(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(6) = 1
	nop(PUSH1)
	s(7) = 2005
	nop(PUSH2)
	s(7) = g(2005)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	call(block2395(s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))

block2395(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = 2006
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	call(jump2395(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2395(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block2411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2395(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block2410(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2410(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(6) = g(arraysize)
	nop(SLOAD)
	s(7) = 2003
	nop(PUSH2)
	s(7) = g(2003)
	nop(SLOAD)
	call(jump2411(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(7), s(6))
	call(block2451(s(5), s(4), s(3), s(2), s(1), s(0)))

jump2411(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(arraysize), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(7), s(6))
	call(block2443(s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block2443(s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(6) = 2450
	nop(PUSH2)
	s(7) = 2458
	nop(PUSH2)
	call(block2458(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2450(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block2451(s(5),s(4),s(3),s(2),s(1),s(0)))

block2451(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block2452(s(5),s(4),s(3),s(2),s(1),s(0)))

block2452(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block852(s(0)))
	nop(JUMP)

jump2458(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(19), s(18))
	call(block2497(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2458(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(19), s(18))
	call(block2496(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2458(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(state)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	call(jump2458(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2496(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2497(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(state) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 1
	nop(PUSH1)
	s(14) = 1000000
	nop(PUSH3)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(15) = 2004
	nop(PUSH2)
	s(15) = g(2004)
	nop(SLOAD)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	call(jump2497(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2497(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block2528(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2497(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block2527(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2527(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2528(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(14)%s(13)
	nop(MOD)
	s(14) = s(7)
	s(7) = s(13)
	s(13) = s(14)
	nop(SWAP6)
	nop(POP)
	s(13) = 2540
	nop(PUSH2)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1041
	nop(PUSH2)
	call(block1041_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2540(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(8)
	s(8) = s(13)
	s(13) = s(14)
	nop(SWAP5)
	nop(POP)
	s(13) = 2550
	nop(PUSH2)
	s(14) = 1661
	nop(PUSH2)
	call(block1661_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2550(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(9)
	s(9) = s(13)
	s(13) = s(14)
	nop(SWAP4)
	nop(POP)
	s(13) = 3027
	nop(PUSH2)
	s(13) = g(3027)
	nop(SLOAD)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = address
	nop(ADDRESS)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14) = balance
	nop(BALANCE)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	call(block2590(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2590(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 3027
	nop(PUSH2)
	s(13) = g(3027)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	call(jump2590(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2590(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block2883(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize))

jump2590(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block2602(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2602(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block2618(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2602(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block2617(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2602(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(13) = 2027
	nop(PUSH2)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 1000
	nop(PUSH2)
	s(16) = s(14)
	nop(DUP2)
	call(jump2602(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2617(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2618(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(2027)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2300
	nop(PUSH2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(15)
	nop(DUP6)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(14)
	nop(DUP9)
	s(17) = 1
	nop(CALL)
	s(18) = s(13)
	s(13) = s(17)
	s(17) = s(18)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump2618(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2618(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block2727(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2618(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block2718(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2718(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(14) = returndatasize
	nop(RETURNDATASIZE)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(15) = returndatasize
	nop(RETURNDATASIZE)
	s(16) = 0
	nop(PUSH1)
	nop(REVERT)

block2727(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = 10161437123019703799368490947982123334096525230655471442976718163230804810685
	nop(PUSH32)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 2026
	nop(PUSH2)
	s(17) = g(2026)
	nop(SLOAD)
	s(18) = s(7)
	nop(DUP11)
	s(19) = timestamp
	nop(TIMESTAMP)
	s(20) = 64
	nop(PUSH1)
	s(20) = l(l0)
	nop(MLOAD)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(14)
	nop(DUP8)
	s(23) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(22) = and(s(23), s(22))
	nop(AND)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(15)
	nop(DUP7)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(16)
	nop(DUP6)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	nop(DUP5)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(18)
	nop(DUP4)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(19)
	nop(DUP3)
	s(23) = s(21)
	nop(DUP2)
	ls(1) = s(22)
	ls(2) = s(23)
	nop(MSTORE)
	s(22) = 32
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(14)
	s(14) = s(21)
	s(21) = s(22)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = 2590
	nop(PUSH2)
	call(block2590(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2883(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 111878518489905076529453067008237143312024387244205214753439995900192534493299
	nop(PUSH32)
	s(14) = s(10)
	nop(DUP4)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(15) = balance
	nop(BALANCE)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	nop(DUP2)
	ls(1) = s(18)
	ls(2) = s(19)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	s(13) = 3028
	nop(PUSH2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(3028_0)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 2300
	nop(PUSH2)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(15)
	nop(DUP6)
	s(22) = s(13)
	nop(DUP9)
	s(23) = s(14)
	nop(DUP9)
	s(17) = 1
	nop(CALL)
	s(18) = s(13)
	s(13) = s(17)
	s(17) = s(18)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump2883(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2883(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	eq(s(14), 0)
	call(block3074(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2883(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	neq(s(14), 0)
	call(block3065(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block3065(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(14) = returndatasize
	nop(RETURNDATASIZE)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(15) = returndatasize
	nop(RETURNDATASIZE)
	s(16) = 0
	nop(PUSH1)
	nop(REVERT)

block3074(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = 2003
	nop(PUSH2)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(2003) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	call(block3089(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))

block3089(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(13) = 2005
	nop(PUSH2)
	s(13) = g(2005)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	call(jump3089(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3089(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(14), s(13))
	call(block3136(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3089(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(14), s(13))
	call(block3101(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

block3101(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = 2006
	nop(PUSH2)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 20
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	call(jump3101(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3101(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(17), s(16))
	call(block3118(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3101(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(17), s(16))
	call(block3117(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3117(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3118(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(2006) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = 3089
	nop(PUSH2)
	call(block3089(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(JUMP)

jump3136(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	leq(s(19), s(18))
	call(block3185(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3136(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	gt(s(19), s(18))
	call(block3184(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3136(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(13) = 2026
	nop(PUSH2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(15) = g(2026)
	nop(SLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	g(2026) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 0
	nop(PUSH1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	nop(DUP2)
	s(16) = g(state)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 1
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	call(jump3136(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3184(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3185(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(state) = s(14)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2450(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block3198(s(2), s(1), s(0), g(bettingprice), l(l7), l(l6), l(l0), callvalue, codesize)=>
	nop(JUMPDEST)
	s(3) = 640
	nop(PUSH2)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 64
	nop(PUSH1)
	l(l0) = s(4)
	nop(MSTORE)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 20
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(6)
	nop(DUP1)
	s(8) = codesize
	nop(CODESIZE)
	s(9) = s(5)
	nop(DUP4)
	nop(CODECOPY)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	call(block1516(s(2),s(1),s(0),g(bettingprice), l(l7), l(l6), l(l0), callvalue))
	nop(JUMP)

block1041_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = 3027
	nop(PUSH2)
	s(22) = s(20)
	nop(DUP2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	g(3027) = s(21)
	nop(SSTORE)
	nop(POP)
	s(20) = 1000000
	nop(PUSH3)
	s(21) = s(16)
	s(16) = s(20)
	s(20) = s(21)
	nop(SWAP4)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	call(block1080_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1041_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 3027
	nop(PUSH2)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(3027) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 1000000
	nop(PUSH3)
	s(16) = s(11)
	s(11) = s(15)
	s(15) = s(16)
	nop(SWAP4)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	call(block1080_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1080_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(21), s(20))
	call(block1217_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1080_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(21), s(20))
	call(block1092_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1080_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 2003
	nop(PUSH2)
	s(20) = g(2003)
	nop(SLOAD)
	s(21) = s(17)
	nop(DUP4)
	call(jump1080_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1080_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block1217_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1080_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block1092_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1080_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 2003
	nop(PUSH2)
	s(15) = g(2003)
	nop(SLOAD)
	s(16) = s(12)
	nop(DUP4)
	call(jump1080_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1092_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block1107_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1092_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block1106_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1092_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 3
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump1092_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1092_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1107_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1092_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1106_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1092_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 3
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump1092_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1106_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1106_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1107_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(14)
	nop(DUP7)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = slt(s(21), s(20))
	nop(SLT)
	call(jump1107_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1107_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(20), 0)
	call(block1166_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1107_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(20), 0)
	call(block1129_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1107_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(9)
	nop(DUP7)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = slt(s(16), s(15))
	nop(SLT)
	call(jump1107_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1107_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block1166_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1107_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block1129_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1129_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	call(block1166_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1129_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	call(block1166_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1166_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	nop(DUP5)
	call(jump1166_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1166_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(21), s(20))
	call(block1204_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1166_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(21), s(20))
	call(block1175_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1166_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	call(jump1166_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1166_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(16), s(15))
	call(block1204_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1166_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(16), s(15))
	call(block1175_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1175_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block1190_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1175_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block1189_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1175_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 3
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump1175_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1175_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1190_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1175_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1189_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1175_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 3
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump1175_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1189_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1189_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1190_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	s(16) = s(20)
	s(20) = s(21)
	nop(SWAP4)
	nop(POP)
	call(block1204_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1190_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	s(11) = s(15)
	s(15) = s(16)
	nop(SWAP4)
	nop(POP)
	call(block1204_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1204_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(20)
	nop(DUP1)
	s(22) = 1
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	s(17) = s(21)
	s(21) = s(22)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(20) = 1080
	nop(PUSH2)
	call(block1080_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1204_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	s(12) = s(16)
	s(16) = s(17)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(15) = 1080
	nop(PUSH2)
	call(block1080_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1217_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	nop(POP)
	call(block1222_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1217_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	call(block1222_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1222_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = 2003
	nop(PUSH2)
	s(20) = g(2003)
	nop(SLOAD)
	s(21) = s(17)
	nop(DUP4)
	call(jump1222_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1222_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(21), s(20))
	call(block1486_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1222_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(21), s(20))
	call(block1234_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1222_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 2003
	nop(PUSH2)
	s(15) = g(2003)
	nop(SLOAD)
	s(16) = s(12)
	nop(DUP4)
	call(jump1222_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1222_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block1486_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1222_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block1234_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1234_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block1249_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1234_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block1248_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1234_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 3
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump1234_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1234_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1249_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1234_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1248_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1234_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 3
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump1234_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1248_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1248_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1249_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(20) = g(numguesses)
	nop(SLOAD)
	s(21) = s(14)
	nop(DUP7)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(18)
	nop(DUP3)
	s(20) = slt(s(21), s(20))
	nop(SLT)
	call(jump1249_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1249_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(20), 0)
	call(block1308_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1249_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(20), 0)
	call(block1271_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1249_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 1
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(15) = g(numguesses)
	nop(SLOAD)
	s(16) = s(9)
	nop(DUP7)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(15) = slt(s(16), s(15))
	nop(SLT)
	call(jump1249_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1249_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(15), 0)
	call(block1308_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1249_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(15), 0)
	call(block1271_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1271_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(21) = s(18)
	nop(DUP3)
	s(20) = s(21)*s(20)
	nop(MUL)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	call(block1308_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1271_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 115792089237316195423570985008687907853269984665640564039457584007913129639935
	nop(PUSH32)
	s(16) = s(13)
	nop(DUP3)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	call(block1308_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1308_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(16)
	nop(DUP5)
	call(jump1308_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1308_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(21), s(20))
	call(block1473_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1308_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(21), s(20))
	call(block1317_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1308_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(11)
	nop(DUP5)
	call(jump1308_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1308_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(16), s(15))
	call(block1473_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1308_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(16), s(15))
	call(block1317_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1317_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(23), s(22))
	call(block1332_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1317_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(23), s(22))
	call(block1331_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1317_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(20) = 3
	nop(PUSH1)
	s(21) = s(17)
	nop(DUP4)
	s(22) = 1000
	nop(PUSH2)
	s(23) = s(21)
	nop(DUP2)
	call(jump1317_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1317_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1332_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1317_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1331_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1317_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(15) = 3
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1000
	nop(PUSH2)
	s(18) = s(16)
	nop(DUP2)
	call(jump1317_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1331_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1331_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1332_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(22) = 2
	nop(PUSH1)
	s(21) = s(22)*s(21)
	nop(MUL)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(21) = g(guesses)
	nop(SLOAD)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = 256
	nop(PUSH2)
	s(21) = s(22)^s(21)
	nop(EXP)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 2027
	nop(PUSH2)
	s(22) = 3027
	nop(PUSH2)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(22)
	nop(DUP2)
	s(24) = g(3027)
	nop(SLOAD)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	s(26) = 1
	nop(PUSH1)
	s(25) = s(26)+s(25)
	nop(ADD)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	nop(POP)
	g(3027) = s(23)
	nop(SSTORE)
	s(23) = 1000
	nop(PUSH2)
	s(24) = s(22)
	nop(DUP2)
	call(jump1332_0(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1332_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(24), s(23))
	call(block1406_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1332_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(24), s(23))
	call(block1405_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1332_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 2
	nop(PUSH1)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(guesses)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 2027
	nop(PUSH2)
	s(17) = 3027
	nop(PUSH2)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(17)
	nop(DUP2)
	s(19) = g(3027)
	nop(SLOAD)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 1
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	g(3027) = s(18)
	nop(SSTORE)
	s(18) = 1000
	nop(PUSH2)
	s(19) = s(17)
	nop(DUP2)
	call(jump1332_1(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1332_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(19), s(18))
	call(block1406_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump1332_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(19), s(18))
	call(block1405_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1405_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1405_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1406_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = 0
	nop(PUSH1)
	s(23) = 256
	nop(PUSH2)
	s(22) = s(23)^s(22)
	nop(EXP)
	s(23) = s(21)
	nop(DUP2)
	s(23) = g(2027)
	nop(SLOAD)
	s(24) = s(22)
	nop(DUP2)
	s(25) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(24) = s(25)*s(24)
	nop(MUL)
	s(24) = not(s(24))
	nop(NOT)
	s(23) = and(s(24), s(23))
	nop(AND)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = s(20)
	nop(DUP4)
	s(25) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(24) = and(s(25), s(24))
	nop(AND)
	s(23) = s(24)*s(23)
	nop(MUL)
	s(22) = or(s(23), s(22))
	nop(OR)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	g(2027) = s(21)
	nop(SSTORE)
	nop(POP)
	call(block1473_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1406_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	nop(DUP2)
	s(18) = g(2027)
	nop(SLOAD)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(2027) = s(16)
	nop(SSTORE)
	nop(POP)
	call(block1473_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

block1473_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(20)
	nop(DUP1)
	s(22) = 1
	nop(PUSH1)
	s(21) = s(22)+s(21)
	nop(ADD)
	s(22) = s(17)
	s(17) = s(21)
	s(21) = s(22)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(20) = 1222
	nop(PUSH2)
	call(block1222_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1473_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 1
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	s(12) = s(16)
	s(16) = s(17)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(15) = 1222
	nop(PUSH2)
	call(block1222_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1486_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(15)
	s(15) = s(20)
	s(20) = s(21)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	call(block2540(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1486_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(10)
	s(10) = s(15)
	s(15) = s(16)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block2540_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1613_0(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 100
	nop(PUSH1)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(4)
	nop(DUP2)
	call(jump1613_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1613_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(6), 0)
	call(block1651_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump1613_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(6), 0)
	call(block1650_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block1613_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 100
	nop(PUSH1)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9) = balance
	nop(BALANCE)
	s(10) = s(8)
	nop(DUP2)
	call(jump1613_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1613_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(10), 0)
	call(block1651_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

jump1613_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(10), 0)
	call(block1650_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1613_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 100
	nop(PUSH1)
	s(21) = address
	nop(ADDRESS)
	s(22) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(21) = and(s(22), s(21))
	nop(AND)
	s(21) = balance
	nop(BALANCE)
	s(22) = s(20)
	nop(DUP2)
	call(jump1613_2(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1613_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(22), 0)
	call(block1651_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1613_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(22), 0)
	call(block1650_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1613_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = 100
	nop(PUSH1)
	s(16) = address
	nop(ADDRESS)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(16) = balance
	nop(BALANCE)
	s(17) = s(15)
	nop(DUP2)
	call(jump1613_3(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1613_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(17), 0)
	call(block1651_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1613_3(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(17), 0)
	call(block1650_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1650_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1650_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1650_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1650_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1651_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block645(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1651_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	call(block1674_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1651_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	call(block1674_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1651_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	call(block1674_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1661_0(s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1674
	nop(PUSH2)
	s(6) = 1613
	nop(PUSH2)
	call(block1613_1(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1661_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 0
	nop(PUSH1)
	s(17) = 1674
	nop(PUSH2)
	s(18) = 1613
	nop(PUSH2)
	call(block1613_2(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1661_2(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 1674
	nop(PUSH2)
	s(13) = 1613
	nop(PUSH2)
	call(block1613_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1674_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 3027
	nop(PUSH2)
	s(6) = g(3027)
	nop(SLOAD)
	call(jump1674_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump1674_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	lt(s(6), s(5))
	call(block1696_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

jump1674_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	geq(s(6), s(5))
	call(block1688_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance))

jump1674_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block1696_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1674_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block1688_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1674_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	s(17) = 1
	nop(PUSH1)
	s(18) = 3027
	nop(PUSH2)
	s(18) = g(3027)
	nop(SLOAD)
	call(jump1674_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

block1674_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 1
	nop(PUSH1)
	s(13) = 3027
	nop(PUSH2)
	s(13) = g(3027)
	nop(SLOAD)
	call(jump1674_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump1674_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(13), s(12))
	call(block1696_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1674_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(13), s(12))
	call(block1688_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1688_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	s(5) = 3027
	nop(PUSH2)
	s(5) = g(3027)
	nop(SLOAD)
	s(6) = 1699
	nop(PUSH2)
	call(block1699_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(JUMP)

block1688_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(17) = 3027
	nop(PUSH2)
	s(17) = g(3027)
	nop(SLOAD)
	s(18) = 1699
	nop(PUSH2)
	call(block1699_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1688_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(12) = 3027
	nop(PUSH2)
	s(12) = g(3027)
	nop(SLOAD)
	s(13) = 1699
	nop(PUSH2)
	call(block1699_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1696_0(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(5) = 1
	nop(PUSH1)
	call(block1699_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))

block1696_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 1
	nop(PUSH1)
	call(block1699_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1696_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 1
	nop(PUSH1)
	call(block1699_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block1699_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	nop(JUMPDEST)
	s(6) = s(3)
	nop(DUP3)
	s(7) = address
	nop(ADDRESS)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(7) = balance
	nop(BALANCE)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	nop(DUP2)
	call(jump1699_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), address, balance))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1699_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	neq(s(7), 0)
	call(block1734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump1699_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), address, balance)=>
	eq(s(7), 0)
	call(block1733_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1699_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = s(15)
	nop(DUP3)
	s(19) = address
	nop(ADDRESS)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(19) = balance
	nop(BALANCE)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(19) = s(17)
	nop(DUP2)
	call(jump1699_1(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1699_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(19), 0)
	call(block1734_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1699_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(19), 0)
	call(block1733_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1699_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(10)
	nop(DUP3)
	s(14) = address
	nop(ADDRESS)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(14) = balance
	nop(BALANCE)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	call(jump1699_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1699_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block1734_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump1699_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block1733_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block1733_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1733_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1733_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block1734_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block688(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1734_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	call(block2550(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block1734_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block2550_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block197_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump2458_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(14), s(13))
	call(block2497_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2458_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(14), s(13))
	call(block2496_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2458_0(s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump2458_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2496_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2497_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 1
	nop(PUSH1)
	s(9) = 1000000
	nop(PUSH3)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = timestamp
	nop(TIMESTAMP)
	s(10) = 2004
	nop(PUSH2)
	s(10) = g(2004)
	nop(SLOAD)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	call(jump2497_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2497_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(10), 0)
	call(block2528_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))

jump2497_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(10), 0)
	call(block2527_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2527_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2528_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(9)%s(8)
	nop(MOD)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	s(8) = 2540
	nop(PUSH2)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1041
	nop(PUSH2)
	call(block1041_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(numguesses), g(guesses), g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2540_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(3)
	s(3) = s(8)
	s(8) = s(9)
	nop(SWAP5)
	nop(POP)
	s(8) = 2550
	nop(PUSH2)
	s(9) = 1661
	nop(PUSH2)
	call(block1661_2(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block2550_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	s(8) = 3027
	nop(PUSH2)
	s(8) = g(3027)
	nop(SLOAD)
	s(9) = s(4)
	nop(DUP5)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = address
	nop(ADDRESS)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(9) = balance
	nop(BALANCE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block2590_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2590_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 3027
	nop(PUSH2)
	s(8) = g(3027)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	call(jump2590_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2590_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(9), s(8))
	call(block2883_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize))

jump2590_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(9), s(8))
	call(block2602_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

block2602_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	s(8) = 2027
	nop(PUSH2)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1000
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	call(jump2602_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2602_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(11), s(10))
	call(block2618_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2602_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(11), s(10))
	call(block2617_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block2617_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block2618_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(2027)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump2618_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2618_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(9), 0)
	call(block2727_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state), l(l0), address, balance, returndatasize, timestamp))

jump2618_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(9), 0)
	call(block2718_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2718_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block2727_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = 10161437123019703799368490947982123334096525230655471442976718163230804810685
	nop(PUSH32)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(3)
	nop(DUP8)
	s(12) = 2026
	nop(PUSH2)
	s(12) = g(2026)
	nop(SLOAD)
	s(13) = s(2)
	nop(DUP11)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(9)
	nop(DUP8)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(10)
	nop(DUP7)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(11)
	nop(DUP6)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(12)
	nop(DUP5)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	ls(1) = s(17)
	ls(2) = s(18)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(9)
	s(9) = s(16)
	s(16) = s(17)
	nop(SWAP7)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = 2590
	nop(PUSH2)
	call(block2590_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

jump2883_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	eq(s(9), 0)
	call(block3074_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump2883_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	neq(s(9), 0)
	call(block3065_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block2883_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 111878518489905076529453067008237143312024387244205214753439995900192534493299
	nop(PUSH32)
	s(9) = s(5)
	nop(DUP4)
	s(10) = address
	nop(ADDRESS)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(10) = balance
	nop(BALANCE)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(12)
	nop(DUP2)
	ls(1) = s(13)
	ls(2) = s(14)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG1)
	s(8) = 3028
	nop(PUSH2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(3028_0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 2300
	nop(PUSH2)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = 0
	nop(PUSH1)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(10)
	nop(DUP6)
	s(17) = s(8)
	nop(DUP9)
	s(18) = s(9)
	nop(DUP9)
	s(12) = 1
	nop(CALL)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(8)
	nop(DUP1)
	call(jump2883_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3065_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(10) = returndatasize
	nop(RETURNDATASIZE)
	s(11) = 0
	nop(PUSH1)
	nop(REVERT)

block3074_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = 2003
	nop(PUSH2)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2003) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	call(block3089_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))

block3089_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(8) = 2005
	nop(PUSH2)
	s(8) = g(2005)
	nop(SLOAD)
	s(9) = s(6)
	nop(DUP3)
	call(jump3089_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3089_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(9), s(8))
	call(block3136_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3089_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(9), s(8))
	call(block3101_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

block3101_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	s(8) = 0
	nop(PUSH1)
	s(9) = 2006
	nop(PUSH2)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 20
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	call(jump3101_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3101_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	lt(s(12), s(11))
	call(block3118_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3101_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	geq(s(12), s(11))
	call(block3117_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3117_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3118_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(2006) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = 3089
	nop(PUSH2)
	call(block3089_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(JUMP)

jump3136_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	leq(s(14), s(13))
	call(block3185_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(state)))

jump3136_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	gt(s(14), s(13))
	call(block3184_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block3136_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(8) = 2026
	nop(PUSH2)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(2026)
	nop(SLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	g(2026) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	s(11) = g(state)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	call(jump3136_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(state)))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3184_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block3185_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(state))=>
	nop(JUMPDEST)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(state) = s(9)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block875(s(0)))
	nop(JUMP)

