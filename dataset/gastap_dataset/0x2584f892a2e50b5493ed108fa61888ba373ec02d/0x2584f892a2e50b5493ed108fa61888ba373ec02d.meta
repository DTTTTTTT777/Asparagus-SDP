{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                213,
                119
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                337,
                97
            ],
            "allowance(address,address)": [
                1310,
                295
            ],
            "balanceOf(address)": [
                807,
                207
            ],
            "transferFrom(address,address,uint256)": [
                481,
                141
            ],
            "transfer(address,uint256)": [
                1038,
                251
            ]
        },
        "block_CALL_mapping": {
            "block3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "jump3855": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "enableTransfers(bool)",
            "enableShowValue(bool)",
            "generateTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {}
            },
            "enableShowValue(bool)": {
                "argument": {},
                "contract": {}
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "changeController(address)": [
                526,
                163
            ],
            "transfer(address,uint256)": [
                781,
                229
            ],
            "balanceOf(address)": [
                593,
                185
            ],
            "enableShowValue(bool)": [
                929,
                273
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "enableTransfers(bool)": [
                1095,
                317
            ],
            "generateTokens(address,uint256)": [
                680,
                207
            ],
            "allowance(address,address)": [
                976,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "MiniMeTokenSimple": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "enableTransfers(bool)",
            "enableShowValue(bool)",
            "generateTokens(address,uint256)",
            "Controlled()",
            "changeController(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "MiniMeTokenSimple(address,address,uint256,string,uint8,string,bool)",
            "claimTokens(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "enableShowValue(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "MiniMeTokenSimple(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimTokens(address)": [
                1848,
                471
            ],
            "enableShowValue(bool)": [
                1682,
                427
            ],
            "transferFrom(address,address,uint256)": [
                679,
                185
            ],
            "approve(address,uint256)": [
                445,
                97
            ],
            "enableTransfers(bool)": [
                2002,
                515
            ],
            "changeController(address)": [
                861,
                229
            ],
            "balanceOf(address)": [
                5300,
                847
            ],
            "generateTokens(address,uint256)": [
                1246,
                317
            ],
            "transfer(address,uint256)": [
                5558,
                996
            ],
            "allowance(address,address)": [
                1729,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump5300": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump5010": [
                "controller.transfer(this.balance)",
                "controller.transfer(this.balance)"
            ],
            "block5558": [
                "token.transfer(controller, balance)"
            ],
            "jump5558": [
                "token.transfer(controller, balance)",
                "token.transfer(controller, balance)"
            ],
            "block5010": [
                "controller.transfer(this.balance)"
            ],
            "block5300": [
                "token.balanceOf(this)"
            ]
        }
    },
    "PFCContribution": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "PFCCContribution()",
            "initialize(address,address,uint256,uint256,address,uint256)",
            "fallback()",
            "proxyPayment(address)",
            "setMaxEth(uint256)",
            "setRatio(uint256)",
            "issueTokenToAddress(address,uint256)",
            "finalize()",
            "time()",
            "tokensIssued()",
            "getBlockNumber()",
            "claimTokens(address)",
            "pauseContribution()",
            "resumeContribution()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "PFCCContribution()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "initialize(address,address,uint256,uint256,address,uint256)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_maxEth": "uint256"
                },
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "proxyPayment(address)": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "setMaxEth(uint256)": {
                "argument": {
                    "_maxEth": "uint256"
                },
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "setRatio(uint256)": {
                "argument": {
                    "_ratio": "uint256"
                },
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "issueTokenToAddress(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "time()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "tokensIssued()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "getBlockNumber()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "claimTokens(address)": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "pauseContribution()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "resumeContribution()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "ratio": "uint256",
                    "MIN_FUND": "uint256",
                    "startTime": "uint256",
                    "endTime": "uint256",
                    "finalizedBlock": "uint256",
                    "finalizedTime": "uint256",
                    "totalContributedETH": "uint256",
                    "totalTokenSaled": "uint256",
                    "MaxEth": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "proxyPayment(address)": [
                1978,
                691
            ],
            "claimTokens(address)": [
                7241,
                925
            ],
            "tokensIssued()": [
                1352,
                471
            ],
            "PFCCContribution()": [
                442,
                75
            ],
            "setMaxEth(uint256)": [
                724,
                207
            ],
            "initialize(address,address,uint256,uint256,address,uint256)": [
                902,
                295
            ],
            "changeOwner(address)": [
                1559,
                537
            ],
            "finalize()": [
                792,
                251
            ],
            "issueTokenToAddress(address,uint256)": [
                1482,
                515
            ],
            "pauseContribution()": [
                769,
                229
            ],
            "resumeContribution()": [
                1671,
                581
            ],
            "setRatio(uint256)": [
                1626,
                559
            ],
            "time()": [
                465,
                97
            ],
            "acceptOwnership()": [
                1329,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump5554": [
                "PFC.totalSupply()",
                "PFC.totalSupply()"
            ],
            "jump2701_1": [
                "PFC.generateTokens(_account,tokenSaling)",
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "jump4818": [
                "PFC.decimals()",
                "PFC.decimals()"
            ],
            "jump7844": [
                "token.transfer(owner, balance)",
                "token.transfer(owner, balance)"
            ],
            "jump4589": [
                "PFC.controller()",
                "PFC.controller()"
            ],
            "block4818": [
                "PFC.decimals()"
            ],
            "jump2768": [
                "destEthFoundation.transfer(rValue)",
                "destEthFoundation.transfer(rValue)"
            ],
            "block2768_0": [
                "destEthFoundation.transfer(rValue)"
            ],
            "block2768_1": [
                "destEthFoundation.transfer(rValue)"
            ],
            "jump4361": [
                "PFC.totalSupply()",
                "PFC.totalSupply()"
            ],
            "block3863": [
                "PFC.changeController(pfcController)"
            ],
            "block6015": [
                "PFC.generateTokens(_account, _amount)"
            ],
            "block5554": [
                "PFC.totalSupply()"
            ],
            "jump7298": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block4589": [
                "PFC.controller()"
            ],
            "block2701_1": [
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "block2433": [
                "msg.sender.transfer(reFund)"
            ],
            "jump2433": [
                "msg.sender.transfer(reFund)",
                "msg.sender.transfer(reFund)"
            ],
            "block7241": [
                "PFC.claimTokens(_token)"
            ],
            "jump2701": [
                "PFC.generateTokens(_account,tokenSaling)",
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "jump6015": [
                "PFC.generateTokens(_account, _amount)",
                "PFC.generateTokens(_account, _amount)"
            ],
            "block2701_0": [
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "jump2768_0": [
                "destEthFoundation.transfer(rValue)",
                "destEthFoundation.transfer(rValue)"
            ],
            "jump2768_1": [
                "destEthFoundation.transfer(rValue)",
                "destEthFoundation.transfer(rValue)"
            ],
            "jump2701_0": [
                "PFC.generateTokens(_account,tokenSaling)",
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "block2768": [
                "destEthFoundation.transfer(rValue)"
            ],
            "block7587": [
                "token.balanceOf(this)"
            ],
            "block2433_1": [
                "msg.sender.transfer(reFund)"
            ],
            "block2433_0": [
                "msg.sender.transfer(reFund)"
            ],
            "jump7241": [
                "PFC.claimTokens(_token)",
                "PFC.claimTokens(_token)"
            ],
            "jump3863": [
                "PFC.changeController(pfcController)",
                "PFC.changeController(pfcController)"
            ],
            "block7844": [
                "token.transfer(owner, balance)"
            ],
            "block2701": [
                "PFC.generateTokens(_account,tokenSaling)"
            ],
            "block6965": [
                "PFC.controller()"
            ],
            "jump2433_1": [
                "msg.sender.transfer(reFund)",
                "msg.sender.transfer(reFund)"
            ],
            "jump2433_0": [
                "msg.sender.transfer(reFund)",
                "msg.sender.transfer(reFund)"
            ],
            "jump7587": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "jump6965": [
                "PFC.controller()",
                "PFC.controller()"
            ],
            "block7298": [
                "owner.transfer(this.balance)"
            ],
            "block4361": [
                "PFC.totalSupply()"
            ]
        }
    }
}