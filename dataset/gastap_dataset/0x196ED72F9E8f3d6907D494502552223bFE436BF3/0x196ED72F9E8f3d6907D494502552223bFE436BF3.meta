{
    "myOwned": {
        "function_list": [
            "myOwned()",
            "exOwner(address)"
        ],
        "initial_state": {
            "myOwned()": {
                "argument": {},
                "contract": {}
            },
            "exOwner(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "exOwner(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "aiaPrivatesale": {
        "function_list": [
            "myOwned()",
            "exOwner(address)",
            "aiaPrivatesale(uint256,uint256,uint256,address,address)",
            "saleActive()",
            "getCurrentTimestamp()",
            "getRateAt(uint256)",
            "fallback()",
            "saleEnd()",
            "destroy()"
        ],
        "initial_state": {
            "myOwned()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "exOwner(address)": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "aiaPrivatesale(uint256,uint256,uint256,address,address)": {
                "argument": {
                    "_startDate": "uint256",
                    "_stopDate": "uint256",
                    "_fundingGoal": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "saleActive()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "getCurrentTimestamp()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "getRateAt(uint256)": {
                "argument": {
                    "at": "uint256"
                },
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "saleEnd()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "startDate": "uint256",
                    "stopDate": "uint256",
                    "fundingGoal": "uint256",
                    "amountRaised": "uint256",
                    "exchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "saleEnd()": [
                1627,
                361
            ],
            "saleActive()": [
                1078,
                163
            ],
            "getRateAt(uint256)": [
                1562,
                339
            ],
            "destroy()": [
                1452,
                295
            ],
            "exOwner(address)": [
                1125,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump629_0": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "block629_0": [
                "beneficiary.transfer(msg.value)"
            ],
            "block629": [
                "beneficiary.transfer(msg.value)"
            ],
            "jump2366": [
                "beneficiary.transfer(this.balance)",
                "beneficiary.transfer(this.balance)"
            ],
            "jump609_0": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "block609_0": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "jump609": [
                "tokenReward.transfer(msg.sender, amount / price)",
                "tokenReward.transfer(msg.sender, amount / price)"
            ],
            "block2366": [
                "beneficiary.transfer(this.balance)"
            ],
            "jump2748": [
                "tokenReward.transfer(beneficiary, this.balance)",
                "tokenReward.transfer(beneficiary, this.balance)"
            ],
            "jump629": [
                "beneficiary.transfer(msg.value)",
                "beneficiary.transfer(msg.value)"
            ],
            "block2748": [
                "tokenReward.transfer(beneficiary, this.balance)"
            ],
            "block609": [
                "tokenReward.transfer(msg.sender, amount / price)"
            ]
        }
    }
}