{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "safeMul(uint256,uint256)": [
                156,
                97
            ],
            "safeDiv(uint256,uint256)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "token": {
        "function_list": [
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                481,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "block3650": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "CrowdSale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "CrowdSale(address,uint256,uint256,uint256,address,address,uint256,uint256)",
            "addToSyncList(address)",
            "setEtherPrice(uint256)",
            "stopIco()",
            "startIco()",
            "settingsIco(uint256,address,uint256,uint256,uint256)",
            "fallback()",
            "checkGoalReached()",
            "safeWithdrawal()",
            "drain()",
            "AutorizeRefund()",
            "removeContract()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "CrowdSale(address,uint256,uint256,uint256,address,address,uint256,uint256)": {
                "argument": {
                    "_fundingMinimumTargetInUsd": "uint256",
                    "_fundingMaximumTargetInUsd": "uint256",
                    "tokenPriceInUSD": "uint256",
                    "_tokenAllocation": "uint256",
                    "_etherPriceInUsd": "uint256"
                },
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "addToSyncList(address)": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "setEtherPrice(uint256)": {
                "argument": {
                    "_price": "uint256"
                },
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "stopIco()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "startIco()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "settingsIco(uint256,address,uint256,uint256,uint256)": {
                "argument": {
                    "_priceInUsd": "uint256",
                    "_tokenAllocation": "uint256",
                    "_fundingMinimumTargetInUsd": "uint256",
                    "_fundingMaximumTargetInUsd": "uint256"
                },
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "safeWithdrawal()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "drain()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "AutorizeRefund()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            },
            "removeContract()": {
                "argument": {},
                "contract": {
                    "fundingMinimumTargetInUsd": "uint256",
                    "fundingMaximumTargetInUsd": "uint256",
                    "amountRaised": "uint256",
                    "priceInUsd": "uint256",
                    "tokenAllocation": "uint256",
                    "tokenRaised": "uint256",
                    "etherPriceInUsd": "uint256",
                    "totalUsdRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "safeWithdrawal()": [
                2649,
                647
            ],
            "safeDiv(uint256,uint256)": [
                2231,
                515
            ],
            "settingsIco(uint256,address,uint256,uint256,uint256)": [
                2518,
                625
            ],
            "removeContract()": [
                2672,
                669
            ],
            "checkGoalReached()": [
                1097,
                75
            ],
            "startIco()": [
                2027,
                427
            ],
            "stopIco()": [
                1937,
                383
            ],
            "AutorizeRefund()": [
                2306,
                537
            ],
            "setEtherPrice(uint256)": [
                1384,
                185
            ],
            "safeMul(uint256,uint256)": [
                2396,
                581
            ],
            "drain()": [
                2117,
                471
            ],
            "addToSyncList(address)": [
                1250,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump947": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)",
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)"
            ],
            "block947_0": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)"
            ],
            "jump5032": [
                "msg.sender.send(amount)",
                "msg.sender.send(amount)"
            ],
            "block5032": [
                "msg.sender.send(amount)"
            ],
            "jump947_0": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)",
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)"
            ],
            "block947": [
                "tokenReward.transferFrom(tokenHolder, msg.sender, tokenAmount)"
            ],
            "block4172": [
                "beneficiary.send(amountRaised)"
            ],
            "jump4172": [
                "beneficiary.send(amountRaised)",
                "beneficiary.send(amountRaised)"
            ]
        }
    }
}