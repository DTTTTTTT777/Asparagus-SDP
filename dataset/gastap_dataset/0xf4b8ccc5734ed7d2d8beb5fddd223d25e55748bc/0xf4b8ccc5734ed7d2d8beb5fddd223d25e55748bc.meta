{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "PariMutuel": {
        "function_list": [
            "Ownable()",
            "PariMutuel()",
            "bet(PariMutuel.Outcome)",
            "totalWagered()",
            "totalRake()",
            "totalPrizePool()",
            "totalWageredForAddress(address)",
            "decimalOddsForOutcome(PariMutuel.Outcome)",
            "payoutForWagerAndOutcome(uint256,PariMutuel.Outcome)",
            "startEvent()",
            "declareWinningOutcome(PariMutuel.Outcome)",
            "refundEverybody()",
            "getRefunded()",
            "withdrawRake()",
            "withdrawWinnings()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "PariMutuel()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "bet(PariMutuel.Outcome)": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "totalWagered()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "totalRake()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "totalPrizePool()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "totalWageredForAddress(address)": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "decimalOddsForOutcome(PariMutuel.Outcome)": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "payoutForWagerAndOutcome(uint256,PariMutuel.Outcome)": {
                "argument": {
                    "wager": "uint256"
                },
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "startEvent()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "declareWinningOutcome(PariMutuel.Outcome)": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "refundEverybody()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "getRefunded()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "withdrawRake()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "withdrawWinnings()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "percentRake": "uint256",
                    "minBetAmount": "uint256",
                    "numberOfOutcomes": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "totalWagered()": [
                525,
                110
            ],
            "refundEverybody()": [
                712,
                176
            ],
            "getRefunded()": [
                735,
                198
            ],
            "withdrawWinnings()": [
                902,
                264
            ],
            "totalRake()": [
                1150,
                374
            ],
            "startEvent()": [
                1193,
                396
            ],
            "withdrawRake()": [
                332,
                22
            ],
            "totalPrizePool()": [
                433,
                66
            ],
            "totalWageredForAddress(address)": [
                815,
                242
            ]
        },
        "block_CALL_mapping": {
            "jump2382": [
                "msg.sender.transfer(totalWageredForAddress(msg.sender))",
                "msg.sender.transfer(totalWageredForAddress(msg.sender))"
            ],
            "block1578": [
                "owner.transfer(totalRake())"
            ],
            "block2850": [
                "msg.sender.transfer(winnings)"
            ],
            "jump2850": [
                "msg.sender.transfer(winnings)",
                "msg.sender.transfer(winnings)"
            ],
            "jump1578": [
                "owner.transfer(totalRake())",
                "owner.transfer(totalRake())"
            ],
            "block2382": [
                "msg.sender.transfer(totalWageredForAddress(msg.sender))"
            ]
        }
    }
}