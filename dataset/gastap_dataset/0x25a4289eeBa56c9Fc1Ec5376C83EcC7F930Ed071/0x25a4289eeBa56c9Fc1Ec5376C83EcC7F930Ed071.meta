{
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "safeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)",
            "owned()",
            "transferOwnership(address)",
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {}
            },
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                525,
                163
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "BetstreakICO": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "safeAssert(bool)",
            "owned()",
            "transferOwnership(address)",
            "BetstreakICO()",
            "initialBSTSupply()",
            "remainingSupply()",
            "SetupCrowdsale(uint256,uint256)",
            "setPrice()",
            "fallback()",
            "BuyBSTtokens()",
            "beneficiaryMultiSigWithdraw(uint256)",
            "checkGoalReached()",
            "refund()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "safeAssert(bool)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "owned()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "BetstreakICO()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "initialBSTSupply()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "remainingSupply()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "SetupCrowdsale(uint256,uint256)": {
                "argument": {
                    "_fundingStartBlock": "uint256",
                    "_fundingEndBlock": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "setPrice()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "BuyBSTtokens()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "beneficiaryMultiSigWithdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "checkGoalReached()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "initialSupply": "uint256",
                    "tokensRemaining": "uint256",
                    "tokensPerEthPrice": "uint256",
                    "amountRaisedInWei": "uint256",
                    "fundingMinCapInWei": "uint256",
                    "CurrentStatus": "string",
                    "fundingStartBlock": "uint256",
                    "fundingEndBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "refund()": [
                573,
                185
            ],
            "checkGoalReached()": [
                346,
                75
            ],
            "BuyBSTtokens()": [
                1074,
                383
            ],
            "SetupCrowdsale(uint256,uint256)": [
                991,
                361
            ],
            "setPrice()": [
                1347,
                515
            ],
            "transferOwnership(address)": [
                1514,
                559
            ],
            "beneficiaryMultiSigWithdraw(uint256)": [
                726,
                251
            ],
            "initialBSTSupply()": [
                530,
                163
            ],
            "remainingSupply()": [
                1304,
                493
            ]
        },
        "block_CALL_mapping": {
            "block3959": [
                "msg.sender.transfer(ethRefund)"
            ],
            "jump2036": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "jump3959": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ],
            "jump2036_0": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "jump2036_1": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)",
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block4600": [
                "beneficiaryWallet.transfer(_amount)"
            ],
            "block2036_0": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "block2036_1": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ],
            "jump4600": [
                "beneficiaryWallet.transfer(_amount)",
                "beneficiaryWallet.transfer(_amount)"
            ],
            "block2036": [
                "tokenReward.transfer(msg.sender, rewardTransferAmount)"
            ]
        }
    }
}