{
    "RegBase": {
        "function_list": [
            "RegBase(address,bytes32,address)",
            "destroy()",
            "changeOwner(address)",
            "changeResource(bytes32)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "RegBase(address,bytes32,address)": {
                "argument": {
                    "_regName": "bytes32"
                },
                "contract": {
                    "VERSION": "bytes32",
                    "regName": "bytes32",
                    "resource": "bytes32"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32",
                    "regName": "bytes32",
                    "resource": "bytes32"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32",
                    "regName": "bytes32",
                    "resource": "bytes32"
                }
            },
            "changeResource(bytes32)": {
                "argument": {
                    "_resource": "bytes32"
                },
                "contract": {
                    "VERSION": "bytes32",
                    "regName": "bytes32",
                    "resource": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32",
                    "regName": "bytes32",
                    "resource": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "changeResource(bytes32)": [
                136,
                75
            ],
            "destroy()": [
                311,
                141
            ],
            "changeOwner(address)": [
                421,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Bakt": {
        "function_list": [
            "fallback()",
            "_init(uint40,uint40)",
            "fundBalance()",
            "tokenPrice()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "PANIC()",
            "calm()",
            "sendPending()",
            "blockPendingTx(uint256)",
            "execute(address,uint256,bytes)",
            "payDividends(uint256)",
            "getHolders()",
            "etherBalanceOf(address)",
            "withdraw()",
            "vacate(address)",
            "purchase()",
            "redeem(uint256)",
            "vote(address)",
            "Bakt(address,bytes32,address)",
            "fallback()",
            "destroy()",
            "_init(uint40,uint40)",
            "fundBalance()",
            "tokenPrice()",
            "changeResource(bytes32)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "xfer(BaktInterface.Holder,BaktInterface.Holder,uint256)",
            "PANIC()",
            "calm()",
            "timeLockSend(address,address,uint256,bytes)",
            "sendPending()",
            "blockPendingTx(uint256)",
            "execute(address,uint256,bytes)",
            "payDividends(uint256)",
            "addHolder(address)",
            "join(address)",
            "acceptPayments(bool)",
            "issue(address,uint256)",
            "revokeOffer(address)",
            "getHolders()",
            "etherBalanceOf(address)",
            "withdraw()",
            "vacate(address)",
            "purchase()",
            "redeem(uint256)",
            "dividendsOwing(BaktInterface.Holder)",
            "updateDividendsFor(BaktInterface.Holder)",
            "vote(address)",
            "election()",
            "revoke(BaktInterface.Holder)",
            "revote(BaktInterface.Holder)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "fallback()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "_init(uint40,uint40)": {
                "argument": {
                    "_panicPeriodInSeconds": "uint40",
                    "_pendingPeriodInSeconds": "uint40"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "fundBalance()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "tokenPrice()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "PANIC()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "calm()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "sendPending()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "blockPendingTx(uint256)": {
                "argument": {
                    "_txIdx": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "execute(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "payDividends(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "getHolders()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "etherBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "withdraw()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "vacate(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "purchase()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "redeem(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "vote(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "Bakt(address,bytes32,address)": {
                "argument": {
                    "_regName": "bytes32"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "destroy()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "changeResource(bytes32)": {
                "argument": {
                    "_resource": "bytes32"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "xfer(BaktInterface.Holder,BaktInterface.Holder,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "timeLockSend(address,address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "addHolder(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "join(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "acceptPayments(bool)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "issue(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "revokeOffer(address)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "dividendsOwing(BaktInterface.Holder)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "updateDividendsFor(BaktInterface.Holder)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "election()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "revoke(BaktInterface.Holder)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "revote(BaktInterface.Holder)": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "VERSION": "bytes32"
                }
            }
        },
        "function_block_mapping": {
            "fundBalance()": [
                1590,
                317
            ],
            "balanceOf(address)": [
                2426,
                537
            ],
            "etherBalanceOf(address)": [
                921,
                141
            ],
            "allowance(address,address)": [
                3685,
                911
            ],
            "destroy()": [
                2684,
                625
            ],
            "transferFrom(address,address,uint256)": [
                1359,
                251
            ],
            "purchase()": [
                1856,
                427
            ],
            "calm()": [
                1682,
                361
            ],
            "approve(address,uint256)": [
                771,
                97
            ],
            "vacate(address)": [
                3804,
                933
            ],
            "tokenPrice()": [
                2641,
                603
            ],
            "vote(address)": [
                2335,
                515
            ],
            "PANIC()": [
                3944,
                977
            ],
            "issue(address,uint256)": [
                2707,
                647
            ],
            "redeem(uint256)": [
                3616,
                889
            ],
            "acceptPayments(bool)": [
                2570,
                581
            ],
            "withdraw()": [
                1633,
                339
            ],
            "_init(uint40,uint40)": [
                3991,
                999
            ],
            "payDividends(uint256)": [
                2197,
                471
            ],
            "getHolders()": [
                1772,
                405
            ],
            "execute(address,uint256,bytes)": [
                3295,
                823
            ],
            "sendPending()": [
                2898,
                713
            ],
            "changeResource(bytes32)": [
                698,
                75
            ],
            "addHolder(address)": [
                3046,
                757
            ],
            "blockPendingTx(uint256)": [
                2266,
                493
            ],
            "transfer(address,uint256)": [
                2945,
                735
            ],
            "revokeOffer(address)": [
                3525,
                867
            ]
        },
        "block_CALL_mapping": {
            "block11354": [
                "tx.to.call.value(tx.value)(tx.data)"
            ],
            "jump11354": [
                "tx.to.call.value(tx.value)(tx.data)",
                "tx.to.call.value(tx.value)(tx.data)"
            ]
        }
    }
}