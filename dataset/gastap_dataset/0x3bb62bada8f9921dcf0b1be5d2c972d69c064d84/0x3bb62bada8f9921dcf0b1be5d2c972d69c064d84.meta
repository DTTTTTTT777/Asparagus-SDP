{
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                712,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "transfer(address,uint256)": [
                611,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "TokitRegistry": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "TokitRegistry(address)",
            "register(address,uint256,address,address)",
            "register(address,uint256,address)",
            "lookup(address,uint256)",
            "lookupByProject(uint256)",
            "setRegistrar(address,bool)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "TokitRegistry(address)": {
                "argument": {},
                "contract": {}
            },
            "register(address,uint256,address,address)": {
                "argument": {
                    "_projectId": "uint256"
                },
                "contract": {}
            },
            "register(address,uint256,address)": {
                "argument": {
                    "_projectId": "uint256"
                },
                "contract": {}
            },
            "lookup(address,uint256)": {
                "argument": {
                    "_projectId": "uint256"
                },
                "contract": {}
            },
            "lookupByProject(uint256)": {
                "argument": {
                    "_projectId": "uint256"
                },
                "contract": {}
            },
            "setRegistrar(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "register(address,uint256,address,address)": [
                1200,
                229
            ],
            "register(address,uint256,address)": [
                769,
                163
            ],
            "lookupByProject(uint256)": [
                380,
                97
            ],
            "lookup(address,uint256)": [
                878,
                185
            ],
            "setRegistrar(address,bool)": [
                1121,
                207
            ],
            "transferOwnership(address)": [
                1584,
                273
            ]
        },
        "block_CALL_mapping": {}
    },
    "SingularDTVFund": {
        "function_list": [
            "depositReward()",
            "calcReward(address)",
            "withdrawReward()",
            "softWithdrawRewardFor(address)",
            "setup(address)",
            "SingularDTVFund()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "depositReward()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "calcReward(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "withdrawReward()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "softWithdrawRewardFor(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "setup(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "SingularDTVFund()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "totalReward": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "softWithdrawRewardFor(address)": [
                772,
                229
            ],
            "setup(address)": [
                464,
                141
            ],
            "depositReward()": [
                430,
                119
            ],
            "withdrawReward()": [
                859,
                251
            ]
        },
        "block_CALL_mapping": {
            "block1218": [
                "msg.sender.send(value)"
            ],
            "block2152_2": [
                "singularDTVToken.totalSupply()"
            ],
            "block2152_1": [
                "singularDTVToken.totalSupply()"
            ],
            "block2152_0": [
                "singularDTVToken.totalSupply()"
            ],
            "block2152": [
                "singularDTVToken.totalSupply()"
            ],
            "block1218_1": [
                "msg.sender.send(value)"
            ],
            "block2468_2": [
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "block2468_1": [
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "block2468_0": [
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "block2468": [
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "block1218_0": [
                "msg.sender.send(value)"
            ],
            "jump2468": [
                "singularDTVToken.balanceOf(forAddress)",
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "jump2152_0": [
                "singularDTVToken.totalSupply()",
                "singularDTVToken.totalSupply()"
            ],
            "jump2152": [
                "singularDTVToken.totalSupply()",
                "singularDTVToken.totalSupply()"
            ],
            "jump2152_2": [
                "singularDTVToken.totalSupply()",
                "singularDTVToken.totalSupply()"
            ],
            "jump2152_1": [
                "singularDTVToken.totalSupply()",
                "singularDTVToken.totalSupply()"
            ],
            "jump2468_1": [
                "singularDTVToken.balanceOf(forAddress)",
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "jump2468_0": [
                "singularDTVToken.balanceOf(forAddress)",
                "singularDTVToken.balanceOf(forAddress)"
            ],
            "jump2468_2": [
                "singularDTVToken.balanceOf(forAddress)",
                "singularDTVToken.balanceOf(forAddress)"
            ]
        }
    },
    "StandardToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                136,
                75
            ],
            "balanceOf(address)": [
                413,
                141
            ],
            "allowance(address,address)": [
                772,
                207
            ],
            "transferFrom(address,address,uint256)": [
                280,
                119
            ],
            "approveAndCall(address,uint256,bytes)": [
                601,
                185
            ],
            "transfer(address,uint256)": [
                500,
                163
            ]
        },
        "block_CALL_mapping": {
            "block2799": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "jump2799": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SingularDTVToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "SingularDTVToken(address,address,string,string,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "SingularDTVToken(address,address,string,string,uint256)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_totalSupply": "uint256"
                },
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                335,
                97
            ],
            "balanceOf(address)": [
                892,
                229
            ],
            "approveAndCall(address,uint256,bytes)": [
                1224,
                295
            ],
            "allowance(address,address)": [
                1395,
                317
            ],
            "transferFrom(address,address,uint256)": [
                479,
                141
            ],
            "transfer(address,uint256)": [
                1123,
                273
            ]
        },
        "block_CALL_mapping": {
            "jump4012": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)",
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ],
            "block3063": [
                "singularDTVFund.softWithdrawRewardFor(msg.sender)"
            ],
            "block3312": [
                "singularDTVFund.softWithdrawRewardFor(to)"
            ],
            "jump2360": [
                "singularDTVFund.softWithdrawRewardFor(to)",
                "singularDTVFund.softWithdrawRewardFor(to)"
            ],
            "block2360": [
                "singularDTVFund.softWithdrawRewardFor(to)"
            ],
            "block2111": [
                "singularDTVFund.softWithdrawRewardFor(from)"
            ],
            "jump3063": [
                "singularDTVFund.softWithdrawRewardFor(msg.sender)",
                "singularDTVFund.softWithdrawRewardFor(msg.sender)"
            ],
            "jump2111": [
                "singularDTVFund.softWithdrawRewardFor(from)",
                "singularDTVFund.softWithdrawRewardFor(from)"
            ],
            "jump3312": [
                "singularDTVFund.softWithdrawRewardFor(to)",
                "singularDTVFund.softWithdrawRewardFor(to)"
            ],
            "block4012": [
                "_spender.call(bytes4(bytes32(sha3(\"receiveApproval(address,uint256,address,bytes)\"))), msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "SingularDTVLaunch": {
        "function_list": [
            "checkInvariants()",
            "emergencyCall()",
            "fund()",
            "withdrawContribution()",
            "withdrawForWorkshop()",
            "withdrawUnsentTokensForOwner()",
            "changeValuePerToken(uint256)",
            "updateStage()",
            "start()",
            "SingularDTVLaunch(address,address,address,uint256,uint256,uint256,uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "checkInvariants()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "emergencyCall()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "fund()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "withdrawContribution()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "withdrawForWorkshop()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "withdrawUnsentTokensForOwner()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "changeValuePerToken(uint256)": {
                "argument": {
                    "valueInWei": "uint256"
                },
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "updateStage()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "start()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "SingularDTVLaunch(address,address,address,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_total": "uint256",
                    "_unit_price": "uint256",
                    "_duration": "uint256",
                    "_threshold": "uint256",
                    "_singulardtvwoskhop_fee": "uint256"
                },
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "version": "string",
                    "SingularDTVWorkshopFee": "uint256",
                    "CAP": "uint256",
                    "DURATION": "uint256",
                    "TOKEN_TARGET": "uint256",
                    "startDate": "uint256",
                    "fundBalance": "uint256",
                    "valuePerToken": "uint256",
                    "tokensSent": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawUnsentTokensForOwner()": [
                1446,
                405
            ],
            "changeValuePerToken(uint256)": [
                1160,
                317
            ],
            "fund()": [
                1576,
                449
            ],
            "withdrawForWorkshop()": [
                1893,
                581
            ],
            "start()": [
                1606,
                471
            ],
            "withdrawContribution()": [
                537,
                97
            ],
            "emergencyCall()": [
                666,
                163
            ],
            "updateStage()": [
                1706,
                515
            ]
        },
        "block_CALL_mapping": {
            "block7034": [
                "singularDTVToken.transfer(owner, remainingTokens)"
            ],
            "block3826_0": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ],
            "block3826_1": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ],
            "block4057_1": [
                "msg.sender.transfer(contribution)"
            ],
            "block4057_0": [
                "msg.sender.transfer(contribution)"
            ],
            "jump6677": [
                "SingularDTVWorkshop.transfer(networkFee)",
                "SingularDTVWorkshop.transfer(networkFee)"
            ],
            "jump6568": [
                "workshop.transfer(value - networkFee)",
                "workshop.transfer(value - networkFee)"
            ],
            "jump4057": [
                "msg.sender.transfer(contribution)",
                "msg.sender.transfer(contribution)"
            ],
            "jump2791_1": [
                "singularDTVToken.transfer(msg.sender, tokenCount)",
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "block2791_0": [
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "block2791_1": [
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "block6677": [
                "SingularDTVWorkshop.transfer(networkFee)"
            ],
            "block4057": [
                "msg.sender.transfer(contribution)"
            ],
            "block3826": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ],
            "jump2791_0": [
                "singularDTVToken.transfer(msg.sender, tokenCount)",
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "block2791": [
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "jump2791": [
                "singularDTVToken.transfer(msg.sender, tokenCount)",
                "singularDTVToken.transfer(msg.sender, tokenCount)"
            ],
            "block4233": [
                "SingularDTVWorkshop.send(this.balance)"
            ],
            "jump4057_0": [
                "msg.sender.transfer(contribution)",
                "msg.sender.transfer(contribution)"
            ],
            "block2357_0": [
                "msg.sender.send(msg.value - contribution)"
            ],
            "block2357_1": [
                "msg.sender.send(msg.value - contribution)"
            ],
            "block5865": [
                "singularDTVToken.transferFrom(msg.sender, this, CAP)"
            ],
            "jump4057_1": [
                "msg.sender.transfer(contribution)",
                "msg.sender.transfer(contribution)"
            ],
            "jump3826": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)",
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ],
            "jump5355": [
                "singularDTVToken.transfer(owner, remainingTokens)",
                "singularDTVToken.transfer(owner, remainingTokens)"
            ],
            "jump5865": [
                "singularDTVToken.transferFrom(msg.sender, this, CAP)",
                "singularDTVToken.transferFrom(msg.sender, this, CAP)"
            ],
            "block5355": [
                "singularDTVToken.transfer(owner, remainingTokens)"
            ],
            "jump7034": [
                "singularDTVToken.transfer(owner, remainingTokens)",
                "singularDTVToken.transfer(owner, remainingTokens)"
            ],
            "block2357": [
                "msg.sender.send(msg.value - contribution)"
            ],
            "block6568": [
                "workshop.transfer(value - networkFee)"
            ],
            "jump3826_0": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)",
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ],
            "jump3826_1": [
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)",
                "singularDTVToken.transferFrom(msg.sender, owner, tokensReceived)"
            ]
        }
    }
}