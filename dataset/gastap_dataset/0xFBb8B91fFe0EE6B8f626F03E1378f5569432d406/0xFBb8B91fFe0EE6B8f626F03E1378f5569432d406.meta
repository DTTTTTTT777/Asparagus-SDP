{
    "SHA3_512": {
        "function_list": [
            "SHA3_512()",
            "keccak_f(uint256[25])",
            "sponge(uint256[9])"
        ],
        "initial_state": {
            "SHA3_512()": {
                "argument": {},
                "contract": {}
            },
            "keccak_f(uint256[25])": {
                "argument": {
                    "A": "uint256[25]"
                },
                "contract": {}
            },
            "sponge(uint256[9])": {
                "argument": {
                    "M": "uint256[9]"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ethash": {
        "function_list": [
            "SHA3_512()",
            "keccak_f(uint256[25])",
            "sponge(uint256[9])",
            "Ethash(address[3])",
            "fnv(uint256,uint256)",
            "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)",
            "toBE(uint256)",
            "computeSha3(uint256[16],uint256[8])",
            "computeLeaf(uint256[],uint256)",
            "computeS(uint256,uint256)",
            "reverseBytes(uint256)",
            "getEpochData(uint256,uint256)",
            "isEpochDataSet(uint256)",
            "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)",
            "getMerkleLeave(uint256,uint256)",
            "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)"
        ],
        "initial_state": {
            "SHA3_512()": {
                "argument": {},
                "contract": {}
            },
            "keccak_f(uint256[25])": {
                "argument": {
                    "A": "uint256[25]"
                },
                "contract": {}
            },
            "sponge(uint256[9])": {
                "argument": {
                    "M": "uint256[9]"
                },
                "contract": {}
            },
            "Ethash(address[3])": {
                "argument": {},
                "contract": {}
            },
            "fnv(uint256,uint256)": {
                "argument": {
                    "v1": "uint256",
                    "v2": "uint256"
                },
                "contract": {}
            },
            "computeCacheRoot(uint256,uint256,uint256[],uint256[],uint256)": {
                "argument": {
                    "index": "uint256",
                    "indexInElementsArray": "uint256",
                    "elements": "uint256[]",
                    "witness": "uint256[]",
                    "branchSize": "uint256"
                },
                "contract": {}
            },
            "toBE(uint256)": {
                "argument": {
                    "x": "uint256"
                },
                "contract": {}
            },
            "computeSha3(uint256[16],uint256[8])": {
                "argument": {
                    "s": "uint256[16]",
                    "cmix": "uint256[8]"
                },
                "contract": {}
            },
            "computeLeaf(uint256[],uint256)": {
                "argument": {
                    "dataSetLookup": "uint256[]",
                    "index": "uint256"
                },
                "contract": {}
            },
            "computeS(uint256,uint256)": {
                "argument": {
                    "header": "uint256",
                    "nonceLe": "uint256"
                },
                "contract": {}
            },
            "reverseBytes(uint256)": {
                "argument": {
                    "input": "uint256"
                },
                "contract": {}
            },
            "getEpochData(uint256,uint256)": {
                "argument": {
                    "epochIndex": "uint256",
                    "nodeIndex": "uint256"
                },
                "contract": {}
            },
            "isEpochDataSet(uint256)": {
                "argument": {
                    "epochIndex": "uint256"
                },
                "contract": {}
            },
            "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)": {
                "argument": {
                    "epoch": "uint256",
                    "fullSizeIn128Resultion": "uint256",
                    "branchDepth": "uint256",
                    "merkleNodes": "uint256[]",
                    "start": "uint256",
                    "numElems": "uint256"
                },
                "contract": {}
            },
            "getMerkleLeave(uint256,uint256)": {
                "argument": {
                    "epochIndex": "uint256",
                    "p": "uint256"
                },
                "contract": {}
            },
            "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)": {
                "argument": {
                    "header": "bytes32",
                    "nonceLe": "bytes8",
                    "dataSetLookup": "uint256[]",
                    "witnessForLookup": "uint256[]",
                    "epochIndex": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "isEpochDataSet(uint256)": [
                570,
                141
            ],
            "getEpochData(uint256,uint256)": [
                455,
                119
            ],
            "hashimoto(bytes32,bytes8,uint256[],uint256[],uint256)": [
                205,
                97
            ],
            "setEpochData(uint256,uint256,uint256,uint256[],uint256,uint256)": [
                639,
                163
            ]
        },
        "block_CALL_mapping": {}
    }
}