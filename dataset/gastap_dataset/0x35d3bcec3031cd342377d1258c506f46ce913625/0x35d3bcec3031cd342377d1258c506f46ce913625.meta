{
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeOwner(address)": [
                213,
                119
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "halt()": [
                136,
                75
            ],
            "unhalt()": [
                383,
                185
            ],
            "acceptOwnership()": [
                159,
                97
            ],
            "changeOwner(address)": [
                269,
                141
            ]
        },
        "block_CALL_mapping": {}
    },
    "PricingMechanism": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "halt()",
            "unhalt()",
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "setPricing()",
            "allocateTokensInternally(uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "setPricing()": {
                "argument": {},
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            },
            "allocateTokensInternally(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "decimals": "uint256",
                    "priceList": "PricingMechanism.PriceTier[]",
                    "numTiers": "uint8",
                    "currentTierIndex": "uint256",
                    "totalDepositedEthers": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setPricing()": [
                729,
                317
            ],
            "halt()": [
                416,
                163
            ],
            "unhalt()": [
                706,
                295
            ],
            "changeOwner(address)": [
                592,
                251
            ],
            "acceptOwnership()": [
                439,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "DAOController": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "CrowdSale": {
        "function_list": [
            "setPricing()",
            "allocateTokensInternally(uint256)",
            "safeMul(uint256,uint256)",
            "safeDiv(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)",
            "assert(bool)",
            "halt()",
            "unhalt()",
            "Owned()",
            "changeOwner(address)",
            "acceptOwnership()",
            "CrowdSale()",
            "startCrowdsale()",
            "setDAOAndMultiSig(address,address)",
            "fallback()",
            "finalize()",
            "emergencyCease()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "setPricing()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "allocateTokensInternally(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "safeDiv(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "changeOwner(address)": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "CrowdSale()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "startCrowdsale()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "setDAOAndMultiSig(address,address)": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            },
            "emergencyCease()": {
                "argument": {},
                "contract": {
                    "hardCapAmount": "uint256",
                    "duration": "uint256",
                    "startTime": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "emergencyCease()": [
                1833,
                515
            ],
            "setDAOAndMultiSig(address,address)": [
                1140,
                207
            ],
            "setPricing()": [
                1909,
                581
            ],
            "changeOwner(address)": [
                1672,
                449
            ],
            "startCrowdsale()": [
                1649,
                427
            ],
            "finalize()": [
                1326,
                251
            ],
            "halt()": [
                1383,
                295
            ],
            "unhalt()": [
                1843,
                537
            ],
            "acceptOwnership()": [
                1449,
                339
            ]
        },
        "block_CALL_mapping": {
            "jump703_0": [
                "tokenFactory.mint(msg.sender, numTokensToAllocate)",
                "tokenFactory.mint(msg.sender, numTokensToAllocate)"
            ],
            "jump703": [
                "tokenFactory.mint(msg.sender, numTokensToAllocate)",
                "tokenFactory.mint(msg.sender, numTokensToAllocate)"
            ],
            "block737_0": [
                "msg.sender.send(excess)"
            ],
            "block4396": [
                "multiSig.call.gas(150000).value(this.balance)()"
            ],
            "block703_0": [
                "tokenFactory.mint(msg.sender, numTokensToAllocate)"
            ],
            "block737": [
                "msg.sender.send(excess)"
            ],
            "block703": [
                "tokenFactory.mint(msg.sender, numTokensToAllocate)"
            ],
            "block3321": [
                "dao.call.gas(150000).value(totalDepositedEthers * 3 / 10)()",
                "multiSig.call.gas(150000).value(this.balance)()"
            ]
        }
    }
}