{
    "AbstractTRMBalances": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                180,
                75
            ],
            "balanceOf(address)": [
                615,
                185
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "allowance(address,address)": [
                913,
                273
            ],
            "transfer(address,uint256)": [
                812,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                227,
                97
            ],
            "mint(address,uint256)": [
                504,
                163
            ],
            "balanceOf(address)": [
                605,
                185
            ],
            "finishMinting()": [
                692,
                207
            ],
            "allowance(address,address)": [
                927,
                273
            ],
            "transferFrom(address,address,uint256)": [
                371,
                141
            ],
            "transfer(address,uint256)": [
                826,
                251
            ],
            "transferOwnership(address)": [
                1046,
                295
            ]
        },
        "block_CALL_mapping": {}
    },
    "TRM2TokenCoin": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                404,
                119
            ],
            "mint(address,uint256)": [
                736,
                207
            ],
            "finishMinting()": [
                924,
                251
            ],
            "balanceOf(address)": [
                837,
                229
            ],
            "transferFrom(address,address,uint256)": [
                548,
                163
            ],
            "transferOwnership(address)": [
                1422,
                361
            ],
            "allowance(address,address)": [
                1303,
                339
            ],
            "transfer(address,uint256)": [
                1202,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale()",
            "finishMinting()",
            "createTokens()",
            "fallback()",
            "mint(address,uint256)",
            "setETHUSD(uint256)",
            "setPause(bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "Crowdsale()": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "createTokens()": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "setETHUSD(uint256)": {
                "argument": {
                    "_newPrice": "uint256"
                },
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            },
            "setPause(bool)": {
                "argument": {},
                "contract": {
                    "ETHUSD": "uint256",
                    "startPreSale": "uint256",
                    "endPreSale": "uint256",
                    "startPreICO": "uint256",
                    "endPreICO": "uint256",
                    "startICO": "uint256",
                    "endICO": "uint256",
                    "startPostICO": "uint256",
                    "endPostICO": "uint256",
                    "hardcap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setETHUSD(uint256)": [
                898,
                361
            ],
            "mint(address,uint256)": [
                3353,
                945
            ],
            "finishMinting()": [
                4460,
                886
            ],
            "createTokens()": [
                707,
                273
            ],
            "setPause(bool)": [
                851,
                339
            ],
            "transferOwnership(address)": [
                1029,
                427
            ]
        },
        "block_CALL_mapping": {
            "block1763": [
                "token.totalSupply()"
            ],
            "block3353": [
                "token.mint(msg.sender, numTokens)"
            ],
            "block2323_0": [
                "oldBalancesP2.oldBalances(msg.sender)"
            ],
            "jump1329_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump1329_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block3395": [
                "multisig.transfer(msg.value)"
            ],
            "jump1763_1": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block3843": [
                "token.totalSupply()"
            ],
            "block3353_1": [
                "token.mint(msg.sender, numTokens)"
            ],
            "block3353_0": [
                "token.mint(msg.sender, numTokens)"
            ],
            "jump3395": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "block4743": [
                "token.transferOwnership(manager)"
            ],
            "block2323_1": [
                "oldBalancesP2.oldBalances(msg.sender)"
            ],
            "jump3395_1": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "block1329_0": [
                "token.totalSupply()"
            ],
            "block1329_1": [
                "token.totalSupply()"
            ],
            "jump3395_0": [
                "multisig.transfer(msg.value)",
                "multisig.transfer(msg.value)"
            ],
            "block3395_1": [
                "multisig.transfer(msg.value)"
            ],
            "block3395_0": [
                "multisig.transfer(msg.value)"
            ],
            "block2062": [
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "block2323": [
                "oldBalancesP2.oldBalances(msg.sender)"
            ],
            "block1329": [
                "token.totalSupply()"
            ],
            "jump2062_0": [
                "oldBalancesP1.oldBalances(msg.sender)",
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "block1763_0": [
                "token.totalSupply()"
            ],
            "block1763_1": [
                "token.totalSupply()"
            ],
            "jump2323": [
                "oldBalancesP2.oldBalances(msg.sender)",
                "oldBalancesP2.oldBalances(msg.sender)"
            ],
            "jump2062": [
                "oldBalancesP1.oldBalances(msg.sender)",
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "jump4460": [
                "token.finishMinting()",
                "token.finishMinting()"
            ],
            "jump1763_0": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4145": [
                "token.mint(_to, _value)"
            ],
            "jump3843": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump1329": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "jump4743": [
                "token.transferOwnership(manager)",
                "token.transferOwnership(manager)"
            ],
            "jump3353_1": [
                "token.mint(msg.sender, numTokens)",
                "token.mint(msg.sender, numTokens)"
            ],
            "jump1763": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block2062_1": [
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "block2062_0": [
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "block4460": [
                "token.finishMinting()"
            ],
            "jump2062_1": [
                "oldBalancesP1.oldBalances(msg.sender)",
                "oldBalancesP1.oldBalances(msg.sender)"
            ],
            "jump4145": [
                "token.mint(_to, _value)",
                "token.mint(_to, _value)"
            ],
            "jump3353": [
                "token.mint(msg.sender, numTokens)",
                "token.mint(msg.sender, numTokens)"
            ],
            "jump3353_0": [
                "token.mint(msg.sender, numTokens)",
                "token.mint(msg.sender, numTokens)"
            ],
            "jump2323_1": [
                "oldBalancesP2.oldBalances(msg.sender)",
                "oldBalancesP2.oldBalances(msg.sender)"
            ],
            "jump2323_0": [
                "oldBalancesP2.oldBalances(msg.sender)",
                "oldBalancesP2.oldBalances(msg.sender)"
            ]
        }
    }
}