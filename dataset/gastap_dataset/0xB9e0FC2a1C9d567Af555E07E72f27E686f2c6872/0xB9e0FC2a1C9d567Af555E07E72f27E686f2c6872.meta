{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "IToken": {
        "function_list": [
            "totalSupply()",
            "mintTokens(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "mintTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "totalSupply()": [
                147,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                721,
                229
            ],
            "acceptOwnership()": [
                275,
                119
            ]
        },
        "block_CALL_mapping": {}
    },
    "Lockable": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "lockFromSelf(uint256,string)",
            "lockUntil(uint256,string)"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "lockedUntilBlock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "lockedUntilBlock": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "lockedUntilBlock": "uint256"
                }
            },
            "lockFromSelf(uint256,string)": {
                "argument": {
                    "_untilBlock": "uint256",
                    "_reason": "string"
                },
                "contract": {
                    "lockedUntilBlock": "uint256"
                }
            },
            "lockUntil(uint256,string)": {
                "argument": {
                    "_untilBlock": "uint256",
                    "_reason": "string"
                },
                "contract": {
                    "lockedUntilBlock": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ReentrnacyHandlingContract": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "MusiconomiCrowdsale": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "fallback()",
            "checkCrowdsaleState()",
            "refundTransaction(bool)",
            "calculateMaxContribution(address)",
            "processTransaction(address,uint256)",
            "editContributors(address[],uint256[],uint256[])",
            "salvageTokensFromContract(address,address,uint256)",
            "withdrawEth()",
            "claimEthIfFailed()",
            "batchReturnEthIfFailed(uint256)",
            "withdrawRemainingBalanceForManualRecovery()",
            "setMultisigAddress(address)",
            "setToken(address)",
            "claimCoreTeamsTokens(address)",
            "claimCofounditTokens()",
            "getTokenAddress()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "checkCrowdsaleState()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "refundTransaction(bool)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "calculateMaxContribution(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "processTransaction(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "editContributors(address[],uint256[],uint256[])": {
                "argument": {
                    "_contributorAddresses": "address[]",
                    "_contributorPPAllowances": "uint256[]",
                    "_contributorCommunityAllowance": "uint256[]"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "salvageTokensFromContract(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "withdrawEth()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "claimEthIfFailed()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "batchReturnEthIfFailed(uint256)": {
                "argument": {
                    "_numberOfReturns": "uint256"
                },
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "withdrawRemainingBalanceForManualRecovery()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "setMultisigAddress(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "claimCoreTeamsTokens(address)": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "claimCofounditTokens()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "nextContributorIndex": "uint256",
                    "presaleStartBlock": "uint256",
                    "presaleUnlimitedStartBlock": "uint256",
                    "crowdsaleStartBlock": "uint256",
                    "crowdsaleEndedBlock": "uint256",
                    "ethToMusicConversion": "uint256",
                    "minCap": "uint256",
                    "maxCap": "uint256",
                    "ethRaised": "uint256",
                    "nextContributorToClaim": "uint256",
                    "maxTokenSupply": "uint256",
                    "cofounditReward": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimEthIfFailed()": [
                1339,
                273
            ],
            "claimCoreTeamsTokens(address)": [
                1537,
                361
            ],
            "calculateMaxContribution(address)": [
                1229,
                229
            ],
            "withdrawEth()": [
                1832,
                427
            ],
            "editContributors(address[],uint256[],uint256[])": [
                1855,
                449
            ],
            "withdrawRemainingBalanceForManualRecovery()": [
                1076,
                163
            ],
            "setToken(address)": [
                966,
                119
            ],
            "batchReturnEthIfFailed(uint256)": [
                1362,
                295
            ],
            "getTokenAddress()": [
                879,
                97
            ],
            "transferOwnership(address)": [
                2301,
                559
            ],
            "claimCofounditTokens()": [
                2091,
                471
            ],
            "salvageTokensFromContract(address,address,uint256)": [
                1723,
                405
            ],
            "setMultisigAddress(address)": [
                812,
                75
            ],
            "acceptOwnership()": [
                1316,
                251
            ]
        },
        "block_CALL_mapping": {
            "block4273_2": [
                "msg.sender.transfer(msg.value)"
            ],
            "block6749": [
                "currentParticipantAddress.send(contribution)"
            ],
            "jump4187_2": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4273_3": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4273_2": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4273_1": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4273_0": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump4187_4": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump7749": [
                "token.mintTokens(_to, devReward)",
                "token.mintTokens(_to, devReward)"
            ],
            "jump4187_1": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4187_0": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4187_3": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "jump4072": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block8123": [
                "IERC20Token(_tokenAddress).transfer(_to, _amount)"
            ],
            "jump4273": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "jump7457": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block4072": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block9546": [
                "token.mintTokens(cofounditAddress, cofounditReward)"
            ],
            "block4273_1": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4187_3": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4273_3": [
                "msg.sender.transfer(msg.value)"
            ],
            "block7457": [
                "token.totalSupply()"
            ],
            "block4273_4": [
                "msg.sender.transfer(msg.value)"
            ],
            "block4187_2": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump9546": [
                "token.mintTokens(cofounditAddress, cofounditReward)",
                "token.mintTokens(cofounditAddress, cofounditReward)"
            ],
            "jump8123": [
                "IERC20Token(_tokenAddress).transfer(_to, _amount)",
                "IERC20Token(_tokenAddress).transfer(_to, _amount)"
            ],
            "block4273": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump4273_4": [
                "msg.sender.transfer(msg.value)",
                "msg.sender.transfer(msg.value)"
            ],
            "block7749": [
                "token.mintTokens(_to, devReward)"
            ],
            "jump6109": [
                "msg.sender.send(ethContributed)",
                "msg.sender.send(ethContributed)"
            ],
            "block4187": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump8335": [
                "multisigAddress.transfer(this.balance)",
                "multisigAddress.transfer(this.balance)"
            ],
            "block4187_4": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump6749": [
                "currentParticipantAddress.send(contribution)",
                "currentParticipantAddress.send(contribution)"
            ],
            "block8335": [
                "multisigAddress.transfer(this.balance)"
            ],
            "block4187_1": [
                "_contributor.transfer(returnAmount)"
            ],
            "block4187_0": [
                "_contributor.transfer(returnAmount)"
            ],
            "jump4072_4": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block6109": [
                "msg.sender.send(ethContributed)"
            ],
            "block4072_2": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block4072_3": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block4072_0": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block4072_1": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block4072_4": [
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "jump4072_2": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "jump4187": [
                "_contributor.transfer(returnAmount)",
                "_contributor.transfer(returnAmount)"
            ],
            "block4273_0": [
                "msg.sender.transfer(msg.value)"
            ],
            "jump4952": [
                "multisigAddress.transfer(this.balance)",
                "multisigAddress.transfer(this.balance)"
            ],
            "jump4072_0": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "jump4072_1": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ],
            "block4952": [
                "multisigAddress.transfer(this.balance)"
            ],
            "jump4072_3": [
                "token.mintTokens(_contributor, tokenAmount)",
                "token.mintTokens(_contributor, tokenAmount)"
            ]
        }
    }
}