{
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                1396,
                361
            ],
            "balanceOf(address)": [
                1055,
                273
            ]
        },
        "block_CALL_mapping": {
            "block4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump4085": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "EnjinBuyer": {
        "function_list": [
            "set_token(address)",
            "set_refunded(bool)",
            "activate_kill_switch(string)",
            "personal_withdraw()",
            "withdraw(address)",
            "purchase_tokens()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "set_token(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "set_refunded(bool)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "activate_kill_switch(string)": {
                "argument": {
                    "password": "string"
                },
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "personal_withdraw()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "withdraw(address)": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "purchase_tokens()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "contract_eth_value": "uint256",
                    "password_hash": "bytes32",
                    "eth_minimum": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "activate_kill_switch(string)": [
                1423,
                405
            ],
            "withdraw(address)": [
                731,
                141
            ],
            "set_refunded(bool)": [
                1376,
                383
            ],
            "personal_withdraw()": [
                1156,
                295
            ],
            "purchase_tokens()": [
                574,
                75
            ],
            "set_token(address)": [
                1309,
                361
            ]
        },
        "block_CALL_mapping": {
            "jump3139": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "jump4332": [
                "msg.sender.transfer(eth_to_withdraw_after_buy)",
                "msg.sender.transfer(eth_to_withdraw_after_buy)"
            ],
            "block5994": [
                "token.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "block2715": [
                "user.transfer(eth_to_withdraw)"
            ],
            "jump5994": [
                "token.transfer(msg.sender, tokens_to_withdraw - fee)",
                "token.transfer(msg.sender, tokens_to_withdraw - fee)"
            ],
            "jump3957": [
                "token.transfer(user, tokens_to_withdraw - fee)",
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "block4332": [
                "msg.sender.transfer(eth_to_withdraw_after_buy)"
            ],
            "block3139": [
                "token.balanceOf(address(this))"
            ],
            "block2388": [
                "user.transfer(eth_to_withdraw_after_buy)"
            ],
            "block5725": [
                "token.transfer(developer, fee)"
            ],
            "jump1843": [
                "sale.call.value(contract_eth_value)()",
                "sale.call.value(contract_eth_value)()"
            ],
            "block3688": [
                "token.transfer(developer, fee)"
            ],
            "jump3688": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump2715": [
                "user.transfer(eth_to_withdraw)",
                "user.transfer(eth_to_withdraw)"
            ],
            "jump4752": [
                "msg.sender.transfer(eth_to_withdraw)",
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "jump5725": [
                "token.transfer(developer, fee)",
                "token.transfer(developer, fee)"
            ],
            "jump5176": [
                "token.balanceOf(address(this))",
                "token.balanceOf(address(this))"
            ],
            "block3957": [
                "token.transfer(user, tokens_to_withdraw - fee)"
            ],
            "jump2388": [
                "user.transfer(eth_to_withdraw_after_buy)",
                "user.transfer(eth_to_withdraw_after_buy)"
            ],
            "block4752": [
                "msg.sender.transfer(eth_to_withdraw)"
            ],
            "block1843": [
                "sale.call.value(contract_eth_value)()"
            ],
            "block5176": [
                "token.balanceOf(address(this))"
            ]
        }
    }
}