{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "max64(uint64,uint64)",
            "min64(uint64,uint64)",
            "max256(uint256,uint256)",
            "min256(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "max64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "min64(uint64,uint64)": {
                "argument": {
                    "a": "uint64",
                    "b": "uint64"
                },
                "contract": {}
            },
            "max256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "min256(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ContractReceiver": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                68,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC23BasicToken": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "balanceOf(address)",
            "isContract(address)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "tokenFallback(address,uint256,bytes)": [
                594,
                185
            ],
            "balanceOf(address)": [
                259,
                119
            ],
            "transfer(address,uint256,bytes)": [
                423,
                163
            ],
            "isContract(address)": [
                125,
                75
            ],
            "transfer(address,uint256)": [
                346,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump1517_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump1517": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block1517_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block1517": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "ERC23StandardToken": {
        "function_list": [
            "tokenFallback(address,uint256,bytes)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "balanceOf(address)",
            "isContract(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                158,
                75
            ],
            "isContract(address)": [
                235,
                97
            ],
            "balanceOf(address)": [
                478,
                163
            ],
            "allowance(address,address)": [
                914,
                251
            ],
            "transfer(address,uint256,bytes)": [
                642,
                207
            ],
            "tokenFallback(address,uint256,bytes)": [
                813,
                229
            ],
            "transferFrom(address,address,uint256)": [
                369,
                141
            ],
            "transfer(address,uint256)": [
                565,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump3164_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump3164": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3164_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block3164": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ]
        }
    },
    "Profit1000": {
        "function_list": [
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "tokenFallback(address,uint256,bytes)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferToAddress(address,uint256,bytes)",
            "transferToContract(address,uint256,bytes)",
            "balanceOf(address)",
            "isContract(address)",
            "Profit1000()",
            "fallback()",
            "halt()",
            "unhalt()",
            "buy()",
            "buyRecipient(address)",
            "burn(uint256)",
            "proposeFoundationTransfer(address)",
            "cancelFoundationTransfer()",
            "acceptFoundationTransfer()",
            "setMultisig(address)",
            "transfer(address,uint256,bytes)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "returnRate()",
            "perAddressCap()",
            "crowdsaleOn()",
            "getEtherRaised()",
            "getTokenSold()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "tokenFallback(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "transfer(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "transferToAddress(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "transferToContract(address,uint256,bytes)": {
                "argument": {
                    "_value": "uint256",
                    "_data": "bytes"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "Profit1000()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "buyRecipient(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "burn(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "proposeFoundationTransfer(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "cancelFoundationTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "acceptFoundationTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "setMultisig(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "returnRate()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "perAddressCap()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "crowdsaleOn()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "getEtherRaised()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "getTokenSold()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "hour_blocks": "uint256",
                    "day_blocks": "uint256",
                    "startBlock": "uint256",
                    "endBlock": "uint256",
                    "crowdsaleTokenSupply": "uint256",
                    "foundationTokenSupply": "uint256",
                    "crowdsaleTokenSold": "uint256",
                    "presaleEtherRaised": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "isContract(address)": [
                870,
                207
            ],
            "buyRecipient(address)": [
                793,
                163
            ],
            "buy()": [
                2194,
                669
            ],
            "getTokenSold()": [
                1964,
                603
            ],
            "transferFrom(address,address,uint256)": [
                1047,
                273
            ],
            "approve(address,uint256)": [
                716,
                141
            ],
            "tokenFallback(address,uint256,bytes)": [
                2499,
                757
            ],
            "crowdsaleOn()": [
                482,
                75
            ],
            "acceptFoundationTransfer()": [
                847,
                185
            ],
            "setMultisig(address)": [
                2808,
                867
            ],
            "returnRate()": [
                1854,
                559
            ],
            "perAddressCap()": [
                1528,
                427
            ],
            "balanceOf(address)": [
                1767,
                537
            ],
            "transfer(address,uint256,bytes)": [
                2328,
                735
            ],
            "halt()": [
                1657,
                493
            ],
            "getEtherRaised()": [
                2742,
                823
            ],
            "burn(uint256)": [
                1286,
                339
            ],
            "proposeFoundationTransfer(address)": [
                1897,
                581
            ],
            "unhalt()": [
                2600,
                779
            ],
            "transfer(address,uint256)": [
                2204,
                691
            ],
            "cancelFoundationTransfer()": [
                2785,
                845
            ],
            "allowance(address,address)": [
                2623,
                801
            ]
        },
        "block_CALL_mapping": {
            "block4052": [
                "multisig.send(msg.value)"
            ],
            "block7980_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump7980": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump7980_0": [
                "receiver.tokenFallback(msg.sender, _value, _data)",
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "jump4052_2": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "block7980": [
                "receiver.tokenFallback(msg.sender, _value, _data)"
            ],
            "block4052_2": [
                "multisig.send(msg.value)"
            ],
            "block4052_0": [
                "multisig.send(msg.value)"
            ],
            "block4052_1": [
                "multisig.send(msg.value)"
            ],
            "jump4052_0": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "jump4052_1": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ],
            "jump4052": [
                "multisig.send(msg.value)",
                "multisig.send(msg.value)"
            ]
        }
    }
}