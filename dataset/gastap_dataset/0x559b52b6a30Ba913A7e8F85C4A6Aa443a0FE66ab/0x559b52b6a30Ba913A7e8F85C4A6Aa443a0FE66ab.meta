{
    "ERC20Events": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transfer(address,uint256)": [
                1385,
                361
            ],
            "totalSupply()": [
                545,
                141
            ],
            "allowance(address,address)": [
                1704,
                427
            ],
            "balanceOf(address)": [
                1044,
                273
            ],
            "transferFrom(address,address,uint256)": [
                588,
                163
            ]
        },
        "block_CALL_mapping": {
            "block3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ],
            "jump3721": [
                "spender.receiveApproval(msg.sender, _value, this, _extraData)",
                "spender.receiveApproval(msg.sender, _value, this, _extraData)"
            ]
        }
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenTrader": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "TokenTrader(address,uint256,uint256,uint256,bool,bool)",
            "activate(bool,bool)",
            "deposit()",
            "withdrawAsset(uint256)",
            "withdrawToken(address,uint256)",
            "withdraw(uint256)",
            "buy()",
            "sell(uint256)",
            "fallback()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "TokenTrader(address,uint256,uint256,uint256,bool,bool)": {
                "argument": {
                    "_buyPrice": "uint256",
                    "_sellPrice": "uint256",
                    "_units": "uint256"
                },
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "activate(bool,bool)": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdrawAsset(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "sell(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "buyPrice": "uint256",
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawAsset(uint256)": [
                518,
                185
            ],
            "withdraw(uint256)": [
                229,
                75
            ],
            "buy()": [
                818,
                273
            ],
            "withdrawToken(address,uint256)": [
                717,
                251
            ],
            "deposit()": [
                934,
                339
            ],
            "activate(bool,bool)": [
                828,
                295
            ],
            "sell(uint256)": [
                944,
                361
            ],
            "transferOwnership(address)": [
                989,
                383
            ]
        },
        "block_CALL_mapping": {
            "block1377_1": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1377_0": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1457": [
                "msg.sender.send(change)"
            ],
            "block1743": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1457_0": [
                "msg.sender.send(change)"
            ],
            "block1457_1": [
                "msg.sender.send(change)"
            ],
            "jump2887": [
                "ERC20(_token).transfer(owner,_value)",
                "ERC20(_token).transfer(owner,_value)"
            ],
            "jump2489": [
                "ERC20(asset).transfer(owner,_value)",
                "ERC20(asset).transfer(owner,_value)"
            ],
            "jump1457": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "jump1743_0": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "jump3659": [
                "ERC20(asset).transferFrom(msg.sender, address(this), amount)",
                "ERC20(asset).transferFrom(msg.sender, address(this), amount)"
            ],
            "jump1377": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block3659": [
                "ERC20(asset).transferFrom(msg.sender, address(this), amount)"
            ],
            "jump1377_1": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1377_0": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1743_1": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1999": [
                "owner.send(_value)"
            ],
            "jump1457_0": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "jump1457_1": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "block3729": [
                "msg.sender.send(order * buyPrice)"
            ],
            "jump3729": [
                "msg.sender.send(order * buyPrice)",
                "msg.sender.send(order * buyPrice)"
            ],
            "block2489": [
                "ERC20(asset).transfer(owner,_value)"
            ],
            "block1743_0": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1743_1": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1377": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1743": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block2887": [
                "ERC20(_token).transfer(owner,_value)"
            ]
        }
    }
}