{
    "DeveryPresaleWhitelist": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "add(uint256,uint256)",
            "sub(uint256,uint256)",
            "mul(uint256,uint256)",
            "div(uint256,uint256)"
        ],
        "initial_state": {
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferFrom(address,address,uint256)": [
                81,
                75
            ],
            "transfer(address,uint256)": [
                214,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Owned": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                300,
                141
            ],
            "acceptOwnership()": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Token": {
        "function_list": [
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "ERC20Token(string,string,uint8)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "disableMinting()",
            "enableTransfers()",
            "mint(address,uint256)",
            "transferAnyERC20Token(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Owned()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "ERC20Token(string,string,uint8)": {
                "argument": {
                    "_symbol": "string",
                    "_name": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "disableMinting()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "enableTransfers()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                401,
                97
            ],
            "transferAnyERC20Token(address,uint256)": [
                1416,
                405
            ],
            "enableTransfers()": [
                1306,
                361
            ],
            "totalSupply()": [
                502,
                119
            ],
            "balanceOf(address)": [
                817,
                229
            ],
            "transferFrom(address,address,uint256)": [
                545,
                141
            ],
            "acceptOwnership()": [
                904,
                251
            ],
            "allowance(address,address)": [
                1517,
                427
            ],
            "transfer(address,uint256)": [
                4618,
                946
            ],
            "transferOwnership(address)": [
                1636,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump4618": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)",
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ],
            "block4618": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ]
        }
    },
    "DeveryPresale": {
        "function_list": [
            "ERC20Token(string,string,uint8)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "allowance(address,address)",
            "disableMinting()",
            "enableTransfers()",
            "mint(address,uint256)",
            "transferAnyERC20Token(address,uint256)",
            "Owned()",
            "transferOwnership(address)",
            "acceptOwnership()",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "DeveryPresale()",
            "setWallet(address)",
            "setEthMinContribution(uint256)",
            "setUsdCap(uint256)",
            "setUsdPerKEther(uint256)",
            "setWhitelist(address)",
            "setPICOPSCertifier(address)",
            "addressCanContribute(address)",
            "ethCap()",
            "closeSale()",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "ERC20Token(string,string,uint8)": {
                "argument": {
                    "_symbol": "string",
                    "_name": "string",
                    "_decimals": "uint8"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "disableMinting()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "enableTransfers()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "transferAnyERC20Token(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "Owned()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "acceptOwnership()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "DeveryPresale()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setEthMinContribution(uint256)": {
                "argument": {
                    "_ethMinContribution": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setUsdCap(uint256)": {
                "argument": {
                    "_usdCap": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setUsdPerKEther(uint256)": {
                "argument": {
                    "_usdPerKEther": "uint256"
                },
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setWhitelist(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "setPICOPSCertifier(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "addressCanContribute(address)": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "ethCap()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "closeSale()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "START_DATE": "uint256",
                    "ethMinContribution": "uint256",
                    "TEST_CONTRIBUTION": "uint256",
                    "usdCap": "uint256",
                    "usdPerKEther": "uint256",
                    "contributedEth": "uint256",
                    "contributedUsd": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "closeSale()": [
                3729,
                867
            ],
            "totalSupply()": [
                1561,
                141
            ],
            "allowance(address,address)": [
                3452,
                801
            ],
            "transferFrom(address,address,uint256)": [
                1604,
                163
            ],
            "addressCanContribute(address)": [
                3638,
                845
            ],
            "approve(address,uint256)": [
                1460,
                119
            ],
            "transferAnyERC20Token(address,uint256)": [
                3351,
                779
            ],
            "setUsdPerKEther(uint256)": [
                3306,
                757
            ],
            "setWallet(address)": [
                3571,
                823
            ],
            "balanceOf(address)": [
                2424,
                471
            ],
            "enableTransfers()": [
                3110,
                669
            ],
            "transferOwnership(address)": [
                3752,
                889
            ],
            "setPICOPSCertifier(address)": [
                2003,
                317
            ],
            "setUsdCap(uint256)": [
                1780,
                207
            ],
            "setEthMinContribution(uint256)": [
                1271,
                75
            ],
            "ethCap()": [
                2534,
                515
            ],
            "setWhitelist(address)": [
                2577,
                537
            ],
            "transfer(address,uint256)": [
                8887,
                946
            ],
            "acceptOwnership()": [
                2511,
                493
            ]
        },
        "block_CALL_mapping": {
            "block1195_0": [
                "msg.sender.transfer(ethRefund)"
            ],
            "block1195": [
                "msg.sender.transfer(ethRefund)"
            ],
            "block8887": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ],
            "jump4011_1": [
                "whitelist.whitelist(_addr)",
                "whitelist.whitelist(_addr)"
            ],
            "jump4011_0": [
                "whitelist.whitelist(_addr)",
                "whitelist.whitelist(_addr)"
            ],
            "jump966": [
                "wallet.transfer(ethAmount)",
                "wallet.transfer(ethAmount)"
            ],
            "block4011": [
                "whitelist.whitelist(_addr)"
            ],
            "jump4011": [
                "whitelist.whitelist(_addr)",
                "whitelist.whitelist(_addr)"
            ],
            "block966": [
                "wallet.transfer(ethAmount)"
            ],
            "block966_0": [
                "wallet.transfer(ethAmount)"
            ],
            "jump1195_0": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ],
            "jump4266_1": [
                "picopsCertifier.certified(_addr)",
                "picopsCertifier.certified(_addr)"
            ],
            "jump4266_0": [
                "picopsCertifier.certified(_addr)",
                "picopsCertifier.certified(_addr)"
            ],
            "jump1195": [
                "msg.sender.transfer(ethRefund)",
                "msg.sender.transfer(ethRefund)"
            ],
            "jump8887": [
                "ERC20Interface(tokenAddress).transfer(owner, tokens)",
                "ERC20Interface(tokenAddress).transfer(owner, tokens)"
            ],
            "block4011_1": [
                "whitelist.whitelist(_addr)"
            ],
            "block4011_0": [
                "whitelist.whitelist(_addr)"
            ],
            "jump966_0": [
                "wallet.transfer(ethAmount)",
                "wallet.transfer(ethAmount)"
            ],
            "jump4266": [
                "picopsCertifier.certified(_addr)",
                "picopsCertifier.certified(_addr)"
            ],
            "block4266_1": [
                "picopsCertifier.certified(_addr)"
            ],
            "block4266_0": [
                "picopsCertifier.certified(_addr)"
            ],
            "block4266": [
                "picopsCertifier.certified(_addr)"
            ]
        }
    }
}