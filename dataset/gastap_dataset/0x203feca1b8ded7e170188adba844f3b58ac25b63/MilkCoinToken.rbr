block0(g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	lt(s(1), s(0))
	call(block538())

jump0(s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	geq(s(1), s(0))
	call(block13(g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

jump13(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block548(s(0),g(mintingFinished), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block13(g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 97649499
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block595(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block65(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block739(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump76(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block87(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 311330784
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block840(s(0),g(tokensAfterCrowdsale), l(l1), l(l0), callvalue))

jump87(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block98(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 350403626
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block883(s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, callvalue, newInvested, timestamp))

jump98(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newInvested, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block109(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 396884402
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block952(s(0),g(addresses), l(l1), l(l0), callvalue))

jump109(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

jump120(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block995(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block120(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1038(s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, from, returndatasize, timestamp, to, value))

jump131(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, from, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block142(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 639357169
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1171(s(0), l(l1), l(l0), callvalue))

jump142(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

jump153(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1214(s(0), l(l1), l(l0), callvalue))

jump153(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block153(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 779042378
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1257(s(0), l(l1), l(l0), callvalue))

jump164(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block164(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 883494146
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1306(s(0),g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock))

jump175(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

jump186(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1373(s(0),g(owner), l(l0), address, balance, caller, callvalue, returndatasize))

jump186(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block186(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1020253707
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, balance, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1396(s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, callvalue, to))

jump197(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block197(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1086394137
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, amount, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1316919025
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1497(s(0),g(buyBackInvestedValue), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))

block219(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1712882787
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1540(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))

jump219(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, subtractedValue, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

jump230(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1641(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump230(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block230(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1748004419
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1792864107
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1728(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, callvalue, count, returndatasize))

jump241(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block252(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1803529499
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1773(s(0),g(ethToDividendsNeeds), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block263(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1816(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))

jump263(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

jump274(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1903(s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, callvalue, returndatasize))

jump274(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block274(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2021578063
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2053441270
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1926(s(0),g(dividendsPayedIndex), l(l1), l(l0), callvalue))

jump285(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

jump296(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block1969(s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller, callvalue))

jump296(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block296(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2103753908
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2016(s(0),g(dividendsCalculated), l(l1), l(l0), callvalue))

jump307(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block307(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2213718218
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2063(s(0),g(owner), l(l1), l(l0), callvalue))

jump318(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block318(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block329(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2150(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

jump340(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2294(s(0),g(endBuyBackDate), l(l1), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block340(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2735717089
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2337(s(0),g(dividendsPayed), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block362(s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))

block351(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2819634721
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	eq(s(2), s(1))
	call(block2384(s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, returndatasize, timestamp, to, value))

jump362(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	neq(s(2), s(1))
	call(block373(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, toLock))

block362(s(0), g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, timestamp, to, toLock, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, toLock)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2890784159
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, toLock))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, toLock)=>
	eq(s(2), s(1))
	call(block2485(s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, callvalue, extcodesize, gas, returndatasize))

jump373(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l9), l(l8), l(l7), l(l6), l(l1), l(l0), addedValue, address, anotherToken, calldataload, calldatasize, caller, callvalue, count, extcodesize, gas, newOwner, owner, percent, returndatasize, spender, toLock)=>
	neq(s(2), s(1))
	call(block384(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))

block384(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2979472743
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	eq(s(2), s(1))
	call(block2552(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump384(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	neq(s(2), s(1))
	call(block395(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))

block395(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3046218568
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	eq(s(2), s(1))
	call(block2643(s(0),g(toBuyBack), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(toBuyBack), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	neq(s(2), s(1))
	call(block406(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))

jump406(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	eq(s(2), s(1))
	call(block2686(s(0),g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock))

jump406(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	neq(s(2), s(1))
	call(block417(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender))

block406(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3085655562
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender, toLock))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3163335239
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	eq(s(2), s(1))
	call(block2753(s(0),g(dividendsPayed), g(dividendsCalculated), g(owner), caller, callvalue))

jump417(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	neq(s(2), s(1))
	call(block428(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender))

block428(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3320493700
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	eq(s(2), s(1))
	call(block2776(s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, callvalue, count, percent))

jump428(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(startBuyBackDate), g(invested), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, count, newOwner, owner, percent, spender)=>
	neq(s(2), s(1))
	call(block439(s(0),g(addresses), g(dividendsIndex), g(startBuyBackDate), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))

jump439(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(startBuyBackDate), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	eq(s(2), s(1))
	call(block2831(s(0),g(startBuyBackDate), l(l1), l(l0), callvalue))

jump439(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(startBuyBackDate), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	neq(s(2), s(1))
	call(block450(s(0),g(addresses), g(dividendsIndex), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))

block439(s(0), g(addresses), g(dividendsIndex), g(startBuyBackDate), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3397267999
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(startBuyBackDate), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(addresses), g(dividendsIndex), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3405455874
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	eq(s(2), s(1))
	call(block2874(s(0),g(invested), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(invested), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	neq(s(2), s(1))
	call(block461(s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))

block461(s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3504541104
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	eq(s(2), s(1))
	call(block2917(s(0)))

jump461(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	neq(s(2), s(1))
	call(block472(s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))

jump472(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	eq(s(2), s(1))
	call(block2927(s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))

jump472(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	neq(s(2), s(1))
	call(block483(s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))

block472(s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3611153955
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), addedValue, calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	eq(s(2), s(1))
	call(block3028(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump483(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	neq(s(2), s(1))
	call(block494(s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))

block483(s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner, owner, spender)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner, owner, spender))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3992087963
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block3147(s(0),g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump494(s(2), s(1), s(0), g(addresses), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block505(s(0),g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))

block505(s(0), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4015667848
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block3256(s(0),g(dividendsIndex), l(l1), l(l0), callvalue))

jump505(s(2), s(1), s(0), g(dividendsIndex), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block516(s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))

block516(s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4039872119
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block3299(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump516(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block527(s(0),g(owner), l(l0), calldatasize, caller, callvalue, newOwner))

jump527(s(2), s(1), s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), s(1))
	call(block3390(s(0),g(owner), l(l0), calldatasize, caller, callvalue, newOwner))

jump527(s(2), s(1), s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), s(1))
	call(block538_0(s(0)))

block527(s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4076725131
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(owner), l(l0), calldatasize, caller, callvalue, newOwner))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block538()=>
	nop(JUMPDEST)
	s(0) = 546
	nop(PUSH2)
	s(1) = 3457
	nop(PUSH2)
	call(block3457(s(0)))
	nop(JUMP)

block546()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump548(s(2), s(1), s(0), g(mintingFinished), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block560(s(1), s(0),g(mintingFinished), l(l1), l(l0)))

jump548(s(2), s(1), s(0), g(mintingFinished), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block556(s(1), s(0)))

block548(s(0), g(mintingFinished), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump548(s(2),s(1),s(0),g(mintingFinished), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block556(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block560(s(1), s(0), g(mintingFinished), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 569
	nop(PUSH2)
	s(2) = 3459
	nop(PUSH2)
	call(block3459(s(1),s(0),g(mintingFinished), l(l1), l(l0)))
	nop(JUMP)

block569(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block595(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump595(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump595(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block607(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump595(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block603(s(1), s(0)))

block603(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block607(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 616
	nop(PUSH2)
	s(2) = 3478
	nop(PUSH2)
	call(block3478(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block616(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block653(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

block653(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump653(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump653(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block680(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump653(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block662(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block662(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 653
	nop(PUSH2)
	call(block653(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block680(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump680(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block725(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump680(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block700(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block700(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block725(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block725(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block739(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump739(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump739(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block751(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value))

jump739(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block747(s(1), s(0)))

block747(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block751(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 814
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 3535
	nop(PUSH2)
	call(block3535(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block814(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump840(s(2), s(1), s(0), g(tokensAfterCrowdsale), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block852(s(1), s(0),g(tokensAfterCrowdsale), l(l1), l(l0)))

jump840(s(2), s(1), s(0), g(tokensAfterCrowdsale), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block848(s(1), s(0)))

block840(s(0), g(tokensAfterCrowdsale), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump840(s(2),s(1),s(0),g(tokensAfterCrowdsale), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block848(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block852(s(1), s(0), g(tokensAfterCrowdsale), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 861
	nop(PUSH2)
	s(2) = 3777
	nop(PUSH2)
	call(block3777(s(1),s(0),g(tokensAfterCrowdsale), l(l1), l(l0)))
	nop(JUMP)

block861(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block883(s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, callvalue, newInvested, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump883(s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, callvalue, newInvested, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump883(s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, callvalue, newInvested, timestamp)=>
	eq(s(2), 0)
	call(block895(s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, newInvested, timestamp))

jump883(s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, callvalue, newInvested, timestamp)=>
	neq(s(2), 0)
	call(block891(s(1), s(0)))

block891(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block895(s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), calldatasize, caller, newInvested, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 926
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newInvested
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 3783
	nop(PUSH2)
	call(block3783(s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp))
	nop(JUMP)

block926(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block952(s(0), g(addresses), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump952(s(2),s(1),s(0),g(addresses), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump952(s(2), s(1), s(0), g(addresses), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block964(s(1), s(0),g(addresses), l(l1), l(l0)))

jump952(s(2), s(1), s(0), g(addresses), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block960(s(1), s(0)))

block960(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block964(s(1), s(0), g(addresses), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 973
	nop(PUSH2)
	s(2) = 3965
	nop(PUSH2)
	call(block3965(s(1),s(0),g(addresses), l(l1), l(l0)))
	nop(JUMP)

block973(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block995(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump995(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump995(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1007(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump995(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1003(s(1), s(0)))

block1003(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1007(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1016
	nop(PUSH2)
	s(2) = 3978
	nop(PUSH2)
	call(block3978(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1016(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1038(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, from, returndatasize, timestamp, to, value)=>
	eq(s(2), 0)
	call(block1050(s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, from, returndatasize, timestamp, to, value))

jump1038(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, from, returndatasize, timestamp, to, value)=>
	neq(s(2), 0)
	call(block1046(s(1), s(0)))

block1038(s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, from, returndatasize, timestamp, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1038(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, from, returndatasize, timestamp, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1046(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1050(s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, from, returndatasize, timestamp, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1145
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 3984
	nop(PUSH2)
	call(block3984(s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block1145(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1171(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1183(s(1), s(0), l(l1), l(l0)))

jump1171(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1179(s(1), s(0)))

block1171(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1171(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1179(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1183(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1192
	nop(PUSH2)
	s(2) = 4017
	nop(PUSH2)
	call(block4017(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1192(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1214(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1226(s(1), s(0), l(l1), l(l0)))

jump1214(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1222(s(1), s(0)))

block1214(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1214(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1222(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1226(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1235
	nop(PUSH2)
	s(2) = 4022
	nop(PUSH2)
	call(block4022(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1235(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1257(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1257(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1257(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1269(s(1), s(0), l(l1), l(l0)))

jump1257(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1265(s(1), s(0)))

block1265(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1269(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1278
	nop(PUSH2)
	s(2) = 4027
	nop(PUSH2)
	call(block4027(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1278(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1306(s(2), s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	eq(s(2), 0)
	call(block1318(s(1), s(0),g(owner), l(l7), l(l6), calldatasize, caller, toLock))

jump1306(s(2), s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	neq(s(2), 0)
	call(block1314(s(1), s(0)))

block1306(s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1306(s(2),s(1),s(0),g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1314(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1318(s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, toLock)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1371
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = toLock
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 4032
	nop(PUSH2)
	call(block4032(s(2),s(1),s(0),g(owner), l(l7), l(l6), caller))
	nop(JUMP)

block1371(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1373(s(0), g(owner), l(l0), address, balance, caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1373(s(2),s(1),s(0),g(owner), l(l0), address, balance, caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1373(s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block1385(s(1), s(0),g(owner), l(l0), address, balance, caller, returndatasize))

jump1373(s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block1381(s(1), s(0)))

block1381(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1385(s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1394
	nop(PUSH2)
	s(2) = 4215
	nop(PUSH2)
	call(block4215(s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(JUMP)

block1394(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1396(s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	eq(s(2), 0)
	call(block1408(s(1), s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, to))

jump1396(s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	neq(s(2), 0)
	call(block1404(s(1), s(0)))

block1396(s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, callvalue, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1396(s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, callvalue, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1404(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1408(s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), amount, calldatasize, caller, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1471
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = amount
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4437
	nop(PUSH2)
	call(block4437(s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1471(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1497(s(0), g(buyBackInvestedValue), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1497(s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1497(s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1509(s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0)))

jump1497(s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1505(s(1), s(0)))

block1505(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1509(s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1518
	nop(PUSH2)
	s(2) = 4598
	nop(PUSH2)
	call(block4598(s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0)))
	nop(JUMP)

block1518(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1540(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1540(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1540(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	eq(s(2), 0)
	call(block1552(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue))

jump1540(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	neq(s(2), 0)
	call(block1548(s(1), s(0)))

block1548(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1552(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1615
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = subtractedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 4604
	nop(PUSH2)
	call(block4604(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1615(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1641(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1641(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1641(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1653(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump1641(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1649(s(1), s(0)))

block1649(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1653(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1706
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5261
	nop(PUSH2)
	call(block5261(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block1706(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1728(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, callvalue, count, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1728(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, callvalue, count, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1728(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, callvalue, count, returndatasize)=>
	eq(s(2), 0)
	call(block1740(s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, count, returndatasize))

jump1728(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, callvalue, count, returndatasize)=>
	neq(s(2), 0)
	call(block1736(s(1), s(0)))

block1736(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1740(s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), calldatasize, caller, count, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1771
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = count
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 5285
	nop(PUSH2)
	call(block5285(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), caller, returndatasize))
	nop(JUMP)

block1771(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1773(s(2), s(1), s(0), g(ethToDividendsNeeds), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1785(s(1), s(0),g(ethToDividendsNeeds), l(l1), l(l0)))

jump1773(s(2), s(1), s(0), g(ethToDividendsNeeds), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1781(s(1), s(0)))

block1773(s(0), g(ethToDividendsNeeds), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1773(s(2),s(1),s(0),g(ethToDividendsNeeds), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1781(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1785(s(1), s(0), g(ethToDividendsNeeds), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1794
	nop(PUSH2)
	s(2) = 6035
	nop(PUSH2)
	call(block6035(s(1),s(0),g(ethToDividendsNeeds), l(l1), l(l0)))
	nop(JUMP)

block1794(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1816(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	eq(s(2), 0)
	call(block1828(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner))

jump1816(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	neq(s(2), 0)
	call(block1824(s(1), s(0)))

block1816(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1816(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1824(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1828(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1881
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6041
	nop(PUSH2)
	call(block6041(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block1881(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1903(s(2), s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, callvalue, returndatasize)=>
	eq(s(2), 0)
	call(block1915(s(1), s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize))

jump1903(s(2), s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, callvalue, returndatasize)=>
	neq(s(2), 0)
	call(block1911(s(1), s(0)))

block1903(s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1903(s(2),s(1),s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1911(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1915(s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1924
	nop(PUSH2)
	s(2) = 6114
	nop(PUSH2)
	call(block6114(s(1),s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize))
	nop(JUMP)

block1924(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1926(s(0), g(dividendsPayedIndex), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1926(s(2),s(1),s(0),g(dividendsPayedIndex), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1926(s(2), s(1), s(0), g(dividendsPayedIndex), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1938(s(1), s(0),g(dividendsPayedIndex), l(l1), l(l0)))

jump1926(s(2), s(1), s(0), g(dividendsPayedIndex), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1934(s(1), s(0)))

block1934(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1938(s(1), s(0), g(dividendsPayedIndex), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1947
	nop(PUSH2)
	s(2) = 6429
	nop(PUSH2)
	call(block6429(s(1),s(0),g(dividendsPayedIndex), l(l1), l(l0)))
	nop(JUMP)

block1947(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1969(s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1969(s(2),s(1),s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1969(s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller, callvalue)=>
	eq(s(2), 0)
	call(block1981(s(1), s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller))

jump1969(s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller, callvalue)=>
	neq(s(2), 0)
	call(block1977(s(1), s(0)))

block1977(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1981(s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1990
	nop(PUSH2)
	s(2) = 6435
	nop(PUSH2)
	call(block6435_0(s(1),s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(JUMP)

block1990(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2016(s(2), s(1), s(0), g(dividendsCalculated), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2028(s(1), s(0),g(dividendsCalculated), l(l1), l(l0)))

jump2016(s(2), s(1), s(0), g(dividendsCalculated), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2024(s(1), s(0)))

block2016(s(0), g(dividendsCalculated), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2016(s(2),s(1),s(0),g(dividendsCalculated), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2024(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2028(s(1), s(0), g(dividendsCalculated), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2037
	nop(PUSH2)
	s(2) = 6607
	nop(PUSH2)
	call(block6607(s(1),s(0),g(dividendsCalculated), l(l1), l(l0)))
	nop(JUMP)

block2037(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2063(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2063(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2063(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2075(s(1), s(0),g(owner), l(l1), l(l0)))

jump2063(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2071(s(1), s(0)))

block2071(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2075(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2084
	nop(PUSH2)
	s(2) = 6626
	nop(PUSH2)
	call(block6626(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block2084(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2150(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2150(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2150(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2162(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump2150(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2158(s(1), s(0)))

block2158(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2162(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2171
	nop(PUSH2)
	s(2) = 6664
	nop(PUSH2)
	call(block6664(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2171(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block2208(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

jump2208(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block2235(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump2208(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block2217(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block2208(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump2208(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2217(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 2208
	nop(PUSH2)
	call(block2208(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block2235(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump2235(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block2280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump2235(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block2255(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block2255(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block2280(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block2280(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2294(s(2), s(1), s(0), g(endBuyBackDate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2306(s(1), s(0),g(endBuyBackDate), l(l1), l(l0)))

jump2294(s(2), s(1), s(0), g(endBuyBackDate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2302(s(1), s(0)))

block2294(s(0), g(endBuyBackDate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2294(s(2),s(1),s(0),g(endBuyBackDate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2302(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2306(s(1), s(0), g(endBuyBackDate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2315
	nop(PUSH2)
	s(2) = 6721
	nop(PUSH2)
	call(block6721(s(1),s(0),g(endBuyBackDate), l(l1), l(l0)))
	nop(JUMP)

block2315(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2337(s(2), s(1), s(0), g(dividendsPayed), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2349(s(1), s(0),g(dividendsPayed), l(l1), l(l0)))

jump2337(s(2), s(1), s(0), g(dividendsPayed), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2345(s(1), s(0)))

block2337(s(0), g(dividendsPayed), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2337(s(2),s(1),s(0),g(dividendsPayed), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2345(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2349(s(1), s(0), g(dividendsPayed), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2358
	nop(PUSH2)
	s(2) = 6727
	nop(PUSH2)
	call(block6727(s(1),s(0),g(dividendsPayed), l(l1), l(l0)))
	nop(JUMP)

block2358(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2384(s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, returndatasize, timestamp, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2384(s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, returndatasize, timestamp, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2384(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, returndatasize, timestamp, to, value)=>
	eq(s(2), 0)
	call(block2396(s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, returndatasize, timestamp, to, value))

jump2384(s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, callvalue, returndatasize, timestamp, to, value)=>
	neq(s(2), 0)
	call(block2392(s(1), s(0)))

block2392(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2396(s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, calldatasize, caller, returndatasize, timestamp, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2459
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 6746
	nop(PUSH2)
	call(block6746(s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block2459(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block2485(s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, callvalue, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2485(s(2),s(1),s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, callvalue, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2485(s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, callvalue, extcodesize, gas, returndatasize)=>
	eq(s(2), 0)
	call(block2497(s(1), s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, extcodesize, gas, returndatasize))

jump2485(s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, callvalue, extcodesize, gas, returndatasize)=>
	neq(s(2), 0)
	call(block2493(s(1), s(0)))

block2493(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2497(s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, anotherToken, calldatasize, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2550
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = anotherToken
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 6777
	nop(PUSH2)
	call(block6777(s(2),s(1),s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(JUMP)

block2550(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2552(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2552(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2552(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2564(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump2552(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2560(s(1), s(0)))

block2560(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2564(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2617
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7407
	nop(PUSH2)
	call(block7407(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2617(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2643(s(2), s(1), s(0), g(toBuyBack), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2655(s(1), s(0),g(toBuyBack), l(l1), l(l0)))

jump2643(s(2), s(1), s(0), g(toBuyBack), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2651(s(1), s(0)))

block2643(s(0), g(toBuyBack), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2643(s(2),s(1),s(0),g(toBuyBack), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2651(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2655(s(1), s(0), g(toBuyBack), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2664
	nop(PUSH2)
	s(2) = 7439
	nop(PUSH2)
	call(block7439(s(1),s(0),g(toBuyBack), l(l1), l(l0)))
	nop(JUMP)

block2664(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2686(s(2), s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	eq(s(2), 0)
	call(block2698(s(1), s(0),g(owner), l(l7), l(l6), calldatasize, caller, toLock))

jump2686(s(2), s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	neq(s(2), 0)
	call(block2694(s(1), s(0)))

block2686(s(0), g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2686(s(2),s(1),s(0),g(owner), l(l7), l(l6), calldatasize, caller, callvalue, toLock))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2694(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2698(s(1), s(0), g(owner), l(l7), l(l6), calldatasize, caller, toLock)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2751
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = toLock
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7445
	nop(PUSH2)
	call(block7445(s(2),s(1),s(0),g(owner), l(l7), l(l6), caller))
	nop(JUMP)

block2751(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2753(s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2753(s(2),s(1),s(0),g(dividendsPayed), g(dividendsCalculated), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2753(s(2), s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block2765(s(1), s(0),g(dividendsPayed), g(dividendsCalculated), g(owner), caller))

jump2753(s(2), s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block2761(s(1), s(0)))

block2761(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2765(s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2774
	nop(PUSH2)
	s(2) = 7628
	nop(PUSH2)
	call(block7628(s(1),s(0),g(dividendsPayed), g(dividendsCalculated), g(owner), caller))
	nop(JUMP)

block2774(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2776(s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, callvalue, count, percent)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2776(s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, callvalue, count, percent))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2776(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, callvalue, count, percent)=>
	eq(s(2), 0)
	call(block2788(s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, count, percent))

jump2776(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, callvalue, count, percent)=>
	neq(s(2), 0)
	call(block2784(s(1), s(0)))

block2784(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2788(s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), calldatasize, caller, count, percent)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2829
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = percent
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = count
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 7776
	nop(PUSH2)
	call(block7776(s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), caller))
	nop(JUMP)

block2829(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2831(s(0), g(startBuyBackDate), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2831(s(2),s(1),s(0),g(startBuyBackDate), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2831(s(2), s(1), s(0), g(startBuyBackDate), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2843(s(1), s(0),g(startBuyBackDate), l(l1), l(l0)))

jump2831(s(2), s(1), s(0), g(startBuyBackDate), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2839(s(1), s(0)))

block2839(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2843(s(1), s(0), g(startBuyBackDate), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2852
	nop(PUSH2)
	s(2) = 8503
	nop(PUSH2)
	call(block8503(s(1),s(0),g(startBuyBackDate), l(l1), l(l0)))
	nop(JUMP)

block2852(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2874(s(0), g(invested), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2874(s(2),s(1),s(0),g(invested), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2874(s(2), s(1), s(0), g(invested), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2886(s(1), s(0),g(invested), l(l1), l(l0)))

jump2874(s(2), s(1), s(0), g(invested), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2882(s(1), s(0)))

block2882(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2886(s(1), s(0), g(invested), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2895
	nop(PUSH2)
	s(2) = 8509
	nop(PUSH2)
	call(block8509(s(1),s(0),g(invested), l(l1), l(l0)))
	nop(JUMP)

block2895(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2917(s(0))=>
	nop(JUMPDEST)
	s(1) = 2925
	nop(PUSH2)
	s(2) = 3457
	nop(PUSH2)
	call(block3457_0(s(1),s(0)))
	nop(JUMP)

block2925(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2927(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	eq(s(2), 0)
	call(block2939(s(1), s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender))

jump2927(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	neq(s(2), 0)
	call(block2935(s(1), s(0)))

block2927(s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2927(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2935(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2939(s(1), s(0), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3002
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = addedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 8515
	nop(PUSH2)
	call(block8515(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block3002(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3028(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3028(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3028(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block3040(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender))

jump3028(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block3036(s(1), s(0)))

block3036(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3040(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3125
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 9023
	nop(PUSH2)
	call(block9023(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3125(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3147(s(0), g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3147(s(2),s(1),s(0),g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3147(s(2), s(1), s(0), g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3159(s(1), s(0),g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump3147(s(2), s(1), s(0), g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3155(s(1), s(0)))

block3155(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3159(s(1), s(0), g(addresses), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3190
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9158
	nop(PUSH2)
	call(block9158(s(2),s(1),s(0),g(addresses), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3190(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3256(s(2), s(1), s(0), g(dividendsIndex), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3268(s(1), s(0),g(dividendsIndex), l(l1), l(l0)))

jump3256(s(2), s(1), s(0), g(dividendsIndex), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3264(s(1), s(0)))

block3256(s(0), g(dividendsIndex), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3256(s(2),s(1),s(0),g(dividendsIndex), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3264(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3268(s(1), s(0), g(dividendsIndex), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3277
	nop(PUSH2)
	s(2) = 9220
	nop(PUSH2)
	call(block9220(s(1),s(0),g(dividendsIndex), l(l1), l(l0)))
	nop(JUMP)

block3277(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3299(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3299(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3299(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3311(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump3299(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3307(s(1), s(0)))

block3307(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3311(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3364
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9226
	nop(PUSH2)
	call(block9226(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3364(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3390(s(2), s(1), s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	eq(s(2), 0)
	call(block3402(s(1), s(0),g(owner), l(l0), calldatasize, caller, newOwner))

jump3390(s(2), s(1), s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	neq(s(2), 0)
	call(block3398(s(1), s(0)))

block3390(s(0), g(owner), l(l0), calldatasize, caller, callvalue, newOwner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3390(s(2),s(1),s(0),g(owner), l(l0), calldatasize, caller, callvalue, newOwner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3398(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3402(s(1), s(0), g(owner), l(l0), calldatasize, caller, newOwner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3455
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = newOwner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9258
	nop(PUSH2)
	call(block9258(s(2),s(1),s(0),g(owner), l(l0), caller))
	nop(JUMP)

block3455(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block3457(s(0))=>
	nop(JUMPDEST)
	call(block546())
	nop(JUMP)

block3459(s(1), s(0), g(mintingFinished), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 20
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(mintingFinished)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block569(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3478(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 8
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 35014356566504738070988370592503657521458466834328044474184223061394526830592
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block616(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3535(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block814(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3777(s(1), s(0), g(tokensAfterCrowdsale), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(tokensAfterCrowdsale)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block861(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump3783(s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp)=>
	eq(s(5), s(4))
	call(block3877(s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp))

jump3783(s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp)=>
	neq(s(5), s(4))
	call(block3873(s(3), s(2), s(1), s(0)))

block3783(s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump3783(s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3873(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block3877(s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(invested), g(mintingFinished), g(owner), g(totalSupply), l(l1), l(l0), caller, timestamp)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 4
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(invested) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 14
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(buyBackInvestedValue) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(4) = g(totalSupply)
	nop(SLOAD)
	s(5) = 5
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(tokensAfterCrowdsale) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = timestamp
	nop(TIMESTAMP)
	s(5) = 6
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(startBuyBackDate) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 31536000
	nop(PUSH4)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(startBuyBackDate)
	nop(SLOAD)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 7
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(endBuyBackDate) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3944
	nop(PUSH2)
	s(5) = 10
	nop(PUSH1)
	s(6) = 5
	nop(PUSH1)
	s(6) = g(tokensAfterCrowdsale)
	nop(SLOAD)
	s(7) = 9602
	nop(PUSH2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(block9602(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(JUMP)

block3944(s(4), s(3), s(2), s(1), s(0), g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 8
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(toBuyBack) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 3958
	nop(PUSH2)
	s(5) = 6435
	nop(PUSH2)
	call(block6435(s(4),s(3),s(2),s(1),s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(JUMP)

block3958(s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block926(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3965(s(1), s(0), g(addresses), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 15
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(4) = g(addresses)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block973(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3978(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1016(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3984(s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 4008
	nop(PUSH2)
	s(7) = 4000
	nop(PUSH2)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 9629
	nop(PUSH2)
	call(block9629(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block4000(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 10588
	nop(PUSH2)
	call(block10588(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block4008(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1145(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4017(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1192(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4022(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 100
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1235(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4027(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 2
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1278(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4032(s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump4032(s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4032(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	eq(s(4), s(3))
	call(block4124(s(2), s(1), s(0), l(l7), l(l6)))

jump4032(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	neq(s(4), s(3))
	call(block4120(s(2), s(1), s(0)))

block4120(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block4124(s(2), s(1), s(0), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 18
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block1371(s(0)))
	nop(JUMP)

block4215(s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump4215(s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4215(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	eq(s(3), s(2))
	call(block4307(s(1), s(0),g(owner), l(l0), address, balance, returndatasize))

jump4215(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, caller, returndatasize)=>
	neq(s(3), s(2))
	call(block4303(s(1), s(0)))

block4303(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

jump4307(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	eq(s(3), 0)
	call(block4434(s(2), s(1), s(0)))

jump4307(s(3), s(2), s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	neq(s(3), 0)
	call(block4425(s(2), s(1), s(0), returndatasize))

block4307(s(1), s(0), g(owner), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 2300
	nop(PUSH2)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(4) = balance
	nop(BALANCE)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = 0
	nop(PUSH1)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(2)
	nop(DUP9)
	s(12) = s(3)
	nop(DUP9)
	s(6) = 1
	nop(CALL)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(2)= eq(s(2), 0)
	nop(ISZERO)
	s(3) = s(2)
	nop(DUP1)
	call(jump4307(s(3),s(2),s(1),s(0),g(owner), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4425(s(2), s(1), s(0), returndatasize)=>
	s(3) = returndatasize
	nop(RETURNDATASIZE)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	nop(REVERT)

block4434(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block1394(s(0)))
	nop(JUMP)

jump4437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block4532(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump4437(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block4528(s(5), s(4), s(3), s(2), s(1), s(0)))

block4437(s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump4437(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4528(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump4532(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block4560(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))

jump4532(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block4556(s(5), s(4), s(3), s(2), s(1), s(0)))

block4532(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 3
	nop(PUSH1)
	s(7) = 20
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(mintingFinished)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4532(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4556(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block4560(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4570
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 10685
	nop(PUSH2)
	call(block10685(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block4570(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	call(jump4570(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4570(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block4588(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump4570(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block4579(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

block4579(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	s(6) = 4587
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 11173
	nop(PUSH2)
	call(block11173_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4587(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block4588(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block4588(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1471(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block4598(s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(2) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1518(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump4604(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block4877(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump4604(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block4743(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

block4604(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	call(jump4604(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4743(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 5025
	nop(PUSH2)
	call(block5025(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block4877(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4896
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 11450
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block11450_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block4896(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block5025(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block5025(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1615(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5261(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 17
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1706(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump5285(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), caller, returndatasize)=>
	eq(s(7), s(6))
	call(block5382(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5285(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), caller, returndatasize)=>
	neq(s(7), s(6))
	call(block5378(s(5), s(4), s(3), s(2), s(1), s(0)))

block5285(s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump5285(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), g(owner), l(l7), l(l6), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5378(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump5382(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block5423(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5382(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block5406(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5382(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 12
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(dividendsPayed)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5382(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5406(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(POP)
	s(6) = 9
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(dividendsCalculated)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(block5423(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5423(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block5434(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5423(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block5430(s(5), s(4), s(3), s(2), s(1), s(0)))

block5423(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump5423(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5430(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block5434(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	call(block5439(s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5439(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block5460(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5439(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block5456(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5439(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 15
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(addresses)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 11
	nop(PUSH1)
	s(7) = g(dividendsPayedIndex)
	nop(SLOAD)
	s(6) = lt(s(7), s(6))
	nop(LT)
	s(7) = s(6)
	nop(DUP1)
	call(jump5439(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5456(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(POP)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(3)
	nop(DUP4)
	s(6) = lt(s(7), s(6))
	nop(LT)
	call(block5460(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5460(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block5951(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated)))

jump5460(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block5466(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5460(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump5460(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5466(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	s(6) = 15
	nop(PUSH1)
	s(7) = 11
	nop(PUSH1)
	s(7) = g(dividendsPayedIndex)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(addresses)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump5466(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5466(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	lt(s(9), s(8))
	call(block5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5466(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	geq(s(9), s(8))
	call(block5481(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block5481(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 18
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gl = s(7)
	s(7) = fresh(1)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5482(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block5681(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5482(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block5612(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5612(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 17
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(6)= eq(s(7), s(6))
	nop(EQ)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	call(block5681(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump5681(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block5920(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5681(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block5687(s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5687(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	s(6) = 17
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 17
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 5842
	nop(PUSH2)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 13
	nop(PUSH1)
	s(8) = g(ethToDividendsNeeds)
	nop(SLOAD)
	s(9) = 11450
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block11450_6(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(JUMP)

jump5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	eq(s(7), 0)
	call(block5918(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump5842(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	neq(s(7), 0)
	call(block5909(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5842(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(7) = 13
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(ethToDividendsNeeds) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5842(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5909(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5918(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	call(block5920(s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

block5920(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(6) = 11
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(dividendsPayedIndex)
	nop(SLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	g(dividendsPayedIndex) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 1
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(6) = 5439
	nop(PUSH2)
	call(block5439(s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(JUMP)

jump5951(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated))=>
	neq(s(7), s(6))
	call(block6029(s(5), s(4), s(3), s(2), s(1), s(0)))

jump5951(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated))=>
	eq(s(7), s(6))
	call(block5967(s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated)))

block5951(s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated))=>
	nop(JUMPDEST)
	s(6) = 15
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = g(addresses)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 11
	nop(PUSH1)
	s(7) = g(dividendsPayedIndex)
	nop(SLOAD)
	call(jump5951(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5967(s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 11
	nop(PUSH1)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(dividendsPayedIndex) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(dividendsPayed)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(dividendsPayed) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(dividendsCalculated)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(dividendsCalculated) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block6029(s(5),s(4),s(3),s(2),s(1),s(0)))

block6029(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1771(s(0)))
	nop(JUMP)

block6035(s(1), s(0), g(ethToDividendsNeeds), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(ethToDividendsNeeds)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1794(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6041(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1881(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump6114(s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize)=>
	gt(s(4), s(3))
	call(block6193(s(2), s(1), s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize))

jump6114(s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize)=>
	leq(s(4), s(3))
	call(block6189(s(2), s(1), s(0)))

block6114(s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 17
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	call(jump6114(s(4),s(3),s(2),s(1),s(0),g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6189(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6193(s(2), s(1), s(0), g(ethToDividendsNeeds), l(l7), l(l6), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 17
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l6) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 17
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 6349
	nop(PUSH2)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 13
	nop(PUSH1)
	s(5) = g(ethToDividendsNeeds)
	nop(SLOAD)
	s(6) = 11450
	nop(PUSH2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(block11450_7(s(5),s(4),s(3),s(2),s(1),s(0),g(ethToDividendsNeeds), l(l0), caller, returndatasize))
	nop(JUMP)

block6349(s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(4) = 13
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(ethToDividendsNeeds) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 2300
	nop(PUSH2)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 0
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(5)
	nop(DUP6)
	s(12) = s(3)
	nop(DUP9)
	s(13) = s(4)
	nop(DUP9)
	s(7) = 1
	nop(CALL)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3)= eq(s(3), 0)
	nop(ISZERO)
	s(4) = s(3)
	nop(DUP1)
	call(jump6349(s(4),s(3),s(2),s(1),s(0),g(ethToDividendsNeeds), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6349(s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	eq(s(4), 0)
	call(block6425(s(3), s(2), s(1), s(0)))

jump6349(s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	neq(s(4), 0)
	call(block6416(s(3), s(2), s(1), s(0), returndatasize))

block6416(s(3), s(2), s(1), s(0), returndatasize)=>
	s(4) = returndatasize
	nop(RETURNDATASIZE)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 0
	nop(PUSH1)
	nop(REVERT)

block6425(s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	call(block1924(s(0)))
	nop(JUMP)

block6429(s(1), s(0), g(dividendsPayedIndex), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(2) = g(dividendsPayedIndex)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1947(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6435(s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump6435(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block6529(s(5), s(4), s(3), s(2), s(1), s(0),g(mintingFinished), g(owner), l(l1), l(l0)))

jump6435(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block6525(s(5), s(4), s(3), s(2), s(1), s(0)))

block6525(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block6529(s(5), s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 1
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 20
	nop(PUSH1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(owner)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 255
	nop(PUSH1)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(10) = not(s(10))
	nop(NOT)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(6)
	nop(DUP4)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(8) = or(s(9), s(8))
	nop(OR)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(mintingFinished) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 78846468080913150803278523724176498347600455082970383439751393167341097384456
	nop(PUSH32)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(LOG1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	call(block3958(s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6607(s(1), s(0), g(dividendsCalculated), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(dividendsCalculated)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2037(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6626(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2084(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6664(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 4
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 34962834237715744119317953057370820939430758119373148317374192926382954119168
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block2171(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block6721(s(1), s(0), g(endBuyBackDate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(endBuyBackDate)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2315(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6727(s(1), s(0), g(dividendsPayed), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(dividendsPayed)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2358(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6746(s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 6769
	nop(PUSH2)
	s(6) = 6761
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 11475
	nop(PUSH2)
	call(block11475(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block6761(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 10588
	nop(PUSH2)
	call(block10588_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block6769(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2459(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6777(s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump6777(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6777(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block6871(s(3), s(2), s(1), s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize))

jump6777(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, caller, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block6867(s(3), s(2), s(1), s(0)))

block6867(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6871(s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = address
	nop(ADDRESS)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump6871(s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6871(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	neq(s(5), s(4))
	call(block6930(s(3), s(2), s(1), s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize))

jump6871(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	eq(s(5), s(4))
	call(block6926(s(3), s(2), s(1), s(0)))

block6926(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block6930(s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 2835717307
	nop(PUSH4)
	s(6) = 3
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(owner)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1889567281
	nop(PUSH4)
	s(9) = address
	nop(ADDRESS)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l8) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 32
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = s(15)
	nop(DUP1)
	s(16) = extcodesize
	nop(EXTCODESIZE)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump6930(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6930(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	eq(s(17), 0)
	call(block7151(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))

jump6930(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), l(l9), l(l8), l(l1), l(l0), address, extcodesize, gas, returndatasize)=>
	neq(s(17), 0)
	call(block7147(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7147(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(REVERT)

jump7151(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(11), 0)
	call(block7171(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7151(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(11), 0)
	call(block7162(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block7151(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(16) = gas
	nop(GAS)
	s(10) = 1
	nop(CALL)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(11) = s(10)
	nop(DUP1)
	call(jump7151(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7162(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(11) = returndatasize
	nop(RETURNDATASIZE)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(12) = returndatasize
	nop(RETURNDATASIZE)
	s(13) = 0
	nop(PUSH1)
	nop(REVERT)

block7171(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 32
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	call(jump7171(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7171(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	geq(s(10), s(9))
	call(block7193(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))

jump7171(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	lt(s(10), s(9))
	call(block7189(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7189(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block7193(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(9)
	nop(DUP1)
	s(10) = l(l1)
	nop(MLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l8) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l9) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 32
	nop(PUSH1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = s(12)
	nop(DUP1)
	s(13) = extcodesize
	nop(EXTCODESIZE)
	s(13)= eq(s(13), 0)
	nop(ISZERO)
	s(14) = s(13)
	nop(DUP1)
	call(jump7193(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7193(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	eq(s(14), 0)
	call(block7343(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize))

jump7193(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l9), l(l8), l(l1), l(l0), extcodesize, gas, returndatasize)=>
	neq(s(14), 0)
	call(block7339(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7339(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	nop(REVERT)

jump7343(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	eq(s(8), 0)
	call(block7363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize))

jump7343(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	neq(s(8), 0)
	call(block7354(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block7343(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), gas, returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(13) = gas
	nop(GAS)
	s(7) = 1
	nop(CALL)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump7343(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), gas, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block7354(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block7363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = returndatasize
	nop(RETURNDATASIZE)
	s(6) = 32
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	call(jump7363(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	geq(s(7), s(6))
	call(block7385(s(5), s(4), s(3), s(2), s(1), s(0), l(l1)))

jump7363(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0), returndatasize)=>
	lt(s(7), s(6))
	call(block7381(s(5), s(4), s(3), s(2), s(1), s(0)))

block7381(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7385(s(5), s(4), s(3), s(2), s(1), s(0), l(l1))=>
	nop(JUMPDEST)
	s(6) = s(4)
	nop(DUP2)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2550(s(0)))
	nop(JUMP)

block7407(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 18
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block2617(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7439(s(1), s(0), g(toBuyBack), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(toBuyBack)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2664(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7445(s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump7445(s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7445(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	eq(s(4), s(3))
	call(block7537(s(2), s(1), s(0), l(l7), l(l6)))

jump7445(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), caller)=>
	neq(s(4), s(3))
	call(block7533(s(2), s(1), s(0)))

block7533(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block7537(s(2), s(1), s(0), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 18
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2751(s(0)))
	nop(JUMP)

block7628(s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump7628(s(3),s(2),s(1),s(0),g(dividendsPayed), g(dividendsCalculated), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7628(s(3), s(2), s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller)=>
	eq(s(3), s(2))
	call(block7720(s(1), s(0),g(dividendsPayed), g(dividendsCalculated)))

jump7628(s(3), s(2), s(1), s(0), g(dividendsPayed), g(dividendsCalculated), g(owner), caller)=>
	neq(s(3), s(2))
	call(block7716(s(1), s(0)))

block7716(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block7720(s(1), s(0), g(dividendsPayed), g(dividendsCalculated))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 9
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(dividendsCalculated)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(dividendsCalculated) = s(3)
	nop(SSTORE)
	nop(POP)
	s(2) = 0
	nop(PUSH1)
	s(3) = 12
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(dividendsPayed)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(dividendsPayed) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block2774(s(0)))
	nop(JUMP)

block7776(s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 3
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(owner)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump7776(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7776(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), caller)=>
	eq(s(8), s(7))
	call(block7873(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump7776(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(owner), g(totalSupply), l(l7), l(l6), caller)=>
	neq(s(8), s(7))
	call(block7869(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7869(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7873(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(7) = 9
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(dividendsCalculated)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7873(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7873(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(7), 0)
	call(block7901(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump7873(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(7), 0)
	call(block7897(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7897(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block7901(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	call(block7906(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block7906(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(7) = 15
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(addresses)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 10
	nop(PUSH1)
	s(8) = g(dividendsIndex)
	nop(SLOAD)
	s(7) = lt(s(8), s(7))
	nop(LT)
	s(8) = s(7)
	nop(DUP1)
	call(jump7906(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7906(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(8), 0)
	call(block7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump7906(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(8), 0)
	call(block7923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block7923(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(POP)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(4)
	nop(DUP4)
	s(7) = lt(s(8), s(7))
	nop(LT)
	call(block7927(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	call(jump7927(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(7), 0)
	call(block8418(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated)))

jump7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(7), 0)
	call(block7933(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block7933(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	s(7) = 15
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(8) = g(dividendsIndex)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(addresses)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	call(jump7933(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7933(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	lt(s(10), s(9))
	call(block7949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump7933(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	geq(s(10), s(9))
	call(block7948(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block7948(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump7949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(8), s(7))
	call(block8387(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump7949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(8), s(7))
	call(block8068(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block7949(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	call(jump7949(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8068(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	s(7) = 8208
	nop(PUSH2)
	s(8) = 0
	nop(PUSH1)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(9) = 8194
	nop(PUSH2)
	s(10) = 100
	nop(PUSH1)
	s(11) = 8180
	nop(PUSH2)
	s(12) = s(2)
	nop(DUP10)
	s(13) = 8166
	nop(PUSH2)
	s(14) = 4
	nop(PUSH1)
	s(14) = g(invested)
	nop(SLOAD)
	s(15) = 1
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(5)
	nop(DUP12)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = 12023
	nop(PUSH2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 4294967295
	nop(PUSH4)
	s(16) = and(s(17), s(16))
	nop(AND)
	call(block12023_5(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8166(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(14) = 12023
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block12023_6(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8180(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(12) = 9602
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block9602_8(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8194(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(10) = 9602
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block9602_9(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8208(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 8231
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 13
	nop(PUSH1)
	s(9) = g(ethToDividendsNeeds)
	nop(SLOAD)
	s(10) = 12074
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block12074_5(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8231(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(8) = 13
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(ethToDividendsNeeds) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 8319
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 17
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(5)
	nop(DUP6)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 12074
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block12074_6(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block8319(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(8) = 17
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block8387(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block8387(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(7) = 10
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(dividendsIndex)
	nop(SLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	g(dividendsIndex) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(7) = 7906
	nop(PUSH2)
	call(block7906(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

jump8418(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated))=>
	neq(s(8), s(7))
	call(block8496(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump8418(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated))=>
	eq(s(8), s(7))
	call(block8434(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated)))

block8418(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated))=>
	nop(JUMPDEST)
	s(7) = 15
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(8) = g(addresses)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	s(8) = 10
	nop(PUSH1)
	s(8) = g(dividendsIndex)
	nop(SLOAD)
	call(jump8418(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated)))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8434(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = 10
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(dividendsIndex) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = 9
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(dividendsCalculated)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(dividendsCalculated) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	nop(DUP2)
	s(10) = g(dividendsPayed)
	nop(SLOAD)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 255
	nop(PUSH1)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(11) = not(s(11))
	nop(NOT)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(7)
	nop(DUP4)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(9) = or(s(10), s(9))
	nop(OR)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(dividendsPayed) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block8496(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block8496(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2829(s(0)))
	nop(JUMP)

block8503(s(1), s(0), g(startBuyBackDate), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(startBuyBackDate)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2852(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8509(s(1), s(0), g(invested), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 4
	nop(PUSH1)
	s(2) = g(invested)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2895(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8515(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 8660
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 12074
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block12074_7(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block8660(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block3002(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9023(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block3125(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9158(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block9173(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump9158(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block9172(s(4), s(3), s(2), s(1), s(0)))

block9158(s(2), s(1), s(0), g(addresses), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 15
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(addresses)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump9158(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9172(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9173(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3190(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9220(s(1), s(0), g(dividendsIndex), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(dividendsIndex)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3277(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9226(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 16
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3364(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9258(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), caller)=>
	eq(s(4), s(3))
	call(block9350(s(2), s(1), s(0),g(owner), l(l0)))

jump9258(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0), caller)=>
	neq(s(4), s(3))
	call(block9346(s(2), s(1), s(0)))

block9258(s(2), s(1), s(0), g(owner), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9258(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9346(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9350(s(2), s(1), s(0), g(owner), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9350(s(4),s(3),s(2),s(1),s(0),g(owner), l(l0)))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9350(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0))=>
	neq(s(4), s(3))
	call(block9410(s(2), s(1), s(0),g(owner), l(l0)))

jump9350(s(4), s(3), s(2), s(1), s(0), g(owner), l(l0))=>
	eq(s(4), s(3))
	call(block9406(s(2), s(1), s(0)))

block9406(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9410(s(2), s(1), s(0), g(owner), l(l0))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 63267312222310607310220992301550539520881909915348243260808268974908359596000
	nop(PUSH32)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG3)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block3455(s(0)))
	nop(JUMP)

jump9602(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	neq(s(11), 0)
	call(block9616(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller))

jump9602(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	eq(s(11), 0)
	call(block9615(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(9)
	nop(DUP2)
	call(jump9602(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9615(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9616(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block3944(s(4),s(3),s(2),s(1),s(0),g(toBuyBack), g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(JUMP)

block9629(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump9629(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9629(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	neq(s(13), s(12))
	call(block9690(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump9629(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	eq(s(13), s(12))
	call(block9686(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9686(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block9690(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 1
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(10)
	nop(DUP3)
	call(jump9690(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9690(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(13), s(12))
	call(block9768(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump9690(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(13), s(12))
	call(block9764(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9764(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

jump9768(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(13), s(12))
	call(block9907(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump9768(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(13), s(12))
	call(block9903(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9768(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = caller
	nop(CALLER)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(10)
	nop(DUP3)
	call(jump9768(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9903(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

block9907(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 9989
	nop(PUSH2)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 1
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 11450
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block11450(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block9989(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 10138
	nop(PUSH2)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 1
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(9)
	nop(DUP7)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 12074
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block12074(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block10138(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 1
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(9)
	nop(DUP6)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 10348
	nop(PUSH2)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 2
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(16) = caller
	nop(CALLER)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = 11450
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block11450_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block10348(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = caller
	nop(CALLER)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(9)
	nop(DUP3)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(15) = s(10)
	nop(DUP5)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	nop(DUP2)
	l(l1) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = 64
	nop(PUSH1)
	s(16) = l(l0)
	nop(MLOAD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(LOG3)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4000(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

jump10588(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block10674(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump10588(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block10597(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block10588(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(7)
	nop(DUP5)
	call(jump10588(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10597(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(13), s(12))
	call(block10663(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

jump10597(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(13), s(12))
	call(block10649(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block10597(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(12) = address
	nop(ADDRESS)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump10597(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10649(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(12) = 10658
	nop(PUSH2)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 12104
	nop(PUSH2)
	call(block12104(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block10658(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 10673
	nop(PUSH2)
	call(block10673(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10663(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = 10672
	nop(PUSH2)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 11173
	nop(PUSH2)
	call(block11173(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block10672(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block10673(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block10673(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block10674(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block10674(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(6)
	s(6) = s(11)
	s(11) = s(12)
	nop(SWAP5)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4008(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10685(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(owner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump10685(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10685(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(11), s(10))
	call(block10779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(mintingFinished), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))

jump10685(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(owner), g(totalSupply), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(11), s(10))
	call(block10775(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10775(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump10779(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block10807(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))

jump10779(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block10803(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block10779(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(mintingFinished), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 3
	nop(PUSH1)
	s(11) = 20
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(mintingFinished)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(jump10779(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(mintingFinished), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10803(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block10807(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 10828
	nop(PUSH2)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 0
	nop(PUSH1)
	s(12) = g(totalSupply)
	nop(SLOAD)
	s(13) = 12074
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block12074_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block10828(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 10916
	nop(PUSH2)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 12074
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block12074_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block10916(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 1
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 6967731500416931904621255587666976718834082914639501818205388122532481689733
	nop(PUSH32)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(14)
	nop(DUP2)
	l(l1) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = 64
	nop(PUSH1)
	s(13) = l(l0)
	nop(MLOAD)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(LOG2)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 0
	nop(PUSH1)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4570(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block11173(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(14) = 16
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(jump11173(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11173(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(14), 0)
	call(block11447(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump11173(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(14), 0)
	call(block11257(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

block11257(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	s(14) = 1
	nop(PUSH1)
	s(15) = 16
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 0
	nop(PUSH1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	nop(DUP2)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 255
	nop(PUSH1)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(18) = not(s(18))
	nop(NOT)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(14)
	nop(DUP4)
	s(18)= eq(s(18), 0)
	nop(ISZERO)
	s(18)= eq(s(18), 0)
	nop(ISZERO)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(16) = or(s(17), s(16))
	nop(OR)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	nop(POP)
	s(14) = 15
	nop(PUSH1)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(18) = g(addresses)
	nop(SLOAD)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	g(addresses) = s(18)
	nop(SSTORE)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 1
	nop(PUSH1)
	s(18) = s(15)
	nop(DUP3)
	s(17) = s(18)-s(17)
	nop(SUB)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 0
	nop(PUSH1)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(18) = 0
	nop(PUSH1)
	s(17) = sha3(s(18), s(17))
	nop(SHA3)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	nop(DUP2)
	gl = s(18)
	s(18) = fresh(1)
	nop(SLOAD)
	s(19) = s(17)
	nop(DUP2)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = s(20)*s(19)
	nop(MUL)
	s(19) = not(s(19))
	nop(NOT)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(17) = or(s(18), s(17))
	nop(OR)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gs(1) = s(17)
	gs(2) = s(16)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block11447(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block11447(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block10672(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11450(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(17), s(16))
	call(block11464(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump11450(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(17), s(16))
	call(block11463_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	call(jump11450(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11463(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11464(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block9989(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

jump11475(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	neq(s(11), s(10))
	call(block11536(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump11475(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	eq(s(11), s(10))
	call(block11532(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11475(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(jump11475(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11532(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

jump11536(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(11), s(10))
	call(block11614(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump11536(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(11), s(10))
	call(block11610(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11536(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(10) = 1
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = caller
	nop(CALLER)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(8)
	nop(DUP3)
	call(jump11536(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11610(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block11614(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(10) = 11696
	nop(PUSH2)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = caller
	nop(CALLER)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 11450
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block11450_8(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block11696(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 1
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = caller
	nop(CALLER)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 11845
	nop(PUSH2)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = 12074
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block12074_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block11845(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 1
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	s(10) = 1
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6761(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

jump12023(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(28), 1 )
	call(block12056(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12023(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(28), 1 )
	call(block12041_1(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12023(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(25) = 0
	nop(PUSH1)
	s(26) = s(25)
	nop(DUP1)
	s(27) = s(24)
	nop(DUP3)
	s(28) = s(23)
	nop(DUP5)
	s(27) = s(28)*s(27)
	nop(MUL)
	s(28) = s(26)
	s(26) = s(27)
	s(27) = s(28)
	nop(SWAP1)
	nop(POP)
	s(27) = 0
	nop(PUSH1)
	s(28) = s(23)
	nop(DUP5)
	s(27)= eq(s(28), s(27))
	nop(EQ)
	s(28) = s(27)
	nop(DUP1)
	s(29) = 12056
	nop(PUSH2)
	call(jump12023(s(29),s(28),s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMPI)

block12041(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(24) = s(21)
	nop(DUP3)
	s(25) = s(20)
	nop(DUP5)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(25)
	nop(DUP2)
	call(jump12041(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(27), 0)
	call(block12053(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12041(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(27), 0)
	call(block12052(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12052(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12053(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(24)= eq(s(25), s(24))
	nop(EQ)
	call(block12056_1(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

block12056(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(27), 0)
	call(block12064(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12056(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(27), 0)
	call(block12063_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12063(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12064(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(27) = s(26)
	nop(DUP1)
	s(28) = s(25)
	s(25) = s(27)
	s(27) = s(28)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(26) = s(22)
	s(22) = s(25)
	s(25) = s(26)
	nop(SWAP3)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12549(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

jump12074(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	geq(s(18), s(17))
	call(block12094(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump12074(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	lt(s(18), s(17))
	call(block12093_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = s(13)
	nop(DUP4)
	s(18) = s(16)
	nop(DUP2)
	call(jump12074(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12093(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12094(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10138(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

jump12104(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	leq(s(17), s(16))
	call(block12169(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

jump12104(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	gt(s(17), s(16))
	call(block12117(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12104(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = 7
	nop(PUSH1)
	s(16) = g(endBuyBackDate)
	nop(SLOAD)
	s(17) = timestamp
	nop(TIMESTAMP)
	call(jump12104(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12117(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(16) = 7
	nop(PUSH1)
	s(16) = g(endBuyBackDate)
	nop(SLOAD)
	s(17) = 6
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(startBuyBackDate) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = 31536000
	nop(PUSH4)
	s(17) = 6
	nop(PUSH1)
	s(17) = g(startBuyBackDate)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 7
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(endBuyBackDate) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = 12162
	nop(PUSH2)
	s(17) = 10
	nop(PUSH1)
	s(18) = 5
	nop(PUSH1)
	s(18) = g(tokensAfterCrowdsale)
	nop(SLOAD)
	s(19) = 9602
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block9602_3(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block12162(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(17) = 8
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(toBuyBack) = s(17)
	nop(SSTORE)
	nop(POP)
	call(block12169(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12169(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = 6
	nop(PUSH1)
	s(16) = g(startBuyBackDate)
	nop(SLOAD)
	s(17) = timestamp
	nop(TIMESTAMP)
	s(16) = gt(s(17), s(16))
	nop(GT)
	s(17) = s(16)
	nop(DUP1)
	call(jump12169(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12169(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(17), 0)
	call(block12187(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12169(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(17), 0)
	call(block12181(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12181(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(POP)
	s(16) = 7
	nop(PUSH1)
	s(16) = g(endBuyBackDate)
	nop(SLOAD)
	s(17) = timestamp
	nop(TIMESTAMP)
	s(16) = lt(s(17), s(16))
	nop(LT)
	call(block12187(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12187(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	eq(s(17), 0)
	call(block12201(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12187(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	neq(s(17), 0)
	call(block12194(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

block12187(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	call(jump12187(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12194(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(POP)
	s(16) = 8
	nop(PUSH1)
	s(16) = g(toBuyBack)
	nop(SLOAD)
	s(17) = s(14)
	nop(DUP3)
	s(16) = gt(s(17), s(16))
	nop(GT)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	call(block12201(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12201(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	neq(s(16), 0)
	call(block12212(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12201(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	eq(s(16), 0)
	call(block12208(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12201(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	call(jump12201(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12208(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	nop(REVERT)

block12212(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 12294
	nop(PUSH2)
	s(17) = s(14)
	nop(DUP3)
	s(18) = 1
	nop(PUSH1)
	s(19) = 0
	nop(PUSH1)
	s(20) = address
	nop(ADDRESS)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l6) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(18)
	nop(DUP2)
	l(l7) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = 0
	nop(PUSH1)
	s(18) = sha3(s(19), s(18))
	nop(SHA3)
	gl = s(18)
	s(18) = fresh(0)
	nop(SLOAD)
	s(19) = 11450
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block11450_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block12294(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 1
	nop(PUSH1)
	s(18) = 0
	nop(PUSH1)
	s(19) = address
	nop(ADDRESS)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l6) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(17)
	nop(DUP2)
	l(l7) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(17) = sha3(s(18), s(17))
	nop(SHA3)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	gs(1) = s(18)
	gs(2) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = 12382
	nop(PUSH2)
	s(17) = s(14)
	nop(DUP3)
	s(18) = 0
	nop(PUSH1)
	s(18) = g(totalSupply)
	nop(SLOAD)
	s(19) = 11450
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block11450_2(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block12382(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(totalSupply) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = address
	nop(ADDRESS)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(18) = s(14)
	nop(DUP4)
	s(19) = 64
	nop(PUSH1)
	s(19) = l(l0)
	nop(MLOAD)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	s(22) = s(20)
	nop(DUP2)
	l(l1) = s(21)
	nop(MSTORE)
	s(21) = 32
	nop(PUSH1)
	s(20) = s(21)+s(20)
	nop(ADD)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = 64
	nop(PUSH1)
	s(19) = l(l0)
	nop(MLOAD)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(LOG2)
	s(16) = 12487
	nop(PUSH2)
	s(17) = s(14)
	nop(DUP3)
	s(18) = 8
	nop(PUSH1)
	s(18) = g(toBuyBack)
	nop(SLOAD)
	s(19) = 11450
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block11450_3(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12487(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(17) = 8
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(toBuyBack) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = 12591
	nop(PUSH2)
	s(17) = 0
	nop(PUSH1)
	s(17) = g(totalSupply)
	nop(SLOAD)
	s(18) = 12577
	nop(PUSH2)
	s(19) = 100
	nop(PUSH1)
	s(20) = 12563
	nop(PUSH2)
	s(21) = 12528
	nop(PUSH2)
	s(22) = 20
	nop(PUSH1)
	s(23) = 100
	nop(PUSH1)
	s(24) = 12074
	nop(PUSH2)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 4294967295
	nop(PUSH4)
	s(24) = and(s(25), s(24))
	nop(AND)
	call(block12074_0(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12528(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = 12549
	nop(PUSH2)
	s(23) = 14
	nop(PUSH1)
	s(23) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(24) = s(14)
	nop(DUP10)
	s(25) = 12023
	nop(PUSH2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	s(26) = 4294967295
	nop(PUSH4)
	s(25) = and(s(26), s(25))
	nop(AND)
	call(block12023(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12549(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(23) = 12023
	nop(PUSH2)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = 4294967295
	nop(PUSH4)
	s(23) = and(s(24), s(23))
	nop(AND)
	call(block12023_0(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12563(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = 9602
	nop(PUSH2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	call(block9602_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12577(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 9602
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block9602_1(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12591(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = 12654
	nop(PUSH2)
	s(17) = 12637
	nop(PUSH2)
	s(18) = 0
	nop(PUSH1)
	s(18) = g(totalSupply)
	nop(SLOAD)
	s(19) = 12623
	nop(PUSH2)
	s(20) = 14
	nop(PUSH1)
	s(20) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(21) = s(14)
	nop(DUP7)
	s(22) = 12023
	nop(PUSH2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 4294967295
	nop(PUSH4)
	s(22) = and(s(23), s(22))
	nop(AND)
	call(block12023_1(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12623(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = 9602
	nop(PUSH2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 4294967295
	nop(PUSH4)
	s(20) = and(s(21), s(20))
	nop(AND)
	call(block9602_2(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12637(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(18) = 14
	nop(PUSH1)
	s(18) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(19) = 11450
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block11450_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12654(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(17) = 14
	nop(PUSH1)
	s(18) = s(16)
	nop(DUP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	g(buyBackInvestedValue) = s(17)
	nop(SSTORE)
	nop(POP)
	s(16) = s(13)
	nop(DUP3)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 2300
	nop(PUSH2)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(17)
	nop(DUP2)
	s(19)= eq(s(19), 0)
	nop(ISZERO)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 64
	nop(PUSH1)
	s(19) = l(l0)
	nop(MLOAD)
	s(20) = 0
	nop(PUSH1)
	s(21) = 64
	nop(PUSH1)
	s(21) = l(l0)
	nop(MLOAD)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(19)
	nop(DUP4)
	s(22) = s(23)-s(22)
	nop(SUB)
	s(23) = s(21)
	nop(DUP2)
	s(24) = s(18)
	nop(DUP6)
	s(25) = s(16)
	nop(DUP9)
	s(26) = s(17)
	nop(DUP9)
	s(20) = 1
	nop(CALL)
	s(21) = s(16)
	s(16) = s(20)
	s(20) = s(21)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(16)= eq(s(16), 0)
	nop(ISZERO)
	s(17) = s(16)
	nop(DUP1)
	call(jump12654(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12654(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(17), 0)
	call(block12730(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump12654(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(17), 0)
	call(block12721(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block12721(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(17) = returndatasize
	nop(RETURNDATASIZE)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(18) = returndatasize
	nop(RETURNDATASIZE)
	s(19) = 0
	nop(PUSH1)
	nop(REVERT)

block12730(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block10658(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10588_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	call(jump10588_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10588_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(11), 0)
	call(block10674_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump10588_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(11), 0)
	call(block10597_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

jump10597_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(12), s(11))
	call(block10663_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

jump10597_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(12), s(11))
	call(block10649_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block10597_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(11) = address
	nop(ADDRESS)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump10597_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10649_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(11) = 10658
	nop(PUSH2)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 12104
	nop(PUSH2)
	call(block12104_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block10658_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 10673
	nop(PUSH2)
	call(block10673_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10663_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = 10672
	nop(PUSH2)
	s(12) = s(8)
	nop(DUP4)
	s(13) = 11173
	nop(PUSH2)
	call(block11173_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block10672_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block10673_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block10673_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(block10674_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block10674_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(5)
	s(5) = s(10)
	s(10) = s(11)
	nop(SWAP5)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block6769(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11173_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 16
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump11173_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11173_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block11447_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump11173_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block11257_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

jump11173_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block11447_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump11173_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block11257_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

block11173_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = 16
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump11173_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11257_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	s(8) = 1
	nop(PUSH1)
	s(9) = 16
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	nop(DUP2)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 255
	nop(PUSH1)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(12) = not(s(12))
	nop(NOT)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(8)
	nop(DUP4)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = or(s(11), s(10))
	nop(OR)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gs(1) = s(10)
	gs(2) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 15
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(12) = g(addresses)
	nop(SLOAD)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	g(addresses) = s(12)
	nop(SSTORE)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 1
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 0
	nop(PUSH1)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	nop(DUP2)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(13) = not(s(13))
	nop(NOT)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(9)
	nop(DUP4)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = or(s(12), s(11))
	nop(OR)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block11447_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block11257_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	s(13) = 1
	nop(PUSH1)
	s(14) = 16
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	nop(DUP2)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	nop(DUP2)
	s(18) = 255
	nop(PUSH1)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(17) = not(s(17))
	nop(NOT)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(13)
	nop(DUP4)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(17)= eq(s(17), 0)
	nop(ISZERO)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(15) = or(s(16), s(15))
	nop(OR)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 15
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(17) = g(addresses)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	g(addresses) = s(17)
	nop(SSTORE)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 1
	nop(PUSH1)
	s(17) = s(14)
	nop(DUP3)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 0
	nop(PUSH1)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	nop(DUP2)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(18) = s(16)
	nop(DUP2)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(18) = not(s(18))
	nop(NOT)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(14)
	nop(DUP4)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(16) = or(s(17), s(16))
	nop(OR)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gs(1) = s(16)
	gs(2) = s(15)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block11447_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block11447_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block4587(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11447_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block10672_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump11450_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(17), s(16))
	call(block11464_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump11450_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(17), s(16))
	call(block11463_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	call(jump11450_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	leq(s(21), s(20))
	call(block11464_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump11450_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	gt(s(21), s(20))
	call(block11463_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(18)
	nop(DUP3)
	call(jump11450_1(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11450_10(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(17)
	nop(DUP3)
	call(jump11450_10(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_10(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	leq(s(20), s(19))
	call(block11464_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))

jump11450_10(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	gt(s(20), s(19))
	call(block11463_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_11(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(17)
	nop(DUP3)
	call(jump11450_11(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_11(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	leq(s(20), s(19))
	call(block11464_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))

jump11450_11(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	gt(s(20), s(19))
	call(block11463_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_12(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(17)
	nop(DUP3)
	call(jump11450_12(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	leq(s(20), s(19))
	call(block11464_12(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump11450_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	gt(s(20), s(19))
	call(block11463_8(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump11450_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	leq(s(21), s(20))
	call(block11464_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))

jump11450_2(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	gt(s(21), s(20))
	call(block11463_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_2(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(18)
	nop(DUP3)
	call(jump11450_2(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_3(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	leq(s(21), s(20))
	call(block11464_3(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))

jump11450_3(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	gt(s(21), s(20))
	call(block11463_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_3(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(18)
	nop(DUP3)
	call(jump11450_3(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_4(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	leq(s(21), s(20))
	call(block11464_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump11450_4(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	gt(s(21), s(20))
	call(block11463(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(18)
	nop(DUP3)
	call(jump11450_4(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11450_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump11450_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block11464_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump11450_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block11463_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump11450_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	leq(s(11), s(10))
	call(block11464_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))

jump11450_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	gt(s(11), s(10))
	call(block11463_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump11450_6(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	leq(s(8), s(7))
	call(block11464_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(ethToDividendsNeeds), l(l0), caller, returndatasize))

jump11450_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	gt(s(8), s(7))
	call(block11463_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_7(s(5), s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	call(jump11450_7(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(ethToDividendsNeeds), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	leq(s(15), s(14))
	call(block11464_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump11450_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	gt(s(15), s(14))
	call(block11463_12(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_8(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	call(jump11450_8(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11450_9(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	leq(s(20), s(19))
	call(block11464_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump11450_9(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	gt(s(20), s(19))
	call(block11463_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block11450_9(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(17)
	nop(DUP3)
	call(jump11450_9(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block11463_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_12(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_3(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_8(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11463_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11464_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10348(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block11464_1(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(17)
	nop(DUP4)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12294(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block11464_10(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(17)
	nop(DUP2)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12382_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block11464_11(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(17)
	nop(DUP2)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12487_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block11464_12(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(17)
	nop(DUP2)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12654_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block11464_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(17)
	nop(DUP4)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12382(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block11464_3(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(17)
	nop(DUP4)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12487(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block11464_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(18)
	nop(DUP2)
	s(21) = s(17)
	nop(DUP4)
	s(20) = s(21)-s(20)
	nop(SUB)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12654(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block11464_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4896(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block11464_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5842(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsPayedIndex), g(dividendsCalculated), l(l7), l(l6), l(l0), returndatasize))
	nop(JUMP)

block11464_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(ethToDividendsNeeds), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block6349(s(3),s(2),s(1),s(0),g(ethToDividendsNeeds), l(l0), caller, returndatasize))
	nop(JUMP)

block11464_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block11696(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block11464_9(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(17)
	nop(DUP2)
	s(20) = s(16)
	nop(DUP4)
	s(19) = s(20)-s(19)
	nop(SUB)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12294_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block12023_0(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(23)
	nop(DUP1)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(21)
	nop(DUP5)
	s(25) = s(26)*s(25)
	nop(MUL)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	nop(POP)
	s(25) = 0
	nop(PUSH1)
	s(26) = s(21)
	nop(DUP5)
	s(25)= eq(s(26), s(25))
	nop(EQ)
	s(26) = s(25)
	nop(DUP1)
	s(27) = 12056
	nop(PUSH2)
	call(jump12023_0(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMPI)

jump12023_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(26), 1 )
	call(block12056_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12023_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(26), 1 )
	call(block12041_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12023_1(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = 0
	nop(PUSH1)
	s(23) = s(22)
	nop(DUP1)
	s(24) = s(21)
	nop(DUP3)
	s(25) = s(20)
	nop(DUP5)
	s(24) = s(25)*s(24)
	nop(MUL)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	nop(POP)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(20)
	nop(DUP5)
	s(24)= eq(s(25), s(24))
	nop(EQ)
	s(25) = s(24)
	nop(DUP1)
	s(26) = 12056
	nop(PUSH2)
	call(jump12023_1(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMPI)

jump12023_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(25), 1 )
	call(block12056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12023_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(25), 1 )
	call(block12041(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

block12023_2(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(22)
	nop(DUP5)
	s(26) = s(27)*s(26)
	nop(MUL)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	nop(POP)
	s(26) = 0
	nop(PUSH1)
	s(27) = s(22)
	nop(DUP5)
	s(26)= eq(s(27), s(26))
	nop(EQ)
	s(27) = s(26)
	nop(DUP1)
	s(28) = 12056
	nop(PUSH2)
	call(jump12023_2(s(28),s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMPI)

jump12023_2(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(27), 1 )
	call(block12056_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12023_2(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(27), 1 )
	call(block12041_4(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12023_3(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = 0
	nop(PUSH1)
	s(23) = s(22)
	nop(DUP1)
	s(24) = s(21)
	nop(DUP3)
	s(25) = s(20)
	nop(DUP5)
	s(24) = s(25)*s(24)
	nop(MUL)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	nop(POP)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(20)
	nop(DUP5)
	s(24)= eq(s(25), s(24))
	nop(EQ)
	s(25) = s(24)
	nop(DUP1)
	s(26) = 12056
	nop(PUSH2)
	call(jump12023_3(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMPI)

jump12023_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(25), 1 )
	call(block12056_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12023_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(25), 1 )
	call(block12041_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12023_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(24) = s(19)
	nop(DUP5)
	s(23) = s(24)*s(23)
	nop(MUL)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	nop(POP)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(19)
	nop(DUP5)
	s(23)= eq(s(24), s(23))
	nop(EQ)
	s(24) = s(23)
	nop(DUP1)
	s(25) = 12056
	nop(PUSH2)
	call(jump12023_4(s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMPI)

jump12023_4(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(24), 1 )
	call(block12056_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12023_4(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(24), 1 )
	call(block12041_2(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

block12023_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(POP)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(14)
	nop(DUP5)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 12056
	nop(PUSH2)
	call(jump12023_5(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMPI)

jump12023_5(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(19), 1 )
	call(block12056_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12023_5(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(19), 1 )
	call(block12041_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block12023_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(12)
	nop(DUP5)
	s(16)= eq(s(17), s(16))
	nop(EQ)
	s(17) = s(16)
	nop(DUP1)
	s(18) = 12056
	nop(PUSH2)
	call(jump12023_6(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMPI)

jump12023_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(17), 1 )
	call(block12056_6(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12023_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(17), 1 )
	call(block12041_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block12041_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(21)
	nop(DUP5)
	s(27) = s(24)
	nop(DUP3)
	s(28) = s(26)
	nop(DUP2)
	call(jump12041_0(s(28),s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_0(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(28), 0)
	call(block12053_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12041_0(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(28), 0)
	call(block12052_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump12041_1(s(30), s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(30), 0)
	call(block12053_1(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12041_1(s(30), s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(30), 0)
	call(block12052_1(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12041_1(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(27) = s(24)
	nop(DUP3)
	s(28) = s(23)
	nop(DUP5)
	s(29) = s(26)
	nop(DUP3)
	s(30) = s(28)
	nop(DUP2)
	call(jump12041_1(s(30),s(29),s(28),s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12041_2(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(23) = s(20)
	nop(DUP3)
	s(24) = s(19)
	nop(DUP5)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(24)
	nop(DUP2)
	call(jump12041_2(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(26), 0)
	call(block12053_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12041_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(26), 0)
	call(block12052_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12041_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(24) = s(21)
	nop(DUP3)
	s(25) = s(20)
	nop(DUP5)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(25)
	nop(DUP2)
	call(jump12041_3(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_3(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(27), 0)
	call(block12053_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12041_3(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(27), 0)
	call(block12052_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12041_4(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(POP)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(22)
	nop(DUP5)
	s(28) = s(25)
	nop(DUP3)
	s(29) = s(27)
	nop(DUP2)
	call(jump12041_4(s(29),s(28),s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_4(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(29), 0)
	call(block12053_4(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12041_4(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(29), 0)
	call(block12052_4(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12041_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(POP)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(17)
	nop(DUP2)
	call(jump12041_5(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_5(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(19), 0)
	call(block12053_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12041_5(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(19), 0)
	call(block12052_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12041_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(POP)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	call(jump12041_6(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12041_6(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(21), 0)
	call(block12053_6(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12041_6(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(21), 0)
	call(block12052_6(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12052_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_1(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_4(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12052_6(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12053_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(26) = s(27)/s(26)
	nop(DIV)
	s(25)= eq(s(26), s(25))
	nop(EQ)
	call(block12056_0(s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12053_1(s(29), s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(28) = s(29)/s(28)
	nop(DIV)
	s(27)= eq(s(28), s(27))
	nop(EQ)
	call(block12056(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12053_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(24) = s(25)/s(24)
	nop(DIV)
	s(23)= eq(s(24), s(23))
	nop(EQ)
	call(block12056_4(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

block12053_3(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(25) = s(26)/s(25)
	nop(DIV)
	s(24)= eq(s(25), s(24))
	nop(EQ)
	call(block12056_3(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12053_4(s(28), s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(27) = s(28)/s(27)
	nop(DIV)
	s(26)= eq(s(27), s(26))
	nop(EQ)
	call(block12056_2(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

block12053_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(17) = s(18)/s(17)
	nop(DIV)
	s(16)= eq(s(17), s(16))
	nop(EQ)
	call(block12056_6(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

block12053_6(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	call(block12056_5(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12056_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(25), 0)
	call(block12064_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12056_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(25), 0)
	call(block12063_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12056_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056_0(s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056_1(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(24), 0)
	call(block12064_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12056_1(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(24), 0)
	call(block12063(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump12056_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(26), 0)
	call(block12064_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12056_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(26), 0)
	call(block12063_4(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12056_2(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056_2(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(24), 0)
	call(block12064_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12056_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(24), 0)
	call(block12063_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12056_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056_3(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(23), 0)
	call(block12064_4(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump12056_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(23), 0)
	call(block12063_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12056_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	call(jump12056_4(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(18), 0)
	call(block12064_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12056_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(18), 0)
	call(block12063_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12056_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	call(jump12056_5(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12056_6(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	call(jump12056_6(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12056_6(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(16), 0)
	call(block12064_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12056_6(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(16), 0)
	call(block12063_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12063_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_1(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_2(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_4(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12063_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12064_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(24) = s(20)
	s(20) = s(23)
	s(23) = s(24)
	nop(SWAP3)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12563(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12064_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(24) = s(23)
	nop(DUP1)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(23) = s(19)
	s(19) = s(22)
	s(22) = s(23)
	nop(SWAP3)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12623(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12064_2(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(26) = s(25)
	nop(DUP1)
	s(27) = s(24)
	s(24) = s(26)
	s(26) = s(27)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(25) = s(21)
	s(21) = s(24)
	s(24) = s(25)
	nop(SWAP3)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12549_0(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12064_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(24) = s(23)
	nop(DUP1)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(23) = s(19)
	s(19) = s(22)
	s(22) = s(23)
	nop(SWAP3)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12563_0(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12064_4(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(23) = s(22)
	nop(DUP1)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(22) = s(18)
	s(18) = s(21)
	s(21) = s(22)
	nop(SWAP3)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12623_0(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12064_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8166(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block12064_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8180(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

jump12074_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	geq(s(27), s(26))
	call(block12094_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12074_0(s(27), s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	lt(s(27), s(26))
	call(block12093(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(24) = 0
	nop(PUSH1)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(23)
	nop(DUP3)
	s(27) = s(22)
	nop(DUP5)
	s(26) = s(27)+s(26)
	nop(ADD)
	s(27) = s(25)
	s(25) = s(26)
	s(26) = s(27)
	nop(SWAP1)
	nop(POP)
	s(26) = s(22)
	nop(DUP4)
	s(27) = s(25)
	nop(DUP2)
	call(jump12074_0(s(27),s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(16), s(15))
	call(block12094_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))

jump12074_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(16), s(15))
	call(block12093_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	call(jump12074_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	geq(s(16), s(15))
	call(block12094_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))

jump12074_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	lt(s(16), s(15))
	call(block12093_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	call(jump12074_2(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	geq(s(16), s(15))
	call(block12094_3(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))

jump12074_3(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	lt(s(16), s(15))
	call(block12093_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	call(jump12074_3(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_4(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	geq(s(26), s(25))
	call(block12094_4(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump12074_4(s(26), s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	lt(s(26), s(25))
	call(block12093_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_4(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(23) = 0
	nop(PUSH1)
	s(24) = s(23)
	nop(DUP1)
	s(25) = s(22)
	nop(DUP3)
	s(26) = s(21)
	nop(DUP5)
	s(25) = s(26)+s(25)
	nop(ADD)
	s(26) = s(24)
	s(24) = s(25)
	s(25) = s(26)
	nop(SWAP1)
	nop(POP)
	s(25) = s(21)
	nop(DUP4)
	s(26) = s(24)
	nop(DUP2)
	call(jump12074_4(s(26),s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_5(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	geq(s(13), s(12))
	call(block12094_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12074_5(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	lt(s(13), s(12))
	call(block12093_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump12074_5(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	geq(s(13), s(12))
	call(block12094_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump12074_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	lt(s(13), s(12))
	call(block12093_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump12074_6(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12074_7(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block12094_7(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump12074_7(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block12093_7(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12074_7(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump12074_7(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12093_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_3(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12093_7(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block12094_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(26) = s(25)
	nop(DUP1)
	s(27) = s(24)
	s(24) = s(26)
	s(26) = s(27)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(25) = s(21)
	s(21) = s(24)
	s(24) = s(25)
	nop(SWAP3)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12528(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12094_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10828(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(totalSupply), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block12094_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10916(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block12094_3(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block11845(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, caller, returndatasize, timestamp))
	nop(JUMP)

block12094_4(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(25) = s(24)
	nop(DUP1)
	s(26) = s(23)
	s(23) = s(25)
	s(25) = s(26)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(24) = s(20)
	s(20) = s(23)
	s(23) = s(24)
	nop(SWAP3)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12528_0(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12094_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8231(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block12094_6(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8319(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block12094_7(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8660(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

jump12104_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	leq(s(16), s(15))
	call(block12169_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

jump12104_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	gt(s(16), s(15))
	call(block12117_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12104_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = 7
	nop(PUSH1)
	s(15) = g(endBuyBackDate)
	nop(SLOAD)
	s(16) = timestamp
	nop(TIMESTAMP)
	call(jump12104_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12117_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(tokensAfterCrowdsale), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	s(15) = 7
	nop(PUSH1)
	s(15) = g(endBuyBackDate)
	nop(SLOAD)
	s(16) = 6
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(startBuyBackDate) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 31536000
	nop(PUSH4)
	s(16) = 6
	nop(PUSH1)
	s(16) = g(startBuyBackDate)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 7
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(endBuyBackDate) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 12162
	nop(PUSH2)
	s(16) = 10
	nop(PUSH1)
	s(17) = 5
	nop(PUSH1)
	s(17) = g(tokensAfterCrowdsale)
	nop(SLOAD)
	s(18) = 9602
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block9602_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block12162_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(16) = 8
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(toBuyBack) = s(16)
	nop(SSTORE)
	nop(POP)
	call(block12169_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12169_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(15) = 6
	nop(PUSH1)
	s(15) = g(startBuyBackDate)
	nop(SLOAD)
	s(16) = timestamp
	nop(TIMESTAMP)
	s(15) = gt(s(16), s(15))
	nop(GT)
	s(16) = s(15)
	nop(DUP1)
	call(jump12169_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12169_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(16), 0)
	call(block12187_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12169_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(16), 0)
	call(block12181_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

block12181_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(POP)
	s(15) = 7
	nop(PUSH1)
	s(15) = g(endBuyBackDate)
	nop(SLOAD)
	s(16) = timestamp
	nop(TIMESTAMP)
	s(15) = lt(s(16), s(15))
	nop(LT)
	call(block12187_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

block12187_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	call(jump12187_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12187_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	eq(s(16), 0)
	call(block12201_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12187_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	neq(s(16), 0)
	call(block12194_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

block12194_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(POP)
	s(15) = 8
	nop(PUSH1)
	s(15) = g(toBuyBack)
	nop(SLOAD)
	s(16) = s(13)
	nop(DUP3)
	s(15) = gt(s(16), s(15))
	nop(GT)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	call(block12201_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

block12201_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	call(jump12201_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12201_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	neq(s(15), 0)
	call(block12212_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))

jump12201_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	eq(s(15), 0)
	call(block12208_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12208_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	nop(REVERT)

block12212_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 12294
	nop(PUSH2)
	s(16) = s(13)
	nop(DUP3)
	s(17) = 1
	nop(PUSH1)
	s(18) = 0
	nop(PUSH1)
	s(19) = address
	nop(ADDRESS)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l6) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(17)
	nop(DUP2)
	l(l7) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = 0
	nop(PUSH1)
	s(17) = sha3(s(18), s(17))
	nop(SHA3)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = 11450
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block11450_9(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block12294_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 1
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = address
	nop(ADDRESS)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gs(1) = s(17)
	gs(2) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 12382
	nop(PUSH2)
	s(16) = s(13)
	nop(DUP3)
	s(17) = 0
	nop(PUSH1)
	s(17) = g(totalSupply)
	nop(SLOAD)
	s(18) = 11450
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block11450_10(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize))
	nop(JUMP)

block12382_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), address, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(totalSupply) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = address
	nop(ADDRESS)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 92312388597506580910220011357950614650372135269746937547546302273167149333669
	nop(PUSH32)
	s(17) = s(13)
	nop(DUP4)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	l(l1) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(18) = s(19)-s(18)
	nop(SUB)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(LOG2)
	s(15) = 12487
	nop(PUSH2)
	s(16) = s(13)
	nop(DUP3)
	s(17) = 8
	nop(PUSH1)
	s(17) = g(toBuyBack)
	nop(SLOAD)
	s(18) = 11450
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block11450_11(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12487_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(16) = 8
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(toBuyBack) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = 12591
	nop(PUSH2)
	s(16) = 0
	nop(PUSH1)
	s(16) = g(totalSupply)
	nop(SLOAD)
	s(17) = 12577
	nop(PUSH2)
	s(18) = 100
	nop(PUSH1)
	s(19) = 12563
	nop(PUSH2)
	s(20) = 12528
	nop(PUSH2)
	s(21) = 20
	nop(PUSH1)
	s(22) = 100
	nop(PUSH1)
	s(23) = 12074
	nop(PUSH2)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	s(24) = 4294967295
	nop(PUSH4)
	s(23) = and(s(24), s(23))
	nop(AND)
	call(block12074_4(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12528_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = 12549
	nop(PUSH2)
	s(22) = 14
	nop(PUSH1)
	s(22) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(23) = s(13)
	nop(DUP10)
	s(24) = 12023
	nop(PUSH2)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = s(22)
	s(22) = s(24)
	s(24) = s(25)
	nop(SWAP2)
	s(25) = s(23)
	s(23) = s(24)
	s(24) = s(25)
	nop(SWAP1)
	s(25) = 4294967295
	nop(PUSH4)
	s(24) = and(s(25), s(24))
	nop(AND)
	call(block12023_2(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12549_0(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = 12023
	nop(PUSH2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	s(23) = 4294967295
	nop(PUSH4)
	s(22) = and(s(23), s(22))
	nop(AND)
	call(block12023_3(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12563_0(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = 9602
	nop(PUSH2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	s(21) = 4294967295
	nop(PUSH4)
	s(20) = and(s(21), s(20))
	nop(AND)
	call(block9602_4(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12577_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(18) = 9602
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block9602_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12591_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 12654
	nop(PUSH2)
	s(16) = 12637
	nop(PUSH2)
	s(17) = 0
	nop(PUSH1)
	s(17) = g(totalSupply)
	nop(SLOAD)
	s(18) = 12623
	nop(PUSH2)
	s(19) = 14
	nop(PUSH1)
	s(19) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(20) = s(13)
	nop(DUP7)
	s(21) = 12023
	nop(PUSH2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	s(22) = 4294967295
	nop(PUSH4)
	s(21) = and(s(22), s(21))
	nop(AND)
	call(block12023_4(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12623_0(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 9602
	nop(PUSH2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	s(20) = 4294967295
	nop(PUSH4)
	s(19) = and(s(20), s(19))
	nop(AND)
	call(block9602_6(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block12637_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(17) = 14
	nop(PUSH1)
	s(17) = g(buyBackInvestedValue)
	nop(SLOAD)
	s(18) = 11450
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block11450_12(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

jump12654_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(16), 0)
	call(block12730_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump12654_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(16), 0)
	call(block12721_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block12654_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(16) = 14
	nop(PUSH1)
	s(17) = s(15)
	nop(DUP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	g(buyBackInvestedValue) = s(16)
	nop(SSTORE)
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 2300
	nop(PUSH2)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	s(18)= eq(s(18), 0)
	nop(ISZERO)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = 0
	nop(PUSH1)
	s(20) = 64
	nop(PUSH1)
	s(20) = l(l0)
	nop(MLOAD)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(18)
	nop(DUP4)
	s(21) = s(22)-s(21)
	nop(SUB)
	s(22) = s(20)
	nop(DUP2)
	s(23) = s(17)
	nop(DUP6)
	s(24) = s(15)
	nop(DUP9)
	s(25) = s(16)
	nop(DUP9)
	s(19) = 1
	nop(CALL)
	s(20) = s(15)
	s(15) = s(19)
	s(19) = s(20)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15)= eq(s(15), 0)
	nop(ISZERO)
	s(16) = s(15)
	nop(DUP1)
	call(jump12654_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12721_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(16) = returndatasize
	nop(RETURNDATASIZE)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(17) = returndatasize
	nop(RETURNDATASIZE)
	s(18) = 0
	nop(PUSH1)
	nop(REVERT)

block12730_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block10658_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block3457_0(s(1), s(0))=>
	nop(JUMPDEST)
	call(block2925(s(0)))
	nop(JUMP)

block3457_1(s(1), s(0))=>
	nop(JUMPDEST)
	call(block546_0(s(0)))
	nop(JUMP)

block538_0(s(0))=>
	nop(JUMPDEST)
	s(1) = 546
	nop(PUSH2)
	s(2) = 3457
	nop(PUSH2)
	call(block3457_1(s(1),s(0)))
	nop(JUMP)

block546_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump6435_0(s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block6529_0(s(2), s(1), s(0),g(mintingFinished), g(owner), l(l1), l(l0)))

jump6435_0(s(4), s(3), s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block6525_0(s(2), s(1), s(0)))

block6435_0(s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump6435_0(s(4),s(3),s(2),s(1),s(0),g(mintingFinished), g(owner), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6525_0(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block6529_0(s(2), s(1), s(0), g(mintingFinished), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 20
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(mintingFinished) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 78846468080913150803278523724176498347600455082970383439751393167341097384456
	nop(PUSH32)
	s(4) = 64
	nop(PUSH1)
	s(4) = l(l0)
	nop(MLOAD)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block1990(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9602_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(25), 0)
	call(block9616_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump9602_0(s(25), s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(25), 0)
	call(block9615_2(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_0(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = 0
	nop(PUSH1)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	nop(DUP3)
	s(24) = s(19)
	nop(DUP5)
	s(25) = s(23)
	nop(DUP2)
	call(jump9602_0(s(25),s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(23), 0)
	call(block9616_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump9602_1(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(23), 0)
	call(block9615_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_1(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	s(22) = s(17)
	nop(DUP5)
	s(23) = s(21)
	nop(DUP2)
	call(jump9602_1(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9602_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	s(23) = s(18)
	nop(DUP5)
	s(24) = s(22)
	nop(DUP2)
	call(jump9602_2(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_2(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(24), 0)
	call(block9616_2(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump9602_2(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(24), 0)
	call(block9615_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump9602_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(23), 0)
	call(block9616_3(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

jump9602_3(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(23), 0)
	call(block9615_3(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_3(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	s(22) = s(17)
	nop(DUP5)
	s(23) = s(21)
	nop(DUP2)
	call(jump9602_3(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9602_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = 0
	nop(PUSH1)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	nop(DUP3)
	s(23) = s(18)
	nop(DUP5)
	s(24) = s(22)
	nop(DUP2)
	call(jump9602_4(s(24),s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_4(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(24), 0)
	call(block9616_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump9602_4(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(24), 0)
	call(block9615_6(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(16)
	nop(DUP5)
	s(22) = s(20)
	nop(DUP2)
	call(jump9602_5(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_5(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	neq(s(22), 0)
	call(block9616_5(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))

jump9602_5(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	eq(s(22), 0)
	call(block9615_5(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump9602_6(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	neq(s(23), 0)
	call(block9616_6(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))

jump9602_6(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	eq(s(23), 0)
	call(block9615_4(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(19) = 0
	nop(PUSH1)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	nop(DUP3)
	s(22) = s(17)
	nop(DUP5)
	s(23) = s(21)
	nop(DUP2)
	call(jump9602_6(s(23),s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	neq(s(22), 0)
	call(block9616_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))

jump9602_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	eq(s(22), 0)
	call(block9615_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(16)
	nop(DUP5)
	s(22) = s(20)
	nop(DUP2)
	call(jump9602_7(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_8(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(16), 0)
	call(block9616_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump9602_8(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(16), 0)
	call(block9615_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_8(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(14)
	nop(DUP2)
	call(jump9602_8(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9602_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	neq(s(14), 0)
	call(block9616_9(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))

jump9602_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	eq(s(14), 0)
	call(block9615_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9602_9(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump9602_9(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9615_0(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_2(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_3(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_4(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_5(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_6(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9615_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9616_0(s(24), s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(23) = s(24)/s(23)
	nop(DIV)
	s(24) = s(22)
	s(22) = s(23)
	s(23) = s(24)
	nop(SWAP1)
	nop(POP)
	s(23) = s(22)
	nop(DUP1)
	s(24) = s(21)
	s(21) = s(23)
	s(23) = s(24)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(22) = s(18)
	s(18) = s(21)
	s(21) = s(22)
	nop(SWAP3)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12577(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_1(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	nop(POP)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12591(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_2(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = s(23)/s(22)
	nop(DIV)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	nop(POP)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12637(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_3(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	nop(POP)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12162(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block9616_4(s(23), s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(22) = s(23)/s(22)
	nop(DIV)
	s(23) = s(21)
	s(21) = s(22)
	s(22) = s(23)
	nop(SWAP1)
	nop(POP)
	s(22) = s(21)
	nop(DUP1)
	s(23) = s(20)
	s(20) = s(22)
	s(22) = s(23)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(21) = s(17)
	s(17) = s(20)
	s(20) = s(21)
	nop(SWAP3)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12577_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_5(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12591_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(totalSupply), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_6(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(21) = s(22)/s(21)
	nop(DIV)
	s(22) = s(20)
	s(20) = s(21)
	s(21) = s(22)
	nop(SWAP1)
	nop(POP)
	s(21) = s(20)
	nop(DUP1)
	s(22) = s(19)
	s(19) = s(21)
	s(21) = s(22)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(20) = s(16)
	s(16) = s(19)
	s(19) = s(20)
	nop(SWAP3)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12637_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), l(l1), l(l0), returndatasize))
	nop(JUMP)

block9616_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12162_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(buyBackInvestedValue), g(toBuyBack), g(endBuyBackDate), g(startBuyBackDate), g(totalSupply), l(l7), l(l6), l(l1), l(l0), address, returndatasize, timestamp))
	nop(JUMP)

block9616_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8194(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

block9616_9(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8208(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(addresses), g(ethToDividendsNeeds), g(dividendsPayed), g(dividendsIndex), g(dividendsCalculated), g(invested), g(totalSupply), l(l7), l(l6)))
	nop(JUMP)

