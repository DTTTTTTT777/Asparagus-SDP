{
    "Token": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenStore": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "TokenStore(uint256,address)",
            "fallback()",
            "deprecate(bool,address)",
            "changeFeeAccount(address)",
            "changeAccountModifiers(address)",
            "changeTradeTracker(address)",
            "changeFee(uint256)",
            "getAccountModifiers()",
            "deposit()",
            "withdraw(uint256)",
            "depositToken(address,uint256)",
            "withdrawToken(address,uint256)",
            "balanceOf(address,address)",
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)",
            "tradeBalances(address,uint256,address,uint256,address,address,uint256)",
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)",
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)",
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)",
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)",
            "migrateFunds(address[])",
            "depositForUser(address)",
            "depositTokenForUser(address,uint256,address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "TokenStore(uint256,address)": {
                "argument": {
                    "_fee": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "deprecate(bool,address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "changeFeeAccount(address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "changeAccountModifiers(address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "changeTradeTracker(address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "changeFee(uint256)": {
                "argument": {
                    "_fee": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "getAccountModifiers()": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "deposit()": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "depositToken(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "balanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_expires": "uint256",
                    "_nonce": "uint256",
                    "_v": "uint8",
                    "_r": "bytes32",
                    "_s": "bytes32",
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "tradeBalances(address,uint256,address,uint256,address,address,uint256)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_expires": "uint256",
                    "_nonce": "uint256",
                    "_v": "uint8",
                    "_r": "bytes32",
                    "_s": "bytes32",
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_expires": "uint256",
                    "_nonce": "uint256",
                    "_v": "uint8",
                    "_r": "bytes32",
                    "_s": "bytes32"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_expires": "uint256",
                    "_nonce": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": {
                "argument": {
                    "_amountGet": "uint256",
                    "_amountGive": "uint256",
                    "_expires": "uint256",
                    "_nonce": "uint256",
                    "_v": "uint8",
                    "_r": "bytes32",
                    "_s": "bytes32"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "migrateFunds(address[])": {
                "argument": {
                    "_tokens": "address[]"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "depositForUser(address)": {
                "argument": {},
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            },
            "depositTokenForUser(address,uint256,address)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "fee": "uint256",
                    "version": "uint16"
                }
            }
        },
        "function_block_mapping": {
            "depositForUser(address)": [
                11905,
                21004
            ],
            "depositTokenForUser(address,uint256,address)": [
                12758,
                21060
            ],
            "changeFeeAccount(address)": [
                2170,
                449
            ],
            "balanceOf(address,address)": [
                2789,
                647
            ],
            "changeFee(uint256)": [
                1706,
                361
            ],
            "availableVolume(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32)": [
                2908,
                669
            ],
            "trade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256)": [
                380,
                75
            ],
            "deprecate(bool,address)": [
                2643,
                603
            ],
            "amountFilled(address,uint256,address,uint256,uint256,uint256,address)": [
                930,
                163
            ],
            "withdraw(uint256)": [
                1121,
                185
            ],
            "getAccountModifiers()": [
                1656,
                339
            ],
            "testTrade(address,uint256,address,uint256,uint256,uint256,address,uint8,bytes32,bytes32,uint256,address)": [
                1805,
                405
            ],
            "changeTradeTracker(address)": [
                1419,
                273
            ],
            "withdrawToken(address,uint256)": [
                2324,
                493
            ],
            "deposit()": [
                2590,
                559
            ],
            "changeAccountModifiers(address)": [
                1243,
                229
            ],
            "transferOwnership(address)": [
                2722,
                625
            ],
            "migrateFunds(address[])": [
                2488,
                537
            ],
            "depositToken(address,uint256)": [
                1166,
                207
            ],
            "cancelOrder(address,uint256,address,uint256,uint256,uint256,uint8,bytes32,bytes32)": [
                750,
                141
            ]
        },
        "block_CALL_mapping": {
            "jump14244_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "block6688": [
                "Token(_token).transferFrom(msg.sender, this, _amount)"
            ],
            "block13945": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "block14244": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "block3140": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "jump14244": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "block5995": [
                "msg.sender.call.value(_amount)()"
            ],
            "jump17277": [
                "TradeTrackerInterface(tradeTracker).tradeComplete(_tokenGet, _amount, _tokenGive, tokenGiveValue, _user, _caller, feeTakeValue, rebateValue)",
                "TradeTrackerInterface(tradeTracker).tradeComplete(_tokenGet, _amount, _tokenGive, tokenGiveValue, _user, _caller, feeTakeValue, rebateValue)"
            ],
            "jump9291": [
                "caller.version()",
                "caller.version()"
            ],
            "jump5348": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)",
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "block11905": [
                "newExchange.depositForUser.value(etherAmount)(msg.sender)"
            ],
            "jump15254": [
                "AccountModifiersInterface(accountModifiers).tradeModifiers(_user, _caller)",
                "AccountModifiersInterface(accountModifiers).tradeModifiers(_user, _caller)"
            ],
            "block4393": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "jump7744": [
                "caller.version()",
                "caller.version()"
            ],
            "jump11336": [
                "newExchange.successor()",
                "newExchange.successor()"
            ],
            "jump5995": [
                "msg.sender.call.value(_amount)()",
                "msg.sender.call.value(_amount)()"
            ],
            "block12758": [
                "newExchange.depositTokenForUser(token, tokenAmount, msg.sender)"
            ],
            "block14244_0": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "jump4688": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "block12343": [
                "Token(token).approve(newExchange, tokenAmount)"
            ],
            "block5348": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "block8034": [
                "Token(_token).transferFrom(msg.sender, this, _amount)"
            ],
            "block7744": [
                "caller.version()"
            ],
            "block9291": [
                "caller.version()"
            ],
            "block10675": [
                "Token(_token).transfer(msg.sender, _amount)"
            ],
            "jump10675": [
                "Token(_token).transfer(msg.sender, _amount)",
                "Token(_token).transfer(msg.sender, _amount)"
            ],
            "jump12343": [
                "Token(token).approve(newExchange, tokenAmount)",
                "Token(token).approve(newExchange, tokenAmount)"
            ],
            "jump11905": [
                "newExchange.depositForUser.value(etherAmount)(msg.sender)",
                "newExchange.depositForUser.value(etherAmount)(msg.sender)"
            ],
            "jump8867": [
                "AccountModifiersInterface(accountModifiers).accountModifiers(msg.sender)",
                "AccountModifiersInterface(accountModifiers).accountModifiers(msg.sender)"
            ],
            "jump13945_0": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)",
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "block11336": [
                "newExchange.successor()"
            ],
            "block4688": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "jump13945": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)",
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "jump4393": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)",
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "jump3435": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)",
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "jump3140": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)",
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ],
            "block8867": [
                "AccountModifiersInterface(accountModifiers).accountModifiers(msg.sender)"
            ],
            "jump8034": [
                "Token(_token).transferFrom(msg.sender, this, _amount)",
                "Token(_token).transferFrom(msg.sender, this, _amount)"
            ],
            "block17277": [
                "TradeTrackerInterface(tradeTracker).tradeComplete(_tokenGet, _amount, _tokenGive, tokenGiveValue, _user, _caller, feeTakeValue, rebateValue)"
            ],
            "jump6688": [
                "Token(_token).transferFrom(msg.sender, this, _amount)",
                "Token(_token).transferFrom(msg.sender, this, _amount)"
            ],
            "block15254": [
                "AccountModifiersInterface(accountModifiers).tradeModifiers(_user, _caller)"
            ],
            "block3435": [
                "ecrecover(sha3(\"\\x19Ethereum Signed Message:\\n32\", hash), _v, _r, _s)"
            ],
            "jump12758": [
                "newExchange.depositTokenForUser(token, tokenAmount, msg.sender)",
                "newExchange.depositTokenForUser(token, tokenAmount, msg.sender)"
            ],
            "block13945_0": [
                "sha256(this, _tokenGet, _amountGet, _tokenGive, _amountGive, _expires, _nonce)"
            ]
        }
    }
}