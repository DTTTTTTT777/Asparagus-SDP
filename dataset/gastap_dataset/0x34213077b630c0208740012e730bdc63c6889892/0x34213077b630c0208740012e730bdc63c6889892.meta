{
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "GoldMineCoin": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "fallback()",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "GoldMineCoin()",
            "addRestricedAccount(address,uint256)",
            "transferFrom(address,address,uint256)",
            "transfer(address,uint256)",
            "crowdsaleTransfer(address,uint256)",
            "addBountyTransferredTokens(uint256)",
            "setSaleAgent(address)",
            "setRemainingLockDate(uint256)",
            "finishCrowdsale()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "GoldMineCoin()": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "addRestricedAccount(address,uint256)": {
                "argument": {
                    "unlockedDate": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "crowdsaleTransfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "addBountyTransferredTokens(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "setSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "setRemainingLockDate(uint256)": {
                "argument": {
                    "newRemainingLockDate": "uint256"
                },
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "INITIAL_SUPPLY": "uint256",
                    "BOUNTY_TOKENS_LIMIT": "uint256",
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint32",
                    "bountyTokensTransferred": "uint256",
                    "remainingLockDate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                2045,
                559
            ],
            "addRestricedAccount(address,uint256)": [
                590,
                119
            ],
            "setRemainingLockDate(uint256)": [
                1534,
                427
            ],
            "crowdsaleTransfer(address,uint256)": [
                1282,
                339
            ],
            "allowance(address,address)": [
                2169,
                603
            ],
            "decreaseApproval(address,uint256)": [
                1181,
                317
            ],
            "transferFrom(address,address,uint256)": [
                777,
                185
            ],
            "setSaleAgent(address)": [
                667,
                141
            ],
            "approve(address,uint256)": [
                489,
                97
            ],
            "increaseApproval(address,uint256)": [
                2068,
                581
            ],
            "addBountyTransferredTokens(uint256)": [
                1489,
                405
            ],
            "balanceOf(address)": [
                1359,
                361
            ],
            "transferOwnership(address)": [
                2288,
                625
            ],
            "transfer(address,uint256)": [
                1810,
                493
            ]
        },
        "block_CALL_mapping": {}
    },
    "Presale": {
        "function_list": [
            "setNextSaleAgent(address)",
            "finishCrowdsale()",
            "tokensSoldLimit()",
            "end()",
            "setBountyWallet(address)",
            "setPrice(uint256)",
            "setToken(address)",
            "setStart(uint256)",
            "setPeriod(uint256)",
            "setWallet(address)",
            "priceWithBonus()",
            "buyTokens()",
            "bytesToAddres(bytes)",
            "retrieveTokens(address)",
            "fallback()",
            "Ownable()",
            "transferOwnership(address)",
            "tokensSoldLimit()",
            "priceWithBonus()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setNextSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "tokensSoldLimit()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "end()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setBountyWallet(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPeriod(uint256)": {
                "argument": {
                    "newPeriod": "uint256"
                },
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "priceWithBonus()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "bytesToAddres(bytes)": {
                "argument": {
                    "source": "bytes"
                },
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                1106,
                361
            ],
            "retrieveTokens(address)": [
                996,
                317
            ],
            "setStart(uint256)": [
                1772,
                647
            ],
            "setBountyWallet(address)": [
                754,
                229
            ],
            "setPeriod(uint256)": [
                426,
                97
            ],
            "end()": [
                1619,
                581
            ],
            "setPrice(uint256)": [
                908,
                273
            ],
            "setToken(address)": [
                471,
                119
            ],
            "setWallet(address)": [
                1269,
                449
            ],
            "setNextSaleAgent(address)": [
                1336,
                471
            ],
            "transferOwnership(address)": [
                1662,
                603
            ],
            "priceWithBonus()": [
                1904,
                691
            ],
            "tokensSoldLimit()": [
                1063,
                339
            ],
            "buyTokens()": [
                1172,
                405
            ]
        },
        "block_CALL_mapping": {
            "block5957": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "jump2033_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2033_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2389_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump2389_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block3747_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump2033": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3747": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3113": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4094_1": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block4377": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump4377_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump4377_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block2907": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block4094_1": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block3306_1": [
                "token.bountyTokensTransferred()"
            ],
            "block6348": [
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump2907": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump5957": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block2389_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump3747_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block5765": [
                "token.balanceOf(this)"
            ],
            "jump4868": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump2907_0": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block2389_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block4094": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block2389": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block2907_1": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block2907_0": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block3306": [
                "token.bountyTokensTransferred()"
            ],
            "jump3554_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump3554_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump4094": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump3306": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump3554": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block3113": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3747_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block4868": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block3747_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4094_0": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block3747": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block3306_0": [
                "token.bountyTokensTransferred()"
            ],
            "block4377_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block4377_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block3554_0": [
                "token.bountyTokensTransferred()"
            ],
            "block3554_1": [
                "token.bountyTokensTransferred()"
            ],
            "jump3113_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3113_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4377": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump2389": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump2907_1": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump5765": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block3113_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block3113_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3306_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump3306_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block2033_1": [
                "wallet.transfer(msg.value)"
            ],
            "block2033_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2033": [
                "wallet.transfer(msg.value)"
            ],
            "jump6348": [
                "token.setSaleAgent(nextSaleAgent)",
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "block3554": [
                "token.bountyTokensTransferred()"
            ],
            "block4094_0": [
                "token.addRestricedAccount(bountyWallet, end())"
            ]
        }
    },
    "PreICO": {
        "function_list": [
            "setNextSaleAgent(address)",
            "finishCrowdsale()",
            "tokensSoldLimit()",
            "end()",
            "setBountyWallet(address)",
            "setPrice(uint256)",
            "setToken(address)",
            "setStart(uint256)",
            "setPeriod(uint256)",
            "setWallet(address)",
            "priceWithBonus()",
            "buyTokens()",
            "bytesToAddres(bytes)",
            "retrieveTokens(address)",
            "fallback()",
            "Ownable()",
            "transferOwnership(address)",
            "setTimeStep(uint256)",
            "priceWithBonus()",
            "getMinPriceSale()",
            "getMaxPriceSale()",
            "tokensSoldLimit()",
            "getMinPriceSale()",
            "getMaxPriceSale()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setNextSaleAgent(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "tokensSoldLimit()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "end()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setBountyWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPeriod(uint256)": {
                "argument": {
                    "newPeriod": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "priceWithBonus()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "bytesToAddres(bytes)": {
                "argument": {
                    "source": "bytes"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setTimeStep(uint256)": {
                "argument": {
                    "newTimeStep": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "getMinPriceSale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "getMaxPriceSale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                1260,
                405
            ],
            "retrieveTokens(address)": [
                1150,
                361
            ],
            "setStart(uint256)": [
                2098,
                779
            ],
            "getMinPriceSale()": [
                1369,
                471
            ],
            "setPeriod(uint256)": [
                449,
                75
            ],
            "end()": [
                1945,
                713
            ],
            "setPrice(uint256)": [
                1062,
                317
            ],
            "setToken(address)": [
                494,
                97
            ],
            "setWallet(address)": [
                1595,
                581
            ],
            "getMaxPriceSale()": [
                1465,
                537
            ],
            "transferOwnership(address)": [
                1988,
                735
            ],
            "priceWithBonus()": [
                2230,
                823
            ],
            "setNextSaleAgent(address)": [
                1662,
                603
            ],
            "setBountyWallet(address)": [
                908,
                273
            ],
            "tokensSoldLimit()": [
                1217,
                383
            ],
            "buyTokens()": [
                1455,
                515
            ],
            "setTimeStep(uint256)": [
                647,
                163
            ]
        },
        "block_CALL_mapping": {
            "jump4420_1": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump4703_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump4703_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block3439_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump2359": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump4703": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block3880_1": [
                "token.bountyTokensTransferred()"
            ],
            "block3632": [
                "token.bountyTokensTransferred()"
            ],
            "block5186": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block3233_0": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block3233_1": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump4073": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4420": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump3632": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block2715": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block3439": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block4703_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block4073": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump6202": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block4703_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump3880_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump3880_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump5186": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block3439_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3632_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block4420_1": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block4703": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block4073_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block6202": [
                "token.balanceOf(this)"
            ],
            "jump4073_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block3880": [
                "token.bountyTokensTransferred()"
            ],
            "jump3233_0": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump4420_0": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump6394": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block3880_0": [
                "token.bountyTokensTransferred()"
            ],
            "block2359_0": [
                "wallet.transfer(msg.value)"
            ],
            "jump2715": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block3632_1": [
                "token.bountyTokensTransferred()"
            ],
            "block3632_0": [
                "token.bountyTokensTransferred()"
            ],
            "block2715_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block2715_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump3439": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block2359_1": [
                "wallet.transfer(msg.value)"
            ],
            "block6394": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block2359": [
                "wallet.transfer(msg.value)"
            ],
            "jump2715_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump2715_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block6785": [
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump3233_1": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block4420_0": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump3880": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block4420": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump3233": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block4073_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3632_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump6785": [
                "token.setSaleAgent(nextSaleAgent)",
                "token.setSaleAgent(nextSaleAgent)"
            ],
            "jump4073_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block3233": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump2359_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2359_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump3439_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3439_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ]
        }
    },
    "ICO": {
        "function_list": [
            "setTimeStep(uint256)",
            "priceWithBonus()",
            "getMinPriceSale()",
            "getMaxPriceSale()",
            "tokensSoldLimit()",
            "end()",
            "setBountyWallet(address)",
            "setPrice(uint256)",
            "setToken(address)",
            "setStart(uint256)",
            "setPeriod(uint256)",
            "setWallet(address)",
            "priceWithBonus()",
            "buyTokens()",
            "bytesToAddres(bytes)",
            "retrieveTokens(address)",
            "fallback()",
            "Ownable()",
            "transferOwnership(address)",
            "tokensSoldLimit()",
            "setLockPeriod(uint256)",
            "setFoundersTokensWallet(address)",
            "setEscrowTokensWallet(address)",
            "finishCrowdsale()",
            "getMinPriceSale()",
            "getMaxPriceSale()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "setTimeStep(uint256)": {
                "argument": {
                    "newTimeStep": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "priceWithBonus()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "getMinPriceSale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "getMaxPriceSale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "tokensSoldLimit()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "end()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setBountyWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPrice(uint256)": {
                "argument": {
                    "newPrice": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setToken(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setStart(uint256)": {
                "argument": {
                    "newStart": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setPeriod(uint256)": {
                "argument": {
                    "newPeriod": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "buyTokens()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "bytesToAddres(bytes)": {
                "argument": {
                    "source": "bytes"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "retrieveTokens(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setLockPeriod(uint256)": {
                "argument": {
                    "newLockPeriod": "uint256"
                },
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setFoundersTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "setEscrowTokensWallet(address)": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "finishCrowdsale()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "MAX_PRICE_SALE": "uint256",
                    "MIN_PRICE_SALE": "uint256",
                    "ESCROW_TOKENS_PERCENT": "uint256",
                    "FOUNDERS_TOKENS_PERCENT": "uint256",
                    "lockPeriod": "uint256",
                    "TOKENS_SOLD_LIMIT": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "finishCrowdsale()": [
                9194,
                894
            ],
            "retrieveTokens(address)": [
                1698,
                537
            ],
            "setStart(uint256)": [
                2492,
                911
            ],
            "setLockPeriod(uint256)": [
                1258,
                361
            ],
            "getMinPriceSale()": [
                1917,
                647
            ],
            "setFoundersTokensWallet(address)": [
                713,
                163
            ],
            "setPeriod(uint256)": [
                515,
                75
            ],
            "end()": [
                2339,
                845
            ],
            "setPrice(uint256)": [
                1543,
                471
            ],
            "setToken(address)": [
                560,
                97
            ],
            "setWallet(address)": [
                2056,
                735
            ],
            "getMaxPriceSale()": [
                2013,
                713
            ],
            "setEscrowTokensWallet(address)": [
                1631,
                515
            ],
            "priceWithBonus()": [
                2624,
                955
            ],
            "setBountyWallet(address)": [
                1389,
                427
            ],
            "tokensSoldLimit()": [
                1765,
                559
            ],
            "buyTokens()": [
                2003,
                691
            ],
            "transferOwnership(address)": [
                2382,
                867
            ],
            "setTimeStep(uint256)": [
                910,
                229
            ]
        },
        "block_CALL_mapping": {
            "block5580": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block4814": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block4814_1": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block4467_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4026_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block2753": [
                "wallet.transfer(msg.value)"
            ],
            "jump4274_0": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump4274_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block3109": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block4026_1": [
                "token.bountyTokensTransferred()"
            ],
            "block4026_0": [
                "token.bountyTokensTransferred()"
            ],
            "jump9036": [
                "token.setRemainingLockDate(now + lockPeriod * 1 days)",
                "token.setRemainingLockDate(now + lockPeriod * 1 days)"
            ],
            "block4814_0": [
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump5097": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump2753_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2753_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block3109_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump3109_0": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block9036": [
                "token.setRemainingLockDate(now + lockPeriod * 1 days)"
            ],
            "jump3833": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4467_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block7970": [
                "token.balanceOf(token)"
            ],
            "jump4814_0": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block8858": [
                "token.crowdsaleTransfer(escrowTokensWallet, escrowTokens)"
            ],
            "jump4274": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block8598": [
                "token.crowdsaleTransfer(foundersTokensWallet, foundersTokens)"
            ],
            "jump4467": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump4467_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3109": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block4274_0": [
                "token.bountyTokensTransferred()"
            ],
            "block4274_1": [
                "token.bountyTokensTransferred()"
            ],
            "jump3627_1": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump9194": [
                "token.finishCrowdsale()",
                "token.finishCrowdsale()"
            ],
            "jump3833_0": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump7111": [
                "token.balanceOf(this)",
                "token.balanceOf(this)"
            ],
            "block9194": [
                "token.finishCrowdsale()"
            ],
            "jump8858": [
                "token.crowdsaleTransfer(escrowTokensWallet, escrowTokens)",
                "token.crowdsaleTransfer(escrowTokensWallet, escrowTokens)"
            ],
            "block4274": [
                "token.bountyTokensTransferred()"
            ],
            "jump3627_0": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "jump7614": [
                "token.totalSupply()",
                "token.totalSupply()"
            ],
            "block7303": [
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "jump7970": [
                "token.balanceOf(token)",
                "token.balanceOf(token)"
            ],
            "jump8598": [
                "token.crowdsaleTransfer(foundersTokensWallet, foundersTokens)",
                "token.crowdsaleTransfer(foundersTokensWallet, foundersTokens)"
            ],
            "block3109_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "block5097_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block3833_0": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block3833_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block4026": [
                "token.bountyTokensTransferred()"
            ],
            "jump4026_1": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "jump3627": [
                "token.crowdsaleTransfer(referer, refererTokens)",
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block3627": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block5097": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block8259": [
                "token.balanceOf(token)"
            ],
            "jump4814": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump8259": [
                "token.balanceOf(token)",
                "token.balanceOf(token)"
            ],
            "jump2753": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump4814_1": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "jump4026": [
                "token.bountyTokensTransferred()",
                "token.bountyTokensTransferred()"
            ],
            "block3833": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "block4467_1": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump3109_1": [
                "token.crowdsaleTransfer(msg.sender, tokens)",
                "token.crowdsaleTransfer(msg.sender, tokens)"
            ],
            "jump7303": [
                "alienToken.transfer(wallet, token.balanceOf(this))",
                "alienToken.transfer(wallet, token.balanceOf(this))"
            ],
            "block7614": [
                "token.totalSupply()"
            ],
            "block4467": [
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump5580": [
                "token.addRestricedAccount(bountyWallet, end())",
                "token.addRestricedAccount(bountyWallet, end())"
            ],
            "block7111": [
                "token.balanceOf(this)"
            ],
            "block2753_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2753_1": [
                "wallet.transfer(msg.value)"
            ],
            "block5097_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump3833_1": [
                "token.BOUNTY_TOKENS_LIMIT()",
                "token.BOUNTY_TOKENS_LIMIT()"
            ],
            "jump5097_0": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "jump5097_1": [
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)",
                "token.crowdsaleTransfer(bountyWallet, bountyTokens)"
            ],
            "block3627_1": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ],
            "block3627_0": [
                "token.crowdsaleTransfer(referer, refererTokens)"
            ]
        }
    }
}