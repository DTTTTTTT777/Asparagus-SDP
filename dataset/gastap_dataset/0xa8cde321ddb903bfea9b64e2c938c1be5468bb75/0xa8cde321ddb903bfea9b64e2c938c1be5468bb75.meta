{
    "ERC20Interface": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                125,
                75
            ],
            "balanceOf(address)": [
                402,
                141
            ],
            "totalSupply()": [
                226,
                97
            ],
            "allowance(address,address)": [
                590,
                185
            ],
            "transferFrom(address,address,uint256)": [
                269,
                119
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "ImmutableShares": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "ImmutableShares()",
            "isContract(address)",
            "changeFallbackAccount(address)",
            "withdrawMyDividend()",
            "payReceiver(address)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "fallback()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "ImmutableShares()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "changeFallbackAccount(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "withdrawMyDividend()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "payReceiver(address)": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "symbol": "string",
                    "name": "string",
                    "decimals": "uint8",
                    "_totalSupply": "uint256",
                    "totalSupply": "uint256",
                    "TotalDividendsPerShare": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawMyDividend()": [
                1007,
                251
            ],
            "approve(address,uint256)": [
                449,
                97
            ],
            "balanceOf(address)": [
                1127,
                317
            ],
            "isContract(address)": [
                550,
                119
            ],
            "transfer(address,uint256)": [
                1445,
                383
            ],
            "totalSupply()": [
                641,
                141
            ],
            "changeFallbackAccount(address)": [
                1060,
                295
            ],
            "payReceiver(address)": [
                953,
                229
            ],
            "transferFrom(address,address,uint256)": [
                684,
                163
            ],
            "allowance(address,address)": [
                1720,
                449
            ]
        },
        "block_CALL_mapping": {
            "jump3869_1": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)",
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ],
            "block3869_1": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ],
            "block3869_0": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ],
            "block3415_0": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "block3415_1": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "block3415": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "jump3869": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)",
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ],
            "block4302": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "jump4302_0": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)",
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "jump4302_1": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)",
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "jump3415_0": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)",
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "jump3415_1": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)",
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "jump3415": [
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)",
                "ReceiverAddress.transfer(balances[ReceiverAddress]*AmountToSendPerShare)"
            ],
            "block3869": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ],
            "block4302_1": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "jump4302": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)",
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "block4302_0": [
                "fallbackAccount.transfer(balances[msg.sender]*AmountToSendPerShareEx)"
            ],
            "jump3869_0": [
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)",
                "msg.sender.transfer(balances[msg.sender]*AmountToSendPerShare)"
            ]
        }
    }
}