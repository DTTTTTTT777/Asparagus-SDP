{
    "SMINT": {
        "function_list": [
            "SMINT()",
            "_transfer(address,address,uint256)",
            "_unfreezeMaxTokens(uint256)",
            "transferAndFreeze(address,uint256)",
            "transfer(address,uint256)",
            "bill(uint256)",
            "pay(uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "SMINT()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "_transfer(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "_unfreezeMaxTokens(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "transferAndFreeze(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "bill(uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "pay(uint256)": {
                "argument": {
                    "_invoiceId": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8",
                    "totalSupply": "uint256",
                    "currentInvoice": "uint256",
                    "lastEfficientBlockNumber": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                1484,
                97
            ],
            "pay(uint256)": [
                2735,
                405
            ],
            "bill(uint256)": [
                2020,
                229
            ],
            "transferFrom(address,address,uint256)": [
                1671,
                163
            ],
            "transferAndFreeze(address,uint256)": [
                2239,
                295
            ],
            "transfer(address,uint256)": [
                2547,
                361
            ]
        },
        "block_CALL_mapping": {
            "block286_0": [
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)"
            ],
            "jump286_0": [
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)",
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)"
            ],
            "block286": [
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)"
            ],
            "jump286": [
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)",
                "sha256(minedAtBlock + uint(msg.sender) + block.timestamp)"
            ]
        }
    }
}