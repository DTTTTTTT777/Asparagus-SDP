{
    "ERC20": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "totalSupply()": [
                303,
                97
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "DSAuthEvents": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DSAuth": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setOwner(address)": [
                103,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump1499": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499_0": [
                "authority.canCall(src, this, sig)"
            ],
            "jump1499_0": [
                "authority.canCall(src, this, sig)",
                "authority.canCall(src, this, sig)"
            ],
            "block1499": [
                "authority.canCall(src, this, sig)"
            ]
        }
    },
    "APMath": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "safeMin(uint256,uint256)",
            "safeMax(uint256,uint256)",
            "safeMin(int256,int256)",
            "safeMax(int256,int256)",
            "safeWmul(uint256,uint256)",
            "safeRmul(uint256,uint256)",
            "safeWdiv(uint256,uint256)",
            "safeRdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeMin(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeMax(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeMin(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeMax(int256,int256)": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeWmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeRmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeWdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "safeRdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "WAD": "uint256",
                    "RAY": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "DrivezyPrivateCoinSharedStorage": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "addOwnerAddress(address)",
            "addTrustedContractAddress(address)",
            "addApprovedAddress(address)",
            "removeOwnerAddress(address)",
            "removeTrustedContractAddress(address)",
            "removeApprovedAddress(address)",
            "isOwnerAddress(address)",
            "isApprovedAddress(address)",
            "isTrustedContractAddress(address)",
            "ownerAddressSize()",
            "ownerAddressInLUT(uint256)",
            "trustedAddressSize()",
            "trustedAddressInLUT(uint256)",
            "approvedAddressSize()",
            "approvedAddressInLUT(uint256)",
            "isAuthorized(address,bytes4)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "addOwnerAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "addTrustedContractAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "addApprovedAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "removeOwnerAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "removeTrustedContractAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "removeApprovedAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "isOwnerAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "isApprovedAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "isTrustedContractAddress(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "ownerAddressSize()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "ownerAddressInLUT(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "trustedAddressSize()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "trustedAddressInLUT(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "approvedAddressSize()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            },
            "approvedAddressInLUT(uint256)": {
                "argument": {
                    "index": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256",
                    "ownerAddressLUT": "address[]",
                    "trustedAddressLUT": "address[]",
                    "approvedAddressLUT": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "approvedAddressInLUT(uint256)": [
                1568,
                405
            ],
            "approvedAddressSize()": [
                2168,
                537
            ],
            "ownerAddressInLUT(uint256)": [
                550,
                141
            ],
            "removeTrustedContractAddress(address)": [
                1208,
                317
            ],
            "trustedAddressSize()": [
                659,
                163
            ],
            "setOwner(address)": [
                392,
                97
            ],
            "addApprovedAddress(address)": [
                1677,
                427
            ],
            "isTrustedContractAddress(address)": [
                2077,
                515
            ],
            "removeApprovedAddress(address)": [
                459,
                119
            ],
            "addTrustedContractAddress(address)": [
                1390,
                361
            ],
            "isOwnerAddress(address)": [
                1117,
                295
            ],
            "ownerAddressSize()": [
                987,
                251
            ],
            "addOwnerAddress(address)": [
                301,
                75
            ],
            "removeOwnerAddress(address)": [
                1768,
                449
            ],
            "isApprovedAddress(address)": [
                1299,
                339
            ],
            "trustedAddressInLUT(uint256)": [
                1859,
                471
            ]
        },
        "block_CALL_mapping": {}
    },
    "DrivezyPrivateCoinStorage": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "totalSupply()",
            "setTotalSupply(uint256)",
            "coinBalanceOf(address)",
            "coinAllowanceOf(address,address)",
            "setCoinBalance(address,uint256)",
            "setCoinAllowance(address,address,uint256)",
            "setSharedStorage(address)",
            "allowTransferBetweenUsers()",
            "disallowTransferBetweenUsers()",
            "canTransferBetweenUsers()",
            "isAuthorized(address,bytes4)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setTotalSupply(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "coinBalanceOf(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "coinAllowanceOf(address,address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setCoinBalance(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setCoinAllowance(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "setSharedStorage(address)": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "allowTransferBetweenUsers()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "disallowTransferBetweenUsers()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            },
            "canTransferBetweenUsers()": {
                "argument": {},
                "contract": {
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setTotalSupply(uint256)": [
                1345,
                383
            ],
            "setOwner(address)": [
                235,
                75
            ],
            "coinAllowanceOf(address,address)": [
                694,
                229
            ],
            "setCoinBalance(address,uint256)": [
                392,
                141
            ],
            "totalSupply()": [
                302,
                97
            ],
            "disallowTransferBetweenUsers()": [
                1033,
                295
            ],
            "setCoinAllowance(address,address,uint256)": [
                900,
                273
            ],
            "setSharedStorage(address)": [
                1254,
                361
            ],
            "canTransferBetweenUsers()": [
                1414,
                405
            ],
            "allowTransferBetweenUsers()": [
                560,
                185
            ],
            "coinBalanceOf(address)": [
                1080,
                317
            ]
        },
        "block_CALL_mapping": {
            "block3703_1": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump3703": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703_0": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump3448_3": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_0": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_1": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_6": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_4": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_5": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3703_6": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448_5": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3703_4": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448_4": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3448_2": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block3448_6": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3703_5": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448_0": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block3448_1": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3703_0": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448_3": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump3703_2": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703_2": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump3703_3": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703_3": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448_2": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block3703_4": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump3703_1": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703_5": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3703_6": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block3448": [
                "sharedStorage.isOwnerAddress(src)"
            ]
        }
    },
    "DrivezyPrivateCoinImplementation": {
        "function_list": [
            "safeAdd(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeMul(uint256,uint256)",
            "safeMin(uint256,uint256)",
            "safeMax(uint256,uint256)",
            "safeMin(int256,int256)",
            "safeMax(int256,int256)",
            "safeWmul(uint256,uint256)",
            "safeRmul(uint256,uint256)",
            "safeWdiv(uint256,uint256)",
            "safeRdiv(uint256,uint256)",
            "rpow(uint256,uint256)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,address,uint256)",
            "transferFrom(address,address,address,uint256)",
            "approve(address,address,uint256)",
            "allowance(address,address)",
            "setStorage(address)",
            "setSharedStorage(address)",
            "setCoin(address)",
            "mint(address,uint256)",
            "burn(address,uint256)",
            "addApprovedAddress(address)",
            "removeApprovedAddress(address)",
            "allowTransferBetweenUsers()",
            "disallowTransferBetweenUsers()",
            "canCall(address,address,bytes4)",
            "canTransfer(address,address)",
            "isAuthorized(address,bytes4)",
            "isContract(address)",
            "isDrivezyPrivateTokenAcceptable()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMin(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMax(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeMin(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "safeMax(int256,int256)": {
                "argument": {},
                "contract": {}
            },
            "safeWmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeRmul(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeWdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "safeRdiv(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "y": "uint256"
                },
                "contract": {}
            },
            "rpow(uint256,uint256)": {
                "argument": {
                    "x": "uint256",
                    "n": "uint256"
                },
                "contract": {}
            },
            "DSAuth()": {
                "argument": {},
                "contract": {}
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {}
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {}
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "totalSupply()": {
                "argument": {},
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "approve(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "setStorage(address)": {
                "argument": {},
                "contract": {}
            },
            "setSharedStorage(address)": {
                "argument": {},
                "contract": {}
            },
            "setCoin(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "burn(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "addApprovedAddress(address)": {
                "argument": {},
                "contract": {}
            },
            "removeApprovedAddress(address)": {
                "argument": {},
                "contract": {}
            },
            "allowTransferBetweenUsers()": {
                "argument": {},
                "contract": {}
            },
            "disallowTransferBetweenUsers()": {
                "argument": {},
                "contract": {}
            },
            "canCall(address,address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {}
            },
            "canTransfer(address,address)": {
                "argument": {},
                "contract": {}
            },
            "isContract(address)": {
                "argument": {},
                "contract": {}
            },
            "isDrivezyPrivateTokenAcceptable()": {
                "argument": {},
                "contract": {}
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "isContract(address)": [
                653,
                141
            ],
            "transfer(address,address,uint256)": [
                1895,
                471
            ],
            "approve(address,address,uint256)": [
                2416,
                581
            ],
            "balanceOf(address)": [
                979,
                229
            ],
            "totalSupply()": [
                8182,
                987
            ],
            "setStorage(address)": [
                1492,
                383
            ],
            "transferFrom(address,address,address,uint256)": [
                488,
                119
            ],
            "allowTransferBetweenUsers()": [
                6709,
                886
            ],
            "disallowTransferBetweenUsers()": [
                9206,
                886
            ],
            "setOwner(address)": [
                421,
                97
            ],
            "addApprovedAddress(address)": [
                12283,
                926
            ],
            "removeApprovedAddress(address)": [
                4438,
                926
            ],
            "isDrivezyPrivateTokenAcceptable()": [
                11464,
                807
            ],
            "canCall(address,address,bytes4)": [
                1731,
                449
            ],
            "setCoin(address)": [
                1180,
                295
            ],
            "mint(address,uint256)": [
                878,
                207
            ],
            "burn(address,uint256)": [
                1583,
                405
            ],
            "setSharedStorage(address)": [
                2115,
                515
            ],
            "allowance(address,address)": [
                2297,
                559
            ]
        },
        "block_CALL_mapping": {
            "jump14207_0": [
                "sharedStorage.isOwnerAddress(from)",
                "sharedStorage.isOwnerAddress(from)"
            ],
            "block9806_20": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block13494": [
                "sharedStorage.isOwnerAddress(to)"
            ],
            "jump10213": [
                "coinStorage.coinBalanceOf(sender)",
                "coinStorage.coinBalanceOf(sender)"
            ],
            "jump5797": [
                "coin.transfer(receiver, amount)",
                "coin.transfer(receiver, amount)"
            ],
            "block13117_0": [
                "coinStorage.setCoinAllowance(sender, spender, amount)"
            ],
            "block9551_11": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_10": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_13": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block14207": [
                "sharedStorage.isOwnerAddress(from)"
            ],
            "jump13953": [
                "coinStorage.canTransferBetweenUsers()",
                "coinStorage.canTransferBetweenUsers()"
            ],
            "block9551_14": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_17": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump11691": [
                "receiver.receiveToken(sender, amount)",
                "receiver.receiveToken(sender, amount)"
            ],
            "block9551_19": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump7570": [
                "coinStorage.coinBalanceOf(receiver)",
                "coinStorage.coinBalanceOf(receiver)"
            ],
            "block6226": [
                "coinStorage.coinBalanceOf(addr)"
            ],
            "block8329": [
                "coinStorage.setTotalSupply(safeSub(coinStorage.totalSupply(), amount))"
            ],
            "jump5017": [
                "coinStorage.setTotalSupply(safeAdd(coinStorage.totalSupply(), amount))",
                "coinStorage.setTotalSupply(safeAdd(coinStorage.totalSupply(), amount))"
            ],
            "block4438": [
                "sharedStorage.removeApprovedAddress(addr)"
            ],
            "block9806_3": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block12742": [
                "coinStorage.coinAllowanceOf(owner, spender)"
            ],
            "block11089_0": [
                "coinStorage.coinBalanceOf(to)"
            ],
            "block13953_0": [
                "coinStorage.canTransferBetweenUsers()"
            ],
            "jump9806_7": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump6709": [
                "coinStorage.allowTransferBetweenUsers()",
                "coinStorage.allowTransferBetweenUsers()"
            ],
            "block9806_16": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_8": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump4438": [
                "sharedStorage.removeApprovedAddress(addr)",
                "sharedStorage.removeApprovedAddress(addr)"
            ],
            "jump10576_0": [
                "coinStorage.coinBalanceOf(sender)",
                "coinStorage.coinBalanceOf(sender)"
            ],
            "block9806_4": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_5": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_6": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_7": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_0": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_1": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_2": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block5017": [
                "coinStorage.setTotalSupply(safeAdd(coinStorage.totalSupply(), amount))"
            ],
            "block9806_15": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block7913": [
                "coin.transferFrom(receiver, address(this), amount)"
            ],
            "block12283_1": [
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "jump14462_0": [
                "sharedStorage.isTrustedContractAddress(from)",
                "sharedStorage.isTrustedContractAddress(from)"
            ],
            "jump8644": [
                "coinStorage.coinBalanceOf(address(this))",
                "coinStorage.coinBalanceOf(address(this))"
            ],
            "block9551_12": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_15": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9806_11": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block10213": [
                "coinStorage.coinBalanceOf(sender)"
            ],
            "jump4870": [
                "coinStorage.totalSupply()",
                "coinStorage.totalSupply()"
            ],
            "jump9551_7": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_6": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_5": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_4": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_3": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_2": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_1": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_0": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_16": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_9": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_8": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block3842": [
                "coinStorage.setCoinAllowance(from, sender, safeSub(coinStorage.coinAllowanceOf(sender, from), amount))"
            ],
            "jump9551_19": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_18": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_17": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump12283_0": [
                "sharedStorage.addApprovedAddress(addr)",
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "jump9551_15": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_14": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump6226": [
                "coinStorage.coinBalanceOf(addr)",
                "coinStorage.coinBalanceOf(addr)"
            ],
            "jump9551_12": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_11": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9551_10": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block5342": [
                "coinStorage.coinBalanceOf(address(this))"
            ],
            "block9551_3": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block10774_0": [
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))"
            ],
            "block8182": [
                "coinStorage.totalSupply()"
            ],
            "block6709": [
                "coinStorage.allowTransferBetweenUsers()"
            ],
            "jump14717": [
                "sharedStorage.isOwnerAddress(to)",
                "sharedStorage.isOwnerAddress(to)"
            ],
            "block9806_18": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_19": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block10774": [
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))"
            ],
            "block11691": [
                "receiver.receiveToken(sender, amount)"
            ],
            "block9806_14": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block11287_0": [
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))"
            ],
            "block9806_12": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_13": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9806_10": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block7570": [
                "coinStorage.coinBalanceOf(receiver)"
            ],
            "block9551_5": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9806": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block9551_7": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_6": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_1": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_0": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block13953": [
                "coinStorage.canTransferBetweenUsers()"
            ],
            "block9551_2": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block13748": [
                "sharedStorage.isApprovedAddress(to)"
            ],
            "block9551_9": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_8": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump13748": [
                "sharedStorage.isApprovedAddress(to)",
                "sharedStorage.isApprovedAddress(to)"
            ],
            "block9806_17": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block12283_0": [
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "jump9806_11": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block14717_0": [
                "sharedStorage.isOwnerAddress(to)"
            ],
            "jump9806_3": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9551": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block13748_0": [
                "sharedStorage.isApprovedAddress(to)"
            ],
            "block11287": [
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))"
            ],
            "jump11287_0": [
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))",
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))"
            ],
            "block9551": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block14972_0": [
                "sharedStorage.isTrustedContractAddress(to)"
            ],
            "block10576": [
                "coinStorage.coinBalanceOf(sender)"
            ],
            "block14462_0": [
                "sharedStorage.isTrustedContractAddress(from)"
            ],
            "jump13117_0": [
                "coinStorage.setCoinAllowance(sender, spender, amount)",
                "coinStorage.setCoinAllowance(sender, spender, amount)"
            ],
            "jump13117": [
                "coinStorage.setCoinAllowance(sender, spender, amount)",
                "coinStorage.setCoinAllowance(sender, spender, amount)"
            ],
            "jump11464": [
                "receiver.isDrivezyPrivateTokenAcceptable()",
                "receiver.isDrivezyPrivateTokenAcceptable()"
            ],
            "jump14462": [
                "sharedStorage.isTrustedContractAddress(from)",
                "sharedStorage.isTrustedContractAddress(from)"
            ],
            "block4870": [
                "coinStorage.totalSupply()"
            ],
            "block3593": [
                "coinStorage.coinAllowanceOf(sender, from)"
            ],
            "jump8329": [
                "coinStorage.setTotalSupply(safeSub(coinStorage.totalSupply(), amount))",
                "coinStorage.setTotalSupply(safeSub(coinStorage.totalSupply(), amount))"
            ],
            "block13494_0": [
                "sharedStorage.isOwnerAddress(to)"
            ],
            "block11691_0": [
                "receiver.receiveToken(sender, amount)"
            ],
            "jump10774": [
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))",
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))"
            ],
            "block11464": [
                "receiver.isDrivezyPrivateTokenAcceptable()"
            ],
            "jump11089": [
                "coinStorage.coinBalanceOf(to)",
                "coinStorage.coinBalanceOf(to)"
            ],
            "block3201": [
                "coinStorage.coinAllowanceOf(sender, from)"
            ],
            "jump3201": [
                "coinStorage.coinAllowanceOf(sender, from)",
                "coinStorage.coinAllowanceOf(sender, from)"
            ],
            "jump12742": [
                "coinStorage.coinAllowanceOf(owner, spender)",
                "coinStorage.coinAllowanceOf(owner, spender)"
            ],
            "block14207_0": [
                "sharedStorage.isOwnerAddress(from)"
            ],
            "jump8842": [
                "coinStorage.setCoinBalance(address(this), safeSub(coinStorage.coinBalanceOf(address(this)), amount))",
                "coinStorage.setCoinBalance(address(this), safeSub(coinStorage.coinBalanceOf(address(this)), amount))"
            ],
            "jump9806_17": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block12283": [
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "block10213_0": [
                "coinStorage.coinBalanceOf(sender)"
            ],
            "block9806": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block14462": [
                "sharedStorage.isTrustedContractAddress(from)"
            ],
            "jump9551_20": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "block9551_20": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump14972": [
                "sharedStorage.isTrustedContractAddress(to)",
                "sharedStorage.isTrustedContractAddress(to)"
            ],
            "jump13953_0": [
                "coinStorage.canTransferBetweenUsers()",
                "coinStorage.canTransferBetweenUsers()"
            ],
            "block8644": [
                "coinStorage.coinBalanceOf(address(this))"
            ],
            "jump4126": [
                "coinStorage.totalSupply()",
                "coinStorage.totalSupply()"
            ],
            "block5797": [
                "coin.transfer(receiver, amount)"
            ],
            "jump12283": [
                "sharedStorage.addApprovedAddress(addr)",
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "block8842": [
                "coinStorage.setCoinBalance(address(this), safeSub(coinStorage.coinBalanceOf(address(this)), amount))"
            ],
            "block14717": [
                "sharedStorage.isOwnerAddress(to)"
            ],
            "block9806_9": [
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_6": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump3593": [
                "coinStorage.coinAllowanceOf(sender, from)",
                "coinStorage.coinAllowanceOf(sender, from)"
            ],
            "jump9806_4": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_5": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_2": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump14972_0": [
                "sharedStorage.isTrustedContractAddress(to)",
                "sharedStorage.isTrustedContractAddress(to)"
            ],
            "jump9806_0": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_1": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_8": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_9": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block11089": [
                "coinStorage.coinBalanceOf(to)"
            ],
            "jump9806_18": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_19": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_14": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_15": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_16": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9551_18": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump9806_10": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump14207": [
                "sharedStorage.isOwnerAddress(from)",
                "sharedStorage.isOwnerAddress(from)"
            ],
            "jump9806_12": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump9806_13": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "block10576_0": [
                "coinStorage.coinBalanceOf(sender)"
            ],
            "jump8182": [
                "coinStorage.totalSupply()",
                "coinStorage.totalSupply()"
            ],
            "jump9551_16": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump5342": [
                "coinStorage.coinBalanceOf(address(this))",
                "coinStorage.coinBalanceOf(address(this))"
            ],
            "jump11089_0": [
                "coinStorage.coinBalanceOf(to)",
                "coinStorage.coinBalanceOf(to)"
            ],
            "block9551_4": [
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump10213_0": [
                "coinStorage.coinBalanceOf(sender)",
                "coinStorage.coinBalanceOf(sender)"
            ],
            "jump11464_0": [
                "receiver.isDrivezyPrivateTokenAcceptable()",
                "receiver.isDrivezyPrivateTokenAcceptable()"
            ],
            "jump13494_0": [
                "sharedStorage.isOwnerAddress(to)",
                "sharedStorage.isOwnerAddress(to)"
            ],
            "jump9806_20": [
                "sharedStorage.isTrustedContractAddress(src)",
                "sharedStorage.isTrustedContractAddress(src)"
            ],
            "jump5540": [
                "coinStorage.setCoinBalance(address(this), safeAdd(coinStorage.coinBalanceOf(address(this)), amount))",
                "coinStorage.setCoinBalance(address(this), safeAdd(coinStorage.coinBalanceOf(address(this)), amount))"
            ],
            "block11464_0": [
                "receiver.isDrivezyPrivateTokenAcceptable()"
            ],
            "jump12283_1": [
                "sharedStorage.addApprovedAddress(addr)",
                "sharedStorage.addApprovedAddress(addr)"
            ],
            "jump11287": [
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))",
                "coinStorage.setCoinBalance(to, safeAdd(coinStorage.coinBalanceOf(to), amount))"
            ],
            "jump10576": [
                "coinStorage.coinBalanceOf(sender)",
                "coinStorage.coinBalanceOf(sender)"
            ],
            "jump7913": [
                "coin.transferFrom(receiver, address(this), amount)",
                "coin.transferFrom(receiver, address(this), amount)"
            ],
            "jump13748_0": [
                "sharedStorage.isApprovedAddress(to)",
                "sharedStorage.isApprovedAddress(to)"
            ],
            "jump3842": [
                "coinStorage.setCoinAllowance(from, sender, safeSub(coinStorage.coinAllowanceOf(sender, from), amount))",
                "coinStorage.setCoinAllowance(from, sender, safeSub(coinStorage.coinAllowanceOf(sender, from), amount))"
            ],
            "jump13494": [
                "sharedStorage.isOwnerAddress(to)",
                "sharedStorage.isOwnerAddress(to)"
            ],
            "block5540": [
                "coinStorage.setCoinBalance(address(this), safeAdd(coinStorage.coinBalanceOf(address(this)), amount))"
            ],
            "block13117": [
                "coinStorage.setCoinAllowance(sender, spender, amount)"
            ],
            "block4126": [
                "coinStorage.totalSupply()"
            ],
            "jump14717_0": [
                "sharedStorage.isOwnerAddress(to)",
                "sharedStorage.isOwnerAddress(to)"
            ],
            "jump9206": [
                "coinStorage.disallowTransferBetweenUsers()",
                "coinStorage.disallowTransferBetweenUsers()"
            ],
            "block14972": [
                "sharedStorage.isTrustedContractAddress(to)"
            ],
            "jump9551_13": [
                "sharedStorage.isOwnerAddress(src)",
                "sharedStorage.isOwnerAddress(src)"
            ],
            "jump11691_0": [
                "receiver.receiveToken(sender, amount)",
                "receiver.receiveToken(sender, amount)"
            ],
            "jump10774_0": [
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))",
                "coinStorage.setCoinBalance(sender, safeSub(coinStorage.coinBalanceOf(sender), amount))"
            ],
            "block9206": [
                "coinStorage.disallowTransferBetweenUsers()"
            ]
        }
    },
    "DrivezyPrivateCoin": {
        "function_list": [
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setImplementation(address)",
            "isAuthorized(address,bytes4)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setImplementation(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "setOwner(address)": [
                469,
                119
            ],
            "setImplementation(address)": [
                1421,
                361
            ],
            "totalSupply()": [
                2587,
                889
            ],
            "balanceOf(address)": [
                3388,
                929
            ],
            "transferFrom(address,address,uint256)": [
                579,
                163
            ],
            "allowance(address,address)": [
                4813,
                961
            ],
            "transfer(address,uint256)": [
                1233,
                317
            ]
        },
        "block_CALL_mapping": {
            "block4813": [
                "implementation.allowance(addr, spender)"
            ],
            "jump5424": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "block2040": [
                "implementation.approve(msg.sender, spender, amount)"
            ],
            "jump3388": [
                "implementation.balanceOf(addr)",
                "implementation.balanceOf(addr)"
            ],
            "jump4125": [
                "implementation.transfer(msg.sender, to, amount)",
                "implementation.transfer(msg.sender, to, amount)"
            ],
            "jump4813": [
                "implementation.allowance(addr, spender)",
                "implementation.allowance(addr, spender)"
            ],
            "block5424_1": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2587": [
                "implementation.totalSupply()",
                "implementation.totalSupply()"
            ],
            "block5424_0": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "block2954": [
                "implementation.transferFrom(msg.sender, from, to, amount)"
            ],
            "block5424": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump5424_0": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2040": [
                "implementation.approve(msg.sender, spender, amount)",
                "implementation.approve(msg.sender, spender, amount)"
            ],
            "jump5424_1": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2954": [
                "implementation.transferFrom(msg.sender, from, to, amount)",
                "implementation.transferFrom(msg.sender, from, to, amount)"
            ],
            "block3388": [
                "implementation.balanceOf(addr)"
            ],
            "block2587": [
                "implementation.totalSupply()"
            ],
            "block4125": [
                "implementation.transfer(msg.sender, to, amount)"
            ]
        }
    },
    "DrivezyPrivateDecemberCoin": {
        "function_list": [
            "totalSupply()",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "setImplementation(address)",
            "isAuthorized(address,bytes4)",
            "DSAuth()",
            "setOwner(address)",
            "setAuthority(DSAuthority)",
            "isAuthorized(address,bytes4)",
            "totalSupply()",
            "balanceOf(address)",
            "allowance(address,address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setImplementation(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "isAuthorized(address,bytes4)": {
                "argument": {
                    "sig": "bytes4"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "DSAuth()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setOwner(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            },
            "setAuthority(DSAuthority)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint8"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                368,
                97
            ],
            "setOwner(address)": [
                469,
                119
            ],
            "setImplementation(address)": [
                1421,
                361
            ],
            "totalSupply()": [
                2587,
                889
            ],
            "balanceOf(address)": [
                3388,
                929
            ],
            "transferFrom(address,address,uint256)": [
                579,
                163
            ],
            "allowance(address,address)": [
                4813,
                961
            ],
            "transfer(address,uint256)": [
                1233,
                317
            ]
        },
        "block_CALL_mapping": {
            "block4813": [
                "implementation.allowance(addr, spender)"
            ],
            "jump5424": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "block2040": [
                "implementation.approve(msg.sender, spender, amount)"
            ],
            "jump3388": [
                "implementation.balanceOf(addr)",
                "implementation.balanceOf(addr)"
            ],
            "jump4125": [
                "implementation.transfer(msg.sender, to, amount)",
                "implementation.transfer(msg.sender, to, amount)"
            ],
            "jump4813": [
                "implementation.allowance(addr, spender)",
                "implementation.allowance(addr, spender)"
            ],
            "block5424_1": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2587": [
                "implementation.totalSupply()",
                "implementation.totalSupply()"
            ],
            "block5424_0": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "block2954": [
                "implementation.transferFrom(msg.sender, from, to, amount)"
            ],
            "block5424": [
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump5424_0": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2040": [
                "implementation.approve(msg.sender, spender, amount)",
                "implementation.approve(msg.sender, spender, amount)"
            ],
            "jump5424_1": [
                "implementation.canCall(src, address(this), sig)",
                "implementation.canCall(src, address(this), sig)"
            ],
            "jump2954": [
                "implementation.transferFrom(msg.sender, from, to, amount)",
                "implementation.transferFrom(msg.sender, from, to, amount)"
            ],
            "block3388": [
                "implementation.balanceOf(addr)"
            ],
            "block2587": [
                "implementation.totalSupply()"
            ],
            "block4125": [
                "implementation.transfer(msg.sender, to, amount)"
            ]
        }
    }
}