block0(g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(0) = 128
	nop(PUSH1)
	s(1) = 64
	nop(PUSH1)
	l(l0) = s(0)
	nop(MSTORE)
	s(0) = 4
	nop(PUSH1)
	s(1) = calldatasize
	nop(CALLDATASIZE)
	call(jump0(s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(LT)
	nop(PUSH2)
	nop(JUMPI)

jump0(s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	lt(s(1), s(0))
	call(block791(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump0(s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	geq(s(1), s(0))
	call(block13(g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump13(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block892(s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))

jump13(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block65(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block13(g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(0) = 0
	nop(PUSH1)
	s(0) = calldataload
	nop(CALLDATALOAD)
	s(1) = 26959946667150639794667015087019630673637144422540572481103610249216
	nop(PUSH29)
	s(2) = s(0)
	s(0) = s(1)
	s(1) = s(2)
	nop(SWAP1)
	s(0) = s(1)/s(0)
	nop(DIV)
	s(1) = 4294967295
	nop(PUSH4)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = s(0)
	nop(DUP1)
	s(2) = 43523326
	nop(PUSH4)
	call(jump13(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump65(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block935(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump65(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block76(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block65(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 117300739
	nop(PUSH4)
	call(jump65(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block76(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 126867946
	nop(PUSH4)
	call(jump76(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump76(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1079(s(0),g(saleCap), l(l1), l(l0), callvalue))

jump76(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block87(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block87(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 157198259
	nop(PUSH4)
	call(jump87(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump87(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1122(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))

jump87(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block98(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block98(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 291230712
	nop(PUSH4)
	call(jump98(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump98(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1223(s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller, callvalue))

jump98(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block109(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block109(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 341740161
	nop(PUSH4)
	call(jump109(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump109(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1246(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump109(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block120(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump120(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1337(s(0),g(pool), l(l1), l(l0), callvalue))

jump120(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block131(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block120(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 384831835
	nop(PUSH4)
	call(jump120(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block131(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 404098525
	nop(PUSH4)
	call(jump131(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump131(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1424(s(0),g(totalSupply), l(l1), l(l0), callvalue))

jump131(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block142(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block142(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 599290589
	nop(PUSH4)
	call(jump142(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump142(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1467(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))

jump142(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, from, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block153(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump153(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1600(s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake))

jump153(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block164(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block153(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 725819751
	nop(PUSH4)
	call(jump153(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_stake, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump164(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1665(s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp))

jump164(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block175(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block164(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 727858464
	nop(PUSH4)
	call(jump164(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, guide, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block175(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 815215180
	nop(PUSH4)
	call(jump175(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump175(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1752(s(0),g(saleShare), l(l1), l(l0), callvalue))

jump175(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block186(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump186(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1801(s(0), l(l1), l(l0), callvalue))

jump186(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block197(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block186(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 826074471
	nop(PUSH4)
	call(jump186(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump197(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1850(s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide))

jump197(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block208(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block197(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 978839192
	nop(PUSH4)
	call(jump197(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, investment_guide, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block208(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1009216902
	nop(PUSH4)
	call(jump208(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump208(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1917(s(0),g(saleStartTimestamp), l(l1), l(l0), callvalue))

jump208(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block219(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block219(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1010690900
	nop(PUSH4)
	call(jump219(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump219(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block1960(s(0),g(contractCreatedTimestamp), l(l1), l(l0), callvalue))

jump219(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block230(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump230(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2003(s(0),g(distributedTeamStakes), l(l1), l(l0), callvalue))

jump230(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block241(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block230(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1102099661
	nop(PUSH4)
	call(jump230(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block241(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1219932749
	nop(PUSH4)
	call(jump241(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump241(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2046(s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump241(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block252(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block252(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1241804162
	nop(PUSH4)
	call(jump252(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump252(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2205(s(0),g(usdPerEther), l(l1), l(l0), callvalue))

jump252(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block263(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

block263(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1261541139
	nop(PUSH4)
	call(jump263(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump263(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2248(s(0),g(totalWithdrawn), l(l1), l(l0), callvalue))

jump263(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block274(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))

jump274(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2291(s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents))

jump274(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block285(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block274(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1285791392
	nop(PUSH4)
	call(jump274(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, n, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stake_price_us_cents, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block285(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1332382910
	nop(PUSH4)
	call(jump285(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump285(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2349(s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd))

jump285(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_pool_cap_usd, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block296(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

jump296(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2394(s(0),g(totalInvested), l(l1), l(l0), callvalue))

jump296(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block307(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block296(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1377218284
	nop(PUSH4)
	call(jump296(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump307(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2437(s(0),g(allowedAmountToTransferToPool), l(l1), l(l0), callvalue))

jump307(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block318(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block307(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1380287646
	nop(PUSH4)
	call(jump307(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block318(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1489992817
	nop(PUSH4)
	call(jump318(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump318(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2480(s(0),g(priceIsFrozen), g(owner), caller, callvalue))

jump318(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block329(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block329(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1537990683
	nop(PUSH4)
	call(jump329(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump329(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2503(s(0),g(distributedBountyStakes), l(l1), l(l0), callvalue))

jump329(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block340(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

jump340(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2546(s(0),g(allowedAmountTransferedToPoolTotal), l(l1), l(l0), callvalue))

jump340(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block351(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block340(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1631774607
	nop(PUSH4)
	call(jump340(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump351(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2589(s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue))

jump351(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block362(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block351(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1655964809
	nop(PUSH4)
	call(jump351(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump362(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2632(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key))

jump362(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block373(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block362(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1668414935
	nop(PUSH4)
	call(jump362(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, key, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block373(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1710999967
	nop(PUSH4)
	call(jump373(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump373(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2699(s(0),g(distributedSaleStakes), l(l1), l(l0), callvalue))

jump373(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block384(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))

block384(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1712882787
	nop(PUSH4)
	call(jump384(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump384(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2742(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))

jump384(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, subtractedValue, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block395(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block395(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1835839154
	nop(PUSH4)
	call(jump395(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump395(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2843(s(0),g(poolCapUSD), l(l1), l(l0), callvalue))

jump395(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block406(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump406(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2886(s(0),g(teamCap), l(l1), l(l0), callvalue))

jump406(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block417(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block406(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1837201307
	nop(PUSH4)
	call(jump406(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block417(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 1889567281
	nop(PUSH4)
	call(jump417(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump417(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block2929(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))

jump417(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block428(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block428(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2096180112
	nop(PUSH4)
	call(jump428(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump428(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3016(s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp))

jump428(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block439(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump439(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3039(s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump439(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block450(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block439(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2175762833
	nop(PUSH4)
	call(jump439(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block450(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2204014807
	nop(PUSH4)
	call(jump450(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump450(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3104(s(0),g(bonusShare), l(l1), l(l0), callvalue))

jump450(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block461(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block461(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2376452955
	nop(PUSH4)
	call(jump461(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump461(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3147(s(0),g(owner), l(l1), l(l0), callvalue))

jump461(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block472(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump472(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3234(s(0),g(supplyCap), l(l1), l(l0), callvalue))

jump472(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block483(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block472(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2406943440
	nop(PUSH4)
	call(jump472(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump483(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3277(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))

jump483(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block494(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block483(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2514000705
	nop(PUSH4)
	call(jump483(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block494(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2652944232
	nop(PUSH4)
	call(jump494(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump494(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3421(s(0),g(distributedBonusStakes), l(l1), l(l0), callvalue))

jump494(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block505(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block505(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2657483440
	nop(PUSH4)
	call(jump505(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump505(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3464(s(0),g(priceIsFrozen), l(l1), l(l0), callvalue))

jump505(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block516(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

block516(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2809539154
	nop(PUSH4)
	call(jump516(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump516(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3511(s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump516(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block527(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))

jump527(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	eq(s(2), s(1))
	call(block3623(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))

jump527(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	neq(s(2), s(1))
	call(block538(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

block527(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2835717307
	nop(PUSH4)
	call(jump527(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to, value))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump538(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3724(s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue))

jump538(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block549(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

block538(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 2942106344
	nop(PUSH4)
	call(jump538(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump549(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3767(s(0),g(investmentGuidesRewardsWithdrawn), l(l1), l(l0), callvalue))

jump549(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block560(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

block549(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3077589103
	nop(PUSH4)
	call(jump549(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(investmentGuidesRewardsWithdrawn), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block560(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3208526158
	nop(PUSH4)
	call(jump560(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump560(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3810(s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump560(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block571(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))

jump571(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	eq(s(2), s(1))
	call(block3833(s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to))

jump571(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	neq(s(2), s(1))
	call(block582(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block571(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3239337633
	nop(PUSH4)
	call(jump571(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(distributedBountyStakes), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, stakes, timestamp, to))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block582(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3258665819
	nop(PUSH4)
	call(jump582(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump582(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3910(s(0),g(bountyShare), l(l1), l(l0), callvalue))

jump582(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyShare), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block593(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block593(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3320591967
	nop(PUSH4)
	call(jump593(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump593(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block3959(s(0),g(transferedToPool), l(l1), l(l0), callvalue))

jump593(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block604(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

block604(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3331189630
	nop(PUSH4)
	call(jump604(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump604(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4008(s(0),g(saleEndTimestamp), l(l1), l(l0), callvalue))

jump604(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block615(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))

jump615(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4051(s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether))

jump615(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block626(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))

block615(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3446783044
	nop(PUSH4)
	call(jump615(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, new_usd_per_ether, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump626(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4096(s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))

jump626(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block637(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))

block626(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3611153955
	nop(PUSH4)
	call(jump626(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), addedValue, address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block637(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3644829301
	nop(PUSH4)
	call(jump637(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump637(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4197(s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei))

jump637(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, input_wei, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block648(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp))

jump648(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	eq(s(2), s(1))
	call(block4262(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))

jump648(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	neq(s(2), s(1))
	call(block659(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

block648(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3714247998
	nop(PUSH4)
	call(jump648(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, owner, pool, returndatasize, spender, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump659(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4381(s(0),g(bonusCap), l(l1), l(l0), callvalue))

jump659(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block670(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

block659(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3810917195
	nop(PUSH4)
	call(jump659(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block670(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3831928040
	nop(PUSH4)
	call(jump670(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump670(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4424(s(0),g(lastStakePriceUSCents), l(l1), l(l0), callvalue))

jump670(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block681(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))

block681(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3923860303
	nop(PUSH4)
	call(jump681(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump681(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4467(s(0),g(pool), g(owner), calldatasize, caller, callvalue, pool))

jump681(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, pool, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block692(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block692(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3933139710
	nop(PUSH4)
	call(jump692(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump692(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4534(s(0),g(teamShare), l(l1), l(l0), callvalue))

jump692(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block703(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block703(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3960570562
	nop(PUSH4)
	call(jump703(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump703(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4583(s(0),g(priceIsFrozen), g(owner), caller, callvalue))

jump703(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block714(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

jump714(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4606(s(0),g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))

jump714(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block725(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block714(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3989163952
	nop(PUSH4)
	call(jump714(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldataload, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block725(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 3991899101
	nop(PUSH4)
	call(jump725(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump725(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4671(s(0),g(teamStakesFrozen), l(l1), l(l0), callvalue))

jump725(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(teamStakesFrozen), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block736(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block736(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4099643040
	nop(PUSH4)
	call(jump736(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump736(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4718(s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))

jump736(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block747(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

block747(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4112546865
	nop(PUSH4)
	call(jump747(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump747(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4767(s(0),g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue))

jump747(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(businessPlannedPeriodDuration), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block758(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))

jump758(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4810(s(0),g(owner), calldatasize, caller, callvalue, new_owner))

jump758(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block769(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

block758(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4121032116
	nop(PUSH4)
	call(jump758(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, calldatasize, caller, callvalue, new_owner, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump769(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4877(s(0),g(bountyCap), l(l1), l(l0), callvalue))

jump769(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block780(s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

block769(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4212220401
	nop(PUSH4)
	call(jump769(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

block780(s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	s(1) = s(0)
	nop(DUP1)
	s(2) = 4262527254
	nop(PUSH4)
	call(jump780(s(2),s(1),s(0),g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(PUSH2)
	nop(JUMPI)

jump780(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block4920(s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))

jump780(s(2), s(1), s(0), g(transferedToPool), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block791_0(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump791(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(1), s(0))
	call(block851(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump791(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(1), s(0))
	call(block847())

block791(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(0) = and(s(1), s(0))
	nop(AND)
	s(1) = caller
	nop(CALLER)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	call(jump791(s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block847()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block851(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 0
	nop(PUSH1)
	s(1) = callvalue
	nop(CALLVALUE)
	call(jump851(s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump851(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(1), s(0))
	call(block866(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump851(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(1), s(0))
	call(block862())

block862()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block866(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 9
	nop(PUSH1)
	s(0) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(1) = timestamp
	nop(TIMESTAMP)
	call(jump866(s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump866(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(1), s(0))
	call(block882(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump866(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(1), s(0))
	call(block878())

block878()=>
	s(0) = 0
	nop(PUSH1)
	s(1) = s(0)
	nop(DUP1)
	nop(REVERT)

block882(g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(0) = 890
	nop(PUSH2)
	s(1) = 4943
	nop(PUSH2)
	call(block4943(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block890()=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump892(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block904(s(1), s(0),g(financePeriodsCount), l(l1), l(l0)))

jump892(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block900(s(1), s(0)))

block892(s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump892(s(2),s(1),s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block900(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block904(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 913
	nop(PUSH2)
	s(2) = 5614
	nop(PUSH2)
	call(block5614(s(1),s(0),g(financePeriodsCount), l(l1), l(l0)))
	nop(JUMP)

block913(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump935(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block947(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump935(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block943(s(1), s(0)))

block935(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump935(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block943(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block947(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 956
	nop(PUSH2)
	s(2) = 5620
	nop(PUSH2)
	call(block5620(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block956(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block993(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

block993(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump993(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump993(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block1020(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump993(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block1002(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block1002(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 993
	nop(PUSH2)
	call(block993(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block1020(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump1020(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1020(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block1065(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump1020(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block1040(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block1040(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block1065(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block1065(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1079(s(2), s(1), s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1091(s(1), s(0),g(saleCap), l(l1), l(l0)))

jump1079(s(2), s(1), s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1087(s(1), s(0)))

block1079(s(0), g(saleCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1079(s(2),s(1),s(0),g(saleCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1087(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1091(s(1), s(0), g(saleCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1100
	nop(PUSH2)
	s(2) = 5677
	nop(PUSH2)
	call(block5677(s(1),s(0),g(saleCap), l(l1), l(l0)))
	nop(JUMP)

block1100(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1122(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	eq(s(2), 0)
	call(block1134(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value))

jump1122(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	neq(s(2), 0)
	call(block1130(s(1), s(0)))

block1122(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1122(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1130(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1134(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1197
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 5683
	nop(PUSH2)
	call(block5683(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1197(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1223(s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller, callvalue)=>
	eq(s(2), 0)
	call(block1235(s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump1223(s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller, callvalue)=>
	neq(s(2), 0)
	call(block1231(s(1), s(0)))

block1223(s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1223(s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1231(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1235(s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1244
	nop(PUSH2)
	s(2) = 6131
	nop(PUSH2)
	call(block6131(s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(JUMP)

block1244(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block1246(s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1246(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1246(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block1258(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump1246(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block1254(s(1), s(0)))

block1254(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1258(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1311
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 7790
	nop(PUSH2)
	call(block7790(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block1311(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1337(s(0), g(pool), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1337(s(2),s(1),s(0),g(pool), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1337(s(2), s(1), s(0), g(pool), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1349(s(1), s(0),g(pool), l(l1), l(l0)))

jump1337(s(2), s(1), s(0), g(pool), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1345(s(1), s(0)))

block1345(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1349(s(1), s(0), g(pool), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1358
	nop(PUSH2)
	s(2) = 7822
	nop(PUSH2)
	call(block7822(s(1),s(0),g(pool), l(l1), l(l0)))
	nop(JUMP)

block1358(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1424(s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1424(s(2),s(1),s(0),g(totalSupply), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1424(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1436(s(1), s(0),g(totalSupply), l(l1), l(l0)))

jump1424(s(2), s(1), s(0), g(totalSupply), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1432(s(1), s(0)))

block1432(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1436(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1445
	nop(PUSH2)
	s(2) = 7860
	nop(PUSH2)
	call(block7860(s(1),s(0),g(totalSupply), l(l1), l(l0)))
	nop(JUMP)

block1445(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1467(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	eq(s(2), 0)
	call(block1479(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value))

jump1467(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	neq(s(2), 0)
	call(block1475(s(1), s(0)))

block1467(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1467(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, from, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1475(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1479(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, from, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1574
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = from
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = to
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(7) = value
	nop(CALLDATALOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 7866
	nop(PUSH2)
	call(block7866(s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1574(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump1600(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	eq(s(2), 0)
	call(block1612(s(1), s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_stake))

jump1600(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	neq(s(2), 0)
	call(block1608(s(1), s(0)))

block1600(s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1600(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_stake))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1608(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1612(s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_stake)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1643
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = input_stake
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8825
	nop(PUSH2)
	call(block8825_0(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block1643(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1665(s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1665(s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1665(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	eq(s(2), 0)
	call(block1677(s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, guide, timestamp))

jump1665(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, guide, timestamp)=>
	neq(s(2), 0)
	call(block1673(s(1), s(0)))

block1673(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1677(s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), calldatasize, guide, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1730
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = guide
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 8865
	nop(PUSH2)
	call(block8865(s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(JUMP)

block1730(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block1752(s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1752(s(2),s(1),s(0),g(saleShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1752(s(2), s(1), s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1764(s(1), s(0),g(saleShare), l(l1), l(l0)))

jump1752(s(2), s(1), s(0), g(saleShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1760(s(1), s(0)))

block1760(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1764(s(1), s(0), g(saleShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1773
	nop(PUSH2)
	s(2) = 9124
	nop(PUSH2)
	call(block9124(s(1),s(0),g(saleShare), l(l1), l(l0)))
	nop(JUMP)

block1773(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1801(s(0), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1801(s(2),s(1),s(0), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1801(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1813(s(1), s(0), l(l1), l(l0)))

jump1801(s(2), s(1), s(0), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1809(s(1), s(0)))

block1809(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1813(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1822
	nop(PUSH2)
	s(2) = 9143
	nop(PUSH2)
	call(block9143(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block1822(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump1850(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	eq(s(2), 0)
	call(block1862(s(1), s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, investment_guide))

jump1850(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	neq(s(2), 0)
	call(block1858(s(1), s(0)))

block1850(s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1850(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, investment_guide))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1858(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1862(s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, investment_guide)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1915
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = investment_guide
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9148
	nop(PUSH2)
	call(block9148(s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block1915(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump1917(s(2), s(1), s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1929(s(1), s(0),g(saleStartTimestamp), l(l1), l(l0)))

jump1917(s(2), s(1), s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1925(s(1), s(0)))

block1917(s(0), g(saleStartTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1917(s(2),s(1),s(0),g(saleStartTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block1925(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1929(s(1), s(0), g(saleStartTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1938
	nop(PUSH2)
	s(2) = 9433
	nop(PUSH2)
	call(block9433(s(1),s(0),g(saleStartTimestamp), l(l1), l(l0)))
	nop(JUMP)

block1938(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block1960(s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump1960(s(2),s(1),s(0),g(contractCreatedTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump1960(s(2), s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block1972(s(1), s(0),g(contractCreatedTimestamp), l(l1), l(l0)))

jump1960(s(2), s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block1968(s(1), s(0)))

block1968(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block1972(s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 1981
	nop(PUSH2)
	s(2) = 9439
	nop(PUSH2)
	call(block9439(s(1),s(0),g(contractCreatedTimestamp), l(l1), l(l0)))
	nop(JUMP)

block1981(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2003(s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2003(s(2),s(1),s(0),g(distributedTeamStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2003(s(2), s(1), s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2015(s(1), s(0),g(distributedTeamStakes), l(l1), l(l0)))

jump2003(s(2), s(1), s(0), g(distributedTeamStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2011(s(1), s(0)))

block2011(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2015(s(1), s(0), g(distributedTeamStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2024
	nop(PUSH2)
	s(2) = 9445
	nop(PUSH2)
	call(block9445(s(1),s(0),g(distributedTeamStakes), l(l1), l(l0)))
	nop(JUMP)

block2024(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2046(s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2046(s(2),s(1),s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2046(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block2058(s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump2046(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block2054(s(1), s(0)))

block2054(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2058(s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2111
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9451
	nop(PUSH2)
	call(block9451(s(2),s(1),s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block2111(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	nop(DUP5)
	s(10) = s(8)
	nop(DUP2)
	l(l2) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	l(l3) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l5) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(2)
	s(2) = s(8)
	s(8) = s(9)
	nop(SWAP6)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2205(s(2), s(1), s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2217(s(1), s(0),g(usdPerEther), l(l1), l(l0)))

jump2205(s(2), s(1), s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2213(s(1), s(0)))

block2205(s(0), g(usdPerEther), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2205(s(2),s(1),s(0),g(usdPerEther), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2213(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2217(s(1), s(0), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2226
	nop(PUSH2)
	s(2) = 9537
	nop(PUSH2)
	call(block9537(s(1),s(0),g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block2226(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2248(s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2248(s(2),s(1),s(0),g(totalWithdrawn), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2248(s(2), s(1), s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2260(s(1), s(0),g(totalWithdrawn), l(l1), l(l0)))

jump2248(s(2), s(1), s(0), g(totalWithdrawn), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2256(s(1), s(0)))

block2256(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2260(s(1), s(0), g(totalWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2269
	nop(PUSH2)
	s(2) = 9543
	nop(PUSH2)
	call(block9543(s(1),s(0),g(totalWithdrawn), l(l1), l(l0)))
	nop(JUMP)

block2269(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2291(s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	eq(s(2), 0)
	call(block2303(s(1), s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, n, stake_price_us_cents))

jump2291(s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	neq(s(2), 0)
	call(block2299(s(1), s(0)))

block2291(s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2291(s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, n, stake_price_us_cents))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2299(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2303(s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), calldatasize, caller, n, stake_price_us_cents)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2347
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = n
	nop(CALLDATALOAD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = stake_price_us_cents
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 9549
	nop(PUSH2)
	call(block9549(s(3),s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2347(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2349(s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2349(s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2349(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	eq(s(2), 0)
	call(block2361(s(1), s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_pool_cap_usd))

jump2349(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_pool_cap_usd)=>
	neq(s(2), 0)
	call(block2357(s(1), s(0)))

block2357(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2361(s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_pool_cap_usd)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2392
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_pool_cap_usd
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 9783
	nop(PUSH2)
	call(block9783(s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block2392(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2394(s(2), s(1), s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2406(s(1), s(0),g(totalInvested), l(l1), l(l0)))

jump2394(s(2), s(1), s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2402(s(1), s(0)))

block2394(s(0), g(totalInvested), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2394(s(2),s(1),s(0),g(totalInvested), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2402(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2406(s(1), s(0), g(totalInvested), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2415
	nop(PUSH2)
	s(2) = 9950
	nop(PUSH2)
	call(block9950(s(1),s(0),g(totalInvested), l(l1), l(l0)))
	nop(JUMP)

block2415(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2437(s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2449(s(1), s(0),g(allowedAmountToTransferToPool), l(l1), l(l0)))

jump2437(s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2445(s(1), s(0)))

block2437(s(0), g(allowedAmountToTransferToPool), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2437(s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2445(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2449(s(1), s(0), g(allowedAmountToTransferToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2458
	nop(PUSH2)
	s(2) = 9956
	nop(PUSH2)
	call(block9956(s(1),s(0),g(allowedAmountToTransferToPool), l(l1), l(l0)))
	nop(JUMP)

block2458(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2480(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block2492(s(1), s(0),g(priceIsFrozen), g(owner), caller))

jump2480(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block2488(s(1), s(0)))

block2480(s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2480(s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2488(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2492(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2501
	nop(PUSH2)
	s(2) = 9962
	nop(PUSH2)
	call(block9962(s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(JUMP)

block2501(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump2503(s(2), s(1), s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2515(s(1), s(0),g(distributedBountyStakes), l(l1), l(l0)))

jump2503(s(2), s(1), s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2511(s(1), s(0)))

block2503(s(0), g(distributedBountyStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2503(s(2),s(1),s(0),g(distributedBountyStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2511(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2515(s(1), s(0), g(distributedBountyStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2524
	nop(PUSH2)
	s(2) = 10083
	nop(PUSH2)
	call(block10083(s(1),s(0),g(distributedBountyStakes), l(l1), l(l0)))
	nop(JUMP)

block2524(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2546(s(2), s(1), s(0), g(allowedAmountTransferedToPoolTotal), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2558(s(1), s(0),g(allowedAmountTransferedToPoolTotal), l(l1), l(l0)))

jump2546(s(2), s(1), s(0), g(allowedAmountTransferedToPoolTotal), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2554(s(1), s(0)))

block2546(s(0), g(allowedAmountTransferedToPoolTotal), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2546(s(2),s(1),s(0),g(allowedAmountTransferedToPoolTotal), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2554(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2558(s(1), s(0), g(allowedAmountTransferedToPoolTotal), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2567
	nop(PUSH2)
	s(2) = 10089
	nop(PUSH2)
	call(block10089(s(1),s(0),g(allowedAmountTransferedToPoolTotal), l(l1), l(l0)))
	nop(JUMP)

block2567(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2589(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2601(s(1), s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0)))

jump2589(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2597(s(1), s(0)))

block2589(s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2589(s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2597(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2601(s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2610
	nop(PUSH2)
	s(2) = 10095
	nop(PUSH2)
	call(block10095(s(1),s(0),g(businessPlannedPeriodEndTimestamp), l(l1), l(l0)))
	nop(JUMP)

block2610(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2632(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	eq(s(2), 0)
	call(block2644(s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, key))

jump2632(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	neq(s(2), 0)
	call(block2640(s(1), s(0)))

block2632(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2632(s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, callvalue, key))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2640(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2644(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldatasize, caller, key)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2697
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = key
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 10101
	nop(PUSH2)
	call(block10101(s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(JUMP)

block2697(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block2699(s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2699(s(2),s(1),s(0),g(distributedSaleStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2699(s(2), s(1), s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2711(s(1), s(0),g(distributedSaleStakes), l(l1), l(l0)))

jump2699(s(2), s(1), s(0), g(distributedSaleStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2707(s(1), s(0)))

block2707(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2711(s(1), s(0), g(distributedSaleStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2720
	nop(PUSH2)
	s(2) = 10700
	nop(PUSH2)
	call(block10700(s(1),s(0),g(distributedSaleStakes), l(l1), l(l0)))
	nop(JUMP)

block2720(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block2742(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2742(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump2742(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	eq(s(2), 0)
	call(block2754(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue))

jump2742(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, spender, subtractedValue)=>
	neq(s(2), 0)
	call(block2750(s(1), s(0)))

block2750(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2754(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, spender, subtractedValue)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2817
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = subtractedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 10706
	nop(PUSH2)
	call(block10706(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block2817(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump2843(s(2), s(1), s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2855(s(1), s(0),g(poolCapUSD), l(l1), l(l0)))

jump2843(s(2), s(1), s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2851(s(1), s(0)))

block2843(s(0), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2843(s(2),s(1),s(0),g(poolCapUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2851(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2855(s(1), s(0), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2864
	nop(PUSH2)
	s(2) = 11363
	nop(PUSH2)
	call(block11363(s(1),s(0),g(poolCapUSD), l(l1), l(l0)))
	nop(JUMP)

block2864(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2886(s(2), s(1), s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block2898(s(1), s(0),g(teamCap), l(l1), l(l0)))

jump2886(s(2), s(1), s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block2894(s(1), s(0)))

block2886(s(0), g(teamCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2886(s(2),s(1),s(0),g(teamCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2894(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2898(s(1), s(0), g(teamCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2907
	nop(PUSH2)
	s(2) = 11369
	nop(PUSH2)
	call(block11369(s(1),s(0),g(teamCap), l(l1), l(l0)))
	nop(JUMP)

block2907(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump2929(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	eq(s(2), 0)
	call(block2941(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner))

jump2929(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	neq(s(2), 0)
	call(block2937(s(1), s(0)))

block2929(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump2929(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block2937(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block2941(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 2994
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11375
	nop(PUSH2)
	call(block11375(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block2994(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3016(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	eq(s(2), 0)
	call(block3028(s(1), s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))

jump3016(s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	neq(s(2), 0)
	call(block3024(s(1), s(0)))

block3016(s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3016(s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, callvalue, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3024(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3028(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3037
	nop(PUSH2)
	s(2) = 11448
	nop(PUSH2)
	call(block11448(s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))
	nop(JUMP)

block3037(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3039(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3051(s(1), s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump3039(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3047(s(1), s(0)))

block3039(s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3039(s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3047(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3051(s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3082
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11580
	nop(PUSH2)
	call(block11580(s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0)))
	nop(JUMP)

block3082(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3104(s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3104(s(2),s(1),s(0),g(bonusShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3104(s(2), s(1), s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3116(s(1), s(0),g(bonusShare), l(l1), l(l0)))

jump3104(s(2), s(1), s(0), g(bonusShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3112(s(1), s(0)))

block3112(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3116(s(1), s(0), g(bonusShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3125
	nop(PUSH2)
	s(2) = 11615
	nop(PUSH2)
	call(block11615(s(1),s(0),g(bonusShare), l(l1), l(l0)))
	nop(JUMP)

block3125(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3147(s(0), g(owner), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3147(s(2),s(1),s(0),g(owner), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3147(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3159(s(1), s(0),g(owner), l(l1), l(l0)))

jump3147(s(2), s(1), s(0), g(owner), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3155(s(1), s(0)))

block3155(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3159(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3168
	nop(PUSH2)
	s(2) = 11621
	nop(PUSH2)
	call(block11621(s(1),s(0),g(owner), l(l1), l(l0)))
	nop(JUMP)

block3168(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3234(s(2), s(1), s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3246(s(1), s(0),g(supplyCap), l(l1), l(l0)))

jump3234(s(2), s(1), s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3242(s(1), s(0)))

block3234(s(0), g(supplyCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3234(s(2),s(1),s(0),g(supplyCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3242(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3246(s(1), s(0), g(supplyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3255
	nop(PUSH2)
	s(2) = 11659
	nop(PUSH2)
	call(block11659(s(1),s(0),g(supplyCap), l(l1), l(l0)))
	nop(JUMP)

block3255(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3277(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3289(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump3277(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3285(s(1), s(0)))

block3277(s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3277(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3285(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3289(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3298
	nop(PUSH2)
	s(2) = 11665
	nop(PUSH2)
	call(block11665(s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3298(s(2), s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(3)
	nop(DUP3)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(4)
	nop(DUP3)
	l(l2) = s(6)
	nop(MSTORE)
	s(6) = s(2)
	nop(DUP4)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	nop(DUP2)
	s(8) = l(l1)
	nop(MLOAD)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(7) = l(l1)
	nop(MLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 0
	nop(PUSH1)
	call(block3335(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))

jump3335(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	geq(s(13), s(12))
	call(block3362(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

jump3335(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	lt(s(13), s(12))
	call(block3344(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0)))

block3335(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(8)
	nop(DUP4)
	s(13) = s(11)
	nop(DUP2)
	call(jump3335(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3344(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l4), l(l0))=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(12) = l(l4)
	nop(MLOAD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)+s(13)
	nop(ADD)
	l(l5) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 3335
	nop(PUSH2)
	call(block3335(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l0)))
	nop(JUMP)

block3362(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 31
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(6)
	nop(DUP1)
	call(jump3362(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l0)))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3362(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	eq(s(7), 0)
	call(block3407(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0)))

jump3362(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	neq(s(7), 0)
	call(block3382(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0)))

block3382(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l5), l(l0))=>
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	nop(DUP3)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(7)
	nop(DUP1)
	s(8) = l(l5)
	nop(MLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(9) = not(s(9))
	nop(NOT)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l5) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	call(block3407(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0)))

block3407(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3421(s(2), s(1), s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3433(s(1), s(0),g(distributedBonusStakes), l(l1), l(l0)))

jump3421(s(2), s(1), s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3429(s(1), s(0)))

block3421(s(0), g(distributedBonusStakes), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3421(s(2),s(1),s(0),g(distributedBonusStakes), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3429(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3433(s(1), s(0), g(distributedBonusStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3442
	nop(PUSH2)
	s(2) = 11722
	nop(PUSH2)
	call(block11722(s(1),s(0),g(distributedBonusStakes), l(l1), l(l0)))
	nop(JUMP)

block3442(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3464(s(2), s(1), s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3476(s(1), s(0),g(priceIsFrozen), l(l1), l(l0)))

jump3464(s(2), s(1), s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3472(s(1), s(0)))

block3464(s(0), g(priceIsFrozen), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3464(s(2),s(1),s(0),g(priceIsFrozen), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3472(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3476(s(1), s(0), g(priceIsFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3485
	nop(PUSH2)
	s(2) = 11728
	nop(PUSH2)
	call(block11728(s(1),s(0),g(priceIsFrozen), l(l1), l(l0)))
	nop(JUMP)

block3485(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3511(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block3523(s(1), s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize))

jump3511(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block3519(s(1), s(0)))

block3511(s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3511(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3519(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3523(s(1), s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3576
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 11747
	nop(PUSH2)
	call(block11747(s(2),s(1),s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block3576(s(5), s(4), s(3), s(2), s(1), s(0), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(2)
	nop(DUP6)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(3)
	nop(DUP5)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l2) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l3) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block3623(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3623(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3623(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	eq(s(2), 0)
	call(block3635(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value))

jump3623(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, callvalue, to, value)=>
	neq(s(2), 0)
	call(block3631(s(1), s(0)))

block3631(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3635(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), calldatasize, caller, to, value)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3698
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = value
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 11808
	nop(PUSH2)
	call(block11808(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block3698(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump3724(s(2), s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3736(s(1), s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0)))

jump3724(s(2), s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3732(s(1), s(0)))

block3724(s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3724(s(2),s(1),s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3732(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3736(s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3745
	nop(PUSH2)
	s(2) = 12563
	nop(PUSH2)
	call(block12563_0(s(1),s(0),g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0)))
	nop(JUMP)

block3745(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block3767(s(0), g(investmentGuidesRewardsWithdrawn), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3767(s(2),s(1),s(0),g(investmentGuidesRewardsWithdrawn), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump3767(s(2), s(1), s(0), g(investmentGuidesRewardsWithdrawn), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3779(s(1), s(0),g(investmentGuidesRewardsWithdrawn), l(l1), l(l0)))

jump3767(s(2), s(1), s(0), g(investmentGuidesRewardsWithdrawn), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3775(s(1), s(0)))

block3775(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3779(s(1), s(0), g(investmentGuidesRewardsWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3788
	nop(PUSH2)
	s(2) = 12639
	nop(PUSH2)
	call(block12639(s(1),s(0),g(investmentGuidesRewardsWithdrawn), l(l1), l(l0)))
	nop(JUMP)

block3788(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3810(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block3822(s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump3810(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block3818(s(1), s(0)))

block3810(s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3810(s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3818(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3822(s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3831
	nop(PUSH2)
	s(2) = 12645
	nop(PUSH2)
	call(block12645(s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(JUMP)

block3831(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3833(s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	eq(s(2), 0)
	call(block3845(s(1), s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, stakes, to))

jump3833(s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	neq(s(2), 0)
	call(block3841(s(1), s(0)))

block3833(s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3833(s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, stakes, to))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3841(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3845(s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), calldatasize, caller, stakes, to)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3908
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = to
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = stakes
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15162
	nop(PUSH2)
	call(block15162(s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block3908(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump3910(s(2), s(1), s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3922(s(1), s(0),g(bountyShare), l(l1), l(l0)))

jump3910(s(2), s(1), s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3918(s(1), s(0)))

block3910(s(0), g(bountyShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3910(s(2),s(1),s(0),g(bountyShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3918(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3922(s(1), s(0), g(bountyShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3931
	nop(PUSH2)
	s(2) = 15566
	nop(PUSH2)
	call(block15566(s(1),s(0),g(bountyShare), l(l1), l(l0)))
	nop(JUMP)

block3931(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump3959(s(2), s(1), s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block3971(s(1), s(0),g(transferedToPool), l(l1), l(l0)))

jump3959(s(2), s(1), s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block3967(s(1), s(0)))

block3959(s(0), g(transferedToPool), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump3959(s(2),s(1),s(0),g(transferedToPool), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block3967(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block3971(s(1), s(0), g(transferedToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 3980
	nop(PUSH2)
	s(2) = 15585
	nop(PUSH2)
	call(block15585(s(1),s(0),g(transferedToPool), l(l1), l(l0)))
	nop(JUMP)

block3980(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4008(s(2), s(1), s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4020(s(1), s(0),g(saleEndTimestamp), l(l1), l(l0)))

jump4008(s(2), s(1), s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4016(s(1), s(0)))

block4008(s(0), g(saleEndTimestamp), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4008(s(2),s(1),s(0),g(saleEndTimestamp), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4016(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4020(s(1), s(0), g(saleEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4029
	nop(PUSH2)
	s(2) = 15604
	nop(PUSH2)
	call(block15604(s(1),s(0),g(saleEndTimestamp), l(l1), l(l0)))
	nop(JUMP)

block4029(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4051(s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4051(s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4051(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	eq(s(2), 0)
	call(block4063(s(1), s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_usd_per_ether))

jump4051(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, callvalue, new_usd_per_ether)=>
	neq(s(2), 0)
	call(block4059(s(1), s(0)))

block4059(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4063(s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), calldatasize, caller, new_usd_per_ether)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4094
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_usd_per_ether
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 15610
	nop(PUSH2)
	call(block15610(s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller))
	nop(JUMP)

block4094(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4096(s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4096(s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4096(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	eq(s(2), 0)
	call(block4108(s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender))

jump4096(s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, callvalue, spender)=>
	neq(s(2), 0)
	call(block4104(s(1), s(0)))

block4104(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4108(s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), addedValue, calldatasize, caller, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4171
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = spender
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = addedValue
	nop(CALLDATALOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 15777
	nop(PUSH2)
	call(block15777(s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block4171(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(4)= eq(s(4), 0)
	nop(ISZERO)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4197(s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4197(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4197(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	eq(s(2), 0)
	call(block4209(s(1), s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_wei))

jump4197(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, callvalue, input_wei)=>
	neq(s(2), 0)
	call(block4205(s(1), s(0)))

block4205(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4209(s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0), calldatasize, input_wei)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4240
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = input_wei
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16491
	nop(PUSH2)
	call(block16491_1(s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(JUMP)

block4240(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

block4262(s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4262(s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4262(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	eq(s(2), 0)
	call(block4274(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender))

jump4262(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, callvalue, owner, spender)=>
	neq(s(2), 0)
	call(block4270(s(1), s(0)))

block4270(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4274(s(1), s(0), l(l7), l(l6), l(l1), l(l0), calldatasize, owner, spender)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4359
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(6) = spender
	nop(CALLDATALOAD)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(4) = 16540
	nop(PUSH2)
	call(block16540(s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4359(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	nop(DUP3)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(2) = 64
	nop(PUSH1)
	s(2) = l(l0)
	nop(MLOAD)
	s(3) = s(2)
	nop(DUP1)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(2) = s(3)-s(2)
	nop(SUB)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	nop(RETURN)

jump4381(s(2), s(1), s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4393(s(1), s(0),g(bonusCap), l(l1), l(l0)))

jump4381(s(2), s(1), s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4389(s(1), s(0)))

block4381(s(0), g(bonusCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4381(s(2),s(1),s(0),g(bonusCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4389(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4393(s(1), s(0), g(bonusCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4402
	nop(PUSH2)
	s(2) = 16675
	nop(PUSH2)
	call(block16675(s(1),s(0),g(bonusCap), l(l1), l(l0)))
	nop(JUMP)

block4402(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4424(s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4424(s(2),s(1),s(0),g(lastStakePriceUSCents), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4424(s(2), s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4436(s(1), s(0),g(lastStakePriceUSCents), l(l1), l(l0)))

jump4424(s(2), s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4432(s(1), s(0)))

block4432(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4436(s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4445
	nop(PUSH2)
	s(2) = 16681
	nop(PUSH2)
	call(block16681(s(1),s(0),g(lastStakePriceUSCents), l(l1), l(l0)))
	nop(JUMP)

block4445(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4467(s(2), s(1), s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	eq(s(2), 0)
	call(block4479(s(1), s(0),g(pool), g(owner), calldatasize, caller, pool))

jump4467(s(2), s(1), s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	neq(s(2), 0)
	call(block4475(s(1), s(0)))

block4467(s(0), g(pool), g(owner), calldatasize, caller, callvalue, pool)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4467(s(2),s(1),s(0),g(pool), g(owner), calldatasize, caller, callvalue, pool))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4475(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4479(s(1), s(0), g(pool), g(owner), calldatasize, caller, pool)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4532
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = pool
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16687
	nop(PUSH2)
	call(block16687(s(2),s(1),s(0),g(pool), g(owner), caller))
	nop(JUMP)

block4532(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4534(s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4534(s(2),s(1),s(0),g(teamShare), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4534(s(2), s(1), s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4546(s(1), s(0),g(teamShare), l(l1), l(l0)))

jump4534(s(2), s(1), s(0), g(teamShare), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4542(s(1), s(0)))

block4542(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4546(s(1), s(0), g(teamShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4555
	nop(PUSH2)
	s(2) = 16847
	nop(PUSH2)
	call(block16847(s(1),s(0),g(teamShare), l(l1), l(l0)))
	nop(JUMP)

block4555(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4583(s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4583(s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4583(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	eq(s(2), 0)
	call(block4595(s(1), s(0),g(priceIsFrozen), g(owner), caller))

jump4583(s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller, callvalue)=>
	neq(s(2), 0)
	call(block4591(s(1), s(0)))

block4591(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4595(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4604
	nop(PUSH2)
	s(2) = 16866
	nop(PUSH2)
	call(block16866(s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(JUMP)

block4604(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

jump4606(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	eq(s(2), 0)
	call(block4618(s(1), s(0),g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize))

jump4606(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	neq(s(2), 0)
	call(block4614(s(1), s(0)))

block4606(s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4606(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize, callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4614(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4618(s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0), calldataload, calldatasize)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4649
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = calldataload
	nop(CALLDATALOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 16987
	nop(PUSH2)
	call(block16987(s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0)))
	nop(JUMP)

block4649(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4671(s(2), s(1), s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4683(s(1), s(0),g(teamStakesFrozen), l(l1), l(l0)))

jump4671(s(2), s(1), s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4679(s(1), s(0)))

block4671(s(0), g(teamStakesFrozen), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4671(s(2),s(1),s(0),g(teamStakesFrozen), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4679(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4683(s(1), s(0), g(teamStakesFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4692
	nop(PUSH2)
	s(2) = 17022
	nop(PUSH2)
	call(block17022(s(1),s(0),g(teamStakesFrozen), l(l1), l(l0)))
	nop(JUMP)

block4692(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4718(s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4718(s(2),s(1),s(0),g(financePeriodsCount), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4718(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4730(s(1), s(0),g(financePeriodsCount), l(l1), l(l0)))

jump4718(s(2), s(1), s(0), g(financePeriodsCount), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4726(s(1), s(0)))

block4726(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4730(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4739
	nop(PUSH2)
	s(2) = 17041
	nop(PUSH2)
	call(block17041(s(1),s(0),g(financePeriodsCount), l(l1), l(l0)))
	nop(JUMP)

block4739(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

block4767(s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4767(s(2),s(1),s(0),g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4767(s(2), s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4779(s(1), s(0),g(businessPlannedPeriodDuration), l(l1), l(l0)))

jump4767(s(2), s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4775(s(1), s(0)))

block4775(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4779(s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4788
	nop(PUSH2)
	s(2) = 17060
	nop(PUSH2)
	call(block17060(s(1),s(0),g(businessPlannedPeriodDuration), l(l1), l(l0)))
	nop(JUMP)

block4788(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4810(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	eq(s(2), 0)
	call(block4822(s(1), s(0),g(owner), calldatasize, caller, new_owner))

jump4810(s(2), s(1), s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	neq(s(2), 0)
	call(block4818(s(1), s(0)))

block4810(s(0), g(owner), calldatasize, caller, callvalue, new_owner)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4810(s(2),s(1),s(0),g(owner), calldatasize, caller, callvalue, new_owner))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4818(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4822(s(1), s(0), g(owner), calldatasize, caller, new_owner)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4875
	nop(PUSH2)
	s(2) = 4
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = calldatasize
	nop(CALLDATASIZE)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(4)
	nop(DUP1)
	s(5) = new_owner
	nop(CALLDATALOAD)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	nop(POP)
	nop(POP)
	s(3) = 17066
	nop(PUSH2)
	call(block17066(s(2),s(1),s(0),g(owner), caller))
	nop(JUMP)

block4875(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4877(s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4877(s(2),s(1),s(0),g(bountyCap), l(l1), l(l0), callvalue))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4877(s(2), s(1), s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	eq(s(2), 0)
	call(block4889(s(1), s(0),g(bountyCap), l(l1), l(l0)))

jump4877(s(2), s(1), s(0), g(bountyCap), l(l1), l(l0), callvalue)=>
	neq(s(2), 0)
	call(block4885(s(1), s(0)))

block4885(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4889(s(1), s(0), g(bountyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4898
	nop(PUSH2)
	s(2) = 17226
	nop(PUSH2)
	call(block17226(s(1),s(0),g(bountyCap), l(l1), l(l0)))
	nop(JUMP)

block4898(s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(4)
	nop(DUP2)
	l(l1) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(3) = 64
	nop(PUSH1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(3)
	nop(DUP1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	s(3) = s(4)-s(3)
	nop(SUB)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(RETURN)

jump4920(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), 0)
	call(block4932(s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))

jump4920(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), 0)
	call(block4928(s(1), s(0)))

block4920(s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = callvalue
	nop(CALLVALUE)
	s(2) = s(1)
	nop(DUP1)
	call(jump4920(s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block4928(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block4932(s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	nop(POP)
	s(1) = 4941
	nop(PUSH2)
	s(2) = 17232
	nop(PUSH2)
	call(block17232(s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(JUMP)

block4941(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

block4943(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(priceIsFrozen)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump4943(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4943(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block4982(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4943(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block4974(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block4974(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(6) = 4981
	nop(PUSH2)
	s(7) = 17888
	nop(PUSH2)
	call(block17888(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block4981(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block4982(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4982(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 4990
	nop(PUSH2)
	s(7) = 18203
	nop(PUSH2)
	call(block18203(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4990(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 4999
	nop(PUSH2)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = 16491
	nop(PUSH2)
	call(block16491_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4999(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	call(jump4999(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4999(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5535(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump4999(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5011(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5011(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = 25
	nop(PUSH1)
	s(7) = g(distributedSaleStakes)
	nop(SLOAD)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = 28
	nop(PUSH1)
	s(6) = g(saleCap)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump5011(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5011(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5039(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump5011(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5029(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5029(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = callvalue
	nop(CALLVALUE)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	s(6) = 5060
	nop(PUSH2)
	call(block5060(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5039(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 25
	nop(PUSH1)
	s(6) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = 28
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(2)
	s(2) = s(6)
	s(6) = s(7)
	nop(SWAP4)
	nop(POP)
	s(6) = 5057
	nop(PUSH2)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 8825
	nop(PUSH2)
	call(block8825(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5057(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	nop(POP)
	call(block5060(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5060(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 5117
	nop(PUSH2)
	s(7) = 29
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(saleShare)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(teamShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(2)
	nop(DUP7)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = 18476
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block18476_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5117(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5446(s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5117(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5129(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5117(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(1)
	s(1) = s(6)
	s(6) = s(7)
	nop(SWAP5)
	nop(POP)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	call(jump5117(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5129(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = s(1)
	nop(DUP5)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = 3
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(owner)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(totalSupply)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(totalSupply) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	s(7) = 12
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	s(10) = g(distributedTeamStakes)
	nop(SLOAD)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	g(distributedTeamStakes) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 5281
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 18503
	nop(PUSH2)
	call(block18503(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), s(6))
	call(block5445(s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5281(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), s(6))
	call(block5434(s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5281(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 22
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump5281(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5434(s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(6) = 5444
	nop(PUSH2)
	s(7) = caller
	nop(CALLER)
	s(8) = s(2)
	nop(DUP6)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 19028
	nop(PUSH2)
	call(block19028(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5444(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5445(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5445(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5446(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5446(s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = 28
	nop(PUSH1)
	s(6) = g(saleCap)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	call(jump5446(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5446(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	leq(s(7), s(6))
	call(block5530(s(5), s(4), s(3), s(2), s(1), s(0)))

jump5446(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	gt(s(7), s(6))
	call(block5457(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump5457(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block5528(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5457(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block5519(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5457(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = callvalue
	nop(CALLVALUE)
	s(8) = s(9)-s(8)
	nop(SUB)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5457(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5519(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5528(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5530(s(5),s(4),s(3),s(2),s(1),s(0)))

block5530(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(6) = 5607
	nop(PUSH2)
	call(block5607(s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5535(s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 2300
	nop(PUSH2)
	s(8) = callvalue
	nop(CALLVALUE)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	s(9)= eq(s(9), 0)
	nop(ISZERO)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = 0
	nop(PUSH1)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(6)
	nop(DUP9)
	s(16) = s(7)
	nop(DUP9)
	s(10) = 1
	nop(CALL)
	s(11) = s(6)
	s(6) = s(10)
	s(10) = s(11)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(7) = s(6)
	nop(DUP1)
	call(jump5535(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5535(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(7), 0)
	call(block5605(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5535(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(7), 0)
	call(block5596(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5596(s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	nop(REVERT)

block5605(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5607(s(5),s(4),s(3),s(2),s(1),s(0)))

block5607(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block890())
	nop(JUMP)

block5614(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 39
	nop(PUSH1)
	s(2) = g(financePeriodsCount)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block913(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5620(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 14
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 31869382405762890339674382399805784031119402398705422713077115816609784528896
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block956(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block5677(s(1), s(0), g(saleCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 28
	nop(PUSH1)
	s(2) = g(saleCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1100(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block5683(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 5880
	nop(PUSH2)
	call(jump5683(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

jump5683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block5880(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5683(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block5773(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

jump5773(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block5879(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5773(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block5861(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block5773(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump5773(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5861(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block5879(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block5879(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block5880(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5880(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block5891(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump5880(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block5887(s(4), s(3), s(2), s(1), s(0)))

block5880(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump5880(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5887(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block5891(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block1197(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block6131(s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 1
	nop(PUSH1)
	s(5) = 15
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	nop(DUP2)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 255
	nop(PUSH1)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(8) = not(s(8))
	nop(NOT)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(4)
	nop(DUP4)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = or(s(7), s(6))
	nop(OR)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump6131(s(5),s(4),s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6131(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	eq(s(5), s(4))
	call(block7704(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump6131(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	neq(s(5), s(4))
	call(block6378(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block6378(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	call(jump6378(s(5),s(4),s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump6378(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	lt(s(5), s(4))
	call(block7045(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump6378(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	geq(s(5), s(4))
	call(block6519(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump6519(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	lt(s(5), s(4))
	call(block6967(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump6519(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	geq(s(5), s(4))
	call(block6803(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block6519(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = 0
	nop(PUSH1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	call(jump6519(s(5),s(4),s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block6803(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	s(4) = s(3)
	nop(DUP1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 7040
	nop(PUSH2)
	call(block7040(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(JUMP)

block6967(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block7040(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block7040(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 7703
	nop(PUSH2)
	call(block7703(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(JUMP)

block7045(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 3
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(2)
	nop(SLOAD)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(3)
	nop(SLOAD)
	call(jump7045(s(5),s(4),s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7045(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	lt(s(5), s(4))
	call(block7629(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

jump7045(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	geq(s(5), s(4))
	call(block7333(s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block7333(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(2)
	nop(SLOAD)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	gl = s(8)
	s(8) = fresh(3)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 7702
	nop(PUSH2)
	call(block7702(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))
	nop(JUMP)

block7629(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 1
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	call(block7702(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block7702(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	call(block7703(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block7703(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	call(block7704(s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool), l(l7), l(l6), caller))

block7704(s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l7), l(l6), caller)=>
	nop(JUMPDEST)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 16
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(allowedAmountToTransferToPool) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1244(s(0)))
	nop(JUMP)

block7790(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 15
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1311(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7822(s(1), s(0), g(pool), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 14
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(pool)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1358(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7860(s(1), s(0), g(totalSupply), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(2) = g(totalSupply)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1445(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block7866(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump7866(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(7), s(6))
	call(block7927(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump7866(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(7), s(6))
	call(block7923(s(5), s(4), s(3), s(2), s(1), s(0)))

block7923(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block7927(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump7927(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block8005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump7927(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block8001(s(5), s(4), s(3), s(2), s(1), s(0)))

block8001(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

jump8005(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block8144(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump8005(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block8140(s(5), s(4), s(3), s(2), s(1), s(0)))

block8005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(4)
	nop(DUP3)
	call(jump8005(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block8140(s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(6) = 0
	nop(PUSH1)
	s(7) = s(6)
	nop(DUP1)
	nop(REVERT)

block8144(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 8226
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 20130
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block20130_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block8226(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 8375
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(3)
	nop(DUP7)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 20155
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block20155_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block8375(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(3)
	nop(DUP6)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 8585
	nop(PUSH2)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 20130
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block20130_4(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block8585(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(9) = s(4)
	nop(DUP5)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	s(1) = s(5)
	s(5) = s(6)
	nop(SWAP4)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block1574(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8825(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 100
	nop(PUSH1)
	s(10) = 6
	nop(PUSH1)
	s(10) = g(usdPerEther)
	nop(SLOAD)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 1000000000000000000
	nop(PUSH8)
	s(11) = 30
	nop(PUSH1)
	s(11) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump8825(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8825(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(11), 0)
	call(block8857(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump8825(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(11), 0)
	call(block8856(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block8856(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8857(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block5057(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block8865(s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 3
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = 33
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(1)
	nop(SLOAD)
	s(6) = 1
	nop(PUSH1)
	s(7) = 37
	nop(PUSH1)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(financePeriodsCount)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1
	nop(PUSH1)
	s(8) = 9033
	nop(PUSH2)
	s(9) = 20185
	nop(PUSH2)
	call(block20185(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(JUMP)

block9033(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 33
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	nop(DUP2)
	call(jump9033(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9033(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	neq(s(8), 0)
	call(block9114(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump9033(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	eq(s(8), 0)
	call(block9113(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9113(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9114(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(4) = s(5)-s(4)
	nop(SUB)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1730(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9124(s(1), s(0), g(saleShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 29
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(saleShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block1773(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9143(s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(1)
	nop(DUP2)
	call(block1822(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9148(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block9240(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump9148(s(4), s(3), s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block9236(s(2), s(1), s(0)))

block9148(s(2), s(1), s(0), g(owner), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9148(s(4),s(3),s(2),s(1),s(0),g(owner), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9236(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9240(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 1
	nop(PUSH1)
	s(4) = 33
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 0
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 255
	nop(PUSH1)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 74690229460080076773977143971028755641734768986340892270864022976825899138355
	nop(PUSH32)
	s(4) = s(2)
	nop(DUP2)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l1) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	call(block1915(s(0)))
	nop(JUMP)

block9433(s(1), s(0), g(saleStartTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 23
	nop(PUSH1)
	s(2) = g(saleStartTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1938(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9439(s(1), s(0), g(contractCreatedTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 13
	nop(PUSH1)
	s(2) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block1981(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9445(s(1), s(0), g(distributedTeamStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 12
	nop(PUSH1)
	s(2) = g(distributedTeamStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2024(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9451(s(2), s(1), s(0), l(l7), l(l6), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 22
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	gl = s(3)
	s(3) = fresh(0)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(3)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 4
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(4)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(1)
	nop(DUP6)
	call(block2111(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block9537(s(1), s(0), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 6
	nop(PUSH1)
	s(2) = g(usdPerEther)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2226(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9543(s(1), s(0), g(totalWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 27
	nop(PUSH1)
	s(2) = g(totalWithdrawn)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2269(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump9549(s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block9641(s(3), s(2), s(1), s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9549(s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block9637(s(3), s(2), s(1), s(0)))

block9549(s(3), s(2), s(1), s(0), g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump9549(s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), g(owner), l(l6), l(l4), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block9637(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block9641(s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 38542286264638929965756872400505687355306226076748146400959412412322190655518
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 31
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	s(8) = g(targetPrice)
	nop(SLOAD)
	s(9) = s(7)
	nop(DUP2)
	call(jump9641(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9641(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(9), s(8))
	call(block9693(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))

jump9641(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(9), s(8))
	call(block9692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9692(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9693(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 0
	nop(PUSH1)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(9)
	nop(DUP2)
	l(l2) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 31
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(targetPrice)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump9693(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9693(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	lt(s(8), s(7))
	call(block9765(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6)))

jump9693(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l4), l(l2), l(l1), l(l0))=>
	geq(s(8), s(7))
	call(block9764(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block9764(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block9765(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l6))=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block2347(s(0)))
	nop(JUMP)

block9783(s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump9783(s(4),s(3),s(2),s(1),s(0),g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9783(s(4), s(3), s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block9875(s(2), s(1), s(0),g(poolCapUSD), l(l4), l(l1), l(l0)))

jump9783(s(4), s(3), s(2), s(1), s(0), g(poolCapUSD), g(owner), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block9871(s(2), s(1), s(0)))

block9871(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block9875(s(2), s(1), s(0), g(poolCapUSD), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 114194013262987755910992578155860030329241928304966195380937679144418034219059
	nop(PUSH32)
	s(4) = 5
	nop(PUSH1)
	s(4) = g(poolCapUSD)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 5
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(poolCapUSD) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block2392(s(0)))
	nop(JUMP)

block9950(s(1), s(0), g(totalInvested), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 26
	nop(PUSH1)
	s(2) = g(totalInvested)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2415(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9956(s(1), s(0), g(allowedAmountToTransferToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 16
	nop(PUSH1)
	s(2) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2458(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block9962(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump9962(s(3),s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump9962(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	eq(s(3), s(2))
	call(block10054(s(1), s(0),g(priceIsFrozen)))

jump9962(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	neq(s(3), s(2))
	call(block10050(s(1), s(0)))

block10050(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block10054(s(1), s(0), g(priceIsFrozen))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 32
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(priceIsFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(priceIsFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block2501(s(0)))
	nop(JUMP)

block10083(s(1), s(0), g(distributedBountyStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 19
	nop(PUSH1)
	s(2) = g(distributedBountyStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2524(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10089(s(1), s(0), g(allowedAmountTransferedToPoolTotal), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 17
	nop(PUSH1)
	s(2) = g(allowedAmountTransferedToPoolTotal)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2567(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10095(s(1), s(0), g(businessPlannedPeriodEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2610(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block10101(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 33
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	l(l6) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(3)
	nop(DUP2)
	l(l7) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump10101(s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump10101(s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(3), 0)
	call(block10192(s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump10101(s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(3), 0)
	call(block10188(s(2), s(1), s(0)))

block10188(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump10192(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block10349(s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump10192(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block10345(s(2), s(1), s(0)))

block10192(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump10192(s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10345(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

jump10349(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	leq(s(4), s(3))
	call(block10697(s(2), s(1), s(0)))

jump10349(s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	gt(s(4), s(3))
	call(block10554(s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

block10349(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 4
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	gs(1) = s(5)
	gs(2) = s(4)
	nop(SSTORE)
	nop(POP)
	s(3) = 0
	nop(PUSH1)
	s(4) = 22
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	call(jump10349(s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10554(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	s(3) = 10696
	nop(PUSH2)
	s(4) = caller
	nop(CALLER)
	s(5) = 22
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = 22
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(1)
	nop(SLOAD)
	s(7) = 19028
	nop(PUSH2)
	call(block19028_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block10696(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	call(block10697(s(2),s(1),s(0)))

block10697(s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block2697(s(0)))
	nop(JUMP)

block10700(s(1), s(0), g(distributedSaleStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 25
	nop(PUSH1)
	s(2) = g(distributedSaleStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2720(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump10706(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(7), s(6))
	call(block10979(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump10706(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(7), s(6))
	call(block10845(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

block10706(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(3)
	nop(DUP4)
	call(jump10706(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block10845(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	s(6) = 0
	nop(PUSH1)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	s(6) = 11127
	nop(PUSH2)
	call(block11127(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block10979(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 10998
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 20130
	nop(PUSH2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 4294967295
	nop(PUSH4)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(block20130_5(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block10998(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = s(6)
	nop(DUP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gs(1) = s(8)
	gs(2) = s(7)
	nop(SSTORE)
	nop(POP)
	call(block11127(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block11127(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(9) = 4
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(2)
	nop(DUP9)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	l(l1) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(LOG3)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block2817(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11363(s(1), s(0), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 5
	nop(PUSH1)
	s(2) = g(poolCapUSD)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2864(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11369(s(1), s(0), g(teamCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 10
	nop(PUSH1)
	s(2) = g(teamCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block2907(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11375(s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 2
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(4)
	nop(DUP2)
	l(l7) = s(5)
	nop(MSTORE)
	s(5) = 32
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block2994(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11448(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump11448(s(3),s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11448(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	eq(s(3), s(2))
	call(block11540(s(1), s(0),g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp))

jump11448(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(owner), g(teamStakesFrozen), caller, timestamp)=>
	neq(s(3), s(2))
	call(block11536(s(1), s(0)))

block11536(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block11540(s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	nop(JUMPDEST)
	s(2) = 9
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(3) = timestamp
	nop(TIMESTAMP)
	call(jump11540(s(3),s(2),s(1),s(0),g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11540(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	leq(s(3), s(2))
	call(block11578(s(1), s(0)))

jump11540(s(3), s(2), s(1), s(0), g(businessPlannedPeriodEndTimestamp), g(teamStakesFrozen), timestamp)=>
	gt(s(3), s(2))
	call(block11551(s(1), s(0),g(teamStakesFrozen)))

block11551(s(1), s(0), g(teamStakesFrozen))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(teamStakesFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(teamStakesFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block11578(s(1),s(0)))

block11578(s(1), s(0))=>
	nop(JUMPDEST)
	call(block3037(s(0)))
	nop(JUMP)

block11580(s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 31
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(targetPrice)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump11580(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(targetPrice), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11580(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block11595(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump11580(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(targetPrice), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block11594(s(4), s(3), s(2), s(1), s(0)))

block11594(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block11595(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3082(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11615(s(1), s(0), g(bonusShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 36
	nop(PUSH1)
	s(2) = g(bonusShare)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3125(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11621(s(1), s(0), g(owner), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3168(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11659(s(1), s(0), g(supplyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 7
	nop(PUSH1)
	s(2) = g(supplyCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3255(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11665(s(1), s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 64
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(3) = l(l0)
	nop(MLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(2)
	nop(DUP2)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 64
	nop(PUSH1)
	l(l0) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 2
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	l(l1) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 37218633419556665902672161853149578535905948287684913352831634630229035581440
	nop(PUSH32)
	s(5) = s(3)
	nop(DUP2)
	l(l4) = s(4)
	nop(MSTORE)
	nop(POP)
	s(3) = s(1)
	nop(DUP2)
	call(block3298(s(2),s(1),s(0), l(l5), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block11722(s(1), s(0), g(distributedBonusStakes), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 35
	nop(PUSH1)
	s(2) = g(distributedBonusStakes)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3442(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11728(s(1), s(0), g(priceIsFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 32
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(priceIsFrozen)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3485(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block11747(s(2), s(1), s(0), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 33
	nop(PUSH1)
	s(4) = 32
	nop(PUSH1)
	l(l7) = s(3)
	nop(MSTORE)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	l(l6) = s(3)
	nop(MSTORE)
	s(3) = 64
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(3) = sha3(s(4), s(3))
	nop(SHA3)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	gl = s(4)
	s(4) = fresh(0)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 255
	nop(PUSH1)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 1
	nop(PUSH1)
	s(4) = s(5)+s(4)
	nop(ADD)
	gl = s(4)
	s(4) = fresh(1)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 2
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(2)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 3
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	gl = s(6)
	s(6) = fresh(3)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(POP)
	s(6) = s(1)
	nop(DUP5)
	call(block3576(s(5),s(4),s(3),s(2),s(1),s(0), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

jump11808(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block12005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump11808(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block11898(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block11808(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 12005
	nop(PUSH2)
	call(jump11808(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

block11898(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump11898(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump11898(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block12004(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump11898(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block11986(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block11986(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block12004(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block12004(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block12005(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block12005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump12005(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block12016(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump12005(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block12012(s(4), s(3), s(2), s(1), s(0)))

block12012(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12016(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(2)
	nop(DUP4)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump12016(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12016(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), s(5))
	call(block12076(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump12016(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), s(5))
	call(block12072(s(4), s(3), s(2), s(1), s(0)))

block12072(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12076(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(3)
	nop(DUP3)
	call(jump12076(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12076(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(6), s(5))
	call(block12154(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump12076(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(6), s(5))
	call(block12150(s(4), s(3), s(2), s(1), s(0)))

block12150(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block12154(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 12236
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 20130
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block20130_6(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block12236(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 12385
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 2
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 20155
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block20155_2(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block12385(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block3698(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12563(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 12634
	nop(PUSH2)
	s(11) = 26
	nop(PUSH1)
	s(11) = g(totalInvested)
	nop(SLOAD)
	s(12) = 12620
	nop(PUSH2)
	s(13) = 1000000000000000000
	nop(PUSH8)
	s(14) = 12606
	nop(PUSH2)
	s(15) = 6
	nop(PUSH1)
	s(15) = g(usdPerEther)
	nop(SLOAD)
	s(16) = 5
	nop(PUSH1)
	s(16) = g(poolCapUSD)
	nop(SLOAD)
	s(17) = 18476
	nop(PUSH2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 4294967295
	nop(PUSH4)
	s(17) = and(s(18), s(17))
	nop(AND)
	call(block18476(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12606(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 20293
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block20293(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12620(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 20130
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20130(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12634(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block18214(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12639(s(1), s(0), g(investmentGuidesRewardsWithdrawn), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 18
	nop(PUSH1)
	s(2) = g(investmentGuidesRewardsWithdrawn)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block3788(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12645(s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 15
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump12645(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12645(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block12742(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump12645(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block12738(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12738(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

jump12742(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	gt(s(8), s(7))
	call(block12823(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump12742(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	leq(s(8), s(7))
	call(block12819(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block12742(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	call(jump12742(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block12819(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block12823(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 22
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(2)
	nop(SLOAD)
	call(jump12823(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump12823(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block13035(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump12823(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block13031(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13031(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(REVERT)

block13035(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	call(block13040(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

block13040(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 37
	nop(PUSH1)
	s(8) = 1
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(financePeriodsCount)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump13040(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13040(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block15155(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump13040(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block13070(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump13070(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(10), s(9))
	call(block13087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump13070(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(10), s(9))
	call(block13086(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13070(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	s(7) = 38
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	s(9) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(10) = s(8)
	nop(DUP2)
	call(jump13070(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13086(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block15142(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))

jump13087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block13106(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

block13087(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 0
	nop(PUSH1)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = timestamp
	nop(TIMESTAMP)
	call(jump13087(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block13147(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump13106(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block13146(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13106(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 37
	nop(PUSH1)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(financePeriodsCount)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(totalInvested)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump13106(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13146(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13147(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(totalInvested)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 26
	nop(PUSH1)
	s(7) = g(totalInvested)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 22
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 1
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump13147(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump13147(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block13235(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump13147(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block13234(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13234(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump13235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block13490(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump13235(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block13489(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block13235(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 22
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(1)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 29
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(saleShare)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 11
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(teamShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 22
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	gl = s(9)
	s(9) = fresh(2)
	nop(SLOAD)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump13235(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block13489(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block13490(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 13609
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = 3
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(owner)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 20130
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block20130_8(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block13609(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(owner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(6)
	nop(DUP1)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedTeamStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedTeamStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 13808
	nop(PUSH2)
	s(8) = s(5)
	nop(DUP3)
	s(9) = 2
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = caller
	nop(CALLER)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = 20130
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block20130_9(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block13808(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 13896
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 26
	nop(PUSH1)
	s(9) = g(totalInvested)
	nop(SLOAD)
	s(10) = 20130
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block20130_10(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block13896(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 26
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalInvested) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 13941
	nop(PUSH2)
	s(8) = s(6)
	nop(DUP2)
	s(9) = 13927
	nop(PUSH2)
	s(10) = s(5)
	nop(DUP5)
	s(11) = 0
	nop(PUSH1)
	s(11) = g(totalSupply)
	nop(SLOAD)
	s(12) = 20130
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block20130_11(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block13927(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 20130
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block20130_12(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

jump13941(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), s(7))
	call(block14760(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump13941(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), s(7))
	call(block14182(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

block13941(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalSupply) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 22
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 25
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedSaleStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedSaleStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(1)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump13941(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14182(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	s(7) = 1
	nop(PUSH1)
	s(8) = 37
	nop(PUSH1)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(financePeriodsCount)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 1
	nop(PUSH1)
	s(10) = s(4)
	nop(DUP6)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(8) = s(9)*s(8)
	nop(MUL)
	s(9) = s(7)
	nop(DUP2)
	call(jump14182(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump14182(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(9), 0)
	call(block14287(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump14182(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(9), 0)
	call(block14286(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block14286(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block14287(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = 33
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 22
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = caller
	nop(CALLER)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 4
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gl = s(11)
	s(11) = fresh(1)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(2)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 22
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 2
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	gl = s(7)
	s(7) = fresh(3)
	nop(SLOAD)
	s(8) = 35
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedBonusStakes)
	nop(SLOAD)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedBonusStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 2
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 3
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block14760(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump14760(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	eq(s(8), 0)
	call(block14990(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), l(l4), l(l3), l(l2), l(l1), l(l0), caller))

jump14760(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	neq(s(8), 0)
	call(block14981(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block14760(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 27
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(totalWithdrawn)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalWithdrawn) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump14760(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(totalWithdrawn), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block14981(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block14990(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), l(l4), l(l3), l(l2), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	nop(POP)
	s(7) = 29065665065941190794663224841002571248325211392503539961938724776095849587148
	nop(PUSH32)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(5)
	nop(DUP5)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 37
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(financePeriodsCount)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l1) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	l(l4) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	nop(DUP4)
	s(15) = s(13)
	nop(DUP2)
	l(l2) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l3) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(8)
	s(8) = s(13)
	s(13) = s(14)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG1)
	s(7) = 15155
	nop(PUSH2)
	call(block15155(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block15142(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 1
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(4)
	s(4) = s(8)
	s(8) = s(9)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	s(7) = 13040
	nop(PUSH2)
	call(block13040(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(distributedBonusStakes), g(saleShare), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize, timestamp))
	nop(JUMP)

block15155(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block3831(s(0)))
	nop(JUMP)

block15162(s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(5) = g(owner)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	s(5) = caller
	nop(CALLER)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	call(jump15162(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15162(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	eq(s(5), s(4))
	call(block15254(s(3), s(2), s(1), s(0),g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump15162(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0), caller)=>
	neq(s(5), s(4))
	call(block15250(s(3), s(2), s(1), s(0)))

block15250(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15254(s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 20
	nop(PUSH1)
	s(4) = g(bountyCap)
	nop(SLOAD)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 19
	nop(PUSH1)
	s(6) = g(distributedBountyStakes)
	nop(SLOAD)
	s(5) = s(6)+s(5)
	nop(ADD)
	call(jump15254(s(5),s(4),s(3),s(2),s(1),s(0),g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15254(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	leq(s(5), s(4))
	call(block15275(s(3), s(2), s(1), s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump15254(s(5), s(4), s(3), s(2), s(1), s(0), g(bountyCap), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	gt(s(5), s(4))
	call(block15271(s(3), s(2), s(1), s(0)))

block15271(s(3), s(2), s(1), s(0))=>
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	nop(REVERT)

block15275(s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 15357
	nop(PUSH2)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 2
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	gl = s(6)
	s(6) = fresh(0)
	nop(SLOAD)
	s(7) = 20155
	nop(PUSH2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 4294967295
	nop(PUSH4)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(block20155_3(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block15357(s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = 2
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	gs(1) = s(6)
	gs(2) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(totalSupply)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(totalSupply) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = s(3)
	nop(DUP1)
	s(5) = 19
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	s(8) = g(distributedBountyStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(6) = s(4)
	nop(DUP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	g(distributedBountyStakes) = s(5)
	nop(SSTORE)
	nop(POP)
	s(4) = 62614538958505596320647097984881409505025540992403589762143773726516554587899
	nop(PUSH32)
	s(5) = s(2)
	nop(DUP3)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(5)
	nop(DUP4)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l1) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(8)
	nop(DUP2)
	l(l4) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	call(block3908(s(0)))
	nop(JUMP)

block15566(s(1), s(0), g(bountyShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 21
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(bountyShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3931(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15585(s(1), s(0), g(transferedToPool), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 37
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(transferedToPool)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block3980(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15604(s(1), s(0), g(saleEndTimestamp), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 24
	nop(PUSH1)
	s(2) = g(saleEndTimestamp)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4029(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block15610(s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump15610(s(4),s(3),s(2),s(1),s(0),g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15610(s(4), s(3), s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	eq(s(4), s(3))
	call(block15702(s(2), s(1), s(0),g(usdPerEther), l(l4), l(l1), l(l0)))

jump15610(s(4), s(3), s(2), s(1), s(0), g(usdPerEther), g(owner), l(l4), l(l1), l(l0), caller)=>
	neq(s(4), s(3))
	call(block15698(s(2), s(1), s(0)))

block15698(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block15702(s(2), s(1), s(0), g(usdPerEther), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 108458020438957567819856154950935969306536107057257815563412500765568210918370
	nop(PUSH32)
	s(4) = 6
	nop(PUSH1)
	s(4) = g(usdPerEther)
	nop(SLOAD)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 64
	nop(PUSH1)
	s(6) = l(l0)
	nop(MLOAD)
	s(7) = s(6)
	nop(DUP1)
	s(8) = s(4)
	nop(DUP4)
	s(9) = s(7)
	nop(DUP2)
	l(l1) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(7)
	nop(DUP2)
	l(l4) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5) = 64
	nop(PUSH1)
	s(5) = l(l0)
	nop(MLOAD)
	s(6) = s(5)
	nop(DUP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(LOG1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 6
	nop(PUSH1)
	s(5) = s(3)
	nop(DUP2)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(usdPerEther) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4094(s(0)))
	nop(JUMP)

jump15777(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 1 )
	call(block15974(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump15777(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 1 )
	call(block15867(s(5), s(4), s(3), s(2), s(1), s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block15777(s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 15974
	nop(PUSH2)
	call(jump15777(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMPI)

block15867(s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump15867(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump15867(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(6), 0)
	call(block15973(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump15867(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(owner), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(6), 0)
	call(block15955(s(5), s(4), s(3), s(2), s(1), s(0),g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller))

block15955(s(5), s(4), s(3), s(2), s(1), s(0), g(teamStakesFrozen), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(POP)
	s(5) = 1
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(teamStakesFrozen)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	call(block15973(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

block15973(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(block15974(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump15974(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	neq(s(5), 0)
	call(block15985(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump15974(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	eq(s(5), 0)
	call(block15981(s(4), s(3), s(2), s(1), s(0)))

block15974(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	call(jump15974(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block15981(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block15985(s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(5) = 16128
	nop(PUSH2)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 4
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = caller
	nop(CALLER)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(2)
	nop(DUP7)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(8)
	nop(DUP2)
	l(l6) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(7)
	nop(DUP2)
	l(l7) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 0
	nop(PUSH1)
	s(7) = sha3(s(8), s(7))
	nop(SHA3)
	gl = s(7)
	s(7) = fresh(0)
	nop(SLOAD)
	s(8) = 20155
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block20155_4(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block16128(s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(6) = 4
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = caller
	nop(CALLER)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(2)
	nop(DUP6)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = s(7)
	nop(DUP2)
	l(l6) = s(8)
	nop(MSTORE)
	s(8) = 32
	nop(PUSH1)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	l(l7) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	gs(1) = s(7)
	gs(2) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = s(2)
	nop(DUP3)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = 63486140976153616755203102783360879283472101686154884697241723088393386309925
	nop(PUSH32)
	s(8) = 4
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(2)
	nop(DUP8)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	gl = s(8)
	s(8) = fresh(0)
	nop(SLOAD)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(10)
	nop(DUP2)
	l(l1) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = 64
	nop(PUSH1)
	s(9) = l(l0)
	nop(MLOAD)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(LOG3)
	s(5) = 1
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4171(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16491(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 30
	nop(PUSH1)
	s(10) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 100
	nop(PUSH1)
	s(13) = 6
	nop(PUSH1)
	s(13) = g(usdPerEther)
	nop(SLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump16491(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16491(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block16522(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16491(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block16521_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16521(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16522(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	nop(DUP2)
	call(jump16522(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16522(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block16532(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16522(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block16531_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16531(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16532(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block18219(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16540(s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = 0
	nop(PUSH1)
	s(5) = 4
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = s(6)
	nop(DUP2)
	l(l6) = s(7)
	nop(MSTORE)
	s(7) = 32
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(5)
	nop(DUP2)
	l(l7) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 0
	nop(PUSH1)
	s(5) = sha3(s(6), s(5))
	nop(SHA3)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	s(5) = s(1)
	s(1) = s(4)
	s(4) = s(5)
	nop(SWAP3)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block4359(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16675(s(1), s(0), g(bonusCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 34
	nop(PUSH1)
	s(2) = g(bonusCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4402(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16681(s(1), s(0), g(lastStakePriceUSCents), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 30
	nop(PUSH1)
	s(2) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4445(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16687(s(2), s(1), s(0), g(pool), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump16687(s(4),s(3),s(2),s(1),s(0),g(pool), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16687(s(4), s(3), s(2), s(1), s(0), g(pool), g(owner), caller)=>
	eq(s(4), s(3))
	call(block16779(s(2), s(1), s(0),g(pool)))

jump16687(s(4), s(3), s(2), s(1), s(0), g(pool), g(owner), caller)=>
	neq(s(4), s(3))
	call(block16775(s(2), s(1), s(0)))

block16775(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block16779(s(2), s(1), s(0), g(pool))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 14
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(pool)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(pool) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4532(s(0)))
	nop(JUMP)

block16847(s(1), s(0), g(teamShare), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 11
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(teamShare)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4555(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump16866(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	eq(s(3), s(2))
	call(block16958(s(1), s(0),g(priceIsFrozen)))

jump16866(s(3), s(2), s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	neq(s(3), s(2))
	call(block16954(s(1), s(0)))

block16866(s(1), s(0), g(priceIsFrozen), g(owner), caller)=>
	nop(JUMPDEST)
	s(2) = 3
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(owner)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = caller
	nop(CALLER)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	call(jump16866(s(3),s(2),s(1),s(0),g(priceIsFrozen), g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16954(s(1), s(0))=>
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	nop(REVERT)

block16958(s(1), s(0), g(priceIsFrozen))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 32
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(priceIsFrozen)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(6) = not(s(6))
	nop(NOT)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	s(6) = s(2)
	nop(DUP4)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(6)= eq(s(6), 0)
	nop(ISZERO)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(4) = or(s(5), s(4))
	nop(OR)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	g(priceIsFrozen) = s(3)
	nop(SSTORE)
	nop(POP)
	call(block4604(s(0)))
	nop(JUMP)

block16987(s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 38
	nop(PUSH1)
	s(4) = s(2)
	nop(DUP2)
	s(5) = s(3)
	nop(DUP2)
	s(5) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(6) = s(4)
	nop(DUP2)
	call(jump16987(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16987(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0))=>
	lt(s(6), s(5))
	call(block17002(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0)))

jump16987(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(guideInvestmentAttractedShareToPay), l(l6), l(l1), l(l0))=>
	geq(s(6), s(5))
	call(block17001(s(4), s(3), s(2), s(1), s(0)))

block17001(s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17002(s(4), s(3), s(2), s(1), s(0), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 0
	nop(PUSH1)
	l(l6) = s(4)
	nop(MSTORE)
	s(4) = 32
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(4) = sha3(s(5), s(4))
	nop(SHA3)
	s(3) = s(4)+s(3)
	nop(ADD)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(2)
	s(2) = s(4)
	s(4) = s(5)
	nop(SWAP2)
	nop(POP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	gl = s(2)
	s(2) = fresh(0)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4649(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17022(s(1), s(0), g(teamStakesFrozen), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 1
	nop(PUSH1)
	s(3) = 0
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(teamStakesFrozen)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4692(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17041(s(1), s(0), g(financePeriodsCount), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 37
	nop(PUSH1)
	s(3) = 1
	nop(PUSH1)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(3) = g(financePeriodsCount)
	nop(SLOAD)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(4) = 256
	nop(PUSH2)
	s(3) = s(4)^s(3)
	nop(EXP)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	s(2) = s(3)/s(2)
	nop(DIV)
	s(3) = 255
	nop(PUSH1)
	s(2) = and(s(3), s(2))
	nop(AND)
	s(3) = s(1)
	nop(DUP2)
	call(block4739(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block17060(s(1), s(0), g(businessPlannedPeriodDuration), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 8
	nop(PUSH1)
	s(2) = g(businessPlannedPeriodDuration)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4788(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump17066(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	eq(s(4), s(3))
	call(block17158(s(2), s(1), s(0),g(owner)))

jump17066(s(4), s(3), s(2), s(1), s(0), g(owner), caller)=>
	neq(s(4), s(3))
	call(block17154(s(2), s(1), s(0)))

block17066(s(2), s(1), s(0), g(owner), caller)=>
	nop(JUMPDEST)
	s(3) = 3
	nop(PUSH1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(4) = g(owner)
	nop(SLOAD)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(5) = 256
	nop(PUSH2)
	s(4) = s(5)^s(4)
	nop(EXP)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	s(3) = s(4)/s(3)
	nop(DIV)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(3) = and(s(4), s(3))
	nop(AND)
	s(4) = caller
	nop(CALLER)
	s(5) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(4) = and(s(5), s(4))
	nop(AND)
	call(jump17066(s(4),s(3),s(2),s(1),s(0),g(owner), caller))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17154(s(2), s(1), s(0))=>
	s(3) = 0
	nop(PUSH1)
	s(4) = s(3)
	nop(DUP1)
	nop(REVERT)

block17158(s(2), s(1), s(0), g(owner))=>
	nop(JUMPDEST)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 3
	nop(PUSH1)
	s(5) = 0
	nop(PUSH1)
	s(6) = 256
	nop(PUSH2)
	s(5) = s(6)^s(5)
	nop(EXP)
	s(6) = s(4)
	nop(DUP2)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	nop(DUP2)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(7) = not(s(7))
	nop(NOT)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(3)
	nop(DUP4)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = or(s(6), s(5))
	nop(OR)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	g(owner) = s(4)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	call(block4875(s(0)))
	nop(JUMP)

block17226(s(1), s(0), g(bountyCap), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 20
	nop(PUSH1)
	s(2) = g(bountyCap)
	nop(SLOAD)
	s(3) = s(1)
	nop(DUP2)
	call(block4898(s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

jump17232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	eq(s(6), s(5))
	call(block17329(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17232(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	neq(s(6), s(5))
	call(block17325(s(4), s(3), s(2), s(1), s(0)))

block17232(s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = 3
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(owner)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = caller
	nop(CALLER)
	s(7) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump17232(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), g(owner), l(l6), l(l4), l(l1), l(l0), address, balance, caller, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17325(s(4), s(3), s(2), s(1), s(0))=>
	s(5) = 0
	nop(PUSH1)
	s(6) = s(5)
	nop(DUP1)
	nop(REVERT)

block17329(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = s(4)
	s(4) = s(5)
	s(5) = s(6)
	nop(SWAP1)
	nop(POP)
	call(block17334(s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17334(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	gt(s(6), s(5))
	call(block17883(s(4), s(3), s(2), s(1), s(0)))

jump17334(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	leq(s(6), s(5))
	call(block17365(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block17334(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = 37
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(jump17334(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17365(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	s(5) = 38
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump17365(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17365(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block17382(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17365(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block17381(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17381(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17382(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = lt(s(6), s(5))
	nop(LT)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 17465
	nop(PUSH2)
	call(jump17382(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMPI)

jump17382(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(6), 1 )
	call(block17465(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17382(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(6), 1 )
	call(block17401(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17401(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(6), 0)
	call(block17464(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17401(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(6), 0)
	call(block17432(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block17401(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 37
	nop(PUSH1)
	s(6) = 1
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5)= eq(s(6), s(5))
	nop(EQ)
	s(6) = s(5)
	nop(DUP1)
	call(jump17401(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17432(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	lt(s(8), s(7))
	call(block17450(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17432(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	geq(s(8), s(7))
	call(block17449(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17432(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(POP)
	s(5) = 38
	nop(PUSH1)
	s(6) = s(4)
	nop(DUP2)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(7) = s(5)
	nop(DUP2)
	s(7) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump17432(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17449(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17450(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 0
	nop(PUSH1)
	l(l6) = s(6)
	nop(MSTORE)
	s(6) = 32
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(6) = sha3(s(7), s(6))
	nop(SHA3)
	s(5) = s(6)+s(5)
	nop(ADD)
	gl = s(5)
	s(5) = fresh(0)
	nop(SLOAD)
	s(6) = timestamp
	nop(TIMESTAMP)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block17464(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block17464(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block17465(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

block17465(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump17465(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17465(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	eq(s(5), 0)
	call(block17870(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))

jump17465(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	neq(s(5), 0)
	call(block17471(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump17471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(7), 0)
	call(block17520(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump17471(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(7), 0)
	call(block17519(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17471(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = 1
	nop(PUSH1)
	s(6) = 37
	nop(PUSH1)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(7) = g(financePeriodsCount)
	nop(SLOAD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 256
	nop(PUSH2)
	s(7) = s(8)^s(7)
	nop(EXP)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(6) = s(7)/s(6)
	nop(DIV)
	s(7) = 255
	nop(PUSH1)
	s(6) = and(s(7), s(6))
	nop(AND)
	s(5) = s(6)+s(5)
	nop(ADD)
	s(6) = 255
	nop(PUSH1)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 17
	nop(PUSH1)
	s(6) = g(allowedAmountTransferedToPoolTotal)
	nop(SLOAD)
	s(7) = 27
	nop(PUSH1)
	s(7) = g(totalWithdrawn)
	nop(SLOAD)
	s(8) = 26
	nop(PUSH1)
	s(8) = g(totalInvested)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(6) = s(7)-s(6)
	nop(SUB)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump17471(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17519(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17520(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(2)
	s(2) = s(5)
	s(5) = s(6)
	nop(SWAP3)
	nop(POP)
	s(5) = 17
	nop(PUSH1)
	s(5) = g(allowedAmountTransferedToPoolTotal)
	nop(SLOAD)
	s(6) = 39
	nop(PUSH1)
	s(6) = g(financePeriodsCount)
	nop(SLOAD)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(2)
	nop(DUP4)
	s(5) = gt(s(6), s(5))
	nop(GT)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 17545
	nop(PUSH2)
	call(jump17520(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMPI)

jump17520(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(6), 1 )
	call(block17545(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump17520(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(6), 1 )
	call(block17538(s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block17538(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 16
	nop(PUSH1)
	s(6) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	s(5) = gt(s(6), s(5))
	nop(GT)
	call(block17545(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block17545(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	call(jump17545(s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17545(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	eq(s(5), 0)
	call(block17857(s(4), s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool)))

jump17545(s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	neq(s(5), 0)
	call(block17551(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump17551(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(6), s(5))
	call(block17597(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

jump17551(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(6), s(5))
	call(block17562(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block17551(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = 0
	nop(PUSH1)
	s(6) = 16
	nop(PUSH1)
	s(6) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	call(jump17551(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17562(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = 16
	nop(PUSH1)
	s(5) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	s(5) = 16
	nop(PUSH1)
	s(5) = g(allowedAmountToTransferToPool)
	nop(SLOAD)
	s(6) = 17
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(allowedAmountTransferedToPoolTotal)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(allowedAmountTransferedToPoolTotal) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 0
	nop(PUSH1)
	s(6) = 16
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(allowedAmountToTransferToPool) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 17605
	nop(PUSH2)
	call(block17605(s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(JUMP)

block17597(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = 39
	nop(PUSH1)
	s(5) = g(financePeriodsCount)
	nop(SLOAD)
	s(6) = s(2)
	nop(DUP4)
	s(5) = s(6)-s(5)
	nop(SUB)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block17605(s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block17605(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	nop(JUMPDEST)
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(3)
	nop(DUP3)
	call(jump17605(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17605(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	leq(s(6), s(5))
	call(block17663(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))

jump17605(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	gt(s(6), s(5))
	call(block17637(s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize))

block17637(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), address, balance, returndatasize)=>
	s(5) = address
	nop(ADDRESS)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(5) = balance
	nop(BALANCE)
	s(6) = s(3)
	s(3) = s(5)
	s(5) = s(6)
	nop(SWAP2)
	nop(POP)
	call(block17663(s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))

block17663(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	nop(JUMPDEST)
	s(5) = s(3)
	nop(DUP2)
	s(6) = 39
	nop(PUSH1)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	s(9) = s(6)
	nop(DUP3)
	s(9) = g(financePeriodsCount)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(financePeriodsCount) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 14
	nop(PUSH1)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(6) = g(pool)
	nop(SLOAD)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 256
	nop(PUSH2)
	s(6) = s(7)^s(6)
	nop(EXP)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(5) = and(s(6), s(5))
	nop(AND)
	s(6) = 2300
	nop(PUSH2)
	s(7) = s(3)
	nop(DUP4)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = s(6)
	nop(DUP2)
	s(8)= eq(s(8), 0)
	nop(ISZERO)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = 0
	nop(PUSH1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(5)
	nop(DUP9)
	s(15) = s(6)
	nop(DUP9)
	s(9) = 1
	nop(CALL)
	s(10) = s(5)
	s(5) = s(9)
	s(9) = s(10)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(5)= eq(s(5), 0)
	nop(ISZERO)
	s(6) = s(5)
	nop(DUP1)
	call(jump17663(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17663(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	eq(s(6), 0)
	call(block17783(s(5), s(4), s(3), s(2), s(1), s(0),g(allowedAmountToTransferToPool), l(l4), l(l1), l(l0)))

jump17663(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(allowedAmountToTransferToPool), g(pool), l(l4), l(l1), l(l0), returndatasize)=>
	neq(s(6), 0)
	call(block17774(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block17774(s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(6) = returndatasize
	nop(RETURNDATASIZE)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(7) = returndatasize
	nop(RETURNDATASIZE)
	s(8) = 0
	nop(PUSH1)
	nop(REVERT)

block17783(s(5), s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	nop(POP)
	s(5) = 39485088300647221686824530596291872725412487376170972045504057697509214676812
	nop(PUSH32)
	s(6) = s(3)
	nop(DUP3)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 64
	nop(PUSH1)
	s(8) = l(l0)
	nop(MLOAD)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	l(l1) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l4) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7) = 64
	nop(PUSH1)
	s(7) = l(l0)
	nop(MLOAD)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(LOG1)
	call(block17857(s(4),s(3),s(2),s(1),s(0),g(allowedAmountToTransferToPool)))

block17857(s(4), s(3), s(2), s(1), s(0), g(allowedAmountToTransferToPool))=>
	nop(JUMPDEST)
	s(5) = 0
	nop(PUSH1)
	s(6) = 16
	nop(PUSH1)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	g(allowedAmountToTransferToPool) = s(6)
	nop(SSTORE)
	nop(POP)
	s(5) = 17883
	nop(PUSH2)
	call(block17883(s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block17870(s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(5) = s(4)
	nop(DUP1)
	s(6) = s(5)
	nop(DUP1)
	s(7) = 1
	nop(PUSH1)
	s(6) = s(7)+s(6)
	nop(ADD)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(5) = 17334
	nop(PUSH2)
	call(block17334(s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), g(totalWithdrawn), g(totalInvested), g(allowedAmountTransferedToPoolTotal), g(allowedAmountToTransferToPool), g(pool), l(l6), l(l4), l(l1), l(l0), address, balance, returndatasize, timestamp))
	nop(JUMP)

block17883(s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4941(s(0)))
	nop(JUMP)

jump17888(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(12), s(11))
	call(block17977(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17888(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(12), s(11))
	call(block17905(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17888(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 23
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	call(jump17888(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17905(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 31
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump17905(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17905(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block17920(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17905(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block17919(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17919(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17920(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block17949(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17920(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block17948(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17920(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 31
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump17920(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17948(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17949(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 13
	nop(PUSH1)
	s(11) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 23
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 18169
	nop(PUSH2)
	call(block18169(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

jump17977(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block17996(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17977(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block17990(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17977(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 23
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump17977(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17990(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(11) = 24
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	call(block17996(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17996(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(11), 0)
	call(block18074(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17996(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(11), 0)
	call(block18002(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17996(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump17996(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18002(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block18017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18002(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block18016(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18002(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 31
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump18002(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18016(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18017(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 31
	nop(PUSH1)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump18017(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18017(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block18046(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18017(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block18045(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18045(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18046(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 23
	nop(PUSH1)
	s(11) = g(saleStartTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 24
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = 18168
	nop(PUSH2)
	call(block18168(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

jump18074(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block18093(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18074(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block18087(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18074(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = 24
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	s(11)= eq(s(11), 0)
	nop(ISZERO)
	s(12) = s(11)
	nop(DUP1)
	call(jump18074(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18087(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(12) = timestamp
	nop(TIMESTAMP)
	s(11) = lt(s(12), s(11))
	nop(LT)
	call(block18093(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18093(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump18093(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18093(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(11), 0)
	call(block18167(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18093(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(11), 0)
	call(block18099(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18099(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(11) = 31
	nop(PUSH1)
	s(12) = 2
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump18099(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18099(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block18114(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18099(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block18113(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18113(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18114(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	s(11) = 31
	nop(PUSH1)
	s(12) = 3
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(13) = g(targetPrice)
	nop(SLOAD)
	s(14) = s(12)
	nop(DUP2)
	call(jump18114(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18114(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(14), s(13))
	call(block18143(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18114(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(14), s(13))
	call(block18142(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18142(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18143(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 0
	nop(PUSH1)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(11) = s(12)+s(11)
	nop(ADD)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	nop(POP)
	s(11) = 24
	nop(PUSH1)
	s(11) = g(saleEndTimestamp)
	nop(SLOAD)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	s(11) = 9
	nop(PUSH1)
	s(11) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	call(block18167(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18167(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block18168(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18168(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block18169(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18169(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	nop(DUP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(9)
	nop(DUP4)
	s(14) = timestamp
	nop(TIMESTAMP)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump18169(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18169(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block18188(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18169(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block18187(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18187(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18188(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 30
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(lastStakePriceUSCents) = s(12)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4981(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18203(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 18219
	nop(PUSH2)
	s(8) = 18214
	nop(PUSH2)
	s(9) = 12563
	nop(PUSH2)
	call(block12563(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18214(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 16491
	nop(PUSH2)
	call(block16491(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18219(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 25
	nop(PUSH1)
	s(8) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = 28
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(saleCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18287
	nop(PUSH2)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(saleShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 18273
	nop(PUSH2)
	s(10) = 100
	nop(PUSH1)
	s(11) = 28
	nop(PUSH1)
	s(11) = g(saleCap)
	nop(SLOAD)
	s(12) = 20293
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block20293_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18273(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 18476
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18476_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18287(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 7
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(supplyCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18351
	nop(PUSH2)
	s(8) = 100
	nop(PUSH1)
	s(9) = 18337
	nop(PUSH2)
	s(10) = 11
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(teamShare)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 7
	nop(PUSH1)
	s(11) = g(supplyCap)
	nop(SLOAD)
	s(12) = 20293
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block20293_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18337(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 18476
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18476_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18351(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 10
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(teamCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18399
	nop(PUSH2)
	s(8) = 100
	nop(PUSH1)
	s(9) = 18385
	nop(PUSH2)
	s(10) = 36
	nop(PUSH1)
	s(10) = g(bonusShare)
	nop(SLOAD)
	s(11) = 7
	nop(PUSH1)
	s(11) = g(supplyCap)
	nop(SLOAD)
	s(12) = 20293
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block20293_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18385(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 18476
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18476_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18399(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 34
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(bonusCap) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 18468
	nop(PUSH2)
	s(8) = 34
	nop(PUSH1)
	s(8) = g(bonusCap)
	nop(SLOAD)
	s(9) = 18454
	nop(PUSH2)
	s(10) = 10
	nop(PUSH1)
	s(10) = g(teamCap)
	nop(SLOAD)
	s(11) = 18440
	nop(PUSH2)
	s(12) = 28
	nop(PUSH1)
	s(12) = g(saleCap)
	nop(SLOAD)
	s(13) = 7
	nop(PUSH1)
	s(13) = g(supplyCap)
	nop(SLOAD)
	s(14) = 20130
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block20130_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18440(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 20130
	nop(PUSH2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 4294967295
	nop(PUSH4)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(block20130_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18454(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 20130
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block20130_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18468(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 20
	nop(PUSH1)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(bountyCap) = s(8)
	nop(SSTORE)
	nop(POP)
	call(block4990(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18476(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	call(jump18476(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block18490(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block18489_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18489(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18490(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12606(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18503(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	call(jump18503(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18503(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(11), s(10))
	call(block18518(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18503(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(11), s(10))
	call(block18514(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18514(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	nop(REVERT)

block18518(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 2
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(totalSupply)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalSupply) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 25
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	s(14) = g(distributedSaleStakes)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(distributedSaleStakes) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 18647
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 26
	nop(PUSH1)
	s(12) = g(totalInvested)
	nop(SLOAD)
	s(13) = 20155
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20155(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18647(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 26
	nop(PUSH1)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	g(totalInvested) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(8)
	nop(DUP2)
	s(11) = 22
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 0
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = 18818
	nop(PUSH2)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(1)
	nop(SLOAD)
	s(13) = 20155
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20155_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18818(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 22
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(7)
	nop(DUP6)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = s(11)
	nop(DUP2)
	l(l7) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = 0
	nop(PUSH1)
	s(11) = sha3(s(12), s(11))
	nop(SHA3)
	s(12) = 1
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	gs(1) = s(12)
	gs(2) = s(11)
	nop(SSTORE)
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 21
	nop(PUSH1)
	s(12) = 1
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(supplier)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5281(s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19028(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 100
	nop(PUSH1)
	s(13) = 19075
	nop(PUSH2)
	s(14) = 29
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(15) = g(saleShare)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 100
	nop(PUSH1)
	s(16) = 36
	nop(PUSH1)
	s(16) = g(bonusShare)
	nop(SLOAD)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = 18476
	nop(PUSH2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 4294967295
	nop(PUSH4)
	s(16) = and(s(17), s(16))
	nop(AND)
	call(block18476_4(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19075(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump19075(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19075(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block19086(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19075(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block19085(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19085(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block19086(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 34
	nop(PUSH1)
	s(12) = g(bonusCap)
	nop(SLOAD)
	s(13) = s(10)
	nop(DUP3)
	s(14) = 35
	nop(PUSH1)
	s(14) = g(distributedBonusStakes)
	nop(SLOAD)
	s(13) = s(14)+s(13)
	nop(ADD)
	call(jump19086(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19086(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(13), s(12))
	call(block19110(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19086(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(13), s(12))
	call(block19106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19106(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	nop(REVERT)

jump19110(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block19142(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19110(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block19141(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19110(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 100
	nop(PUSH1)
	s(13) = 37
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(14) = g(transferedToPool)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump19110(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19141(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump19142(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block19411(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19142(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block19229(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block19142(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 15
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(7)
	nop(DUP7)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	call(jump19142(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19229(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 22
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(7)
	nop(DUP10)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 4
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 19590
	nop(PUSH2)
	call(block19590(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19411(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 33
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = 22
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(7)
	nop(DUP10)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 4
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	call(block19590(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block19590(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 22
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 3
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(0)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 22
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 2
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(1)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 2
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(7)
	nop(DUP8)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	gl = s(16)
	s(16) = fresh(2)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gs(1) = s(14)
	gs(2) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 35
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(distributedBonusStakes)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(distributedBonusStakes) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	s(16) = g(totalSupply)
	nop(SLOAD)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(totalSupply) = s(13)
	nop(SSTORE)
	nop(POP)
	s(12) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(13) = s(7)
	nop(DUP6)
	s(14) = s(10)
	nop(DUP4)
	s(15) = 22
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(7)
	nop(DUP10)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(17) = and(s(18), s(17))
	nop(AND)
	s(18) = s(16)
	nop(DUP2)
	l(l6) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(15)
	nop(DUP2)
	l(l7) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(15) = sha3(s(16), s(15))
	nop(SHA3)
	s(16) = 4
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	gl = s(16)
	s(16) = fresh(3)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(11)
	nop(DUP5)
	s(17) = 64
	nop(PUSH1)
	s(17) = l(l0)
	nop(MLOAD)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(13)
	nop(DUP6)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l1) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(18)
	nop(DUP2)
	l(l4) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(15)
	nop(DUP4)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(19) = and(s(20), s(19))
	nop(AND)
	s(20) = s(18)
	nop(DUP2)
	l(l2) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(18)
	nop(DUP2)
	l(l3) = s(19)
	nop(MSTORE)
	s(19) = 32
	nop(PUSH1)
	s(18) = s(19)+s(18)
	nop(ADD)
	s(19) = s(13)
	s(13) = s(18)
	s(18) = s(19)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5444(s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20130(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	call(jump20130(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(15), s(14))
	call(block20144(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(15), s(14))
	call(block20143_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20143(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20144(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12634(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20155(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	call(jump20155(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(16), s(15))
	call(block20175(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20155(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(16), s(15))
	call(block20174_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20174(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20175(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18647(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20185(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	call(block20198(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))

block20198(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = 37
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(financePeriodsCount)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 255
	nop(PUSH1)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump20198(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20198(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	gt(s(13), s(12))
	call(block20285(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

jump20198(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	leq(s(13), s(12))
	call(block20229(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))

block20229(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 38
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(guideInvestmentAttractedShareToPay)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump20229(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20229(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	lt(s(15), s(14))
	call(block20249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))

jump20229(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	geq(s(15), s(14))
	call(block20248(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20248(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump20249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	geq(s(13), s(12))
	call(block20272(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))

jump20249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	lt(s(13), s(12))
	call(block20268(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0)))

block20249(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	call(jump20249(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20268(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	s(12) = 20285
	nop(PUSH2)
	call(block20285(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block20272(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp)=>
	nop(JUMPDEST)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = 20198
	nop(PUSH2)
	call(block20198(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(guideInvestmentAttractedShareToPay), l(l7), l(l6), l(l1), l(l0), timestamp))
	nop(JUMP)

block20285(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	nop(POP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	call(block9033(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0)))
	nop(JUMP)

block20293(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(17) = s(18)*s(17)
	nop(MUL)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	nop(POP)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(13)
	nop(DUP5)
	s(17)= eq(s(18), s(17))
	nop(EQ)
	s(18) = s(17)
	nop(DUP1)
	s(19) = 20326
	nop(PUSH2)
	call(jump20293(s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 1 )
	call(block20326(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 1 )
	call(block20311_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20311(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump20311(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block20323(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block20322(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20322(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20323(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block20326_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20326(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block20334(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block20333_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20333(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20334(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12620(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12563_0(s(1), s(0), g(totalInvested), g(usdPerEther), g(poolCapUSD), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = 12634
	nop(PUSH2)
	s(4) = 26
	nop(PUSH1)
	s(4) = g(totalInvested)
	nop(SLOAD)
	s(5) = 12620
	nop(PUSH2)
	s(6) = 1000000000000000000
	nop(PUSH8)
	s(7) = 12606
	nop(PUSH2)
	s(8) = 6
	nop(PUSH1)
	s(8) = g(usdPerEther)
	nop(SLOAD)
	s(9) = 5
	nop(PUSH1)
	s(9) = g(poolCapUSD)
	nop(SLOAD)
	s(10) = 18476
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18476_6(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12563_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 12634
	nop(PUSH2)
	s(12) = 26
	nop(PUSH1)
	s(12) = g(totalInvested)
	nop(SLOAD)
	s(13) = 12620
	nop(PUSH2)
	s(14) = 1000000000000000000
	nop(PUSH8)
	s(15) = 12606
	nop(PUSH2)
	s(16) = 6
	nop(PUSH1)
	s(16) = g(usdPerEther)
	nop(SLOAD)
	s(17) = 5
	nop(PUSH1)
	s(17) = g(poolCapUSD)
	nop(SLOAD)
	s(18) = 18476
	nop(PUSH2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	s(19) = 4294967295
	nop(PUSH4)
	s(18) = and(s(19), s(18))
	nop(AND)
	call(block18476_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12606_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 20293
	nop(PUSH2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 4294967295
	nop(PUSH4)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(block20293_3(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12606_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 20293
	nop(PUSH2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 4294967295
	nop(PUSH4)
	s(16) = and(s(17), s(16))
	nop(AND)
	call(block20293_4(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12620_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 20130
	nop(PUSH2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	s(7) = s(5)
	s(5) = s(6)
	s(6) = s(7)
	nop(SWAP1)
	s(7) = 4294967295
	nop(PUSH4)
	s(6) = and(s(7), s(6))
	nop(AND)
	call(block20130_7(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12620_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 20130
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block20130_13(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block12634_0(s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	s(3) = s(1)
	s(1) = s(2)
	s(2) = s(3)
	nop(SWAP1)
	call(block3745(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block12634_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	call(block18214_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump16491_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block16522_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16491_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block16521(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16491_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = 30
	nop(PUSH1)
	s(9) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(10) = 1000000000000000000
	nop(PUSH8)
	s(11) = 100
	nop(PUSH1)
	s(12) = 6
	nop(PUSH1)
	s(12) = g(usdPerEther)
	nop(SLOAD)
	s(13) = s(7)
	nop(DUP6)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump16491_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16491_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	neq(s(7), 0)
	call(block16522_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump16491_1(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	eq(s(7), 0)
	call(block16521_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16491_1(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 30
	nop(PUSH1)
	s(4) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 100
	nop(PUSH1)
	s(7) = 6
	nop(PUSH1)
	s(7) = g(usdPerEther)
	nop(SLOAD)
	s(8) = s(2)
	nop(DUP6)
	s(7) = s(8)*s(7)
	nop(MUL)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(7) = s(5)
	nop(DUP2)
	call(jump16491_1(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16491_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block16522_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16491_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block16521_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16491_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = 30
	nop(PUSH1)
	s(11) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(12) = 1000000000000000000
	nop(PUSH8)
	s(13) = 100
	nop(PUSH1)
	s(14) = 6
	nop(PUSH1)
	s(14) = g(usdPerEther)
	nop(SLOAD)
	s(15) = s(9)
	nop(DUP6)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump16491_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16491_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block16522_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16491_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block16521_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16491_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 30
	nop(PUSH1)
	s(10) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 100
	nop(PUSH1)
	s(13) = 6
	nop(PUSH1)
	s(13) = g(usdPerEther)
	nop(SLOAD)
	s(14) = s(8)
	nop(DUP6)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = s(11)
	nop(DUP2)
	call(jump16491_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16521_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16521_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16521_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16521_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump16522_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(11), 0)
	call(block16532_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16522_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(11), 0)
	call(block16531(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16522_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	nop(DUP2)
	call(jump16522_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16522_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block16532_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump16522_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block16531_1(s(5), s(4), s(3), s(2), s(1), s(0)))

block16522_1(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(5) = s(6)/s(5)
	nop(DIV)
	s(6) = s(4)
	nop(DUP2)
	call(jump16522_1(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16522_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block16532_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16522_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block16531_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16522_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	nop(DUP2)
	call(jump16522_2(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump16522_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block16532_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump16522_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block16531_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block16522_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	nop(DUP2)
	call(jump16522_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block16531_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16531_1(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16531_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16531_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block16532_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	nop(POP)
	call(block4999(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16532_1(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block4240(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block16532_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	call(block18219_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block16532_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block4999_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump17888_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(13), s(12))
	call(block17977_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17888_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(13), s(12))
	call(block17905_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17888_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 23
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	call(jump17888_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17905_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 31
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump17905_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17905_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block17920_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17905_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block17919_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17919_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump17920_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block17949_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17920_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block17948_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block17920_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 31
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump17920_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17948_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block17949_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 13
	nop(PUSH1)
	s(12) = g(contractCreatedTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 23
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 18169
	nop(PUSH2)
	call(block18169_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

jump17977_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block17996_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17977_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block17990_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17977_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 23
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump17977_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block17990_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	call(block17996_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block17996_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump17996_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump17996_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block18074_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump17996_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block18002_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18002_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block18017_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18002_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block18016_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18002_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 31
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump18002_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18016_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18017_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 31
	nop(PUSH1)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump18017_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18017_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block18046_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18017_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block18045_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18045_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18046_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 23
	nop(PUSH1)
	s(12) = g(saleStartTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = 18168
	nop(PUSH2)
	call(block18168_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block18074_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	s(12)= eq(s(12), 0)
	nop(ISZERO)
	s(13) = s(12)
	nop(DUP1)
	call(jump18074_0(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18074_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(13), 0)
	call(block18093_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18074_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(13), 0)
	call(block18087_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18087_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(POP)
	s(12) = 9
	nop(PUSH1)
	s(12) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(13) = timestamp
	nop(TIMESTAMP)
	s(12) = lt(s(13), s(12))
	nop(LT)
	call(block18093_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18093_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(12), 0)
	call(block18167_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18093_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(12), 0)
	call(block18099_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18093_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(jump18093_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18099_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block18114_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18099_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block18113_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18099_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(12) = 31
	nop(PUSH1)
	s(13) = 2
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump18099_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18113_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18114_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(8)
	s(8) = s(12)
	s(12) = s(13)
	nop(SWAP4)
	nop(POP)
	s(12) = 31
	nop(PUSH1)
	s(13) = 3
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(14) = g(targetPrice)
	nop(SLOAD)
	s(15) = s(13)
	nop(DUP2)
	call(jump18114_0(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18114_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(15), s(14))
	call(block18143_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18114_0(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(15), s(14))
	call(block18142_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18142_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18143_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 0
	nop(PUSH1)
	l(l6) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(12) = s(13)+s(12)
	nop(ADD)
	gl = s(12)
	s(12) = fresh(0)
	nop(SLOAD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	s(12) = 24
	nop(PUSH1)
	s(12) = g(saleEndTimestamp)
	nop(SLOAD)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	s(12) = 9
	nop(PUSH1)
	s(12) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	call(block18167_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18167_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block18168_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block18168_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	call(block18169_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump18169_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(14), 0)
	call(block18188_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18169_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(14), 0)
	call(block18187_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18169_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(11)
	nop(DUP2)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(9)
	nop(DUP5)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(10)
	nop(DUP4)
	s(15) = timestamp
	nop(TIMESTAMP)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(13) = s(14)*s(13)
	nop(MUL)
	s(14) = s(12)
	nop(DUP2)
	call(jump18169_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18187_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18188_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 30
	nop(PUSH1)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	g(lastStakePriceUSCents) = s(13)
	nop(SSTORE)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block4981_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18203_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = 18219
	nop(PUSH2)
	s(9) = 18214
	nop(PUSH2)
	s(10) = 12563
	nop(PUSH2)
	call(block12563_1(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18214_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 16491
	nop(PUSH2)
	call(block16491_2(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18219_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 25
	nop(PUSH1)
	s(9) = g(distributedSaleStakes)
	nop(SLOAD)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 28
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(saleCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 18287
	nop(PUSH2)
	s(9) = 29
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(saleShare)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 18273
	nop(PUSH2)
	s(11) = 100
	nop(PUSH1)
	s(12) = 28
	nop(PUSH1)
	s(12) = g(saleCap)
	nop(SLOAD)
	s(13) = 20293
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20293_5(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18273_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 18476
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block18476_8(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18287_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 7
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(supplyCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 18351
	nop(PUSH2)
	s(9) = 100
	nop(PUSH1)
	s(10) = 18337
	nop(PUSH2)
	s(11) = 11
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(teamShare)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 7
	nop(PUSH1)
	s(12) = g(supplyCap)
	nop(SLOAD)
	s(13) = 20293
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20293_6(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18337_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 18476
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block18476_9(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18351_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 10
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(teamCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 18399
	nop(PUSH2)
	s(9) = 100
	nop(PUSH1)
	s(10) = 18385
	nop(PUSH2)
	s(11) = 36
	nop(PUSH1)
	s(11) = g(bonusShare)
	nop(SLOAD)
	s(12) = 7
	nop(PUSH1)
	s(12) = g(supplyCap)
	nop(SLOAD)
	s(13) = 20293
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20293_7(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18385_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 18476
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block18476_10(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18399_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 34
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(bonusCap) = s(9)
	nop(SSTORE)
	nop(POP)
	s(8) = 18468
	nop(PUSH2)
	s(9) = 34
	nop(PUSH1)
	s(9) = g(bonusCap)
	nop(SLOAD)
	s(10) = 18454
	nop(PUSH2)
	s(11) = 10
	nop(PUSH1)
	s(11) = g(teamCap)
	nop(SLOAD)
	s(12) = 18440
	nop(PUSH2)
	s(13) = 28
	nop(PUSH1)
	s(13) = g(saleCap)
	nop(SLOAD)
	s(14) = 7
	nop(PUSH1)
	s(14) = g(supplyCap)
	nop(SLOAD)
	s(15) = 20130
	nop(PUSH2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 4294967295
	nop(PUSH4)
	s(15) = and(s(16), s(15))
	nop(AND)
	call(block20130_14(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18440_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 20130
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block20130_15(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18454_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 20130
	nop(PUSH2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 4294967295
	nop(PUSH4)
	s(11) = and(s(12), s(11))
	nop(AND)
	call(block20130_16(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18468_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 20
	nop(PUSH1)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	g(bountyCap) = s(9)
	nop(SSTORE)
	nop(POP)
	call(block4990_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump18476_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18490_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18489_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump18476_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18490_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18489_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_1(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump18476_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_10(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18490_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_10(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18489_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump18476_10(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18490_11(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18489_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_11(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump18476_11(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18476_12(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	call(jump18476_12(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block18490_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block18489_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump18476_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block18490_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block18489_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(7)
	nop(DUP5)
	s(13) = s(11)
	nop(DUP2)
	call(jump18476_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block18490_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block18489_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(18)
	nop(DUP2)
	call(jump18476_4(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(20), 0)
	call(block18490_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(20), 0)
	call(block18489(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(15)
	nop(DUP2)
	call(jump18476_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(17), 0)
	call(block18490_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump18476_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(17), 0)
	call(block18489_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_6(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(8)
	nop(DUP5)
	s(14) = s(12)
	nop(DUP2)
	call(jump18476_6(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(14), 0)
	call(block18490_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump18476_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(14), 0)
	call(block18489_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(16)
	nop(DUP5)
	s(22) = s(20)
	nop(DUP2)
	call(jump18476_7(s(22),s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(22), 0)
	call(block18490_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_7(s(22), s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(22), 0)
	call(block18489_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump18476_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18490_8(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_8(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18489_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18476_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump18476_8(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block18476_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(9)
	nop(DUP5)
	s(15) = s(13)
	nop(DUP2)
	call(jump18476_9(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18476_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block18490_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18476_9(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block18489_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18489_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_12(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_8(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18489_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block18490_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18287(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18351(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_10(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18399_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_11(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5117_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_12(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(20) = s(18)
	s(18) = s(19)
	s(19) = s(20)
	nop(SWAP1)
	nop(POP)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(17)
	s(17) = s(19)
	s(19) = s(20)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(18) = s(14)
	s(14) = s(17)
	s(17) = s(18)
	nop(SWAP3)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block19075_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18399(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block5117(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_4(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(POP)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block19075(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_5(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block19075_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block18490_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12606_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block18490_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(20) = s(21)/s(20)
	nop(DIV)
	s(21) = s(19)
	s(19) = s(20)
	s(20) = s(21)
	nop(SWAP1)
	nop(POP)
	s(20) = s(19)
	nop(DUP1)
	s(21) = s(18)
	s(18) = s(20)
	s(20) = s(21)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(19) = s(15)
	s(15) = s(18)
	s(18) = s(19)
	nop(SWAP3)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12606_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_8(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18287_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18490_9(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18351_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18503_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	call(jump18503_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump18503_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(12), s(11))
	call(block18518_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump18503_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(12), s(11))
	call(block18514_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block18514_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	nop(REVERT)

block18518_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 2
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(totalSupply)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalSupply) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 25
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	s(15) = g(distributedSaleStakes)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(distributedSaleStakes) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 18647
	nop(PUSH2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 26
	nop(PUSH1)
	s(13) = g(totalInvested)
	nop(SLOAD)
	s(14) = 20155
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block20155_5(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18647_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 26
	nop(PUSH1)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	g(totalInvested) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 0
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	gl = s(15)
	s(15) = fresh(0)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = 18818
	nop(PUSH2)
	s(12) = s(10)
	nop(DUP2)
	s(13) = 22
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 1
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(14) = 20155
	nop(PUSH2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 4294967295
	nop(PUSH4)
	s(14) = and(s(15), s(14))
	nop(AND)
	call(block20155_6(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block18818_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(8)
	nop(DUP6)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 1
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gs(1) = s(13)
	gs(2) = s(12)
	nop(SSTORE)
	nop(POP)
	s(11) = s(8)
	nop(DUP3)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 21
	nop(PUSH1)
	s(13) = 1
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(13) = g(supplier)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 100389287136786176327247604509743168900146139575972864366142685224231313322991
	nop(PUSH32)
	s(14) = s(9)
	nop(DUP5)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	l(l1) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG3)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5281_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19028_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = 100
	nop(PUSH1)
	s(10) = 19075
	nop(PUSH2)
	s(11) = 29
	nop(PUSH1)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(12) = g(saleShare)
	nop(SLOAD)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(13) = 256
	nop(PUSH2)
	s(12) = s(13)^s(12)
	nop(EXP)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 255
	nop(PUSH1)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 100
	nop(PUSH1)
	s(13) = 36
	nop(PUSH1)
	s(13) = g(bonusShare)
	nop(SLOAD)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(13) = 18476
	nop(PUSH2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 4294967295
	nop(PUSH4)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(block18476_5(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block19028_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(11)
	nop(DUP1)
	s(13) = 100
	nop(PUSH1)
	s(14) = 19075
	nop(PUSH2)
	s(15) = 29
	nop(PUSH1)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(16) = g(saleShare)
	nop(SLOAD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(17) = 256
	nop(PUSH2)
	s(16) = s(17)^s(16)
	nop(EXP)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 255
	nop(PUSH1)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 100
	nop(PUSH1)
	s(17) = 36
	nop(PUSH1)
	s(17) = g(bonusShare)
	nop(SLOAD)
	s(16) = s(17)*s(16)
	nop(MUL)
	s(17) = 18476
	nop(PUSH2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(15)
	s(15) = s(17)
	s(17) = s(18)
	nop(SWAP2)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 4294967295
	nop(PUSH4)
	s(17) = and(s(18), s(17))
	nop(AND)
	call(block18476_12(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19075_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(5)
	nop(DUP6)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump19075_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19075_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(11), 0)
	call(block19086_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump19075_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(11), 0)
	call(block19085_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump19075_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block19086_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19075_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block19085_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19075_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(9)
	nop(DUP6)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump19075_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19085_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block19085_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump19086_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	leq(s(10), s(9))
	call(block19110_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump19086_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	gt(s(10), s(9))
	call(block19106_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19086_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	s(9) = 34
	nop(PUSH1)
	s(9) = g(bonusCap)
	nop(SLOAD)
	s(10) = s(7)
	nop(DUP3)
	s(11) = 35
	nop(PUSH1)
	s(11) = g(distributedBonusStakes)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	call(jump19086_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19086_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	s(13) = 34
	nop(PUSH1)
	s(13) = g(bonusCap)
	nop(SLOAD)
	s(14) = s(11)
	nop(DUP3)
	s(15) = 35
	nop(PUSH1)
	s(15) = g(distributedBonusStakes)
	nop(SLOAD)
	s(14) = s(15)+s(14)
	nop(ADD)
	call(jump19086_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19086_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(14), s(13))
	call(block19110_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19086_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(bonusCap), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(14), s(13))
	call(block19106_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19106_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(REVERT)

block19106_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	nop(REVERT)

block19110_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = 100
	nop(PUSH1)
	s(10) = 37
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(transferedToPool)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 255
	nop(PUSH1)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	nop(DUP2)
	call(jump19110_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19110_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(11), 0)
	call(block19142_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump19110_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(11), 0)
	call(block19141_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump19110_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block19142_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19110_1(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block19141_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block19110_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 100
	nop(PUSH1)
	s(14) = 37
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(15) = g(transferedToPool)
	nop(SLOAD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = 256
	nop(PUSH2)
	s(15) = s(16)^s(15)
	nop(EXP)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(14) = s(15)/s(14)
	nop(DIV)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 255
	nop(PUSH1)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	nop(DUP2)
	call(jump19110_1(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19141_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block19141_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

jump19142_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	neq(s(9), 0)
	call(block19411_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

jump19142_0(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	eq(s(9), 0)
	call(block19229_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

block19142_0(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = 15
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(4)
	nop(DUP7)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(11) = and(s(12), s(11))
	nop(AND)
	s(12) = s(10)
	nop(DUP2)
	l(l6) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(9)
	nop(DUP2)
	l(l7) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = 0
	nop(PUSH1)
	s(9) = sha3(s(10), s(9))
	nop(SHA3)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	gl = s(10)
	s(10) = fresh(0)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	call(jump19142_0(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block19142_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = 15
	nop(PUSH1)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(8)
	nop(DUP7)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(15) = and(s(16), s(15))
	nop(AND)
	s(16) = s(14)
	nop(DUP2)
	l(l6) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = s(13)
	nop(DUP2)
	l(l7) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = 0
	nop(PUSH1)
	s(13) = sha3(s(14), s(13))
	nop(SHA3)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	gl = s(14)
	s(14) = fresh(0)
	nop(SLOAD)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(15) = 256
	nop(PUSH2)
	s(14) = s(15)^s(14)
	nop(EXP)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	s(13) = s(14)/s(13)
	nop(DIV)
	s(14) = 255
	nop(PUSH1)
	s(13) = and(s(14), s(13))
	nop(AND)
	call(jump19142_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump19142_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(13), 0)
	call(block19411_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump19142_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(13), 0)
	call(block19229_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block19229_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	s(9) = s(8)
	nop(DUP1)
	s(10) = 33
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 1
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 19590
	nop(PUSH2)
	call(block19590_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))
	nop(JUMP)

block19229_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(13) = s(12)
	nop(DUP1)
	s(14) = 33
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = 22
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(8)
	nop(DUP10)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = 4
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 1
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 19590
	nop(PUSH2)
	call(block19590_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block19411_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 33
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	call(block19590_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0)))

block19411_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 33
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = 22
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(8)
	nop(DUP10)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = 4
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 2
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	call(block19590_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block19590_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = 22
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 3
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(0)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 22
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 2
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(1)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 2
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(4)
	nop(DUP8)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(11)
	nop(DUP2)
	l(l6) = s(12)
	nop(MSTORE)
	s(12) = 32
	nop(PUSH1)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = s(10)
	nop(DUP2)
	l(l7) = s(11)
	nop(MSTORE)
	s(11) = 32
	nop(PUSH1)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = 0
	nop(PUSH1)
	s(10) = sha3(s(11), s(10))
	nop(SHA3)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	gl = s(13)
	s(13) = fresh(2)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	gs(1) = s(11)
	gs(2) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 35
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(distributedBonusStakes)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(distributedBonusStakes) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	s(13) = g(totalSupply)
	nop(SLOAD)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	g(totalSupply) = s(10)
	nop(SSTORE)
	nop(POP)
	s(9) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(10) = s(4)
	nop(DUP6)
	s(11) = s(7)
	nop(DUP4)
	s(12) = 22
	nop(PUSH1)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(4)
	nop(DUP10)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(14) = and(s(15), s(14))
	nop(AND)
	s(15) = s(13)
	nop(DUP2)
	l(l6) = s(14)
	nop(MSTORE)
	s(14) = 32
	nop(PUSH1)
	s(13) = s(14)+s(13)
	nop(ADD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = s(12)
	nop(DUP2)
	l(l7) = s(13)
	nop(MSTORE)
	s(13) = 32
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(12) = sha3(s(13), s(12))
	nop(SHA3)
	s(13) = 4
	nop(PUSH1)
	s(12) = s(13)+s(12)
	nop(ADD)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	gl = s(13)
	s(13) = fresh(3)
	nop(SLOAD)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(14) = 256
	nop(PUSH2)
	s(13) = s(14)^s(13)
	nop(EXP)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	s(12) = s(13)/s(12)
	nop(DIV)
	s(13) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(12) = and(s(13), s(12))
	nop(AND)
	s(13) = s(8)
	nop(DUP5)
	s(14) = 64
	nop(PUSH1)
	s(14) = l(l0)
	nop(MLOAD)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(10)
	nop(DUP6)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l1) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(15)
	nop(DUP2)
	l(l4) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(12)
	nop(DUP4)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l2) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	l(l3) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(10)
	s(10) = s(15)
	s(15) = s(16)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(11) = 64
	nop(PUSH1)
	s(11) = l(l0)
	nop(MLOAD)
	s(12) = s(11)
	nop(DUP1)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block10696(s(2),s(1),s(0)))
	nop(JUMP)

block19590_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBonusStakes), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(12)
	nop(DUP1)
	s(14) = 22
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 3
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(0)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 22
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 2
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(1)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 2
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(8)
	nop(DUP8)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(15)
	nop(DUP2)
	l(l6) = s(16)
	nop(MSTORE)
	s(16) = 32
	nop(PUSH1)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	s(16) = s(14)
	nop(DUP2)
	l(l7) = s(15)
	nop(MSTORE)
	s(15) = 32
	nop(PUSH1)
	s(14) = s(15)+s(14)
	nop(ADD)
	s(15) = 0
	nop(PUSH1)
	s(14) = sha3(s(15), s(14))
	nop(SHA3)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	gl = s(17)
	s(17) = fresh(2)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	gs(1) = s(15)
	gs(2) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 35
	nop(PUSH1)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	s(17) = g(distributedBonusStakes)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(distributedBonusStakes) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = s(11)
	nop(DUP2)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	s(17) = g(totalSupply)
	nop(SLOAD)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	g(totalSupply) = s(14)
	nop(SSTORE)
	nop(POP)
	s(13) = 106190483984544320851992182089162347111658405430666556957074112094424747200476
	nop(PUSH32)
	s(14) = s(8)
	nop(DUP6)
	s(15) = s(11)
	nop(DUP4)
	s(16) = 22
	nop(PUSH1)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(8)
	nop(DUP10)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(18) = and(s(19), s(18))
	nop(AND)
	s(19) = s(17)
	nop(DUP2)
	l(l6) = s(18)
	nop(MSTORE)
	s(18) = 32
	nop(PUSH1)
	s(17) = s(18)+s(17)
	nop(ADD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = s(16)
	nop(DUP2)
	l(l7) = s(17)
	nop(MSTORE)
	s(17) = 32
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(16) = sha3(s(17), s(16))
	nop(SHA3)
	s(17) = 4
	nop(PUSH1)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = 0
	nop(PUSH1)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	gl = s(17)
	s(17) = fresh(3)
	nop(SLOAD)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(18) = 256
	nop(PUSH2)
	s(17) = s(18)^s(17)
	nop(EXP)
	s(18) = s(16)
	s(16) = s(17)
	s(17) = s(18)
	nop(SWAP1)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(17) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(16) = and(s(17), s(16))
	nop(AND)
	s(17) = s(12)
	nop(DUP5)
	s(18) = 64
	nop(PUSH1)
	s(18) = l(l0)
	nop(MLOAD)
	s(19) = s(18)
	nop(DUP1)
	s(20) = s(14)
	nop(DUP6)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l1) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(15)
	nop(DUP5)
	s(21) = s(19)
	nop(DUP2)
	l(l4) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(16)
	nop(DUP4)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(20) = and(s(21), s(20))
	nop(AND)
	s(21) = s(19)
	nop(DUP2)
	l(l2) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	l(l3) = s(20)
	nop(MSTORE)
	s(20) = 32
	nop(PUSH1)
	s(19) = s(20)+s(19)
	nop(ADD)
	s(20) = s(14)
	s(14) = s(19)
	s(19) = s(20)
	nop(SWAP5)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(15) = 64
	nop(PUSH1)
	s(15) = l(l0)
	nop(MLOAD)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(LOG1)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block5444_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20130_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	call(jump20130_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(16), s(15))
	call(block20144_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(16), s(15))
	call(block20143_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	call(jump20130_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(14), s(13))
	call(block20144_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(14), s(13))
	call(block20143_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20130_10(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block20144_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump20130_10(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block20143_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_10(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump20130_10(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(14), s(13))
	call(block20144_11(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump20130_11(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(14), s(13))
	call(block20143_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_11(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(10)
	nop(DUP3)
	s(14) = s(11)
	nop(DUP3)
	call(jump20130_11(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_12(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block20144_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump20130_12(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block20143_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_12(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump20130_12(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(16), s(15))
	call(block20144_13(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_13(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(16), s(15))
	call(block20143_16(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_13(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(13)
	nop(DUP3)
	call(jump20130_13(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_14(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(17), s(16))
	call(block20144_14(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_14(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(17), s(16))
	call(block20143_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_14(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(14)
	nop(DUP3)
	call(jump20130_14(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20130_15(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(12)
	nop(DUP3)
	call(jump20130_15(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(15), s(14))
	call(block20144_15(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(15), s(14))
	call(block20143_14(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20130_16(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(13), s(12))
	call(block20144_16(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_16(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(13), s(12))
	call(block20143_13(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_16(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(10)
	nop(DUP3)
	call(jump20130_16(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20130_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump20130_2(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(12), s(11))
	call(block20144_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20130_2(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(12), s(11))
	call(block20143(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump20130_3(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block20144_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20130_3(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block20143_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_4(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump20130_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block20144_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20130_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block20143_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_5(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	call(jump20130_5(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(11), s(10))
	call(block20144_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20130_5(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(11), s(10))
	call(block20143_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_6(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(7)
	nop(DUP3)
	call(jump20130_6(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_6(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	leq(s(10), s(9))
	call(block20144_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20130_6(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	gt(s(10), s(9))
	call(block20143_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_7(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(6) = 0
	nop(PUSH1)
	s(7) = s(4)
	nop(DUP3)
	s(8) = s(5)
	nop(DUP3)
	call(jump20130_7(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	leq(s(8), s(7))
	call(block20144_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump20130_7(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	gt(s(8), s(7))
	call(block20143_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_8(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump20130_8(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_8(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block20144_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump20130_8(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block20143_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20130_9(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(9)
	nop(DUP3)
	call(jump20130_9(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20130_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	leq(s(12), s(11))
	call(block20144_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))

jump20130_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	gt(s(12), s(11))
	call(block20143_11(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20143_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_11(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_13(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_14(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_15(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_16(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20143_9(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20144_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18440(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18454(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_10(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13896(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block20144_11(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(13) = s(11)
	nop(DUP2)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	s(12) = s(13)
	s(13) = s(14)
	nop(SWAP1)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13927(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block20144_12(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13941(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block20144_13(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(13)
	nop(DUP2)
	s(16) = s(12)
	nop(DUP4)
	s(15) = s(16)-s(15)
	nop(SUB)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12634_1(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_14(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(14)
	nop(DUP2)
	s(17) = s(13)
	nop(DUP4)
	s(16) = s(17)-s(16)
	nop(SUB)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	s(12) = s(15)
	s(15) = s(16)
	nop(SWAP3)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18440_0(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_15(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(11)
	nop(DUP4)
	s(14) = s(15)-s(14)
	nop(SUB)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18454_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_16(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = s(10)
	nop(DUP2)
	s(13) = s(9)
	nop(DUP4)
	s(12) = s(13)-s(12)
	nop(SUB)
	s(13) = s(11)
	s(11) = s(12)
	s(12) = s(13)
	nop(SWAP1)
	nop(POP)
	s(12) = s(8)
	s(8) = s(11)
	s(11) = s(12)
	nop(SWAP3)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18468_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_2(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18468(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20144_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8226(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20144_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8585(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20144_5(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(8)
	nop(DUP2)
	s(11) = s(7)
	nop(DUP4)
	s(10) = s(11)-s(10)
	nop(SUB)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block10998(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20144_6(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(6)
	nop(DUP4)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12236(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20144_7(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(4)
	nop(DUP4)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = s(3)
	s(3) = s(6)
	s(6) = s(7)
	nop(SWAP3)
	s(7) = s(4)
	s(4) = s(6)
	s(6) = s(7)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12634_0(s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block20144_8(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13609(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block20144_9(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize)=>
	nop(JUMPDEST)
	s(11) = s(9)
	nop(DUP2)
	s(12) = s(8)
	nop(DUP4)
	s(11) = s(12)-s(11)
	nop(SUB)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block13808(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(financePeriodsCount), g(distributedBonusStakes), g(totalWithdrawn), g(totalInvested), g(distributedSaleStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, returndatasize))
	nop(JUMP)

block20155_0(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)+s(15)
	nop(ADD)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = s(11)
	nop(DUP4)
	s(16) = s(14)
	nop(DUP2)
	call(jump20155_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(16), s(15))
	call(block20175_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20155_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(16), s(15))
	call(block20174(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20155_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	nop(DUP3)
	s(12) = s(7)
	nop(DUP5)
	s(11) = s(12)+s(11)
	nop(ADD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	nop(POP)
	s(11) = s(7)
	nop(DUP4)
	s(12) = s(10)
	nop(DUP2)
	call(jump20155_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(12), s(11))
	call(block20175_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20155_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(12), s(11))
	call(block20174_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20155_2(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump20155_2(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block20175_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20155_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block20174_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20155_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	geq(s(10), s(9))
	call(block20175_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))

jump20155_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	lt(s(10), s(9))
	call(block20174_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20155_3(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(7)
	nop(DUP1)
	s(9) = s(6)
	nop(DUP3)
	s(10) = s(5)
	nop(DUP5)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	s(9) = s(5)
	nop(DUP4)
	s(10) = s(8)
	nop(DUP2)
	call(jump20155_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	geq(s(11), s(10))
	call(block20175_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller))

jump20155_4(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	lt(s(11), s(10))
	call(block20174_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20155_4(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(6)
	nop(DUP4)
	s(11) = s(9)
	nop(DUP2)
	call(jump20155_4(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block20175_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20155_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block20174_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20155_5(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump20155_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20155_6(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(12)
	nop(DUP5)
	s(16) = s(17)+s(16)
	nop(ADD)
	s(17) = s(15)
	s(15) = s(16)
	s(16) = s(17)
	nop(SWAP1)
	nop(POP)
	s(16) = s(12)
	nop(DUP4)
	s(17) = s(15)
	nop(DUP2)
	call(jump20155_6(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20155_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	geq(s(17), s(16))
	call(block20175_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20155_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	lt(s(17), s(16))
	call(block20174_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20174_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20174_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20175_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18818(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20175_1(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(11) = s(10)
	nop(DUP1)
	s(12) = s(9)
	s(9) = s(11)
	s(11) = s(12)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(10) = s(6)
	s(6) = s(9)
	s(9) = s(10)
	nop(SWAP3)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block8375(s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20175_2(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12385(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20175_3(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block15357(s(4),s(3),s(2),s(1),s(0),g(distributedBountyStakes), g(totalSupply), l(l7), l(l6), l(l4), l(l1), l(l0)))
	nop(JUMP)

block20175_4(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l7), l(l6), l(l1), l(l0), caller)=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block16128(s(5),s(4),s(3),s(2),s(1),s(0), l(l7), l(l6), l(l1), l(l0), caller))
	nop(JUMP)

block20175_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18647_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20175_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(15)
	nop(DUP1)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(15) = s(11)
	s(11) = s(14)
	s(14) = s(15)
	nop(SWAP3)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18818_0(s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20293_0(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 20326
	nop(PUSH2)
	call(jump20293_0(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block20326_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block20311_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block20326_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block20311_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 20326
	nop(PUSH2)
	call(jump20293_1(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

block20293_2(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(12) = 0
	nop(PUSH1)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(14) = s(15)*s(14)
	nop(MUL)
	s(15) = s(13)
	s(13) = s(14)
	s(14) = s(15)
	nop(SWAP1)
	nop(POP)
	s(14) = 0
	nop(PUSH1)
	s(15) = s(10)
	nop(DUP5)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	s(15) = s(14)
	nop(DUP1)
	s(16) = 20326
	nop(PUSH2)
	call(jump20293_2(s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 1 )
	call(block20326_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 1 )
	call(block20311(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_3(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(6)
	nop(DUP5)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	s(11) = s(10)
	nop(DUP1)
	s(12) = 20326
	nop(PUSH2)
	call(jump20293_3(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMPI)

jump20293_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(11), 1 )
	call(block20326_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump20293_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(11), 1 )
	call(block20311_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump20293_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(19), 1 )
	call(block20326_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_4(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(19), 1 )
	call(block20311_7(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = 0
	nop(PUSH1)
	s(17) = s(16)
	nop(DUP1)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(18) = s(19)*s(18)
	nop(MUL)
	s(19) = s(17)
	s(17) = s(18)
	s(18) = s(19)
	nop(SWAP1)
	nop(POP)
	s(18) = 0
	nop(PUSH1)
	s(19) = s(14)
	nop(DUP5)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	s(19) = s(18)
	nop(DUP1)
	s(20) = 20326
	nop(PUSH2)
	call(jump20293_4(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block20326_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block20311_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_5(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 20326
	nop(PUSH2)
	call(jump20293_5(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block20326_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block20311_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_6(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 20326
	nop(PUSH2)
	call(jump20293_6(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20293_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(16), 1 )
	call(block20326_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20293_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(16), 1 )
	call(block20311_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20293_7(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(13) = 0
	nop(PUSH1)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(15) = s(16)*s(15)
	nop(MUL)
	s(16) = s(14)
	s(14) = s(15)
	s(15) = s(16)
	nop(SWAP1)
	nop(POP)
	s(15) = 0
	nop(PUSH1)
	s(16) = s(11)
	nop(DUP5)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	s(16) = s(15)
	nop(DUP1)
	s(17) = 20326
	nop(PUSH2)
	call(jump20293_7(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMPI)

jump20311_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block20323_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_0(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block20322_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump20311_0(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(17), 0)
	call(block20323_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_1(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(17), 0)
	call(block20322_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(14) = s(11)
	nop(DUP3)
	s(15) = s(10)
	nop(DUP5)
	s(16) = s(13)
	nop(DUP3)
	s(17) = s(15)
	nop(DUP2)
	call(jump20311_1(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_2(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(20), 0)
	call(block20323_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_2(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(20), 0)
	call(block20322_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_2(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(13)
	nop(DUP5)
	s(19) = s(16)
	nop(DUP3)
	s(20) = s(18)
	nop(DUP2)
	call(jump20311_2(s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(13), 0)
	call(block20323_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump20311_3(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(13), 0)
	call(block20322_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(POP)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(6)
	nop(DUP5)
	s(12) = s(9)
	nop(DUP3)
	s(13) = s(11)
	nop(DUP2)
	call(jump20311_3(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block20323_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block20322_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_4(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump20311_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block20323_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_5(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block20322_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump20311_5(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20311_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(15) = s(12)
	nop(DUP3)
	s(16) = s(11)
	nop(DUP5)
	s(17) = s(14)
	nop(DUP3)
	s(18) = s(16)
	nop(DUP2)
	call(jump20311_6(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20311_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block20323_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_6(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block20322_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20311_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(21), 0)
	call(block20323_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20311_7(s(21), s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(21), 0)
	call(block20322_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20311_7(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(POP)
	s(18) = s(15)
	nop(DUP3)
	s(19) = s(14)
	nop(DUP5)
	s(20) = s(17)
	nop(DUP3)
	s(21) = s(19)
	nop(DUP2)
	call(jump20311_7(s(21),s(20),s(19),s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20322_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20322_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20323_0(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block20326_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_1(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(16)/s(15)
	nop(DIV)
	s(14)= eq(s(15), s(14))
	nop(EQ)
	call(block20326_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_2(s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(19)/s(18)
	nop(DIV)
	s(17)= eq(s(18), s(17))
	nop(EQ)
	call(block20326(s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_3(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(11) = s(12)/s(11)
	nop(DIV)
	s(10)= eq(s(11), s(10))
	nop(EQ)
	call(block20326_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))

block20323_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block20326_7(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_5(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block20326_6(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_6(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(16) = s(17)/s(16)
	nop(DIV)
	s(15)= eq(s(16), s(15))
	nop(EQ)
	call(block20326_5(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20323_7(s(20), s(19), s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(19) = s(20)/s(19)
	nop(DIV)
	s(18)= eq(s(19), s(18))
	nop(EQ)
	call(block20326_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block20326_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_0(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block20334_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_0(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block20333_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20326_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block20334_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block20333_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_1(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_1(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(14), 0)
	call(block20334_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(14), 0)
	call(block20333(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_2(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_2(s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	neq(s(10), 0)
	call(block20334_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump20326_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	eq(s(10), 0)
	call(block20333_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_3(s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	call(jump20326_3(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20326_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_4(s(18),s(17),s(16),s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(18), 0)
	call(block20334_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_4(s(18), s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(18), 0)
	call(block20333_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump20326_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block20334_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block20333_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_5(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_5(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block20334_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block20333_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_6(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_6(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump20326_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(15), 0)
	call(block20334_7(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump20326_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(15), 0)
	call(block20333_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block20326_7(s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(jump20326_7(s(15),s(14),s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block20333_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_2(s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_4(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20333_7(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block20334_0(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18273(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_1(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18337(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_2(s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(14) = s(13)
	nop(DUP1)
	s(15) = s(12)
	s(12) = s(14)
	s(14) = s(15)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(13) = s(9)
	s(9) = s(12)
	s(12) = s(13)
	nop(SWAP3)
	s(13) = s(10)
	s(10) = s(12)
	s(12) = s(13)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18385(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_3(s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(10) = s(9)
	nop(DUP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(9) = s(5)
	s(5) = s(8)
	s(8) = s(9)
	nop(SWAP3)
	s(9) = s(6)
	s(6) = s(8)
	s(8) = s(9)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12620_0(s(5),s(4),s(3),s(2),s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block20334_4(s(17), s(16), s(15), s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(18) = s(17)
	nop(DUP1)
	s(19) = s(16)
	s(16) = s(18)
	s(18) = s(19)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(17) = s(13)
	s(13) = s(16)
	s(16) = s(17)
	nop(SWAP3)
	s(17) = s(14)
	s(14) = s(16)
	s(16) = s(17)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block12620_1(s(13),s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_5(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18273_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_6(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18337_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block20334_7(s(14), s(13), s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(15) = s(14)
	nop(DUP1)
	s(16) = s(13)
	s(13) = s(15)
	s(15) = s(16)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	s(14) = s(10)
	s(10) = s(13)
	s(13) = s(14)
	nop(SWAP3)
	s(14) = s(11)
	s(11) = s(13)
	s(13) = s(14)
	nop(SWAP2)
	nop(POP)
	nop(POP)
	call(block18385_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4943_0(s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(2) = 0
	nop(PUSH1)
	s(3) = s(2)
	nop(DUP1)
	s(4) = 0
	nop(PUSH1)
	s(5) = s(4)
	nop(DUP1)
	s(6) = 0
	nop(PUSH1)
	s(7) = 32
	nop(PUSH1)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(8) = g(priceIsFrozen)
	nop(SLOAD)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(9) = 256
	nop(PUSH2)
	s(8) = s(9)^s(8)
	nop(EXP)
	s(9) = s(7)
	s(7) = s(8)
	s(8) = s(9)
	nop(SWAP1)
	s(7) = s(8)/s(7)
	nop(DIV)
	s(8) = 255
	nop(PUSH1)
	s(7) = and(s(8), s(7))
	nop(AND)
	call(jump4943_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4943_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(7), 0)
	call(block4982_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump4943_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(7), 0)
	call(block4974_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

block4974_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	s(7) = 4981
	nop(PUSH2)
	s(8) = 17888
	nop(PUSH2)
	call(block17888_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block4981_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block4982_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block4982_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4990
	nop(PUSH2)
	s(8) = 18203
	nop(PUSH2)
	call(block18203_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(bountyCap), g(distributedTeamStakes), g(teamShare), g(teamCap), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4990_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 4999
	nop(PUSH2)
	s(8) = callvalue
	nop(CALLVALUE)
	s(9) = 16491
	nop(PUSH2)
	call(block16491_3(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block4999_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(5)
	s(5) = s(7)
	s(7) = s(8)
	nop(SWAP2)
	nop(POP)
	s(7) = 1
	nop(PUSH1)
	s(8) = s(5)
	nop(DUP3)
	call(jump4999_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump4999_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5535_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

jump4999_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5011_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5011_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(5)
	nop(DUP2)
	s(8) = 25
	nop(PUSH1)
	s(8) = g(distributedSaleStakes)
	nop(SLOAD)
	s(7) = s(8)+s(7)
	nop(ADD)
	s(8) = s(6)
	s(6) = s(7)
	s(7) = s(8)
	nop(SWAP1)
	nop(POP)
	s(7) = 28
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump5011_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5011_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5039_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump5011_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5029_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5029_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(5)
	nop(DUP2)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = callvalue
	nop(CALLVALUE)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	s(7) = 5060
	nop(PUSH2)
	call(block5060_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5039_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 25
	nop(PUSH1)
	s(7) = g(distributedSaleStakes)
	nop(SLOAD)
	s(8) = 28
	nop(PUSH1)
	s(8) = g(saleCap)
	nop(SLOAD)
	s(7) = s(8)-s(7)
	nop(SUB)
	s(8) = s(3)
	s(3) = s(7)
	s(7) = s(8)
	nop(SWAP4)
	nop(POP)
	s(7) = 5057
	nop(PUSH2)
	s(8) = s(3)
	nop(DUP5)
	s(9) = 8825
	nop(PUSH2)
	call(block8825_1(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5057_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(4)
	s(4) = s(7)
	s(7) = s(8)
	nop(SWAP3)
	nop(POP)
	call(block5060_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5060_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 5117
	nop(PUSH2)
	s(8) = 29
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(9) = g(saleShare)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 255
	nop(PUSH1)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 11
	nop(PUSH1)
	s(10) = 0
	nop(PUSH1)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(10) = g(teamShare)
	nop(SLOAD)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 256
	nop(PUSH2)
	s(10) = s(11)^s(10)
	nop(EXP)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(9) = s(10)/s(9)
	nop(DIV)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = 255
	nop(PUSH1)
	s(9) = and(s(10), s(9))
	nop(AND)
	s(10) = s(3)
	nop(DUP7)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = 18476
	nop(PUSH2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = s(8)
	s(8) = s(10)
	s(10) = s(11)
	nop(SWAP2)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	s(11) = 4294967295
	nop(PUSH4)
	s(10) = and(s(11), s(10))
	nop(AND)
	call(block18476_11(s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5117_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5446_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5117_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5129_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5117_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(8) = s(2)
	s(2) = s(7)
	s(7) = s(8)
	nop(SWAP5)
	nop(POP)
	s(7) = 0
	nop(PUSH1)
	s(8) = s(3)
	nop(DUP5)
	call(jump5117_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5129_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = s(2)
	nop(DUP5)
	s(8) = 2
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = 3
	nop(PUSH1)
	s(11) = 0
	nop(PUSH1)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(11) = g(owner)
	nop(SLOAD)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(12) = 256
	nop(PUSH2)
	s(11) = s(12)^s(11)
	nop(EXP)
	s(12) = s(10)
	s(10) = s(11)
	s(11) = s(12)
	nop(SWAP1)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	gl = s(11)
	s(11) = fresh(0)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gs(1) = s(9)
	gs(2) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 0
	nop(PUSH1)
	s(9) = s(8)
	nop(DUP1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(totalSupply)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(totalSupply) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = s(2)
	nop(DUP5)
	s(8) = 12
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(7)
	nop(DUP3)
	s(11) = s(8)
	nop(DUP3)
	s(11) = g(distributedTeamStakes)
	nop(SLOAD)
	s(10) = s(11)+s(10)
	nop(ADD)
	s(11) = s(7)
	s(7) = s(10)
	s(10) = s(11)
	nop(SWAP3)
	nop(POP)
	nop(POP)
	s(9) = s(7)
	nop(DUP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	g(distributedTeamStakes) = s(8)
	nop(SSTORE)
	nop(POP)
	s(7) = 5281
	nop(PUSH2)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 18503
	nop(PUSH2)
	call(block18503_0(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

jump5281_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), s(7))
	call(block5445_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5281_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), s(7))
	call(block5434_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

block5281_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 0
	nop(PUSH1)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 22
	nop(PUSH1)
	s(9) = 0
	nop(PUSH1)
	s(10) = caller
	nop(CALLER)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(10) = and(s(11), s(10))
	nop(AND)
	s(11) = s(9)
	nop(DUP2)
	l(l6) = s(10)
	nop(MSTORE)
	s(10) = 32
	nop(PUSH1)
	s(9) = s(10)+s(9)
	nop(ADD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	l(l7) = s(9)
	nop(MSTORE)
	s(9) = 32
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(8) = sha3(s(9), s(8))
	nop(SHA3)
	s(9) = 4
	nop(PUSH1)
	s(8) = s(9)+s(8)
	nop(ADD)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	gl = s(9)
	s(9) = fresh(0)
	nop(SLOAD)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 256
	nop(PUSH2)
	s(9) = s(10)^s(9)
	nop(EXP)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(8) = s(9)/s(8)
	nop(DIV)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	s(9) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(8) = and(s(9), s(8))
	nop(AND)
	call(jump5281_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5434_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	s(7) = 5444
	nop(PUSH2)
	s(8) = caller
	nop(CALLER)
	s(9) = s(3)
	nop(DUP6)
	s(10) = s(4)
	nop(DUP6)
	s(11) = 19028
	nop(PUSH2)
	call(block19028_1(s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block5444_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5445_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

block5445_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	call(block5446_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))

jump5446_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	leq(s(8), s(7))
	call(block5530_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5446_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	gt(s(8), s(7))
	call(block5457_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize))

block5446_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(saleCap), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = 28
	nop(PUSH1)
	s(7) = g(saleCap)
	nop(SLOAD)
	s(8) = s(6)
	nop(DUP2)
	call(jump5446_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(saleCap), l(l0), caller, callvalue, returndatasize))
	nop(GT)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block5457_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = s(4)
	nop(DUP5)
	s(10) = callvalue
	nop(CALLVALUE)
	s(9) = s(10)-s(9)
	nop(SUB)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump5457_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5457_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block5528_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5457_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block5519_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5519_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block5528_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5530_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block5530_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	s(7) = 5607
	nop(PUSH2)
	call(block5607_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))
	nop(JUMP)

block5535_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(7) = caller
	nop(CALLER)
	s(8) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(7) = and(s(8), s(7))
	nop(AND)
	s(8) = 2300
	nop(PUSH2)
	s(9) = callvalue
	nop(CALLVALUE)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = s(8)
	nop(DUP2)
	s(10)= eq(s(10), 0)
	nop(ISZERO)
	s(9) = s(10)*s(9)
	nop(MUL)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	s(10) = 64
	nop(PUSH1)
	s(10) = l(l0)
	nop(MLOAD)
	s(11) = 0
	nop(PUSH1)
	s(12) = 64
	nop(PUSH1)
	s(12) = l(l0)
	nop(MLOAD)
	s(13) = s(12)
	nop(DUP1)
	s(14) = s(10)
	nop(DUP4)
	s(13) = s(14)-s(13)
	nop(SUB)
	s(14) = s(12)
	nop(DUP2)
	s(15) = s(9)
	nop(DUP6)
	s(16) = s(7)
	nop(DUP9)
	s(17) = s(8)
	nop(DUP9)
	s(11) = 1
	nop(CALL)
	s(12) = s(7)
	s(7) = s(11)
	s(11) = s(12)
	nop(SWAP4)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	s(7)= eq(s(7), 0)
	nop(ISZERO)
	s(8) = s(7)
	nop(DUP1)
	call(jump5535_0(s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump5535_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	eq(s(8), 0)
	call(block5605_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

jump5535_0(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), l(l0), caller, callvalue, returndatasize)=>
	neq(s(8), 0)
	call(block5596_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize))

block5596_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), returndatasize)=>
	s(8) = returndatasize
	nop(RETURNDATASIZE)
	s(9) = 0
	nop(PUSH1)
	s(10) = s(9)
	nop(DUP1)
	nop(RETURNDATACOPY)
	s(9) = returndatasize
	nop(RETURNDATASIZE)
	s(10) = 0
	nop(PUSH1)
	nop(REVERT)

block5605_0(s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	call(block5607_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0)))

block5607_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(JUMPDEST)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	nop(POP)
	call(block890_0(s(0)))
	nop(JUMP)

block791_0(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(1) = and(s(2), s(1))
	nop(AND)
	s(2) = caller
	nop(CALLER)
	s(3) = 1461501637330902918203684832716283019655932542975
	nop(PUSH20)
	s(2) = and(s(3), s(2))
	nop(AND)
	call(jump791_0(s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(EQ)
	nop(ISZERO)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump791_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	neq(s(2), s(1))
	call(block851_0(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump791_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	eq(s(2), s(1))
	call(block847_0(s(0)))

block847_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump851_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	gt(s(2), s(1))
	call(block866_0(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump851_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	leq(s(2), s(1))
	call(block862_0(s(0)))

block851_0(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 0
	nop(PUSH1)
	s(2) = callvalue
	nop(CALLVALUE)
	call(jump851_0(s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(GT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block862_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

jump866_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	lt(s(2), s(1))
	call(block882_0(s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))

jump866_0(s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	geq(s(2), s(1))
	call(block878_0(s(0)))

block866_0(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 9
	nop(PUSH1)
	s(1) = g(businessPlannedPeriodEndTimestamp)
	nop(SLOAD)
	s(2) = timestamp
	nop(TIMESTAMP)
	call(jump866_0(s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(LT)
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

block878_0(s(0))=>
	s(1) = 0
	nop(PUSH1)
	s(2) = s(1)
	nop(DUP1)
	nop(REVERT)

block8825_0(s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(3) = 0
	nop(PUSH1)
	s(4) = 100
	nop(PUSH1)
	s(5) = 6
	nop(PUSH1)
	s(5) = g(usdPerEther)
	nop(SLOAD)
	s(4) = s(5)*s(4)
	nop(MUL)
	s(5) = 1000000000000000000
	nop(PUSH8)
	s(6) = 30
	nop(PUSH1)
	s(6) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(7) = s(2)
	nop(DUP5)
	s(6) = s(7)*s(6)
	nop(MUL)
	s(5) = s(6)*s(5)
	nop(MUL)
	s(6) = s(4)
	nop(DUP2)
	call(jump8825_0(s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0)))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8825_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	neq(s(6), 0)
	call(block8857_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0)))

jump8825_0(s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(lastStakePriceUSCents), g(usdPerEther), l(l1), l(l0))=>
	eq(s(6), 0)
	call(block8856_0(s(5), s(4), s(3), s(2), s(1), s(0)))

block8825_1(s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(9) = 0
	nop(PUSH1)
	s(10) = 100
	nop(PUSH1)
	s(11) = 6
	nop(PUSH1)
	s(11) = g(usdPerEther)
	nop(SLOAD)
	s(10) = s(11)*s(10)
	nop(MUL)
	s(11) = 1000000000000000000
	nop(PUSH8)
	s(12) = 30
	nop(PUSH1)
	s(12) = g(lastStakePriceUSCents)
	nop(SLOAD)
	s(13) = s(8)
	nop(DUP5)
	s(12) = s(13)*s(12)
	nop(MUL)
	s(11) = s(12)*s(11)
	nop(MUL)
	s(12) = s(10)
	nop(DUP2)
	call(jump8825_1(s(12),s(11),s(10),s(9),s(8),s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(ISZERO)
	nop(ISZERO)
	nop(PUSH2)
	nop(JUMPI)

jump8825_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	neq(s(12), 0)
	call(block8857_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))

jump8825_1(s(12), s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(usdPerEther), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	eq(s(12), 0)
	call(block8856_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0)))

block882_0(s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp)=>
	nop(JUMPDEST)
	s(1) = 890
	nop(PUSH2)
	s(2) = 4943
	nop(PUSH2)
	call(block4943_0(s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(priceIsFrozen), g(targetPrice), g(lastStakePriceUSCents), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(saleEndTimestamp), g(saleStartTimestamp), g(supplier), g(bountyCap), g(contractCreatedTimestamp), g(distributedTeamStakes), g(teamShare), g(teamCap), g(businessPlannedPeriodEndTimestamp), g(supplyCap), g(usdPerEther), g(poolCapUSD), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize, timestamp))
	nop(JUMP)

block8856_0(s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8856_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0))=>
	nop(ASSERTFAIL)

block8857_0(s(5), s(4), s(3), s(2), s(1), s(0), l(l1), l(l0))=>
	nop(JUMPDEST)
	s(4) = s(5)/s(4)
	nop(DIV)
	s(5) = s(3)
	s(3) = s(4)
	s(4) = s(5)
	nop(SWAP1)
	nop(POP)
	s(4) = s(1)
	s(1) = s(3)
	s(3) = s(4)
	nop(SWAP2)
	s(4) = s(2)
	s(2) = s(3)
	s(3) = s(4)
	nop(SWAP1)
	nop(POP)
	call(block1643(s(1),s(0), l(l1), l(l0)))
	nop(JUMP)

block8857_1(s(11), s(10), s(9), s(8), s(7), s(6), s(5), s(4), s(3), s(2), s(1), s(0), g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize)=>
	nop(JUMPDEST)
	s(10) = s(11)/s(10)
	nop(DIV)
	s(11) = s(9)
	s(9) = s(10)
	s(10) = s(11)
	nop(SWAP1)
	nop(POP)
	s(10) = s(7)
	s(7) = s(9)
	s(9) = s(10)
	nop(SWAP2)
	s(10) = s(8)
	s(8) = s(9)
	s(9) = s(10)
	nop(SWAP1)
	nop(POP)
	call(block5057_0(s(7),s(6),s(5),s(4),s(3),s(2),s(1),s(0),g(transferedToPool), g(bonusShare), g(distributedBonusStakes), g(bonusCap), g(saleShare), g(saleCap), g(totalInvested), g(distributedSaleStakes), g(supplier), g(distributedTeamStakes), g(teamShare), g(owner), g(totalSupply), l(l7), l(l6), l(l4), l(l3), l(l2), l(l1), l(l0), caller, callvalue, returndatasize))
	nop(JUMP)

block890_0(s(0))=>
	nop(JUMPDEST)
	skip
	nop(STOP)

