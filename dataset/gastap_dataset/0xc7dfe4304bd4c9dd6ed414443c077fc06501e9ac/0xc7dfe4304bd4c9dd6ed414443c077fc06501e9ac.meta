{
    "ERC20Events": {
        "function_list": [],
        "initial_state": {},
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "owned": {
        "function_list": [
            "owned()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "TokenTrader": {
        "function_list": [
            "owned()",
            "transferOwnership(address)",
            "TokenTrader(address,uint256,uint256,bool)",
            "activate(bool)",
            "withdrawAsset(uint256)",
            "withdrawToken(address,uint256)",
            "withdraw(uint256)",
            "buy()",
            "fallback()"
        ],
        "initial_state": {
            "owned()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "TokenTrader(address,uint256,uint256,bool)": {
                "argument": {
                    "_sellPrice": "uint256",
                    "_units": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "activate(bool)": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdrawAsset(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdrawToken(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "withdraw(uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "sellPrice": "uint256",
                    "units": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "withdrawAsset(uint256)": [
                431,
                163
            ],
            "activate(bool)": [
                741,
                273
            ],
            "withdraw(uint256)": [
                185,
                75
            ],
            "buy()": [
                731,
                251
            ],
            "withdrawToken(address,uint256)": [
                630,
                229
            ],
            "transferOwnership(address)": [
                788,
                295
            ]
        },
        "block_CALL_mapping": {
            "jump1662_0": [
                "msg.sender.send(msg.value)",
                "msg.sender.send(msg.value)"
            ],
            "jump1662_1": [
                "msg.sender.send(msg.value)",
                "msg.sender.send(msg.value)"
            ],
            "block1662": [
                "msg.sender.send(msg.value)"
            ],
            "jump1256_1": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "jump1256_0": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "block1176": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1256": [
                "msg.sender.send(change)"
            ],
            "jump1256": [
                "msg.sender.send(change)",
                "msg.sender.send(change)"
            ],
            "block1662_0": [
                "msg.sender.send(msg.value)"
            ],
            "block1662_1": [
                "msg.sender.send(msg.value)"
            ],
            "block1858": [
                "owner.send(_value)"
            ],
            "block1542_1": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1542_0": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block1542": [
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "block2386": [
                "ERC20(asset).transfer(owner,_value)"
            ],
            "block1176_0": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "block1176_1": [
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1176_0": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1176_1": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump1176": [
                "ERC20(asset).balanceOf(address(this))",
                "ERC20(asset).balanceOf(address(this))"
            ],
            "jump2386": [
                "ERC20(asset).transfer(owner,_value)",
                "ERC20(asset).transfer(owner,_value)"
            ],
            "jump1542": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "jump2784": [
                "ERC20(_token).transfer(owner,_value)",
                "ERC20(_token).transfer(owner,_value)"
            ],
            "jump1542_1": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "jump1542_0": [
                "ERC20(asset).transfer(msg.sender,order * units)",
                "ERC20(asset).transfer(msg.sender,order * units)"
            ],
            "jump1662": [
                "msg.sender.send(msg.value)",
                "msg.sender.send(msg.value)"
            ],
            "block2784": [
                "ERC20(_token).transfer(owner,_value)"
            ],
            "block1256_1": [
                "msg.sender.send(change)"
            ],
            "block1256_0": [
                "msg.sender.send(change)"
            ]
        }
    }
}