{
    "Arith": {
        "function_list": [
            "Arith()",
            "kill()",
            "jdouble(uint256,uint256,uint256)",
            "jadd(uint256,uint256,uint256,uint256,uint256,uint256)",
            "jmul(uint256,uint256,uint256,uint256)",
            "jexp(uint256,uint256,uint256)",
            "jrecover_y(uint256,uint256)",
            "jdecompose(uint256,uint256,uint256)",
            "ecmul(uint256,uint256,uint256,uint256)",
            "ecadd(uint256,uint256,uint256,uint256,uint256,uint256)",
            "ecsubtract(uint256,uint256,uint256,uint256,uint256,uint256)",
            "bit(uint256,uint256)",
            "hash_pubkey_to_pubkey(uint256,uint256)",
            "verify(uint256,uint256,uint256[],uint256,uint256,uint256[],uint256[])",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Arith()": {
                "argument": {},
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jdouble(uint256,uint256,uint256)": {
                "argument": {
                    "_ax": "uint256",
                    "_ay": "uint256",
                    "_az": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jadd(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_ax": "uint256",
                    "_ay": "uint256",
                    "_az": "uint256",
                    "_bx": "uint256",
                    "_by": "uint256",
                    "_bz": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jmul(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_bx": "uint256",
                    "_by": "uint256",
                    "_bz": "uint256",
                    "_n": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jexp(uint256,uint256,uint256)": {
                "argument": {
                    "_b": "uint256",
                    "_e": "uint256",
                    "_m": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jrecover_y(uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y_bit": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "jdecompose(uint256,uint256,uint256)": {
                "argument": {
                    "_q0": "uint256",
                    "_q1": "uint256",
                    "_q2": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "ecmul(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_x": "uint256",
                    "_y": "uint256",
                    "_z": "uint256",
                    "_n": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "ecadd(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_ax": "uint256",
                    "_ay": "uint256",
                    "_az": "uint256",
                    "_bx": "uint256",
                    "_by": "uint256",
                    "_bz": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "ecsubtract(uint256,uint256,uint256,uint256,uint256,uint256)": {
                "argument": {
                    "_ax": "uint256",
                    "_ay": "uint256",
                    "_az": "uint256",
                    "_bx": "uint256",
                    "_by": "uint256",
                    "_bz": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "bit(uint256,uint256)": {
                "argument": {
                    "_data": "uint256",
                    "_bit": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "hash_pubkey_to_pubkey(uint256,uint256)": {
                "argument": {
                    "_pub1": "uint256",
                    "_pub2": "uint256"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "verify(uint256,uint256,uint256[],uint256,uint256,uint256[],uint256[])": {
                "argument": {
                    "_msgHash": "uint256",
                    "_x0": "uint256",
                    "_s": "uint256[]",
                    "_Ix": "uint256",
                    "_Iy": "uint256",
                    "_pub_xs": "uint256[]",
                    "_pub_ys": "uint256[]"
                },
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "P": "uint256",
                    "N": "uint256",
                    "M": "uint256",
                    "Gx": "uint256",
                    "Gy": "uint256",
                    "k1x": "uint256",
                    "k1y": "uint256",
                    "k1z": "uint256",
                    "k2x": "uint256",
                    "k2y": "uint256",
                    "k2z": "uint256",
                    "pub1x": "uint256",
                    "pub1y": "uint256",
                    "pub2x": "uint256",
                    "pub2y": "uint256",
                    "k3x": "uint256",
                    "k3y": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "jmul(uint256,uint256,uint256,uint256)": [
                1542,
                339
            ],
            "jdouble(uint256,uint256,uint256)": [
                1249,
                273
            ],
            "ecadd(uint256,uint256,uint256,uint256,uint256,uint256)": [
                726,
                141
            ],
            "kill()": [
                930,
                185
            ],
            "hash_pubkey_to_pubkey(uint256,uint256)": [
                344,
                97
            ],
            "jexp(uint256,uint256,uint256)": [
                1457,
                317
            ],
            "bit(uint256,uint256)": [
                1174,
                251
            ],
            "jrecover_y(uint256,uint256)": [
                855,
                163
            ],
            "ecsubtract(uint256,uint256,uint256,uint256,uint256,uint256)": [
                953,
                207
            ],
            "ecmul(uint256,uint256,uint256,uint256)": [
                1348,
                295
            ],
            "verify(uint256,uint256,uint256[],uint256,uint256,uint256[],uint256[])": [
                426,
                119
            ],
            "jdecompose(uint256,uint256,uint256)": [
                1082,
                229
            ],
            "jadd(uint256,uint256,uint256,uint256,uint256,uint256)": [
                215,
                75
            ]
        },
        "block_CALL_mapping": {}
    }
}