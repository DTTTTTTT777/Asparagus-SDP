{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Forgiveness": {
        "function_list": [
            "Forgiveness()",
            "askForgiveness(string)",
            "isForgiven(string)",
            "withdrawFees()",
            "getBalance()",
            "fallback()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "Forgiveness()": {
                "argument": {},
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "askForgiveness(string)": {
                "argument": {
                    "transaction": "string"
                },
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "isForgiven(string)": {
                "argument": {
                    "transaction": "string"
                },
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "withdrawFees()": {
                "argument": {},
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "getBalance()": {
                "argument": {},
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "forgivenessFee": "uint256",
                    "ownerBalance": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "isForgiven(string)": [
                165,
                97
            ],
            "withdrawFees()": [
                294,
                119
            ],
            "askForgiveness(string)": [
                317,
                141
            ],
            "getBalance()": [
                122,
                75
            ]
        },
        "block_CALL_mapping": {
            "jump883": [
                "msg.sender.transfer(toWithdraw)",
                "msg.sender.transfer(toWithdraw)"
            ],
            "block883": [
                "msg.sender.transfer(toWithdraw)"
            ]
        }
    }
}