{
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Controlled": {
        "function_list": [
            "Controlled()",
            "changeController(address)"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {}
            },
            "changeController(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "changeController(address)": [
                81,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "ShineCoinToken": {
        "function_list": [
            "Controlled()",
            "changeController(address)",
            "ShineCoinToken(address,address,uint256,string,uint8,string,bool)",
            "changeReserveTeamRecepient(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "doTransfer(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "approveAndCall(address,uint256,bytes)",
            "totalSupply()",
            "getBalancesOfAddress(address)",
            "balanceOfAt(address,uint256)",
            "totalSupplyAt(uint256)",
            "createCloneToken(string,uint8,string,uint256,bool)",
            "generateTokens(address,uint256)",
            "destroyTokens(address,uint256)",
            "enableTransfers(bool)",
            "getValueAt(ShineCoinToken.Checkpoint[],uint256)",
            "updateValueAtNow(ShineCoinToken.Checkpoint[],uint256)",
            "isContract(address)",
            "min(uint256,uint256)",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Controlled()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "ShineCoinToken(address,address,uint256,string,uint8,string,bool)": {
                "argument": {
                    "_parentSnapShotBlock": "uint256",
                    "_tokenName": "string",
                    "_decimalUnits": "uint8",
                    "_tokenSymbol": "string"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "changeReserveTeamRecepient(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "doTransfer(address,address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "approveAndCall(address,uint256,bytes)": {
                "argument": {
                    "_amount": "uint256",
                    "_extraData": "bytes"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "totalSupply()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "getBalancesOfAddress(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "balanceOfAt(address,uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "totalSupplyAt(uint256)": {
                "argument": {
                    "_blockNumber": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "createCloneToken(string,uint8,string,uint256,bool)": {
                "argument": {
                    "_cloneTokenName": "string",
                    "_cloneDecimalUnits": "uint8",
                    "_cloneTokenSymbol": "string",
                    "_snapshotBlock": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "generateTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "destroyTokens(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "enableTransfers(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "getValueAt(ShineCoinToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "ShineCoinToken.Checkpoint[]",
                    "_block": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "updateValueAtNow(ShineCoinToken.Checkpoint[],uint256)": {
                "argument": {
                    "checkpoints": "ShineCoinToken.Checkpoint[]",
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "isContract(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "min(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "decimals": "uint8",
                    "symbol": "string",
                    "version": "string",
                    "parentSnapShotBlock": "uint256",
                    "creationBlock": "uint256",
                    "firstRewardPeriodEndBlock": "uint256",
                    "secondRewardPeriodEndBlock": "uint256",
                    "thirdRewardPeriodEndBlock": "uint256",
                    "finalRewardPeriodEndBlock": "uint256",
                    "firstLoos": "uint256",
                    "secondLoos": "uint256",
                    "thirdLoos": "uint256",
                    "finalLoos": "uint256",
                    "firstRewardPeriodPercent": "uint256",
                    "secondRewardPeriodPercent": "uint256",
                    "thirdRewardPeriodPercent": "uint256",
                    "finalRewardPeriodPercent": "uint256",
                    "unfreezeTeamRecepientBlock": "uint256",
                    "balances": "mapping(address => ShineCoinToken.Checkpoint[])",
                    "totalSupplyHistory": "ShineCoinToken.Checkpoint[]"
                }
            }
        },
        "function_block_mapping": {
            "balanceOfAt(address,uint256)": [
                12744,
                26
            ],
            "balanceOf(address)": [
                2375,
                449
            ],
            "totalSupply()": [
                1186,
                185
            ],
            "allowance(address,address)": [
                3671,
                823
            ],
            "transferFrom(address,address,uint256)": [
                1272,
                229
            ],
            "approve(address,uint256)": [
                999,
                119
            ],
            "totalSupplyAt(uint256)": [
                12744,
                26
            ],
            "enableTransfers(bool)": [
                3920,
                889
            ],
            "createCloneToken(string,uint8,string,uint256,bool)": [
                2101,
                427
            ],
            "changeController(address)": [
                7565,
                889
            ],
            "generateTokens(address,uint256)": [
                2592,
                515
            ],
            "approveAndCall(address,uint256,bytes)": [
                3399,
                779
            ],
            "changeReserveTeamRecepient(address)": [
                3308,
                757
            ],
            "destroyTokens(address,uint256)": [
                3570,
                801
            ],
            "getBalancesOfAddress(address)": [
                1935,
                405
            ],
            "transfer(address,uint256)": [
                3074,
                669
            ]
        },
        "block_CALL_mapping": {
            "block4797_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block729_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump729": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump6281_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump8570": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6281_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6281_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6281_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6281": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block8570": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump6281_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block10633_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump8570_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))",
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump4797_0": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block8570_0": [
                "parentToken.totalSupplyAt(min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_5": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_6": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "jump9471": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )",
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )"
            ],
            "block6281_0": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_1": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_2": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block6281_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block7349": [
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )"
            ],
            "jump6281_3": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block10633": [
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump10633": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "block4797": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "block729": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "jump10633_0": [
                "TokenController(controller).onTransfer(_from, _to, _amount)",
                "TokenController(controller).onTransfer(_from, _to, _amount)"
            ],
            "jump6281_4": [
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))",
                "parentToken.balanceOfAt(_owner, min(_blockNumber, parentSnapShotBlock))"
            ],
            "block9471": [
                "ApproveAndCallFallBack(_spender).receiveApproval(\n        msg.sender,\n        _amount,\n        this,\n        _extraData\n        )"
            ],
            "jump4797": [
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)",
                "TokenController(controller).onApprove(msg.sender, _spender, _amount)"
            ],
            "jump729_0": [
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)",
                "TokenController(controller).proxyPayment.value(msg.value)(msg.sender)"
            ],
            "block7565": [
                "cloneToken.changeController(msg.sender)"
            ],
            "jump7349": [
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )",
                "tokenFactory.createCloneToken(\n        this,\n        _snapshotBlock,\n        _cloneTokenName,\n        _cloneDecimalUnits,\n        _cloneTokenSymbol,\n        _transfersEnabled\n        )"
            ],
            "jump7565": [
                "cloneToken.changeController(msg.sender)",
                "cloneToken.changeController(msg.sender)"
            ]
        }
    },
    "ShineCrowdFunder": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)",
            "Controlled()",
            "changeController(address)",
            "ShineCrowdFunder(address,address,address,ShineCoinToken)",
            "changeReserveTeamRecipient(address)",
            "changeReserveBountyRecipient(address)",
            "freezeAccount(address,bool)",
            "getExchangeRate(uint256)",
            "investment()",
            "checkIfFundingCompleteOrExpired()",
            "payOut()",
            "getRefund()",
            "generateReserve()",
            "removeContract()",
            "fallback()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "Controlled()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeController(address)": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "ShineCrowdFunder(address,address,address,ShineCoinToken)": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeReserveTeamRecipient(address)": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "changeReserveBountyRecipient(address)": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "freezeAccount(address,bool)": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "getExchangeRate(uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "investment()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "checkIfFundingCompleteOrExpired()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "payOut()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "getRefund()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "generateReserve()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "removeContract()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minFundingGoal": "uint256",
                    "currentBalance": "uint256",
                    "tokensIssued": "uint256",
                    "capTokenAmount": "uint256",
                    "startBlockNumber": "uint256",
                    "endBlockNumber": "uint256",
                    "tokenExchangeRate": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "payOut()": [
                1504,
                471
            ],
            "removeContract()": [
                1893,
                625
            ],
            "changeReserveBountyRecipient(address)": [
                1227,
                361
            ],
            "getRefund()": [
                1381,
                405
            ],
            "generateReserve()": [
                1527,
                493
            ],
            "changeController(address)": [
                5174,
                1059
            ],
            "getExchangeRate(uint256)": [
                922,
                251
            ],
            "checkIfFundingCompleteOrExpired()": [
                1204,
                339
            ],
            "investment()": [
                806,
                185
            ],
            "freezeAccount(address,bool)": [
                1727,
                581
            ],
            "changeReserveTeamRecipient(address)": [
                629,
                119
            ]
        },
        "block_CALL_mapping": {
            "jump2407": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump5524_3": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block4377_2": [
                "fundRecipient.transfer(amount)"
            ],
            "jump4645": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "block4645_2": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block4645_3": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block4645_0": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block4645_1": [
                "exchangeToken.enableTransfers(true)"
            ],
            "block2407_0": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "block2407_1": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump3816": [
                "msg.sender.transfer(amountToRefund)",
                "msg.sender.transfer(amountToRefund)"
            ],
            "jump5524_2": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "jump6774": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump4377_3": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump4377_0": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "jump4377_1": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block5524_1": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block5524_0": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block5524_3": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block5524_2": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "jump5524_1": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block4645": [
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4892_1": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)",
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block5174_3": [
                "exchangeToken.changeController(controller)"
            ],
            "block5524_4": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "jump4645_0": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4645_1": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4645_2": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump4645_3": [
                "exchangeToken.enableTransfers(true)",
                "exchangeToken.enableTransfers(true)"
            ],
            "jump5815": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump2407_0": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump2407_1": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)",
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "jump5524_4": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block4892_0": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block4892_1": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block4892_2": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block4892_3": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "jump5815_2": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump5815_3": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump5815_0": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump5815_1": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump5815_4": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)",
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "block4377": [
                "fundRecipient.transfer(amount)"
            ],
            "jump5174_0": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump5174_1": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "block6774": [
                "exchangeToken.changeController(controller)"
            ],
            "jump5174_3": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump5524": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block4377_1": [
                "fundRecipient.transfer(amount)"
            ],
            "jump4377_2": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block4377_3": [
                "fundRecipient.transfer(amount)"
            ],
            "block5815_4": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump5524_0": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)",
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "jump4377": [
                "fundRecipient.transfer(amount)",
                "fundRecipient.transfer(amount)"
            ],
            "block3816": [
                "msg.sender.transfer(amountToRefund)"
            ],
            "block5815_0": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "block5815_1": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "block5815_2": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "block5815_3": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "jump4892_2": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)",
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "jump4892_3": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)",
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "jump4892_0": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)",
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "jump5174": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "jump5174_2": [
                "exchangeToken.changeController(controller)",
                "exchangeToken.changeController(controller)"
            ],
            "block2407": [
                "exchangeToken.generateTokens(msg.sender, tokenAmount)"
            ],
            "block4892": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block5174_2": [
                "exchangeToken.changeController(controller)"
            ],
            "jump4892": [
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)",
                "exchangeToken.changeReserveTeamRecepient(reserveTeamRecipient)"
            ],
            "block5174_0": [
                "exchangeToken.changeController(controller)"
            ],
            "block5174_1": [
                "exchangeToken.changeController(controller)"
            ],
            "block5524": [
                "exchangeToken.generateTokens(reserveTeamRecipient, reserveAmountTeam)"
            ],
            "block4377_0": [
                "fundRecipient.transfer(amount)"
            ],
            "block5815": [
                "exchangeToken.generateTokens(reserveBountyRecipient, reserveAmountBounty)"
            ],
            "block5174": [
                "exchangeToken.changeController(controller)"
            ]
        }
    }
}