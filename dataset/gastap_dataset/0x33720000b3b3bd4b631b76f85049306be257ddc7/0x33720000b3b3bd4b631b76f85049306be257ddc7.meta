{
    "Lottery": {
        "function_list": [
            "Lottery()",
            "fallback()",
            "conclude()",
            "findAndPayTheWinner()",
            "increaseBlockTarget()",
            "currentParticipants()",
            "currentPendingParticipants()",
            "maxPendingParticipants()",
            "kill()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Lottery()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "conclude()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "findAndPayTheWinner()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "increaseBlockTarget()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "currentParticipants()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "currentPendingParticipants()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "maxPendingParticipants()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            },
            "kill()": {
                "argument": {},
                "contract": {
                    "ROUND_PER_BLOCK": "uint256",
                    "TICKET_PRICE": "uint256",
                    "MAX_PENDING_PARTICIPANTS": "uint256",
                    "targetBlock": "uint256",
                    "ticketPrice": "uint256",
                    "minParticipants": "uint8",
                    "maxParticipants": "uint8",
                    "totalRoundsPassed": "uint256",
                    "totalTicketsSold": "uint256",
                    "participants": "address[]",
                    "pendingParticipants": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "kill()": [
                1073,
                207
            ],
            "maxPendingParticipants()": [
                1384,
                317
            ],
            "conclude()": [
                1427,
                339
            ],
            "currentPendingParticipants()": [
                829,
                119
            ],
            "currentParticipants()": [
                1292,
                273
            ]
        },
        "block_CALL_mapping": {
            "block325": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "jump700": [
                "msg.sender.send(msg.value % ticketPrice)",
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump325_0": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))",
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block700_0": [
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump325": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))",
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block325_0": [
                "msg.sender.send(msg.value - (i * TICKET_PRICE))"
            ],
            "block2565": [
                "winner.send(prize)"
            ],
            "jump700_0": [
                "msg.sender.send(msg.value % ticketPrice)",
                "msg.sender.send(msg.value % ticketPrice)"
            ],
            "jump2565": [
                "winner.send(prize)",
                "winner.send(prize)"
            ],
            "block700": [
                "msg.sender.send(msg.value % ticketPrice)"
            ]
        }
    }
}