{
    "SafeMathLib": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                92,
                75
            ],
            "safeAdd(uint256,uint256)": [
                242,
                119
            ],
            "safeMul(uint256,uint256)": [
                167,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                168,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                169,
                75
            ],
            "balanceOf(address)": [
                491,
                163
            ],
            "allowance(address,address)": [
                878,
                273
            ],
            "transferFrom(address,address,uint256)": [
                313,
                119
            ],
            "transfer(address,uint256)": [
                777,
                251
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                544,
                163
            ],
            "approve(address,uint256)": [
                180,
                75
            ],
            "subApproval(address,uint256)": [
                1015,
                273
            ],
            "balanceOf(address)": [
                457,
                141
            ],
            "safeAdd(uint256,uint256)": [
                1116,
                295
            ],
            "addApproval(address,uint256)": [
                720,
                207
            ],
            "allowance(address,address)": [
                896,
                251
            ],
            "safeMul(uint256,uint256)": [
                821,
                229
            ],
            "transferFrom(address,address,uint256)": [
                324,
                119
            ],
            "transfer(address,uint256)": [
                619,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "UpgradeableToken": {
        "function_list": [
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "totalUpgraded": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "upgrade(uint256)": [
                545,
                141
            ],
            "approve(address,uint256)": [
                268,
                75
            ],
            "setUpgradeAgent(address)": [
                1350,
                383
            ],
            "subApproval(address,uint256)": [
                1536,
                427
            ],
            "balanceOf(address)": [
                764,
                207
            ],
            "safeAdd(uint256,uint256)": [
                1637,
                449
            ],
            "canUpgrade()": [
                908,
                251
            ],
            "addApproval(address,uint256)": [
                1131,
                317
            ],
            "allowance(address,address)": [
                1417,
                405
            ],
            "safeMul(uint256,uint256)": [
                1275,
                361
            ],
            "safeSub(uint256,uint256)": [
                955,
                273
            ],
            "transferFrom(address,address,uint256)": [
                412,
                119
            ],
            "transfer(address,uint256)": [
                1030,
                295
            ],
            "setUpgradeMaster(address)": [
                1712,
                471
            ],
            "getUpgradeState()": [
                851,
                229
            ]
        },
        "block_CALL_mapping": {
            "block5377": [
                "upgradeAgent.originalSupply()"
            ],
            "jump3307": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "jump5170": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump5377": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "block3307": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block5170": [
                "upgradeAgent.isUpgradeAgent()"
            ]
        }
    },
    "ReleasableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {}
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {}
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                325,
                97
            ],
            "setTransferAgent(address,bool)": [
                246,
                75
            ],
            "releaseTokenTransfer()": [
                669,
                185
            ],
            "balanceOf(address)": [
                692,
                207
            ],
            "transferFrom(address,address,uint256)": [
                469,
                141
            ],
            "setReleaseAgent(address)": [
                602,
                163
            ],
            "allowance(address,address)": [
                1293,
                361
            ],
            "transfer(address,uint256)": [
                1004,
                295
            ],
            "transferOwnership(address)": [
                1560,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "assert(bool)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {}
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                738,
                207
            ],
            "approve(address,uint256)": [
                293,
                97
            ],
            "subApproval(address,uint256)": [
                1462,
                383
            ],
            "mint(address,uint256)": [
                570,
                163
            ],
            "balanceOf(address)": [
                817,
                229
            ],
            "safeAdd(uint256,uint256)": [
                1563,
                405
            ],
            "addApproval(address,uint256)": [
                1167,
                317
            ],
            "allowance(address,address)": [
                1343,
                361
            ],
            "safeMul(uint256,uint256)": [
                1268,
                339
            ],
            "safeSub(uint256,uint256)": [
                991,
                273
            ],
            "transferFrom(address,address,uint256)": [
                437,
                141
            ],
            "transfer(address,uint256)": [
                1066,
                295
            ],
            "transferOwnership(address)": [
                1638,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdsaleToken": {
        "function_list": [
            "UpgradeableToken(address)",
            "upgrade(uint256)",
            "setUpgradeAgent(address)",
            "getUpgradeState()",
            "setUpgradeMaster(address)",
            "canUpgrade()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "balanceOf(address)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "addApproval(address,uint256)",
            "subApproval(address,uint256)",
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "mint(address,uint256)",
            "setMintAgent(address,bool)",
            "Ownable()",
            "transferOwnership(address)",
            "setReleaseAgent(address)",
            "setTransferAgent(address,bool)",
            "releaseTokenTransfer()",
            "transfer(address,uint256)",
            "transferFrom(address,address,uint256)",
            "CrowdsaleToken(string,string,uint256,uint256,bool)",
            "releaseTokenTransfer()",
            "canUpgrade()",
            "setTokenInformation(string,string)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "UpgradeableToken(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "upgrade(uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setUpgradeAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "getUpgradeState()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setUpgradeMaster(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "canUpgrade()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "addApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "subApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "mint(address,uint256)": {
                "argument": {
                    "amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setMintAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setReleaseAgent(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setTransferAgent(address,bool)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "releaseTokenTransfer()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "CrowdsaleToken(string,string,uint256,uint256,bool)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string",
                    "_initialSupply": "uint256",
                    "_decimals": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            },
            "setTokenInformation(string,string)": {
                "argument": {
                    "_name": "string",
                    "_symbol": "string"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "setMintAgent(address,bool)": [
                1269,
                295
            ],
            "upgrade(uint256)": [
                1348,
                317
            ],
            "setTransferAgent(address,bool)": [
                444,
                75
            ],
            "setTokenInformation(string,string)": [
                1393,
                339
            ],
            "allowance(address,address)": [
                2874,
                735
            ],
            "transferFrom(address,address,uint256)": [
                858,
                185
            ],
            "subApproval(address,uint256)": [
                2993,
                757
            ],
            "approve(address,uint256)": [
                714,
                141
            ],
            "safeAdd(uint256,uint256)": [
                3094,
                779
            ],
            "addApproval(address,uint256)": [
                2501,
                625
            ],
            "balanceOf(address)": [
                1765,
                427
            ],
            "setUpgradeAgent(address)": [
                2807,
                713
            ],
            "setReleaseAgent(address)": [
                991,
                207
            ],
            "setUpgradeMaster(address)": [
                3236,
                823
            ],
            "transferOwnership(address)": [
                3169,
                801
            ],
            "safeSub(uint256,uint256)": [
                2325,
                581
            ],
            "releaseTokenTransfer()": [
                1655,
                383
            ],
            "mint(address,uint256)": [
                1101,
                251
            ],
            "canUpgrade()": [
                2278,
                559
            ],
            "safeMul(uint256,uint256)": [
                2645,
                669
            ],
            "transfer(address,uint256)": [
                2400,
                603
            ],
            "getUpgradeState()": [
                1852,
                449
            ]
        },
        "block_CALL_mapping": {
            "block5611": [
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ],
            "block8308": [
                "upgradeAgent.originalSupply()"
            ],
            "jump8101": [
                "upgradeAgent.isUpgradeAgent()",
                "upgradeAgent.isUpgradeAgent()"
            ],
            "block8101": [
                "upgradeAgent.isUpgradeAgent()"
            ],
            "jump8308": [
                "upgradeAgent.originalSupply()",
                "upgradeAgent.originalSupply()"
            ],
            "jump5611": [
                "upgradeAgent.upgradeFrom(msg.sender, value)",
                "upgradeAgent.upgradeFrom(msg.sender, value)"
            ]
        }
    },
    "PricingStrategy": {
        "function_list": [
            "isPricingStrategy()",
            "isSane(address)",
            "calculatePrice(uint256,uint256,uint256,address,uint256)"
        ],
        "initial_state": {
            "isPricingStrategy()": {
                "argument": {},
                "contract": {}
            },
            "isSane(address)": {
                "argument": {},
                "contract": {}
            },
            "calculatePrice(uint256,uint256,uint256,address,uint256)": {
                "argument": {
                    "value": "uint256",
                    "weiRaised": "uint256",
                    "tokensSold": "uint256",
                    "decimals": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "isPricingStrategy()": [
                190,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Haltable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "halt()",
            "unhalt()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "halt()": {
                "argument": {},
                "contract": {}
            },
            "unhalt()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "unhalt()": [
                271,
                141
            ],
            "transferOwnership(address)": [
                294,
                163
            ],
            "halt()": [
                114,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "halt()",
            "unhalt()",
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256)",
            "fallback()",
            "investInternal(address,uint128)",
            "preallocate(address,uint256,uint256)",
            "investWithSignedAddress(address,uint128,uint8,bytes32,bytes32)",
            "investWithCustomerId(address,uint128)",
            "invest(address)",
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)",
            "buyWithCustomerId(uint128)",
            "buy()",
            "finalize()",
            "setFinalizeAgent(FinalizeAgent)",
            "setRequireCustomerId(bool)",
            "setRequireSignedAddress(bool,address)",
            "setEarlyParicipantWhitelist(address,bool)",
            "setEndsAt(uint256)",
            "setPricingStrategy(PricingStrategy)",
            "loadRefund()",
            "refund()",
            "isMinimumGoalReached()",
            "isFinalizerSane()",
            "isPricingSane()",
            "getState()",
            "setOwnerTestValue(uint256)",
            "isCrowdsale()",
            "isBreakingCap(uint256,uint256,uint256,uint256)",
            "isCrowdsaleFull()",
            "assignTokens(address,uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "halt()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "unhalt()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "Crowdsale(address,PricingStrategy,address,uint256,uint256,uint256)": {
                "argument": {
                    "_start": "uint256",
                    "_end": "uint256",
                    "_minimumFundingGoal": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investInternal(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "preallocate(address,uint256,uint256)": {
                "argument": {
                    "fullTokens": "uint256",
                    "weiPrice": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithSignedAddress(address,uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "investWithCustomerId(address,uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "invest(address)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithSignedAddress(uint128,uint8,bytes32,bytes32)": {
                "argument": {
                    "customerId": "uint128",
                    "v": "uint8",
                    "r": "bytes32",
                    "s": "bytes32"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buyWithCustomerId(uint128)": {
                "argument": {
                    "customerId": "uint128"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "buy()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setFinalizeAgent(FinalizeAgent)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireCustomerId(bool)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setRequireSignedAddress(bool,address)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEarlyParicipantWhitelist(address,bool)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setEndsAt(uint256)": {
                "argument": {
                    "time": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setPricingStrategy(PricingStrategy)": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "loadRefund()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "refund()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isMinimumGoalReached()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isFinalizerSane()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isPricingSane()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "getState()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "setOwnerTestValue(uint256)": {
                "argument": {
                    "val": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsale()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isBreakingCap(uint256,uint256,uint256,uint256)": {
                "argument": {
                    "weiAmount": "uint256",
                    "tokenAmount": "uint256",
                    "weiRaisedTotal": "uint256",
                    "tokensSoldTotal": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "isCrowdsaleFull()": {
                "argument": {},
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            },
            "assignTokens(address,uint256)": {
                "argument": {
                    "tokenAmount": "uint256"
                },
                "contract": {
                    "minimumFundingGoal": "uint256",
                    "startsAt": "uint256",
                    "endsAt": "uint256",
                    "tokensSold": "uint256",
                    "weiRaised": "uint256",
                    "investorCount": "uint256",
                    "loadedRefund": "uint256",
                    "weiRefunded": "uint256",
                    "ownerTestValue": "uint256"
                }
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {
            "jump2576": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump3683": [
                "token.manualTransfer(msg.sender, allowance)",
                "token.manualTransfer(msg.sender, allowance)"
            ],
            "block3683": [
                "token.manualTransfer(msg.sender, allowance)"
            ],
            "block581": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "jump4549": [
                "token.burn(leftTokens)",
                "token.burn(leftTokens)"
            ],
            "jump581_0": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()",
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "jump2576_1": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump2576_0": [
                "token.manualTransfer(to, providedTokens)",
                "token.manualTransfer(to, providedTokens)"
            ],
            "block2889": [
                "msg.sender.call.gas(3000000).value(givenAmount)()"
            ],
            "block581_0": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ],
            "block3983": [
                "msg.sender.call.gas(3000000).value(this.balance)()"
            ],
            "block2576": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "jump3983": [
                "msg.sender.call.gas(3000000).value(this.balance)()",
                "msg.sender.call.gas(3000000).value(this.balance)()"
            ],
            "jump2889": [
                "msg.sender.call.gas(3000000).value(givenAmount)()",
                "msg.sender.call.gas(3000000).value(givenAmount)()"
            ],
            "block2576_1": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "block2576_0": [
                "token.manualTransfer(to, providedTokens)"
            ],
            "block4549": [
                "token.burn(leftTokens)"
            ],
            "jump581": [
                "msg.sender.call.gas(3000000).value(amount - needAmount)()",
                "msg.sender.call.gas(3000000).value(amount - needAmount)()"
            ]
        }
    },
    "BonusFinalizeAgent": {
        "function_list": [
            "safeMul(uint256,uint256)",
            "safeSub(uint256,uint256)",
            "safeAdd(uint256,uint256)",
            "assert(bool)",
            "isFinalizeAgent()",
            "isSane()",
            "finalizeCrowdsale()",
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])",
            "isSane()",
            "finalizeCrowdsale()"
        ],
        "initial_state": {
            "safeMul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeSub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "safeAdd(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "assert(bool)": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isFinalizeAgent()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "isSane()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "finalizeCrowdsale()": {
                "argument": {},
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            },
            "BonusFinalizeAgent(CrowdsaleToken,Crowdsale,uint256[],address[])": {
                "argument": {
                    "_bonusBasePoints": "uint256[]",
                    "_teamAddresses": "address[]"
                },
                "contract": {
                    "totalMembers": "uint256",
                    "allocatedBonus": "uint256",
                    "teamAddresses": "address[]"
                }
            }
        },
        "function_block_mapping": {
            "safeSub(uint256,uint256)": [
                579,
                229
            ],
            "finalizeCrowdsale()": [
                180,
                75
            ],
            "isSane()": [
                445,
                185
            ],
            "safeAdd(uint256,uint256)": [
                729,
                273
            ],
            "safeMul(uint256,uint256)": [
                654,
                251
            ],
            "isFinalizeAgent()": [
                312,
                119
            ]
        },
        "block_CALL_mapping": {
            "block2300": [
                "token.releaseAgent()"
            ],
            "jump1120": [
                "crowdsale.tokensSold()",
                "crowdsale.tokensSold()"
            ],
            "block2075": [
                "token.mintAgents(address(this))"
            ],
            "jump1770": [
                "token.releaseTokenTransfer()",
                "token.releaseTokenTransfer()"
            ],
            "block1770": [
                "token.releaseTokenTransfer()"
            ],
            "jump1600": [
                "token.mint(teamAddresses[i], allocatedBonus)",
                "token.mint(teamAddresses[i], allocatedBonus)"
            ],
            "jump2075": [
                "token.mintAgents(address(this))",
                "token.mintAgents(address(this))"
            ],
            "jump2300": [
                "token.releaseAgent()",
                "token.releaseAgent()"
            ],
            "block1120": [
                "crowdsale.tokensSold()"
            ],
            "block1600": [
                "token.mint(teamAddresses[i], allocatedBonus)"
            ]
        }
    }
}