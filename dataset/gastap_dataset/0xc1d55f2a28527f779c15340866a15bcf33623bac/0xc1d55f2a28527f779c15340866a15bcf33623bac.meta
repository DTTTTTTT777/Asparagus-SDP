{
    "ERC20Basic": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                124,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "Ownable": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transferOwnership(address)": [
                70,
                75
            ]
        },
        "block_CALL_mapping": {}
    },
    "BasicToken": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "transfer(address,uint256)": [
                222,
                119
            ],
            "balanceOf(address)": [
                135,
                97
            ]
        },
        "block_CALL_mapping": {}
    },
    "ERC20": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                202,
                75
            ],
            "transfer(address,uint256)": [
                873,
                273
            ],
            "balanceOf(address)": [
                601,
                185
            ],
            "transferFrom(address,address,uint256)": [
                346,
                119
            ],
            "allowance(address,address)": [
                1061,
                317
            ]
        },
        "block_CALL_mapping": {}
    },
    "StandardToken": {
        "function_list": [
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)"
        ],
        "initial_state": {
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                147,
                75
            ],
            "increaseApproval(address,uint256)": [
                713,
                207
            ],
            "balanceOf(address)": [
                525,
                163
            ],
            "allowance(address,address)": [
                814,
                229
            ],
            "decreaseApproval(address,uint256)": [
                424,
                141
            ],
            "transferFrom(address,address,uint256)": [
                291,
                119
            ],
            "transfer(address,uint256)": [
                612,
                185
            ]
        },
        "block_CALL_mapping": {}
    },
    "MintableToken": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "mint(address,uint256)",
            "finishMinting()",
            "burnTokens(uint256)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {}
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {}
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {}
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {}
            },
            "finishMinting()": {
                "argument": {},
                "contract": {}
            },
            "burnTokens(uint256)": {
                "argument": {
                    "_unsoldTokens": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                249,
                97
            ],
            "increaseApproval(address,uint256)": [
                1032,
                295
            ],
            "mint(address,uint256)": [
                526,
                163
            ],
            "balanceOf(address)": [
                797,
                229
            ],
            "burnTokens(uint256)": [
                728,
                207
            ],
            "allowance(address,address)": [
                1133,
                317
            ],
            "decreaseApproval(address,uint256)": [
                627,
                185
            ],
            "transferFrom(address,address,uint256)": [
                393,
                141
            ],
            "finishMinting()": [
                884,
                251
            ],
            "transfer(address,uint256)": [
                931,
                273
            ],
            "transferOwnership(address)": [
                1252,
                339
            ]
        },
        "block_CALL_mapping": {}
    },
    "SafeMath": {
        "function_list": [
            "mul(uint256,uint256)",
            "div(uint256,uint256)",
            "sub(uint256,uint256)",
            "add(uint256,uint256)"
        ],
        "initial_state": {
            "mul(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "div(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "sub(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            },
            "add(uint256,uint256)": {
                "argument": {
                    "a": "uint256",
                    "b": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {},
        "block_CALL_mapping": {}
    },
    "Crowdsale": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "preStartTime": "uint256",
                    "preEndTime": "uint256",
                    "ICOstartTime": "uint256",
                    "ICOEndTime": "uint256",
                    "preICOBonus": "uint256",
                    "firstWeekBonus": "uint256",
                    "secondWeekBonus": "uint256",
                    "thirdWeekBonus": "uint256",
                    "forthWeekBonus": "uint256",
                    "rate": "uint256",
                    "weiRaised": "uint256",
                    "weekOne": "uint256",
                    "weekTwo": "uint256",
                    "weekThree": "uint256",
                    "weekForth": "uint256",
                    "totalSupply": "uint256",
                    "publicSupply": "uint256",
                    "rewardsSupply": "uint256",
                    "teamSupply": "uint256",
                    "advisorSupply": "uint256",
                    "bountySupply": "uint256",
                    "preicoSupply": "uint256",
                    "icoSupply": "uint256",
                    "remainingPublicSupply": "uint256",
                    "remainingRewardsSupply": "uint256",
                    "remainingBountySupply": "uint256",
                    "remainingAdvisorSupply": "uint256",
                    "remainingTeamSupply": "uint256",
                    "teamTimeLock": "uint256",
                    "advisorTimeLock": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "getPublicSupply()": [
                591,
                207
            ],
            "hasEnded()": [
                917,
                361
            ],
            "buyTokens(address)": [
                863,
                339
            ],
            "bountyFunds(address,uint256)": [
                471,
                163
            ],
            "burnToken()": [
                1031,
                405
            ],
            "getTokenAddress()": [
                318,
                97
            ],
            "grantAdvisorToken()": [
                405,
                119
            ],
            "transferOwnership(address)": [
                964,
                383
            ],
            "grantTeamToken()": [
                797,
                295
            ],
            "transferToken(address,uint256)": [
                241,
                75
            ],
            "rewardsFunds(address,uint256)": [
                634,
                229
            ]
        },
        "block_CALL_mapping": {
            "jump2542": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump4640": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block7233": [
                "wallet.transfer(msg.value)"
            ],
            "jump3706": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)",
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "block1985": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump5960": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)",
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "jump1985_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1985_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1985_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump5129": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)",
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "jump3152": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)",
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "jump3429": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)",
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "block4640": [
                "token.mint(beneficiary, valueToken)"
            ],
            "jump7233": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump1985_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block7233_0": [
                "wallet.transfer(msg.value)"
            ],
            "block7233_1": [
                "wallet.transfer(msg.value)"
            ],
            "block5129": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "block5960": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "jump5683": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)",
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump5406": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)",
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "block3152": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "block6981": [
                "token.burnTokens(remainingPublicSupply)"
            ],
            "block3706": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump6237": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)",
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump1985": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block3429": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "jump6981": [
                "token.burnTokens(remainingPublicSupply)",
                "token.burnTokens(remainingPublicSupply)"
            ],
            "jump4126": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block4126": [
                "token.mint(beneficiary, valueToken)"
            ],
            "block6237": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump7233_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump7233_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block5406": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "block5683": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "block2542": [
                "token.mint(beneficiary, tokens)"
            ]
        }
    },
    "CappedCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                952,
                361
            ],
            "buyTokens(address)": [
                898,
                339
            ]
        },
        "block_CALL_mapping": {
            "jump1418_1": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump1418_0": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump1418": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2255": [
                "ERC20(token).transfer(beneficiary, tokens)",
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2801": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block2255": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block2801": [
                "wallet.transfer(msg.value)"
            ],
            "block1418": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "jump2801_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2801_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1418_1": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block1418_0": [
                "ERC20(token).transfer(beneficiary, tokens)"
            ],
            "block2801_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2801_1": [
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "FinalizableCrowdsale": {
        "function_list": [
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "finalize()",
            "finalization()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {}
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {}
            },
            "fallback()": {
                "argument": {},
                "contract": {}
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {}
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {}
            },
            "validPurchase()": {
                "argument": {},
                "contract": {}
            },
            "hasEnded()": {
                "argument": {},
                "contract": {}
            },
            "burnToken()": {
                "argument": {},
                "contract": {}
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {}
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {}
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {}
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {}
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {}
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {}
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {}
            },
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "finalize()": {
                "argument": {},
                "contract": {}
            },
            "finalization()": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "finalize()": [
                326,
                141
            ],
            "hasEnded()": [
                710,
                295
            ],
            "buyTokens(address)": [
                656,
                273
            ]
        },
        "block_CALL_mapping": {
            "block2472_0": [
                "wallet.transfer(msg.value)"
            ],
            "block2472_1": [
                "wallet.transfer(msg.value)"
            ],
            "block1170_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2472_0": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "jump2472_1": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ],
            "block1743_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1743": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1743_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump1170_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1170_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1743": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "block1170_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "block2472": [
                "wallet.transfer(msg.value)"
            ],
            "jump1743_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2472": [
                "wallet.transfer(msg.value)",
                "wallet.transfer(msg.value)"
            ]
        }
    },
    "RefundVault": {
        "function_list": [
            "Ownable()",
            "transferOwnership(address)",
            "RefundVault(address)",
            "deposit(address)",
            "close()",
            "enableRefunds()",
            "refund(address)"
        ],
        "initial_state": {
            "Ownable()": {
                "argument": {},
                "contract": {}
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {}
            },
            "RefundVault(address)": {
                "argument": {},
                "contract": {}
            },
            "deposit(address)": {
                "argument": {},
                "contract": {}
            },
            "close()": {
                "argument": {},
                "contract": {}
            },
            "enableRefunds()": {
                "argument": {},
                "contract": {}
            },
            "refund(address)": {
                "argument": {},
                "contract": {}
            }
        },
        "function_block_mapping": {
            "enableRefunds()": [
                257,
                119
            ],
            "refund(address)": [
                545,
                229
            ],
            "close()": [
                147,
                75
            ],
            "deposit(address)": [
                491,
                207
            ],
            "transferOwnership(address)": [
                424,
                185
            ]
        },
        "block_CALL_mapping": {
            "jump785": [
                "wallet.transfer(this.balance)",
                "wallet.transfer(this.balance)"
            ],
            "block785": [
                "wallet.transfer(this.balance)"
            ],
            "jump1960": [
                "investor.transfer(depositedValue)",
                "investor.transfer(depositedValue)"
            ],
            "block1960": [
                "investor.transfer(depositedValue)"
            ]
        }
    },
    "RefundableCrowdsale": {
        "function_list": [
            "finalize()",
            "finalization()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "updateGoalCheck()",
            "getVaultAddress()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "finalize()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "goal": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "updateGoalCheck()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            },
            "getVaultAddress()": {
                "argument": {},
                "contract": {
                    "goal": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "claimRefund()": [
                790,
                317
            ],
            "finalize()": [
                413,
                163
            ],
            "hasEnded()": [
                867,
                361
            ],
            "buyTokens(address)": [
                813,
                339
            ],
            "goalReached()": [
                609,
                251
            ]
        },
        "block_CALL_mapping": {
            "jump3563": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block1987": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3400": [
                "vault.close()",
                "vault.close()"
            ],
            "jump1987": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump2765": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "jump1414": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1987_1": [
                "token.mint(beneficiary, bonus)"
            ],
            "jump3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump3226": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3563": [
                "vault.enableRefunds()"
            ],
            "block3226_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3226_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3400": [
                "vault.close()"
            ],
            "block2765": [
                "vault.refund(msg.sender)"
            ],
            "block1987_0": [
                "token.mint(beneficiary, bonus)"
            ],
            "block1414_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block1414_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump1414_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block1414": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump1987_0": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ],
            "jump1987_1": [
                "token.mint(beneficiary, bonus)",
                "token.mint(beneficiary, bonus)"
            ]
        }
    },
    "BenebitToken": {
        "function_list": [
            "mint(address,uint256)",
            "finishMinting()",
            "burnTokens(uint256)",
            "Ownable()",
            "transferOwnership(address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "allowance(address,address)",
            "increaseApproval(address,uint256)",
            "decreaseApproval(address,uint256)",
            "transfer(address,uint256)",
            "balanceOf(address)",
            "balanceOf(address)",
            "transfer(address,uint256)",
            "allowance(address,address)",
            "transferFrom(address,address,uint256)",
            "approve(address,uint256)",
            "BenebitToken()",
            "slitherConstructorVariables()",
            "slitherConstructorConstantVariables()"
        ],
        "initial_state": {
            "mint(address,uint256)": {
                "argument": {
                    "_amount": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "finishMinting()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "burnTokens(uint256)": {
                "argument": {
                    "_unsoldTokens": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transferFrom(address,address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "approve(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "allowance(address,address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "increaseApproval(address,uint256)": {
                "argument": {
                    "_addedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "decreaseApproval(address,uint256)": {
                "argument": {
                    "_subtractedValue": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "transfer(address,uint256)": {
                "argument": {
                    "value": "uint256"
                },
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "balanceOf(address)": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "BenebitToken()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            },
            "slitherConstructorConstantVariables()": {
                "argument": {},
                "contract": {
                    "name": "string",
                    "symbol": "string",
                    "decimals": "uint256",
                    "_totalSupply": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "approve(address,uint256)": [
                437,
                119
            ],
            "increaseApproval(address,uint256)": [
                1450,
                383
            ],
            "mint(address,uint256)": [
                800,
                229
            ],
            "burnTokens(uint256)": [
                1002,
                273
            ],
            "balanceOf(address)": [
                1071,
                295
            ],
            "decreaseApproval(address,uint256)": [
                901,
                251
            ],
            "transferFrom(address,address,uint256)": [
                581,
                163
            ],
            "finishMinting()": [
                1158,
                317
            ],
            "allowance(address,address)": [
                1551,
                405
            ],
            "transfer(address,uint256)": [
                1349,
                361
            ],
            "transferOwnership(address)": [
                1670,
                427
            ]
        },
        "block_CALL_mapping": {}
    },
    "BenebitICO": {
        "function_list": [
            "RefundableCrowdsale(uint256)",
            "forwardFunds()",
            "claimRefund()",
            "finalization()",
            "goalReached()",
            "updateGoalCheck()",
            "getVaultAddress()",
            "finalize()",
            "finalization()",
            "Crowdsale(uint256,uint256,uint256,address)",
            "createTokenContract()",
            "fallback()",
            "buyTokens(address)",
            "forwardFunds()",
            "validPurchase()",
            "hasEnded()",
            "burnToken()",
            "bountyFunds(address,uint256)",
            "rewardsFunds(address,uint256)",
            "grantAdvisorToken()",
            "grantTeamToken()",
            "transferToken(address,uint256)",
            "getTokenAddress()",
            "getPublicSupply()",
            "Ownable()",
            "transferOwnership(address)",
            "CappedCrowdsale(uint256)",
            "validPurchase()",
            "hasEnded()",
            "BenebitICO()",
            "createTokenContract()",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "RefundableCrowdsale(uint256)": {
                "argument": {
                    "_goal": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "forwardFunds()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "claimRefund()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "finalization()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "goalReached()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "updateGoalCheck()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getVaultAddress()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "finalize()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "Crowdsale(uint256,uint256,uint256,address)": {
                "argument": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "createTokenContract()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "buyTokens(address)": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "validPurchase()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "hasEnded()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "burnToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "bountyFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "rewardsFunds(address,uint256)": {
                "argument": {
                    "valueToken": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "grantAdvisorToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "grantTeamToken()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "transferToken(address,uint256)": {
                "argument": {
                    "tokens": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getTokenAddress()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "getPublicSupply()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "Ownable()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "transferOwnership(address)": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "CappedCrowdsale(uint256)": {
                "argument": {
                    "_cap": "uint256"
                },
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            },
            "BenebitICO()": {
                "argument": {},
                "contract": {
                    "_startTime": "uint256",
                    "_endTime": "uint256",
                    "_rate": "uint256",
                    "_goal": "uint256",
                    "_cap": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "hasEnded()": [
                1283,
                515
            ],
            "claimRefund()": [
                1163,
                449
            ],
            "bountyFunds(address,uint256)": [
                680,
                251
            ],
            "goalReached()": [
                930,
                339
            ],
            "grantTeamToken()": [
                1140,
                427
            ],
            "getPublicSupply()": [
                887,
                317
            ],
            "rewardsFunds(address,uint256)": [
                977,
                361
            ],
            "getVaultAddress()": [
                800,
                295
            ],
            "transferToken(address,uint256)": [
                318,
                75
            ],
            "transferOwnership(address)": [
                1330,
                537
            ],
            "finalize()": [
                657,
                229
            ],
            "burnToken()": [
                1397,
                559
            ],
            "grantAdvisorToken()": [
                505,
                141
            ],
            "buyTokens(address)": [
                1229,
                493
            ],
            "updateGoalCheck()": [
                482,
                119
            ],
            "getTokenAddress()": [
                395,
                97
            ]
        },
        "block_CALL_mapping": {
            "jump2351_0": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2351_1": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump2351": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "jump6068": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)",
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "jump5579": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block2351_1": [
                "token.mint(beneficiary, tokens)"
            ],
            "block6899": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "jump6899": [
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)",
                "token.mint(0x42e045f4D119212AC1CF5820488E69AA9164DC70, valueToken)"
            ],
            "block2908": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump8850": [
                "vault.close()",
                "vault.close()"
            ],
            "jump3638": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)",
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "block3638": [
                "token.mint(0xAA855f6D87d5D443eDa49aA034fA99D9EeeA0337, valueToken)"
            ],
            "jump3915": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)",
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "block8205": [
                "token.burnTokens(remainingPublicSupply)"
            ],
            "jump9013": [
                "vault.enableRefunds()",
                "vault.enableRefunds()"
            ],
            "block9013": [
                "vault.enableRefunds()"
            ],
            "block8649_0": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump8205": [
                "token.burnTokens(remainingPublicSupply)",
                "token.burnTokens(remainingPublicSupply)"
            ],
            "block5579": [
                "token.mint(beneficiary, valueToken)"
            ],
            "block2351_0": [
                "token.mint(beneficiary, tokens)"
            ],
            "jump2908": [
                "token.mint(beneficiary, tokens)",
                "token.mint(beneficiary, tokens)"
            ],
            "block8850": [
                "vault.close()"
            ],
            "block6345": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "block4192": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "jump4192": [
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)",
                "token.mint(0xbb3b3799D1b31189b491C26B1D7c17307fb87F5d, valueToken)"
            ],
            "block8649_1": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump4843": [
                "token.mint(beneficiary, valueToken)",
                "token.mint(beneficiary, valueToken)"
            ],
            "block4843": [
                "token.mint(beneficiary, valueToken)"
            ],
            "block7483": [
                "vault.refund(msg.sender)"
            ],
            "jump8649_0": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "jump8649_1": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block3915": [
                "token.mint(0x4B2e3E1BBEb117b781e71A10376A969860FBcEB3, valueToken)"
            ],
            "jump6345": [
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)",
                "token.mint(0x70fcd07629eB9b406223168AEB8De06E2564F558, valueToken)"
            ],
            "jump7176": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)",
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "jump6622": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)",
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "block7176": [
                "token.mint(0x2f53678a33C0fEE8f30fc5cfaC4E5E140397b40D, valueToken)"
            ],
            "block2351": [
                "token.mint(beneficiary, tokens)"
            ],
            "block6622": [
                "token.mint(0x0e562f12239C660627bE186de6535c05983579E9, valueToken)"
            ],
            "jump7483": [
                "vault.refund(msg.sender)",
                "vault.refund(msg.sender)"
            ],
            "block8649": [
                "vault.deposit.value(msg.value)(msg.sender)"
            ],
            "block6068": [
                "token.mint(0xBEB9e4057f953AaBdF14Dc4018056888C67E40b0, valueToken)"
            ],
            "jump8649": [
                "vault.deposit.value(msg.value)(msg.sender)",
                "vault.deposit.value(msg.value)(msg.sender)"
            ]
        }
    }
}