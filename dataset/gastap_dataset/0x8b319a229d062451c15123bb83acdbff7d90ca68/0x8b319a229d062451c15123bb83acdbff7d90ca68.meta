{
    "Token": {
        "function_list": [
            "balanceOf(address)",
            "transfer(address,uint256)"
        ],
        "initial_state": {
            "balanceOf(address)": {
                "argument": {},
                "contract": {}
            },
            "transfer(address,uint256)": {
                "argument": {
                    "_value": "uint256"
                },
                "contract": {}
            }
        },
        "function_block_mapping": {
            "balanceOf(address)": [
                402,
                141
            ],
            "transfer(address,uint256)": [
                489,
                163
            ]
        },
        "block_CALL_mapping": {}
    },
    "CrowdSale": {
        "function_list": [
            "CrowdSale()",
            "fallback()",
            "icoPrice(uint256)",
            "withdrawFunds(address)",
            "slitherConstructorVariables()"
        ],
        "initial_state": {
            "CrowdSale()": {
                "argument": {},
                "contract": {
                    "unitCost": "uint256"
                }
            },
            "fallback()": {
                "argument": {},
                "contract": {
                    "unitCost": "uint256"
                }
            },
            "icoPrice(uint256)": {
                "argument": {
                    "perEther": "uint256"
                },
                "contract": {
                    "unitCost": "uint256"
                }
            },
            "withdrawFunds(address)": {
                "argument": {},
                "contract": {
                    "unitCost": "uint256"
                }
            }
        },
        "function_block_mapping": {
            "icoPrice(uint256)": [
                859,
                97
            ],
            "withdrawFunds(address)": [
                768,
                75
            ]
        },
        "block_CALL_mapping": {
            "block594_0": [
                "ppp.transfer(msg.sender, units)"
            ],
            "jump691_0": [
                "msg.sender.transfer(remainEther)",
                "msg.sender.transfer(remainEther)"
            ],
            "jump594_0": [
                "ppp.transfer(msg.sender, units)",
                "ppp.transfer(msg.sender, units)"
            ],
            "jump691": [
                "msg.sender.transfer(remainEther)",
                "msg.sender.transfer(remainEther)"
            ],
            "jump285": [
                "ppp.balanceOf(this)",
                "ppp.balanceOf(this)"
            ],
            "block1662": [
                "ERC20.transfer(owner, ERC20.balanceOf(this))"
            ],
            "jump1119": [
                "owner.transfer(this.balance)",
                "owner.transfer(this.balance)"
            ],
            "block285": [
                "ppp.balanceOf(this)"
            ],
            "block285_0": [
                "ppp.balanceOf(this)"
            ],
            "jump1470": [
                "ERC20.balanceOf(this)",
                "ERC20.balanceOf(this)"
            ],
            "block594": [
                "ppp.transfer(msg.sender, units)"
            ],
            "jump594": [
                "ppp.transfer(msg.sender, units)",
                "ppp.transfer(msg.sender, units)"
            ],
            "block1119": [
                "owner.transfer(this.balance)"
            ],
            "block1470": [
                "ERC20.balanceOf(this)"
            ],
            "block691_0": [
                "msg.sender.transfer(remainEther)"
            ],
            "jump285_0": [
                "ppp.balanceOf(this)",
                "ppp.balanceOf(this)"
            ],
            "block691": [
                "msg.sender.transfer(remainEther)"
            ],
            "jump1662": [
                "ERC20.transfer(owner, ERC20.balanceOf(this))",
                "ERC20.transfer(owner, ERC20.balanceOf(this))"
            ]
        }
    }
}